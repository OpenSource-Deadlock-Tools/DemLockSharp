// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: te.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from te.proto</summary>
public static partial class TeReflection {

  #region Descriptor
  /// <summary>File descriptor for te.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TeReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgh0ZS5wcm90bxoWbmV0d29ya2Jhc2V0eXBlcy5wcm90byJJChNDTXNnVEVB",
          "cm1vclJpY29jaGV0EhgKA3BvcxgBIAEoCzILLkNNc2dWZWN0b3ISGAoDZGly",
          "GAIgASgLMgsuQ01zZ1ZlY3RvciLhAQoOQ01zZ1RFQmFzZUJlYW0SEgoKbW9k",
          "ZWxpbmRleBgBIAEoBhIRCgloYWxvaW5kZXgYAiABKAYSEgoKc3RhcnRmcmFt",
          "ZRgDIAEoDRIRCglmcmFtZXJhdGUYBCABKA0SDAoEbGlmZRgFIAEoAhINCgV3",
          "aWR0aBgGIAEoAhIQCghlbmR3aWR0aBgHIAEoAhISCgpmYWRlbGVuZ3RoGAgg",
          "ASgNEhEKCWFtcGxpdHVkZRgJIAEoAhINCgVjb2xvchgKIAEoBxINCgVzcGVl",
          "ZBgLIAEoDRINCgVmbGFncxgMIAEoDSKRAQoSQ01zZ1RFQmVhbUVudFBvaW50",
          "Eh0KBGJhc2UYASABKAsyDy5DTXNnVEVCYXNlQmVhbRITCgtzdGFydGVudGl0",
          "eRgCIAEoDRIRCgllbmRlbnRpdHkYAyABKA0SGgoFc3RhcnQYBCABKAsyCy5D",
          "TXNnVmVjdG9yEhgKA2VuZBgFIAEoCzILLkNNc2dWZWN0b3IiVwoOQ01zZ1RF",
          "QmVhbUVudHMSHQoEYmFzZRgBIAEoCzIPLkNNc2dURUJhc2VCZWFtEhMKC3N0",
          "YXJ0ZW50aXR5GAIgASgNEhEKCWVuZGVudGl0eRgDIAEoDSJnChBDTXNnVEVC",
          "ZWFtUG9pbnRzEh0KBGJhc2UYASABKAsyDy5DTXNnVEVCYXNlQmVhbRIaCgVz",
          "dGFydBgCIAEoCzILLkNNc2dWZWN0b3ISGAoDZW5kGAMgASgLMgsuQ01zZ1Zl",
          "Y3RvciJXCg5DTXNnVEVCZWFtUmluZxIdCgRiYXNlGAEgASgLMg8uQ01zZ1RF",
          "QmFzZUJlYW0SEwoLc3RhcnRlbnRpdHkYAiABKA0SEQoJZW5kZW50aXR5GAMg",
          "ASgNIokBCg5DTXNnVEVCU1BEZWNhbBIbCgZvcmlnaW4YASABKAsyCy5DTXNn",
          "VmVjdG9yEhsKBm5vcm1hbBgCIAEoCzILLkNNc2dWZWN0b3ISGgoFc2F4aXMY",
          "AyABKAsyCy5DTXNnVmVjdG9yEhIKBmVudGl0eRgEIAEoBToCLTESDQoFaW5k",
          "ZXgYBSABKA0icwoNQ01zZ1RFQnViYmxlcxIZCgRtaW5zGAEgASgLMgsuQ01z",
          "Z1ZlY3RvchIZCgRtYXhzGAIgASgLMgsuQ01zZ1ZlY3RvchIOCgZoZWlnaHQY",
          "AyABKAISDQoFY291bnQYBCABKA0SDQoFc3BlZWQYBSABKAIidwoRQ01zZ1RF",
          "QnViYmxlVHJhaWwSGQoEbWlucxgBIAEoCzILLkNNc2dWZWN0b3ISGQoEbWF4",
          "cxgCIAEoCzILLkNNc2dWZWN0b3ISDgoGd2F0ZXJ6GAMgASgCEg0KBWNvdW50",
          "GAQgASgNEg0KBXNwZWVkGAUgASgCInkKC0NNc2dURURlY2FsEhsKBm9yaWdp",
          "bhgBIAEoCzILLkNNc2dWZWN0b3ISGgoFc3RhcnQYAiABKAsyCy5DTXNnVmVj",
          "dG9yEhIKBmVudGl0eRgDIAEoBToCLTESDgoGaGl0Ym94GAQgASgNEg0KBWlu",
          "ZGV4GAUgASgNIrEDCg5DTXNnRWZmZWN0RGF0YRIbCgZvcmlnaW4YASABKAsy",
          "Cy5DTXNnVmVjdG9yEhoKBXN0YXJ0GAIgASgLMgsuQ01zZ1ZlY3RvchIbCgZu",
          "b3JtYWwYAyABKAsyCy5DTXNnVmVjdG9yEhsKBmFuZ2xlcxgEIAEoCzILLkNN",
          "c2dRQW5nbGUSGAoGZW50aXR5GAUgASgHOggxNjc3NzIxNRIdCgtvdGhlcmVu",
          "dGl0eRgGIAEoBzoIMTY3NzcyMTUSDQoFc2NhbGUYByABKAISEQoJbWFnbml0",
          "dWRlGAggASgCEg4KBnJhZGl1cxgJIAEoAhITCgtzdXJmYWNlcHJvcBgKIAEo",
          "BxITCgtlZmZlY3RpbmRleBgLIAEoBhISCgpkYW1hZ2V0eXBlGAwgASgNEhAK",
          "CG1hdGVyaWFsGA0gASgNEg4KBmhpdGJveBgOIAEoDRINCgVjb2xvchgPIAEo",
          "DRINCgVmbGFncxgQIAEoDRIXCg9hdHRhY2htZW50aW5kZXgYESABKAUSEgoK",
          "ZWZmZWN0bmFtZRgSIAEoDRIWCg5hdHRhY2htZW50bmFtZRgTIAEoDSI7ChRD",
          "TXNnVEVFZmZlY3REaXNwYXRjaBIjCgplZmZlY3RkYXRhGAEgASgLMg8uQ01z",
          "Z0VmZmVjdERhdGEiWwoSQ01zZ1RFRW5lcmd5U3BsYXNoEhgKA3BvcxgBIAEo",
          "CzILLkNNc2dWZWN0b3ISGAoDZGlyGAIgASgLMgsuQ01zZ1ZlY3RvchIRCgll",
          "eHBsb3NpdmUYAyABKAgiQgoKQ01zZ1RFRml6ehISCgZlbnRpdHkYASABKAU6",
          "Ai0xEg8KB2RlbnNpdHkYAiABKA0SDwoHY3VycmVudBgDIAEoBSL5AQoUQ01z",
          "Z1RFU2hhdHRlclN1cmZhY2USGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3Rv",
          "chIbCgZhbmdsZXMYAiABKAsyCy5DTXNnUUFuZ2xlEhoKBWZvcmNlGAMgASgL",
          "MgsuQ01zZ1ZlY3RvchIdCghmb3JjZXBvcxgEIAEoCzILLkNNc2dWZWN0b3IS",
          "DQoFd2lkdGgYBSABKAISDgoGaGVpZ2h0GAYgASgCEhEKCXNoYXJkc2l6ZRgH",
          "IAEoAhITCgtzdXJmYWNldHlwZRgIIAEoDRISCgpmcm9udGNvbG9yGAkgASgH",
          "EhEKCWJhY2tjb2xvchgKIAEoByJgChBDTXNnVEVHbG93U3ByaXRlEhsKBm9y",
          "aWdpbhgBIAEoCzILLkNNc2dWZWN0b3ISDQoFc2NhbGUYAiABKAISDAoEbGlm",
          "ZRgDIAEoAhISCgpicmlnaHRuZXNzGAQgASgNIlYKDENNc2dURUltcGFjdBIb",
          "CgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBm5vcm1hbBgCIAEoCzIL",
          "LkNNc2dWZWN0b3ISDAoEdHlwZRgDIAEoDSJqChFDTXNnVEVNdXp6bGVGbGFz",
          "aBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhsKBmFuZ2xlcxgCIAEo",
          "CzILLkNNc2dRQW5nbGUSDQoFc2NhbGUYAyABKAISDAoEdHlwZRgEIAEoDSJv",
          "ChFDTXNnVEVCbG9vZFN0cmVhbRIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVj",
          "dG9yEh4KCWRpcmVjdGlvbhgCIAEoCzILLkNNc2dWZWN0b3ISDQoFY29sb3IY",
          "AyABKAcSDgoGYW1vdW50GAQgASgNItICCg9DTXNnVEVFeHBsb3Npb24SGwoG",
          "b3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIRCglmcmFtZXJhdGUYAiABKA0S",
          "DQoFZmxhZ3MYAyABKA0SGwoGbm9ybWFsGAQgASgLMgsuQ01zZ1ZlY3RvchIU",
          "CgxtYXRlcmlhbHR5cGUYBSABKA0SDgoGcmFkaXVzGAYgASgNEhEKCW1hZ25p",
          "dHVkZRgHIAEoDRINCgVzY2FsZRgIIAEoAhIXCg9hZmZlY3RfcmFnZG9sbHMY",
          "CSABKAgSEwoLZWZmZWN0X25hbWUYCiABKAkSFgoOZXhwbG9zaW9uX3R5cGUY",
          "CyABKA0SFQoNY3JlYXRlX2RlYnJpcxgMIAEoCBIiCg1kZWJyaXNfb3JpZ2lu",
          "GA0gASgLMgsuQ01zZ1ZlY3RvchIaChJkZWJyaXNfc3VyZmFjZXByb3AYDiAB",
          "KAciZgoKQ01zZ1RFRHVzdBIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9y",
          "EgwKBHNpemUYAiABKAISDQoFc3BlZWQYAyABKAISHgoJZGlyZWN0aW9uGAQg",
          "ASgLMgsuQ01zZ1ZlY3RvciJCChFDTXNnVEVMYXJnZUZ1bm5lbBIbCgZvcmln",
          "aW4YASABKAsyCy5DTXNnVmVjdG9yEhAKCHJldmVyc2VkGAIgASgNIm4KDENN",
          "c2dURVNwYXJrcxIbCgZvcmlnaW4YASABKAsyCy5DTXNnVmVjdG9yEhEKCW1h",
          "Z25pdHVkZRgCIAEoDRIOCgZsZW5ndGgYAyABKA0SHgoJZGlyZWN0aW9uGAQg",
          "ASgLMgsuQ01zZ1ZlY3RvciK8AgoRQ01zZ1RFUGh5c2ljc1Byb3ASGwoGb3Jp",
          "Z2luGAEgASgLMgsuQ01zZ1ZlY3RvchIdCgh2ZWxvY2l0eRgCIAEoCzILLkNN",
          "c2dWZWN0b3ISGwoGYW5nbGVzGAMgASgLMgsuQ01zZ1FBbmdsZRIMCgRza2lu",
          "GAQgASgHEg0KBWZsYWdzGAUgASgNEg8KB2VmZmVjdHMYBiABKA0SDQoFY29s",
          "b3IYByABKAcSEgoKbW9kZWxpbmRleBgIIAEoBhIjCht1bnVzZWRfYnJlYWtt",
          "b2RlbHNub3R0b21ha2UYCSABKA0SDQoFc2NhbGUYCiABKAISGwoGZG1ncG9z",
          "GAsgASgLMgsuQ01zZ1ZlY3RvchIbCgZkbWdkaXIYDCABKAsyCy5DTXNnVmVj",
          "dG9yEg8KB2RtZ3R5cGUYDSABKAUiWAoRQ01zZ1RFUGxheWVyRGVjYWwSGwoG",
          "b3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchISCgZwbGF5ZXIYAiABKAU6Ai0x",
          "EhIKBmVudGl0eRgDIAEoBToCLTEicQoUQ01zZ1RFUHJvamVjdGVkRGVjYWwS",
          "GwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIbCgZhbmdsZXMYAiABKAsy",
          "Cy5DTXNnUUFuZ2xlEg0KBWluZGV4GAMgASgNEhAKCGRpc3RhbmNlGAQgASgC",
          "IjkKC0NNc2dURVNtb2tlEhsKBm9yaWdpbhgBIAEoCzILLkNNc2dWZWN0b3IS",
          "DQoFc2NhbGUYAiABKAIiWwoQQ01zZ1RFV29ybGREZWNhbBIbCgZvcmlnaW4Y",
          "ASABKAsyCy5DTXNnVmVjdG9yEhsKBm5vcm1hbBgCIAEoCzILLkNNc2dWZWN0",
          "b3ISDQoFaW5kZXgYAyABKA0qvQQKDkVURVByb3RvYnVmSWRzEhgKE1RFX0Vm",
          "ZmVjdERpc3BhdGNoSWQQkAMSFwoSVEVfQXJtb3JSaWNvY2hldElkEJEDEhYK",
          "EVRFX0JlYW1FbnRQb2ludElkEJIDEhIKDVRFX0JlYW1FbnRzSWQQkwMSFAoP",
          "VEVfQmVhbVBvaW50c0lkEJQDEhIKDVRFX0JlYW1SaW5nSWQQlQMSEgoNVEVf",
          "QlNQRGVjYWxJZBCXAxIRCgxURV9CdWJibGVzSWQQmAMSFQoQVEVfQnViYmxl",
          "VHJhaWxJZBCZAxIPCgpURV9EZWNhbElkEJoDEhQKD1RFX1dvcmxkRGVjYWxJ",
          "ZBCbAxIWChFURV9FbmVyZ3lTcGxhc2hJZBCcAxIOCglURV9GaXp6SWQQnQMS",
          "GAoTVEVfU2hhdHRlclN1cmZhY2VJZBCeAxIUCg9URV9HbG93U3ByaXRlSWQQ",
          "nwMSEAoLVEVfSW1wYWN0SWQQoAMSFQoQVEVfTXV6emxlRmxhc2hJZBChAxIV",
          "ChBURV9CbG9vZFN0cmVhbUlkEKIDEhMKDlRFX0V4cGxvc2lvbklkEKMDEg4K",
          "CVRFX0R1c3RJZBCkAxIVChBURV9MYXJnZUZ1bm5lbElkEKUDEhAKC1RFX1Nw",
          "YXJrc0lkEKYDEhUKEFRFX1BoeXNpY3NQcm9wSWQQpwMSFQoQVEVfUGxheWVy",
          "RGVjYWxJZBCoAxIYChNURV9Qcm9qZWN0ZWREZWNhbElkEKkDEg8KClRFX1Nt",
          "b2tlSWQQqgM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetworkbasetypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ETEProtobufIds), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEArmorRicochet), global::CMsgTEArmorRicochet.Parser, new[]{ "Pos", "Dir" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBaseBeam), global::CMsgTEBaseBeam.Parser, new[]{ "Modelindex", "Haloindex", "Startframe", "Framerate", "Life", "Width", "Endwidth", "Fadelength", "Amplitude", "Color", "Speed", "Flags" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBeamEntPoint), global::CMsgTEBeamEntPoint.Parser, new[]{ "Base", "Startentity", "Endentity", "Start", "End" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBeamEnts), global::CMsgTEBeamEnts.Parser, new[]{ "Base", "Startentity", "Endentity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBeamPoints), global::CMsgTEBeamPoints.Parser, new[]{ "Base", "Start", "End" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBeamRing), global::CMsgTEBeamRing.Parser, new[]{ "Base", "Startentity", "Endentity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBSPDecal), global::CMsgTEBSPDecal.Parser, new[]{ "Origin", "Normal", "Saxis", "Entity", "Index" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBubbles), global::CMsgTEBubbles.Parser, new[]{ "Mins", "Maxs", "Height", "Count", "Speed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBubbleTrail), global::CMsgTEBubbleTrail.Parser, new[]{ "Mins", "Maxs", "Waterz", "Count", "Speed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEDecal), global::CMsgTEDecal.Parser, new[]{ "Origin", "Start", "Entity", "Hitbox", "Index" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgEffectData), global::CMsgEffectData.Parser, new[]{ "Origin", "Start", "Normal", "Angles", "Entity", "Otherentity", "Scale", "Magnitude", "Radius", "Surfaceprop", "Effectindex", "Damagetype", "Material", "Hitbox", "Color", "Flags", "Attachmentindex", "Effectname", "Attachmentname" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEEffectDispatch), global::CMsgTEEffectDispatch.Parser, new[]{ "Effectdata" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEEnergySplash), global::CMsgTEEnergySplash.Parser, new[]{ "Pos", "Dir", "Explosive" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEFizz), global::CMsgTEFizz.Parser, new[]{ "Entity", "Density", "Current" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEShatterSurface), global::CMsgTEShatterSurface.Parser, new[]{ "Origin", "Angles", "Force", "Forcepos", "Width", "Height", "Shardsize", "Surfacetype", "Frontcolor", "Backcolor" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEGlowSprite), global::CMsgTEGlowSprite.Parser, new[]{ "Origin", "Scale", "Life", "Brightness" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEImpact), global::CMsgTEImpact.Parser, new[]{ "Origin", "Normal", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEMuzzleFlash), global::CMsgTEMuzzleFlash.Parser, new[]{ "Origin", "Angles", "Scale", "Type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEBloodStream), global::CMsgTEBloodStream.Parser, new[]{ "Origin", "Direction", "Color", "Amount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEExplosion), global::CMsgTEExplosion.Parser, new[]{ "Origin", "Framerate", "Flags", "Normal", "Materialtype", "Radius", "Magnitude", "Scale", "AffectRagdolls", "EffectName", "ExplosionType", "CreateDebris", "DebrisOrigin", "DebrisSurfaceprop" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEDust), global::CMsgTEDust.Parser, new[]{ "Origin", "Size", "Speed", "Direction" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTELargeFunnel), global::CMsgTELargeFunnel.Parser, new[]{ "Origin", "Reversed" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTESparks), global::CMsgTESparks.Parser, new[]{ "Origin", "Magnitude", "Length", "Direction" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEPhysicsProp), global::CMsgTEPhysicsProp.Parser, new[]{ "Origin", "Velocity", "Angles", "Skin", "Flags", "Effects", "Color", "Modelindex", "UnusedBreakmodelsnottomake", "Scale", "Dmgpos", "Dmgdir", "Dmgtype" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEPlayerDecal), global::CMsgTEPlayerDecal.Parser, new[]{ "Origin", "Player", "Entity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEProjectedDecal), global::CMsgTEProjectedDecal.Parser, new[]{ "Origin", "Angles", "Index", "Distance" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTESmoke), global::CMsgTESmoke.Parser, new[]{ "Origin", "Scale" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTEWorldDecal), global::CMsgTEWorldDecal.Parser, new[]{ "Origin", "Normal", "Index" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ETEProtobufIds {
  [pbr::OriginalName("TE_EffectDispatchId")] TeEffectDispatchId = 400,
  [pbr::OriginalName("TE_ArmorRicochetId")] TeArmorRicochetId = 401,
  [pbr::OriginalName("TE_BeamEntPointId")] TeBeamEntPointId = 402,
  [pbr::OriginalName("TE_BeamEntsId")] TeBeamEntsId = 403,
  [pbr::OriginalName("TE_BeamPointsId")] TeBeamPointsId = 404,
  [pbr::OriginalName("TE_BeamRingId")] TeBeamRingId = 405,
  [pbr::OriginalName("TE_BSPDecalId")] TeBspdecalId = 407,
  [pbr::OriginalName("TE_BubblesId")] TeBubblesId = 408,
  [pbr::OriginalName("TE_BubbleTrailId")] TeBubbleTrailId = 409,
  [pbr::OriginalName("TE_DecalId")] TeDecalId = 410,
  [pbr::OriginalName("TE_WorldDecalId")] TeWorldDecalId = 411,
  [pbr::OriginalName("TE_EnergySplashId")] TeEnergySplashId = 412,
  [pbr::OriginalName("TE_FizzId")] TeFizzId = 413,
  [pbr::OriginalName("TE_ShatterSurfaceId")] TeShatterSurfaceId = 414,
  [pbr::OriginalName("TE_GlowSpriteId")] TeGlowSpriteId = 415,
  [pbr::OriginalName("TE_ImpactId")] TeImpactId = 416,
  [pbr::OriginalName("TE_MuzzleFlashId")] TeMuzzleFlashId = 417,
  [pbr::OriginalName("TE_BloodStreamId")] TeBloodStreamId = 418,
  [pbr::OriginalName("TE_ExplosionId")] TeExplosionId = 419,
  [pbr::OriginalName("TE_DustId")] TeDustId = 420,
  [pbr::OriginalName("TE_LargeFunnelId")] TeLargeFunnelId = 421,
  [pbr::OriginalName("TE_SparksId")] TeSparksId = 422,
  [pbr::OriginalName("TE_PhysicsPropId")] TePhysicsPropId = 423,
  [pbr::OriginalName("TE_PlayerDecalId")] TePlayerDecalId = 424,
  [pbr::OriginalName("TE_ProjectedDecalId")] TeProjectedDecalId = 425,
  [pbr::OriginalName("TE_SmokeId")] TeSmokeId = 426,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEArmorRicochet : pb::IMessage<CMsgTEArmorRicochet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEArmorRicochet> _parser = new pb::MessageParser<CMsgTEArmorRicochet>(() => new CMsgTEArmorRicochet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEArmorRicochet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEArmorRicochet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEArmorRicochet(CMsgTEArmorRicochet other) : this() {
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    dir_ = other.dir_ != null ? other.dir_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEArmorRicochet Clone() {
    return new CMsgTEArmorRicochet(this);
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 1;
  private global::CMsgVector pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  /// <summary>Field number for the "dir" field.</summary>
  public const int DirFieldNumber = 2;
  private global::CMsgVector dir_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Dir {
    get { return dir_; }
    set {
      dir_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEArmorRicochet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEArmorRicochet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Pos, other.Pos)) return false;
    if (!object.Equals(Dir, other.Dir)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (dir_ != null) hash ^= Dir.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (dir_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Dir);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (dir_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Dir);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (dir_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEArmorRicochet other) {
    if (other == null) {
      return;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::CMsgVector();
      }
      Pos.MergeFrom(other.Pos);
    }
    if (other.dir_ != null) {
      if (dir_ == null) {
        Dir = new global::CMsgVector();
      }
      Dir.MergeFrom(other.Dir);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 18: {
          if (dir_ == null) {
            Dir = new global::CMsgVector();
          }
          input.ReadMessage(Dir);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 18: {
          if (dir_ == null) {
            Dir = new global::CMsgVector();
          }
          input.ReadMessage(Dir);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBaseBeam : pb::IMessage<CMsgTEBaseBeam>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBaseBeam> _parser = new pb::MessageParser<CMsgTEBaseBeam>(() => new CMsgTEBaseBeam());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBaseBeam> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBaseBeam() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBaseBeam(CMsgTEBaseBeam other) : this() {
    _hasBits0 = other._hasBits0;
    modelindex_ = other.modelindex_;
    haloindex_ = other.haloindex_;
    startframe_ = other.startframe_;
    framerate_ = other.framerate_;
    life_ = other.life_;
    width_ = other.width_;
    endwidth_ = other.endwidth_;
    fadelength_ = other.fadelength_;
    amplitude_ = other.amplitude_;
    color_ = other.color_;
    speed_ = other.speed_;
    flags_ = other.flags_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBaseBeam Clone() {
    return new CMsgTEBaseBeam(this);
  }

  /// <summary>Field number for the "modelindex" field.</summary>
  public const int ModelindexFieldNumber = 1;
  private readonly static ulong ModelindexDefaultValue = 0UL;

  private ulong modelindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Modelindex {
    get { if ((_hasBits0 & 1) != 0) { return modelindex_; } else { return ModelindexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      modelindex_ = value;
    }
  }
  /// <summary>Gets whether the "modelindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasModelindex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "modelindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearModelindex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "haloindex" field.</summary>
  public const int HaloindexFieldNumber = 2;
  private readonly static ulong HaloindexDefaultValue = 0UL;

  private ulong haloindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Haloindex {
    get { if ((_hasBits0 & 2) != 0) { return haloindex_; } else { return HaloindexDefaultValue; } }
    set {
      _hasBits0 |= 2;
      haloindex_ = value;
    }
  }
  /// <summary>Gets whether the "haloindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHaloindex {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "haloindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHaloindex() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "startframe" field.</summary>
  public const int StartframeFieldNumber = 3;
  private readonly static uint StartframeDefaultValue = 0;

  private uint startframe_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Startframe {
    get { if ((_hasBits0 & 4) != 0) { return startframe_; } else { return StartframeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      startframe_ = value;
    }
  }
  /// <summary>Gets whether the "startframe" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStartframe {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "startframe" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStartframe() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "framerate" field.</summary>
  public const int FramerateFieldNumber = 4;
  private readonly static uint FramerateDefaultValue = 0;

  private uint framerate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Framerate {
    get { if ((_hasBits0 & 8) != 0) { return framerate_; } else { return FramerateDefaultValue; } }
    set {
      _hasBits0 |= 8;
      framerate_ = value;
    }
  }
  /// <summary>Gets whether the "framerate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFramerate {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "framerate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFramerate() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "life" field.</summary>
  public const int LifeFieldNumber = 5;
  private readonly static float LifeDefaultValue = 0F;

  private float life_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Life {
    get { if ((_hasBits0 & 16) != 0) { return life_; } else { return LifeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      life_ = value;
    }
  }
  /// <summary>Gets whether the "life" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLife {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "life" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLife() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "width" field.</summary>
  public const int WidthFieldNumber = 6;
  private readonly static float WidthDefaultValue = 0F;

  private float width_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Width {
    get { if ((_hasBits0 & 32) != 0) { return width_; } else { return WidthDefaultValue; } }
    set {
      _hasBits0 |= 32;
      width_ = value;
    }
  }
  /// <summary>Gets whether the "width" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWidth {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "width" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWidth() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "endwidth" field.</summary>
  public const int EndwidthFieldNumber = 7;
  private readonly static float EndwidthDefaultValue = 0F;

  private float endwidth_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Endwidth {
    get { if ((_hasBits0 & 64) != 0) { return endwidth_; } else { return EndwidthDefaultValue; } }
    set {
      _hasBits0 |= 64;
      endwidth_ = value;
    }
  }
  /// <summary>Gets whether the "endwidth" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEndwidth {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "endwidth" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEndwidth() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "fadelength" field.</summary>
  public const int FadelengthFieldNumber = 8;
  private readonly static uint FadelengthDefaultValue = 0;

  private uint fadelength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Fadelength {
    get { if ((_hasBits0 & 128) != 0) { return fadelength_; } else { return FadelengthDefaultValue; } }
    set {
      _hasBits0 |= 128;
      fadelength_ = value;
    }
  }
  /// <summary>Gets whether the "fadelength" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFadelength {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "fadelength" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFadelength() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "amplitude" field.</summary>
  public const int AmplitudeFieldNumber = 9;
  private readonly static float AmplitudeDefaultValue = 0F;

  private float amplitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Amplitude {
    get { if ((_hasBits0 & 256) != 0) { return amplitude_; } else { return AmplitudeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      amplitude_ = value;
    }
  }
  /// <summary>Gets whether the "amplitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAmplitude {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "amplitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAmplitude() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 10;
  private readonly static uint ColorDefaultValue = 0;

  private uint color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Color {
    get { if ((_hasBits0 & 512) != 0) { return color_; } else { return ColorDefaultValue; } }
    set {
      _hasBits0 |= 512;
      color_ = value;
    }
  }
  /// <summary>Gets whether the "color" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasColor {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "color" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearColor() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 11;
  private readonly static uint SpeedDefaultValue = 0;

  private uint speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Speed {
    get { if ((_hasBits0 & 1024) != 0) { return speed_; } else { return SpeedDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      speed_ = value;
    }
  }
  /// <summary>Gets whether the "speed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpeed {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "speed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpeed() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 12;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2048) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2048;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBaseBeam);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBaseBeam other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Modelindex != other.Modelindex) return false;
    if (Haloindex != other.Haloindex) return false;
    if (Startframe != other.Startframe) return false;
    if (Framerate != other.Framerate) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Life, other.Life)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Endwidth, other.Endwidth)) return false;
    if (Fadelength != other.Fadelength) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Amplitude, other.Amplitude)) return false;
    if (Color != other.Color) return false;
    if (Speed != other.Speed) return false;
    if (Flags != other.Flags) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasModelindex) hash ^= Modelindex.GetHashCode();
    if (HasHaloindex) hash ^= Haloindex.GetHashCode();
    if (HasStartframe) hash ^= Startframe.GetHashCode();
    if (HasFramerate) hash ^= Framerate.GetHashCode();
    if (HasLife) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Life);
    if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
    if (HasEndwidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Endwidth);
    if (HasFadelength) hash ^= Fadelength.GetHashCode();
    if (HasAmplitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Amplitude);
    if (HasColor) hash ^= Color.GetHashCode();
    if (HasSpeed) hash ^= Speed.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasModelindex) {
      output.WriteRawTag(9);
      output.WriteFixed64(Modelindex);
    }
    if (HasHaloindex) {
      output.WriteRawTag(17);
      output.WriteFixed64(Haloindex);
    }
    if (HasStartframe) {
      output.WriteRawTag(24);
      output.WriteUInt32(Startframe);
    }
    if (HasFramerate) {
      output.WriteRawTag(32);
      output.WriteUInt32(Framerate);
    }
    if (HasLife) {
      output.WriteRawTag(45);
      output.WriteFloat(Life);
    }
    if (HasWidth) {
      output.WriteRawTag(53);
      output.WriteFloat(Width);
    }
    if (HasEndwidth) {
      output.WriteRawTag(61);
      output.WriteFloat(Endwidth);
    }
    if (HasFadelength) {
      output.WriteRawTag(64);
      output.WriteUInt32(Fadelength);
    }
    if (HasAmplitude) {
      output.WriteRawTag(77);
      output.WriteFloat(Amplitude);
    }
    if (HasColor) {
      output.WriteRawTag(85);
      output.WriteFixed32(Color);
    }
    if (HasSpeed) {
      output.WriteRawTag(88);
      output.WriteUInt32(Speed);
    }
    if (HasFlags) {
      output.WriteRawTag(96);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasModelindex) {
      output.WriteRawTag(9);
      output.WriteFixed64(Modelindex);
    }
    if (HasHaloindex) {
      output.WriteRawTag(17);
      output.WriteFixed64(Haloindex);
    }
    if (HasStartframe) {
      output.WriteRawTag(24);
      output.WriteUInt32(Startframe);
    }
    if (HasFramerate) {
      output.WriteRawTag(32);
      output.WriteUInt32(Framerate);
    }
    if (HasLife) {
      output.WriteRawTag(45);
      output.WriteFloat(Life);
    }
    if (HasWidth) {
      output.WriteRawTag(53);
      output.WriteFloat(Width);
    }
    if (HasEndwidth) {
      output.WriteRawTag(61);
      output.WriteFloat(Endwidth);
    }
    if (HasFadelength) {
      output.WriteRawTag(64);
      output.WriteUInt32(Fadelength);
    }
    if (HasAmplitude) {
      output.WriteRawTag(77);
      output.WriteFloat(Amplitude);
    }
    if (HasColor) {
      output.WriteRawTag(85);
      output.WriteFixed32(Color);
    }
    if (HasSpeed) {
      output.WriteRawTag(88);
      output.WriteUInt32(Speed);
    }
    if (HasFlags) {
      output.WriteRawTag(96);
      output.WriteUInt32(Flags);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasModelindex) {
      size += 1 + 8;
    }
    if (HasHaloindex) {
      size += 1 + 8;
    }
    if (HasStartframe) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Startframe);
    }
    if (HasFramerate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Framerate);
    }
    if (HasLife) {
      size += 1 + 4;
    }
    if (HasWidth) {
      size += 1 + 4;
    }
    if (HasEndwidth) {
      size += 1 + 4;
    }
    if (HasFadelength) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Fadelength);
    }
    if (HasAmplitude) {
      size += 1 + 4;
    }
    if (HasColor) {
      size += 1 + 4;
    }
    if (HasSpeed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Speed);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBaseBeam other) {
    if (other == null) {
      return;
    }
    if (other.HasModelindex) {
      Modelindex = other.Modelindex;
    }
    if (other.HasHaloindex) {
      Haloindex = other.Haloindex;
    }
    if (other.HasStartframe) {
      Startframe = other.Startframe;
    }
    if (other.HasFramerate) {
      Framerate = other.Framerate;
    }
    if (other.HasLife) {
      Life = other.Life;
    }
    if (other.HasWidth) {
      Width = other.Width;
    }
    if (other.HasEndwidth) {
      Endwidth = other.Endwidth;
    }
    if (other.HasFadelength) {
      Fadelength = other.Fadelength;
    }
    if (other.HasAmplitude) {
      Amplitude = other.Amplitude;
    }
    if (other.HasColor) {
      Color = other.Color;
    }
    if (other.HasSpeed) {
      Speed = other.Speed;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Modelindex = input.ReadFixed64();
          break;
        }
        case 17: {
          Haloindex = input.ReadFixed64();
          break;
        }
        case 24: {
          Startframe = input.ReadUInt32();
          break;
        }
        case 32: {
          Framerate = input.ReadUInt32();
          break;
        }
        case 45: {
          Life = input.ReadFloat();
          break;
        }
        case 53: {
          Width = input.ReadFloat();
          break;
        }
        case 61: {
          Endwidth = input.ReadFloat();
          break;
        }
        case 64: {
          Fadelength = input.ReadUInt32();
          break;
        }
        case 77: {
          Amplitude = input.ReadFloat();
          break;
        }
        case 85: {
          Color = input.ReadFixed32();
          break;
        }
        case 88: {
          Speed = input.ReadUInt32();
          break;
        }
        case 96: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Modelindex = input.ReadFixed64();
          break;
        }
        case 17: {
          Haloindex = input.ReadFixed64();
          break;
        }
        case 24: {
          Startframe = input.ReadUInt32();
          break;
        }
        case 32: {
          Framerate = input.ReadUInt32();
          break;
        }
        case 45: {
          Life = input.ReadFloat();
          break;
        }
        case 53: {
          Width = input.ReadFloat();
          break;
        }
        case 61: {
          Endwidth = input.ReadFloat();
          break;
        }
        case 64: {
          Fadelength = input.ReadUInt32();
          break;
        }
        case 77: {
          Amplitude = input.ReadFloat();
          break;
        }
        case 85: {
          Color = input.ReadFixed32();
          break;
        }
        case 88: {
          Speed = input.ReadUInt32();
          break;
        }
        case 96: {
          Flags = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBeamEntPoint : pb::IMessage<CMsgTEBeamEntPoint>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBeamEntPoint> _parser = new pb::MessageParser<CMsgTEBeamEntPoint>(() => new CMsgTEBeamEntPoint());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBeamEntPoint> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEntPoint() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEntPoint(CMsgTEBeamEntPoint other) : this() {
    _hasBits0 = other._hasBits0;
    base_ = other.base_ != null ? other.base_.Clone() : null;
    startentity_ = other.startentity_;
    endentity_ = other.endentity_;
    start_ = other.start_ != null ? other.start_.Clone() : null;
    end_ = other.end_ != null ? other.end_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEntPoint Clone() {
    return new CMsgTEBeamEntPoint(this);
  }

  /// <summary>Field number for the "base" field.</summary>
  public const int BaseFieldNumber = 1;
  private global::CMsgTEBaseBeam base_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgTEBaseBeam Base {
    get { return base_; }
    set {
      base_ = value;
    }
  }

  /// <summary>Field number for the "startentity" field.</summary>
  public const int StartentityFieldNumber = 2;
  private readonly static uint StartentityDefaultValue = 0;

  private uint startentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Startentity {
    get { if ((_hasBits0 & 1) != 0) { return startentity_; } else { return StartentityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      startentity_ = value;
    }
  }
  /// <summary>Gets whether the "startentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStartentity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "startentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStartentity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "endentity" field.</summary>
  public const int EndentityFieldNumber = 3;
  private readonly static uint EndentityDefaultValue = 0;

  private uint endentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Endentity {
    get { if ((_hasBits0 & 2) != 0) { return endentity_; } else { return EndentityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      endentity_ = value;
    }
  }
  /// <summary>Gets whether the "endentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEndentity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "endentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEndentity() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 4;
  private global::CMsgVector start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "end" field.</summary>
  public const int EndFieldNumber = 5;
  private global::CMsgVector end_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector End {
    get { return end_; }
    set {
      end_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBeamEntPoint);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBeamEntPoint other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Base, other.Base)) return false;
    if (Startentity != other.Startentity) return false;
    if (Endentity != other.Endentity) return false;
    if (!object.Equals(Start, other.Start)) return false;
    if (!object.Equals(End, other.End)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (base_ != null) hash ^= Base.GetHashCode();
    if (HasStartentity) hash ^= Startentity.GetHashCode();
    if (HasEndentity) hash ^= Endentity.GetHashCode();
    if (start_ != null) hash ^= Start.GetHashCode();
    if (end_ != null) hash ^= End.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (start_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Start);
    }
    if (end_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(End);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (start_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Start);
    }
    if (end_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(End);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (base_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
    }
    if (HasStartentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Startentity);
    }
    if (HasEndentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Endentity);
    }
    if (start_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
    }
    if (end_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBeamEntPoint other) {
    if (other == null) {
      return;
    }
    if (other.base_ != null) {
      if (base_ == null) {
        Base = new global::CMsgTEBaseBeam();
      }
      Base.MergeFrom(other.Base);
    }
    if (other.HasStartentity) {
      Startentity = other.Startentity;
    }
    if (other.HasEndentity) {
      Endentity = other.Endentity;
    }
    if (other.start_ != null) {
      if (start_ == null) {
        Start = new global::CMsgVector();
      }
      Start.MergeFrom(other.Start);
    }
    if (other.end_ != null) {
      if (end_ == null) {
        End = new global::CMsgVector();
      }
      End.MergeFrom(other.End);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
        case 34: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 42: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
        case 34: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 42: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBeamEnts : pb::IMessage<CMsgTEBeamEnts>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBeamEnts> _parser = new pb::MessageParser<CMsgTEBeamEnts>(() => new CMsgTEBeamEnts());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBeamEnts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEnts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEnts(CMsgTEBeamEnts other) : this() {
    _hasBits0 = other._hasBits0;
    base_ = other.base_ != null ? other.base_.Clone() : null;
    startentity_ = other.startentity_;
    endentity_ = other.endentity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamEnts Clone() {
    return new CMsgTEBeamEnts(this);
  }

  /// <summary>Field number for the "base" field.</summary>
  public const int BaseFieldNumber = 1;
  private global::CMsgTEBaseBeam base_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgTEBaseBeam Base {
    get { return base_; }
    set {
      base_ = value;
    }
  }

  /// <summary>Field number for the "startentity" field.</summary>
  public const int StartentityFieldNumber = 2;
  private readonly static uint StartentityDefaultValue = 0;

  private uint startentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Startentity {
    get { if ((_hasBits0 & 1) != 0) { return startentity_; } else { return StartentityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      startentity_ = value;
    }
  }
  /// <summary>Gets whether the "startentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStartentity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "startentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStartentity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "endentity" field.</summary>
  public const int EndentityFieldNumber = 3;
  private readonly static uint EndentityDefaultValue = 0;

  private uint endentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Endentity {
    get { if ((_hasBits0 & 2) != 0) { return endentity_; } else { return EndentityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      endentity_ = value;
    }
  }
  /// <summary>Gets whether the "endentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEndentity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "endentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEndentity() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBeamEnts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBeamEnts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Base, other.Base)) return false;
    if (Startentity != other.Startentity) return false;
    if (Endentity != other.Endentity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (base_ != null) hash ^= Base.GetHashCode();
    if (HasStartentity) hash ^= Startentity.GetHashCode();
    if (HasEndentity) hash ^= Endentity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (base_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
    }
    if (HasStartentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Startentity);
    }
    if (HasEndentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Endentity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBeamEnts other) {
    if (other == null) {
      return;
    }
    if (other.base_ != null) {
      if (base_ == null) {
        Base = new global::CMsgTEBaseBeam();
      }
      Base.MergeFrom(other.Base);
    }
    if (other.HasStartentity) {
      Startentity = other.Startentity;
    }
    if (other.HasEndentity) {
      Endentity = other.Endentity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBeamPoints : pb::IMessage<CMsgTEBeamPoints>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBeamPoints> _parser = new pb::MessageParser<CMsgTEBeamPoints>(() => new CMsgTEBeamPoints());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBeamPoints> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamPoints() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamPoints(CMsgTEBeamPoints other) : this() {
    base_ = other.base_ != null ? other.base_.Clone() : null;
    start_ = other.start_ != null ? other.start_.Clone() : null;
    end_ = other.end_ != null ? other.end_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamPoints Clone() {
    return new CMsgTEBeamPoints(this);
  }

  /// <summary>Field number for the "base" field.</summary>
  public const int BaseFieldNumber = 1;
  private global::CMsgTEBaseBeam base_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgTEBaseBeam Base {
    get { return base_; }
    set {
      base_ = value;
    }
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 2;
  private global::CMsgVector start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "end" field.</summary>
  public const int EndFieldNumber = 3;
  private global::CMsgVector end_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector End {
    get { return end_; }
    set {
      end_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBeamPoints);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBeamPoints other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Base, other.Base)) return false;
    if (!object.Equals(Start, other.Start)) return false;
    if (!object.Equals(End, other.End)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (base_ != null) hash ^= Base.GetHashCode();
    if (start_ != null) hash ^= Start.GetHashCode();
    if (end_ != null) hash ^= End.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (end_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(End);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (end_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(End);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (base_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
    }
    if (start_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
    }
    if (end_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBeamPoints other) {
    if (other == null) {
      return;
    }
    if (other.base_ != null) {
      if (base_ == null) {
        Base = new global::CMsgTEBaseBeam();
      }
      Base.MergeFrom(other.Base);
    }
    if (other.start_ != null) {
      if (start_ == null) {
        Start = new global::CMsgVector();
      }
      Start.MergeFrom(other.Start);
    }
    if (other.end_ != null) {
      if (end_ == null) {
        End = new global::CMsgVector();
      }
      End.MergeFrom(other.End);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 26: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 26: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBeamRing : pb::IMessage<CMsgTEBeamRing>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBeamRing> _parser = new pb::MessageParser<CMsgTEBeamRing>(() => new CMsgTEBeamRing());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBeamRing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamRing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamRing(CMsgTEBeamRing other) : this() {
    _hasBits0 = other._hasBits0;
    base_ = other.base_ != null ? other.base_.Clone() : null;
    startentity_ = other.startentity_;
    endentity_ = other.endentity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBeamRing Clone() {
    return new CMsgTEBeamRing(this);
  }

  /// <summary>Field number for the "base" field.</summary>
  public const int BaseFieldNumber = 1;
  private global::CMsgTEBaseBeam base_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgTEBaseBeam Base {
    get { return base_; }
    set {
      base_ = value;
    }
  }

  /// <summary>Field number for the "startentity" field.</summary>
  public const int StartentityFieldNumber = 2;
  private readonly static uint StartentityDefaultValue = 0;

  private uint startentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Startentity {
    get { if ((_hasBits0 & 1) != 0) { return startentity_; } else { return StartentityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      startentity_ = value;
    }
  }
  /// <summary>Gets whether the "startentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStartentity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "startentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStartentity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "endentity" field.</summary>
  public const int EndentityFieldNumber = 3;
  private readonly static uint EndentityDefaultValue = 0;

  private uint endentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Endentity {
    get { if ((_hasBits0 & 2) != 0) { return endentity_; } else { return EndentityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      endentity_ = value;
    }
  }
  /// <summary>Gets whether the "endentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEndentity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "endentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEndentity() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBeamRing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBeamRing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Base, other.Base)) return false;
    if (Startentity != other.Startentity) return false;
    if (Endentity != other.Endentity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (base_ != null) hash ^= Base.GetHashCode();
    if (HasStartentity) hash ^= Startentity.GetHashCode();
    if (HasEndentity) hash ^= Endentity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (base_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Base);
    }
    if (HasStartentity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Startentity);
    }
    if (HasEndentity) {
      output.WriteRawTag(24);
      output.WriteUInt32(Endentity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (base_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
    }
    if (HasStartentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Startentity);
    }
    if (HasEndentity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Endentity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBeamRing other) {
    if (other == null) {
      return;
    }
    if (other.base_ != null) {
      if (base_ == null) {
        Base = new global::CMsgTEBaseBeam();
      }
      Base.MergeFrom(other.Base);
    }
    if (other.HasStartentity) {
      Startentity = other.Startentity;
    }
    if (other.HasEndentity) {
      Endentity = other.Endentity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (base_ == null) {
            Base = new global::CMsgTEBaseBeam();
          }
          input.ReadMessage(Base);
          break;
        }
        case 16: {
          Startentity = input.ReadUInt32();
          break;
        }
        case 24: {
          Endentity = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBSPDecal : pb::IMessage<CMsgTEBSPDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBSPDecal> _parser = new pb::MessageParser<CMsgTEBSPDecal>(() => new CMsgTEBSPDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBSPDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBSPDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBSPDecal(CMsgTEBSPDecal other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    normal_ = other.normal_ != null ? other.normal_.Clone() : null;
    saxis_ = other.saxis_ != null ? other.saxis_.Clone() : null;
    entity_ = other.entity_;
    index_ = other.index_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBSPDecal Clone() {
    return new CMsgTEBSPDecal(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 2;
  private global::CMsgVector normal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Normal {
    get { return normal_; }
    set {
      normal_ = value;
    }
  }

  /// <summary>Field number for the "saxis" field.</summary>
  public const int SaxisFieldNumber = 3;
  private global::CMsgVector saxis_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Saxis {
    get { return saxis_; }
    set {
      saxis_ = value;
    }
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 4;
  private readonly static int EntityDefaultValue = -1;

  private int entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entity {
    get { if ((_hasBits0 & 1) != 0) { return entity_; } else { return EntityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entity_ = value;
    }
  }
  /// <summary>Gets whether the "entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 5;
  private readonly static uint IndexDefaultValue = 0;

  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Index {
    get { if ((_hasBits0 & 2) != 0) { return index_; } else { return IndexDefaultValue; } }
    set {
      _hasBits0 |= 2;
      index_ = value;
    }
  }
  /// <summary>Gets whether the "index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndex {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndex() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBSPDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBSPDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Normal, other.Normal)) return false;
    if (!object.Equals(Saxis, other.Saxis)) return false;
    if (Entity != other.Entity) return false;
    if (Index != other.Index) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (normal_ != null) hash ^= Normal.GetHashCode();
    if (saxis_ != null) hash ^= Saxis.GetHashCode();
    if (HasEntity) hash ^= Entity.GetHashCode();
    if (HasIndex) hash ^= Index.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (saxis_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Saxis);
    }
    if (HasEntity) {
      output.WriteRawTag(32);
      output.WriteInt32(Entity);
    }
    if (HasIndex) {
      output.WriteRawTag(40);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (saxis_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Saxis);
    }
    if (HasEntity) {
      output.WriteRawTag(32);
      output.WriteInt32(Entity);
    }
    if (HasIndex) {
      output.WriteRawTag(40);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (normal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
    }
    if (saxis_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saxis);
    }
    if (HasEntity) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entity);
    }
    if (HasIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBSPDecal other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.normal_ != null) {
      if (normal_ == null) {
        Normal = new global::CMsgVector();
      }
      Normal.MergeFrom(other.Normal);
    }
    if (other.saxis_ != null) {
      if (saxis_ == null) {
        Saxis = new global::CMsgVector();
      }
      Saxis.MergeFrom(other.Saxis);
    }
    if (other.HasEntity) {
      Entity = other.Entity;
    }
    if (other.HasIndex) {
      Index = other.Index;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 26: {
          if (saxis_ == null) {
            Saxis = new global::CMsgVector();
          }
          input.ReadMessage(Saxis);
          break;
        }
        case 32: {
          Entity = input.ReadInt32();
          break;
        }
        case 40: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 26: {
          if (saxis_ == null) {
            Saxis = new global::CMsgVector();
          }
          input.ReadMessage(Saxis);
          break;
        }
        case 32: {
          Entity = input.ReadInt32();
          break;
        }
        case 40: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBubbles : pb::IMessage<CMsgTEBubbles>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBubbles> _parser = new pb::MessageParser<CMsgTEBubbles>(() => new CMsgTEBubbles());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBubbles> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbles() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbles(CMsgTEBubbles other) : this() {
    _hasBits0 = other._hasBits0;
    mins_ = other.mins_ != null ? other.mins_.Clone() : null;
    maxs_ = other.maxs_ != null ? other.maxs_.Clone() : null;
    height_ = other.height_;
    count_ = other.count_;
    speed_ = other.speed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbles Clone() {
    return new CMsgTEBubbles(this);
  }

  /// <summary>Field number for the "mins" field.</summary>
  public const int MinsFieldNumber = 1;
  private global::CMsgVector mins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Mins {
    get { return mins_; }
    set {
      mins_ = value;
    }
  }

  /// <summary>Field number for the "maxs" field.</summary>
  public const int MaxsFieldNumber = 2;
  private global::CMsgVector maxs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Maxs {
    get { return maxs_; }
    set {
      maxs_ = value;
    }
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 3;
  private readonly static float HeightDefaultValue = 0F;

  private float height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Height {
    get { if ((_hasBits0 & 1) != 0) { return height_; } else { return HeightDefaultValue; } }
    set {
      _hasBits0 |= 1;
      height_ = value;
    }
  }
  /// <summary>Gets whether the "height" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeight {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "height" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeight() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 4;
  private readonly static uint CountDefaultValue = 0;

  private uint count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Count {
    get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      count_ = value;
    }
  }
  /// <summary>Gets whether the "count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 5;
  private readonly static float SpeedDefaultValue = 0F;

  private float speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Speed {
    get { if ((_hasBits0 & 4) != 0) { return speed_; } else { return SpeedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      speed_ = value;
    }
  }
  /// <summary>Gets whether the "speed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpeed {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "speed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpeed() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBubbles);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBubbles other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mins, other.Mins)) return false;
    if (!object.Equals(Maxs, other.Maxs)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    if (Count != other.Count) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (mins_ != null) hash ^= Mins.GetHashCode();
    if (maxs_ != null) hash ^= Maxs.GetHashCode();
    if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    if (HasCount) hash ^= Count.GetHashCode();
    if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (mins_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mins);
    }
    if (maxs_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Maxs);
    }
    if (HasHeight) {
      output.WriteRawTag(29);
      output.WriteFloat(Height);
    }
    if (HasCount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Count);
    }
    if (HasSpeed) {
      output.WriteRawTag(45);
      output.WriteFloat(Speed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (mins_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mins);
    }
    if (maxs_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Maxs);
    }
    if (HasHeight) {
      output.WriteRawTag(29);
      output.WriteFloat(Height);
    }
    if (HasCount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Count);
    }
    if (HasSpeed) {
      output.WriteRawTag(45);
      output.WriteFloat(Speed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (mins_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mins);
    }
    if (maxs_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maxs);
    }
    if (HasHeight) {
      size += 1 + 4;
    }
    if (HasCount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (HasSpeed) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBubbles other) {
    if (other == null) {
      return;
    }
    if (other.mins_ != null) {
      if (mins_ == null) {
        Mins = new global::CMsgVector();
      }
      Mins.MergeFrom(other.Mins);
    }
    if (other.maxs_ != null) {
      if (maxs_ == null) {
        Maxs = new global::CMsgVector();
      }
      Maxs.MergeFrom(other.Maxs);
    }
    if (other.HasHeight) {
      Height = other.Height;
    }
    if (other.HasCount) {
      Count = other.Count;
    }
    if (other.HasSpeed) {
      Speed = other.Speed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mins_ == null) {
            Mins = new global::CMsgVector();
          }
          input.ReadMessage(Mins);
          break;
        }
        case 18: {
          if (maxs_ == null) {
            Maxs = new global::CMsgVector();
          }
          input.ReadMessage(Maxs);
          break;
        }
        case 29: {
          Height = input.ReadFloat();
          break;
        }
        case 32: {
          Count = input.ReadUInt32();
          break;
        }
        case 45: {
          Speed = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (mins_ == null) {
            Mins = new global::CMsgVector();
          }
          input.ReadMessage(Mins);
          break;
        }
        case 18: {
          if (maxs_ == null) {
            Maxs = new global::CMsgVector();
          }
          input.ReadMessage(Maxs);
          break;
        }
        case 29: {
          Height = input.ReadFloat();
          break;
        }
        case 32: {
          Count = input.ReadUInt32();
          break;
        }
        case 45: {
          Speed = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBubbleTrail : pb::IMessage<CMsgTEBubbleTrail>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBubbleTrail> _parser = new pb::MessageParser<CMsgTEBubbleTrail>(() => new CMsgTEBubbleTrail());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBubbleTrail> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbleTrail() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbleTrail(CMsgTEBubbleTrail other) : this() {
    _hasBits0 = other._hasBits0;
    mins_ = other.mins_ != null ? other.mins_.Clone() : null;
    maxs_ = other.maxs_ != null ? other.maxs_.Clone() : null;
    waterz_ = other.waterz_;
    count_ = other.count_;
    speed_ = other.speed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBubbleTrail Clone() {
    return new CMsgTEBubbleTrail(this);
  }

  /// <summary>Field number for the "mins" field.</summary>
  public const int MinsFieldNumber = 1;
  private global::CMsgVector mins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Mins {
    get { return mins_; }
    set {
      mins_ = value;
    }
  }

  /// <summary>Field number for the "maxs" field.</summary>
  public const int MaxsFieldNumber = 2;
  private global::CMsgVector maxs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Maxs {
    get { return maxs_; }
    set {
      maxs_ = value;
    }
  }

  /// <summary>Field number for the "waterz" field.</summary>
  public const int WaterzFieldNumber = 3;
  private readonly static float WaterzDefaultValue = 0F;

  private float waterz_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Waterz {
    get { if ((_hasBits0 & 1) != 0) { return waterz_; } else { return WaterzDefaultValue; } }
    set {
      _hasBits0 |= 1;
      waterz_ = value;
    }
  }
  /// <summary>Gets whether the "waterz" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWaterz {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "waterz" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWaterz() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int CountFieldNumber = 4;
  private readonly static uint CountDefaultValue = 0;

  private uint count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Count {
    get { if ((_hasBits0 & 2) != 0) { return count_; } else { return CountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      count_ = value;
    }
  }
  /// <summary>Gets whether the "count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 5;
  private readonly static float SpeedDefaultValue = 0F;

  private float speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Speed {
    get { if ((_hasBits0 & 4) != 0) { return speed_; } else { return SpeedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      speed_ = value;
    }
  }
  /// <summary>Gets whether the "speed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpeed {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "speed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpeed() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBubbleTrail);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBubbleTrail other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Mins, other.Mins)) return false;
    if (!object.Equals(Maxs, other.Maxs)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Waterz, other.Waterz)) return false;
    if (Count != other.Count) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (mins_ != null) hash ^= Mins.GetHashCode();
    if (maxs_ != null) hash ^= Maxs.GetHashCode();
    if (HasWaterz) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Waterz);
    if (HasCount) hash ^= Count.GetHashCode();
    if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (mins_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mins);
    }
    if (maxs_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Maxs);
    }
    if (HasWaterz) {
      output.WriteRawTag(29);
      output.WriteFloat(Waterz);
    }
    if (HasCount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Count);
    }
    if (HasSpeed) {
      output.WriteRawTag(45);
      output.WriteFloat(Speed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (mins_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Mins);
    }
    if (maxs_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Maxs);
    }
    if (HasWaterz) {
      output.WriteRawTag(29);
      output.WriteFloat(Waterz);
    }
    if (HasCount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Count);
    }
    if (HasSpeed) {
      output.WriteRawTag(45);
      output.WriteFloat(Speed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (mins_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mins);
    }
    if (maxs_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maxs);
    }
    if (HasWaterz) {
      size += 1 + 4;
    }
    if (HasCount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Count);
    }
    if (HasSpeed) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBubbleTrail other) {
    if (other == null) {
      return;
    }
    if (other.mins_ != null) {
      if (mins_ == null) {
        Mins = new global::CMsgVector();
      }
      Mins.MergeFrom(other.Mins);
    }
    if (other.maxs_ != null) {
      if (maxs_ == null) {
        Maxs = new global::CMsgVector();
      }
      Maxs.MergeFrom(other.Maxs);
    }
    if (other.HasWaterz) {
      Waterz = other.Waterz;
    }
    if (other.HasCount) {
      Count = other.Count;
    }
    if (other.HasSpeed) {
      Speed = other.Speed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (mins_ == null) {
            Mins = new global::CMsgVector();
          }
          input.ReadMessage(Mins);
          break;
        }
        case 18: {
          if (maxs_ == null) {
            Maxs = new global::CMsgVector();
          }
          input.ReadMessage(Maxs);
          break;
        }
        case 29: {
          Waterz = input.ReadFloat();
          break;
        }
        case 32: {
          Count = input.ReadUInt32();
          break;
        }
        case 45: {
          Speed = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (mins_ == null) {
            Mins = new global::CMsgVector();
          }
          input.ReadMessage(Mins);
          break;
        }
        case 18: {
          if (maxs_ == null) {
            Maxs = new global::CMsgVector();
          }
          input.ReadMessage(Maxs);
          break;
        }
        case 29: {
          Waterz = input.ReadFloat();
          break;
        }
        case 32: {
          Count = input.ReadUInt32();
          break;
        }
        case 45: {
          Speed = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEDecal : pb::IMessage<CMsgTEDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEDecal> _parser = new pb::MessageParser<CMsgTEDecal>(() => new CMsgTEDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDecal(CMsgTEDecal other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    start_ = other.start_ != null ? other.start_.Clone() : null;
    entity_ = other.entity_;
    hitbox_ = other.hitbox_;
    index_ = other.index_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDecal Clone() {
    return new CMsgTEDecal(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 2;
  private global::CMsgVector start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 3;
  private readonly static int EntityDefaultValue = -1;

  private int entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entity {
    get { if ((_hasBits0 & 1) != 0) { return entity_; } else { return EntityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entity_ = value;
    }
  }
  /// <summary>Gets whether the "entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "hitbox" field.</summary>
  public const int HitboxFieldNumber = 4;
  private readonly static uint HitboxDefaultValue = 0;

  private uint hitbox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Hitbox {
    get { if ((_hasBits0 & 2) != 0) { return hitbox_; } else { return HitboxDefaultValue; } }
    set {
      _hasBits0 |= 2;
      hitbox_ = value;
    }
  }
  /// <summary>Gets whether the "hitbox" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHitbox {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "hitbox" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHitbox() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 5;
  private readonly static uint IndexDefaultValue = 0;

  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Index {
    get { if ((_hasBits0 & 4) != 0) { return index_; } else { return IndexDefaultValue; } }
    set {
      _hasBits0 |= 4;
      index_ = value;
    }
  }
  /// <summary>Gets whether the "index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndex {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndex() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Start, other.Start)) return false;
    if (Entity != other.Entity) return false;
    if (Hitbox != other.Hitbox) return false;
    if (Index != other.Index) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (start_ != null) hash ^= Start.GetHashCode();
    if (HasEntity) hash ^= Entity.GetHashCode();
    if (HasHitbox) hash ^= Hitbox.GetHashCode();
    if (HasIndex) hash ^= Index.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (HasEntity) {
      output.WriteRawTag(24);
      output.WriteInt32(Entity);
    }
    if (HasHitbox) {
      output.WriteRawTag(32);
      output.WriteUInt32(Hitbox);
    }
    if (HasIndex) {
      output.WriteRawTag(40);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (HasEntity) {
      output.WriteRawTag(24);
      output.WriteInt32(Entity);
    }
    if (HasHitbox) {
      output.WriteRawTag(32);
      output.WriteUInt32(Hitbox);
    }
    if (HasIndex) {
      output.WriteRawTag(40);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (start_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
    }
    if (HasEntity) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entity);
    }
    if (HasHitbox) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hitbox);
    }
    if (HasIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEDecal other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.start_ != null) {
      if (start_ == null) {
        Start = new global::CMsgVector();
      }
      Start.MergeFrom(other.Start);
    }
    if (other.HasEntity) {
      Entity = other.Entity;
    }
    if (other.HasHitbox) {
      Hitbox = other.Hitbox;
    }
    if (other.HasIndex) {
      Index = other.Index;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 24: {
          Entity = input.ReadInt32();
          break;
        }
        case 32: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 40: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 24: {
          Entity = input.ReadInt32();
          break;
        }
        case 32: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 40: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgEffectData : pb::IMessage<CMsgEffectData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgEffectData> _parser = new pb::MessageParser<CMsgEffectData>(() => new CMsgEffectData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgEffectData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEffectData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEffectData(CMsgEffectData other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    start_ = other.start_ != null ? other.start_.Clone() : null;
    normal_ = other.normal_ != null ? other.normal_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    entity_ = other.entity_;
    otherentity_ = other.otherentity_;
    scale_ = other.scale_;
    magnitude_ = other.magnitude_;
    radius_ = other.radius_;
    surfaceprop_ = other.surfaceprop_;
    effectindex_ = other.effectindex_;
    damagetype_ = other.damagetype_;
    material_ = other.material_;
    hitbox_ = other.hitbox_;
    color_ = other.color_;
    flags_ = other.flags_;
    attachmentindex_ = other.attachmentindex_;
    effectname_ = other.effectname_;
    attachmentname_ = other.attachmentname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEffectData Clone() {
    return new CMsgEffectData(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "start" field.</summary>
  public const int StartFieldNumber = 2;
  private global::CMsgVector start_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Start {
    get { return start_; }
    set {
      start_ = value;
    }
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 3;
  private global::CMsgVector normal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Normal {
    get { return normal_; }
    set {
      normal_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 4;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 5;
  private readonly static uint EntityDefaultValue = 16777215;

  private uint entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Entity {
    get { if ((_hasBits0 & 1) != 0) { return entity_; } else { return EntityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entity_ = value;
    }
  }
  /// <summary>Gets whether the "entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "otherentity" field.</summary>
  public const int OtherentityFieldNumber = 6;
  private readonly static uint OtherentityDefaultValue = 16777215;

  private uint otherentity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Otherentity {
    get { if ((_hasBits0 & 2) != 0) { return otherentity_; } else { return OtherentityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      otherentity_ = value;
    }
  }
  /// <summary>Gets whether the "otherentity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOtherentity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "otherentity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOtherentity() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 7;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 4) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 4;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "magnitude" field.</summary>
  public const int MagnitudeFieldNumber = 8;
  private readonly static float MagnitudeDefaultValue = 0F;

  private float magnitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Magnitude {
    get { if ((_hasBits0 & 8) != 0) { return magnitude_; } else { return MagnitudeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      magnitude_ = value;
    }
  }
  /// <summary>Gets whether the "magnitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMagnitude {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "magnitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMagnitude() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "radius" field.</summary>
  public const int RadiusFieldNumber = 9;
  private readonly static float RadiusDefaultValue = 0F;

  private float radius_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Radius {
    get { if ((_hasBits0 & 16) != 0) { return radius_; } else { return RadiusDefaultValue; } }
    set {
      _hasBits0 |= 16;
      radius_ = value;
    }
  }
  /// <summary>Gets whether the "radius" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRadius {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "radius" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRadius() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "surfaceprop" field.</summary>
  public const int SurfacepropFieldNumber = 10;
  private readonly static uint SurfacepropDefaultValue = 0;

  private uint surfaceprop_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Surfaceprop {
    get { if ((_hasBits0 & 32) != 0) { return surfaceprop_; } else { return SurfacepropDefaultValue; } }
    set {
      _hasBits0 |= 32;
      surfaceprop_ = value;
    }
  }
  /// <summary>Gets whether the "surfaceprop" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSurfaceprop {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "surfaceprop" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSurfaceprop() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "effectindex" field.</summary>
  public const int EffectindexFieldNumber = 11;
  private readonly static ulong EffectindexDefaultValue = 0UL;

  private ulong effectindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Effectindex {
    get { if ((_hasBits0 & 64) != 0) { return effectindex_; } else { return EffectindexDefaultValue; } }
    set {
      _hasBits0 |= 64;
      effectindex_ = value;
    }
  }
  /// <summary>Gets whether the "effectindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEffectindex {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "effectindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEffectindex() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "damagetype" field.</summary>
  public const int DamagetypeFieldNumber = 12;
  private readonly static uint DamagetypeDefaultValue = 0;

  private uint damagetype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Damagetype {
    get { if ((_hasBits0 & 128) != 0) { return damagetype_; } else { return DamagetypeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      damagetype_ = value;
    }
  }
  /// <summary>Gets whether the "damagetype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDamagetype {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "damagetype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDamagetype() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "material" field.</summary>
  public const int MaterialFieldNumber = 13;
  private readonly static uint MaterialDefaultValue = 0;

  private uint material_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Material {
    get { if ((_hasBits0 & 256) != 0) { return material_; } else { return MaterialDefaultValue; } }
    set {
      _hasBits0 |= 256;
      material_ = value;
    }
  }
  /// <summary>Gets whether the "material" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaterial {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "material" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaterial() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "hitbox" field.</summary>
  public const int HitboxFieldNumber = 14;
  private readonly static uint HitboxDefaultValue = 0;

  private uint hitbox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Hitbox {
    get { if ((_hasBits0 & 512) != 0) { return hitbox_; } else { return HitboxDefaultValue; } }
    set {
      _hasBits0 |= 512;
      hitbox_ = value;
    }
  }
  /// <summary>Gets whether the "hitbox" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHitbox {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "hitbox" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHitbox() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 15;
  private readonly static uint ColorDefaultValue = 0;

  private uint color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Color {
    get { if ((_hasBits0 & 1024) != 0) { return color_; } else { return ColorDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      color_ = value;
    }
  }
  /// <summary>Gets whether the "color" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasColor {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "color" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearColor() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 16;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2048) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "attachmentindex" field.</summary>
  public const int AttachmentindexFieldNumber = 17;
  private readonly static int AttachmentindexDefaultValue = 0;

  private int attachmentindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Attachmentindex {
    get { if ((_hasBits0 & 4096) != 0) { return attachmentindex_; } else { return AttachmentindexDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      attachmentindex_ = value;
    }
  }
  /// <summary>Gets whether the "attachmentindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAttachmentindex {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "attachmentindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAttachmentindex() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "effectname" field.</summary>
  public const int EffectnameFieldNumber = 18;
  private readonly static uint EffectnameDefaultValue = 0;

  private uint effectname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Effectname {
    get { if ((_hasBits0 & 8192) != 0) { return effectname_; } else { return EffectnameDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      effectname_ = value;
    }
  }
  /// <summary>Gets whether the "effectname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEffectname {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "effectname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEffectname() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "attachmentname" field.</summary>
  public const int AttachmentnameFieldNumber = 19;
  private readonly static uint AttachmentnameDefaultValue = 0;

  private uint attachmentname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Attachmentname {
    get { if ((_hasBits0 & 16384) != 0) { return attachmentname_; } else { return AttachmentnameDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      attachmentname_ = value;
    }
  }
  /// <summary>Gets whether the "attachmentname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAttachmentname {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "attachmentname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAttachmentname() {
    _hasBits0 &= ~16384;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgEffectData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgEffectData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Start, other.Start)) return false;
    if (!object.Equals(Normal, other.Normal)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (Entity != other.Entity) return false;
    if (Otherentity != other.Otherentity) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Magnitude, other.Magnitude)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
    if (Surfaceprop != other.Surfaceprop) return false;
    if (Effectindex != other.Effectindex) return false;
    if (Damagetype != other.Damagetype) return false;
    if (Material != other.Material) return false;
    if (Hitbox != other.Hitbox) return false;
    if (Color != other.Color) return false;
    if (Flags != other.Flags) return false;
    if (Attachmentindex != other.Attachmentindex) return false;
    if (Effectname != other.Effectname) return false;
    if (Attachmentname != other.Attachmentname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (start_ != null) hash ^= Start.GetHashCode();
    if (normal_ != null) hash ^= Normal.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasEntity) hash ^= Entity.GetHashCode();
    if (HasOtherentity) hash ^= Otherentity.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (HasMagnitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Magnitude);
    if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
    if (HasSurfaceprop) hash ^= Surfaceprop.GetHashCode();
    if (HasEffectindex) hash ^= Effectindex.GetHashCode();
    if (HasDamagetype) hash ^= Damagetype.GetHashCode();
    if (HasMaterial) hash ^= Material.GetHashCode();
    if (HasHitbox) hash ^= Hitbox.GetHashCode();
    if (HasColor) hash ^= Color.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasAttachmentindex) hash ^= Attachmentindex.GetHashCode();
    if (HasEffectname) hash ^= Effectname.GetHashCode();
    if (HasAttachmentname) hash ^= Attachmentname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (normal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Normal);
    }
    if (angles_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Angles);
    }
    if (HasEntity) {
      output.WriteRawTag(45);
      output.WriteFixed32(Entity);
    }
    if (HasOtherentity) {
      output.WriteRawTag(53);
      output.WriteFixed32(Otherentity);
    }
    if (HasScale) {
      output.WriteRawTag(61);
      output.WriteFloat(Scale);
    }
    if (HasMagnitude) {
      output.WriteRawTag(69);
      output.WriteFloat(Magnitude);
    }
    if (HasRadius) {
      output.WriteRawTag(77);
      output.WriteFloat(Radius);
    }
    if (HasSurfaceprop) {
      output.WriteRawTag(85);
      output.WriteFixed32(Surfaceprop);
    }
    if (HasEffectindex) {
      output.WriteRawTag(89);
      output.WriteFixed64(Effectindex);
    }
    if (HasDamagetype) {
      output.WriteRawTag(96);
      output.WriteUInt32(Damagetype);
    }
    if (HasMaterial) {
      output.WriteRawTag(104);
      output.WriteUInt32(Material);
    }
    if (HasHitbox) {
      output.WriteRawTag(112);
      output.WriteUInt32(Hitbox);
    }
    if (HasColor) {
      output.WriteRawTag(120);
      output.WriteUInt32(Color);
    }
    if (HasFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Flags);
    }
    if (HasAttachmentindex) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(Attachmentindex);
    }
    if (HasEffectname) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Effectname);
    }
    if (HasAttachmentname) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Attachmentname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (start_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Start);
    }
    if (normal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Normal);
    }
    if (angles_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Angles);
    }
    if (HasEntity) {
      output.WriteRawTag(45);
      output.WriteFixed32(Entity);
    }
    if (HasOtherentity) {
      output.WriteRawTag(53);
      output.WriteFixed32(Otherentity);
    }
    if (HasScale) {
      output.WriteRawTag(61);
      output.WriteFloat(Scale);
    }
    if (HasMagnitude) {
      output.WriteRawTag(69);
      output.WriteFloat(Magnitude);
    }
    if (HasRadius) {
      output.WriteRawTag(77);
      output.WriteFloat(Radius);
    }
    if (HasSurfaceprop) {
      output.WriteRawTag(85);
      output.WriteFixed32(Surfaceprop);
    }
    if (HasEffectindex) {
      output.WriteRawTag(89);
      output.WriteFixed64(Effectindex);
    }
    if (HasDamagetype) {
      output.WriteRawTag(96);
      output.WriteUInt32(Damagetype);
    }
    if (HasMaterial) {
      output.WriteRawTag(104);
      output.WriteUInt32(Material);
    }
    if (HasHitbox) {
      output.WriteRawTag(112);
      output.WriteUInt32(Hitbox);
    }
    if (HasColor) {
      output.WriteRawTag(120);
      output.WriteUInt32(Color);
    }
    if (HasFlags) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Flags);
    }
    if (HasAttachmentindex) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(Attachmentindex);
    }
    if (HasEffectname) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Effectname);
    }
    if (HasAttachmentname) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(Attachmentname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (start_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Start);
    }
    if (normal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasEntity) {
      size += 1 + 4;
    }
    if (HasOtherentity) {
      size += 1 + 4;
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (HasMagnitude) {
      size += 1 + 4;
    }
    if (HasRadius) {
      size += 1 + 4;
    }
    if (HasSurfaceprop) {
      size += 1 + 4;
    }
    if (HasEffectindex) {
      size += 1 + 8;
    }
    if (HasDamagetype) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damagetype);
    }
    if (HasMaterial) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Material);
    }
    if (HasHitbox) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hitbox);
    }
    if (HasColor) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Color);
    }
    if (HasFlags) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (HasAttachmentindex) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Attachmentindex);
    }
    if (HasEffectname) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Effectname);
    }
    if (HasAttachmentname) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Attachmentname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgEffectData other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.start_ != null) {
      if (start_ == null) {
        Start = new global::CMsgVector();
      }
      Start.MergeFrom(other.Start);
    }
    if (other.normal_ != null) {
      if (normal_ == null) {
        Normal = new global::CMsgVector();
      }
      Normal.MergeFrom(other.Normal);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasEntity) {
      Entity = other.Entity;
    }
    if (other.HasOtherentity) {
      Otherentity = other.Otherentity;
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.HasMagnitude) {
      Magnitude = other.Magnitude;
    }
    if (other.HasRadius) {
      Radius = other.Radius;
    }
    if (other.HasSurfaceprop) {
      Surfaceprop = other.Surfaceprop;
    }
    if (other.HasEffectindex) {
      Effectindex = other.Effectindex;
    }
    if (other.HasDamagetype) {
      Damagetype = other.Damagetype;
    }
    if (other.HasMaterial) {
      Material = other.Material;
    }
    if (other.HasHitbox) {
      Hitbox = other.Hitbox;
    }
    if (other.HasColor) {
      Color = other.Color;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasAttachmentindex) {
      Attachmentindex = other.Attachmentindex;
    }
    if (other.HasEffectname) {
      Effectname = other.Effectname;
    }
    if (other.HasAttachmentname) {
      Attachmentname = other.Attachmentname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 26: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 34: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 45: {
          Entity = input.ReadFixed32();
          break;
        }
        case 53: {
          Otherentity = input.ReadFixed32();
          break;
        }
        case 61: {
          Scale = input.ReadFloat();
          break;
        }
        case 69: {
          Magnitude = input.ReadFloat();
          break;
        }
        case 77: {
          Radius = input.ReadFloat();
          break;
        }
        case 85: {
          Surfaceprop = input.ReadFixed32();
          break;
        }
        case 89: {
          Effectindex = input.ReadFixed64();
          break;
        }
        case 96: {
          Damagetype = input.ReadUInt32();
          break;
        }
        case 104: {
          Material = input.ReadUInt32();
          break;
        }
        case 112: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 120: {
          Color = input.ReadUInt32();
          break;
        }
        case 128: {
          Flags = input.ReadUInt32();
          break;
        }
        case 136: {
          Attachmentindex = input.ReadInt32();
          break;
        }
        case 144: {
          Effectname = input.ReadUInt32();
          break;
        }
        case 152: {
          Attachmentname = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (start_ == null) {
            Start = new global::CMsgVector();
          }
          input.ReadMessage(Start);
          break;
        }
        case 26: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 34: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 45: {
          Entity = input.ReadFixed32();
          break;
        }
        case 53: {
          Otherentity = input.ReadFixed32();
          break;
        }
        case 61: {
          Scale = input.ReadFloat();
          break;
        }
        case 69: {
          Magnitude = input.ReadFloat();
          break;
        }
        case 77: {
          Radius = input.ReadFloat();
          break;
        }
        case 85: {
          Surfaceprop = input.ReadFixed32();
          break;
        }
        case 89: {
          Effectindex = input.ReadFixed64();
          break;
        }
        case 96: {
          Damagetype = input.ReadUInt32();
          break;
        }
        case 104: {
          Material = input.ReadUInt32();
          break;
        }
        case 112: {
          Hitbox = input.ReadUInt32();
          break;
        }
        case 120: {
          Color = input.ReadUInt32();
          break;
        }
        case 128: {
          Flags = input.ReadUInt32();
          break;
        }
        case 136: {
          Attachmentindex = input.ReadInt32();
          break;
        }
        case 144: {
          Effectname = input.ReadUInt32();
          break;
        }
        case 152: {
          Attachmentname = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEEffectDispatch : pb::IMessage<CMsgTEEffectDispatch>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEEffectDispatch> _parser = new pb::MessageParser<CMsgTEEffectDispatch>(() => new CMsgTEEffectDispatch());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEEffectDispatch> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEffectDispatch() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEffectDispatch(CMsgTEEffectDispatch other) : this() {
    effectdata_ = other.effectdata_ != null ? other.effectdata_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEffectDispatch Clone() {
    return new CMsgTEEffectDispatch(this);
  }

  /// <summary>Field number for the "effectdata" field.</summary>
  public const int EffectdataFieldNumber = 1;
  private global::CMsgEffectData effectdata_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgEffectData Effectdata {
    get { return effectdata_; }
    set {
      effectdata_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEEffectDispatch);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEEffectDispatch other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Effectdata, other.Effectdata)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (effectdata_ != null) hash ^= Effectdata.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (effectdata_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Effectdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (effectdata_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Effectdata);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (effectdata_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Effectdata);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEEffectDispatch other) {
    if (other == null) {
      return;
    }
    if (other.effectdata_ != null) {
      if (effectdata_ == null) {
        Effectdata = new global::CMsgEffectData();
      }
      Effectdata.MergeFrom(other.Effectdata);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (effectdata_ == null) {
            Effectdata = new global::CMsgEffectData();
          }
          input.ReadMessage(Effectdata);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (effectdata_ == null) {
            Effectdata = new global::CMsgEffectData();
          }
          input.ReadMessage(Effectdata);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEEnergySplash : pb::IMessage<CMsgTEEnergySplash>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEEnergySplash> _parser = new pb::MessageParser<CMsgTEEnergySplash>(() => new CMsgTEEnergySplash());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEEnergySplash> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEnergySplash() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEnergySplash(CMsgTEEnergySplash other) : this() {
    _hasBits0 = other._hasBits0;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    dir_ = other.dir_ != null ? other.dir_.Clone() : null;
    explosive_ = other.explosive_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEEnergySplash Clone() {
    return new CMsgTEEnergySplash(this);
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 1;
  private global::CMsgVector pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  /// <summary>Field number for the "dir" field.</summary>
  public const int DirFieldNumber = 2;
  private global::CMsgVector dir_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Dir {
    get { return dir_; }
    set {
      dir_ = value;
    }
  }

  /// <summary>Field number for the "explosive" field.</summary>
  public const int ExplosiveFieldNumber = 3;
  private readonly static bool ExplosiveDefaultValue = false;

  private bool explosive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Explosive {
    get { if ((_hasBits0 & 1) != 0) { return explosive_; } else { return ExplosiveDefaultValue; } }
    set {
      _hasBits0 |= 1;
      explosive_ = value;
    }
  }
  /// <summary>Gets whether the "explosive" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExplosive {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "explosive" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExplosive() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEEnergySplash);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEEnergySplash other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Pos, other.Pos)) return false;
    if (!object.Equals(Dir, other.Dir)) return false;
    if (Explosive != other.Explosive) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (dir_ != null) hash ^= Dir.GetHashCode();
    if (HasExplosive) hash ^= Explosive.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (dir_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Dir);
    }
    if (HasExplosive) {
      output.WriteRawTag(24);
      output.WriteBool(Explosive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (dir_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Dir);
    }
    if (HasExplosive) {
      output.WriteRawTag(24);
      output.WriteBool(Explosive);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (dir_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dir);
    }
    if (HasExplosive) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEEnergySplash other) {
    if (other == null) {
      return;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::CMsgVector();
      }
      Pos.MergeFrom(other.Pos);
    }
    if (other.dir_ != null) {
      if (dir_ == null) {
        Dir = new global::CMsgVector();
      }
      Dir.MergeFrom(other.Dir);
    }
    if (other.HasExplosive) {
      Explosive = other.Explosive;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 18: {
          if (dir_ == null) {
            Dir = new global::CMsgVector();
          }
          input.ReadMessage(Dir);
          break;
        }
        case 24: {
          Explosive = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 18: {
          if (dir_ == null) {
            Dir = new global::CMsgVector();
          }
          input.ReadMessage(Dir);
          break;
        }
        case 24: {
          Explosive = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEFizz : pb::IMessage<CMsgTEFizz>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEFizz> _parser = new pb::MessageParser<CMsgTEFizz>(() => new CMsgTEFizz());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEFizz> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFizz() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFizz(CMsgTEFizz other) : this() {
    _hasBits0 = other._hasBits0;
    entity_ = other.entity_;
    density_ = other.density_;
    current_ = other.current_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEFizz Clone() {
    return new CMsgTEFizz(this);
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 1;
  private readonly static int EntityDefaultValue = -1;

  private int entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entity {
    get { if ((_hasBits0 & 1) != 0) { return entity_; } else { return EntityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entity_ = value;
    }
  }
  /// <summary>Gets whether the "entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntity() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "density" field.</summary>
  public const int DensityFieldNumber = 2;
  private readonly static uint DensityDefaultValue = 0;

  private uint density_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Density {
    get { if ((_hasBits0 & 2) != 0) { return density_; } else { return DensityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      density_ = value;
    }
  }
  /// <summary>Gets whether the "density" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDensity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "density" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDensity() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "current" field.</summary>
  public const int CurrentFieldNumber = 3;
  private readonly static int CurrentDefaultValue = 0;

  private int current_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Current {
    get { if ((_hasBits0 & 4) != 0) { return current_; } else { return CurrentDefaultValue; } }
    set {
      _hasBits0 |= 4;
      current_ = value;
    }
  }
  /// <summary>Gets whether the "current" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrent {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "current" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrent() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEFizz);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEFizz other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Entity != other.Entity) return false;
    if (Density != other.Density) return false;
    if (Current != other.Current) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEntity) hash ^= Entity.GetHashCode();
    if (HasDensity) hash ^= Density.GetHashCode();
    if (HasCurrent) hash ^= Current.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEntity) {
      output.WriteRawTag(8);
      output.WriteInt32(Entity);
    }
    if (HasDensity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Density);
    }
    if (HasCurrent) {
      output.WriteRawTag(24);
      output.WriteInt32(Current);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEntity) {
      output.WriteRawTag(8);
      output.WriteInt32(Entity);
    }
    if (HasDensity) {
      output.WriteRawTag(16);
      output.WriteUInt32(Density);
    }
    if (HasCurrent) {
      output.WriteRawTag(24);
      output.WriteInt32(Current);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEntity) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entity);
    }
    if (HasDensity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Density);
    }
    if (HasCurrent) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Current);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEFizz other) {
    if (other == null) {
      return;
    }
    if (other.HasEntity) {
      Entity = other.Entity;
    }
    if (other.HasDensity) {
      Density = other.Density;
    }
    if (other.HasCurrent) {
      Current = other.Current;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Entity = input.ReadInt32();
          break;
        }
        case 16: {
          Density = input.ReadUInt32();
          break;
        }
        case 24: {
          Current = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Entity = input.ReadInt32();
          break;
        }
        case 16: {
          Density = input.ReadUInt32();
          break;
        }
        case 24: {
          Current = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEShatterSurface : pb::IMessage<CMsgTEShatterSurface>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEShatterSurface> _parser = new pb::MessageParser<CMsgTEShatterSurface>(() => new CMsgTEShatterSurface());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEShatterSurface> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEShatterSurface() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEShatterSurface(CMsgTEShatterSurface other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    force_ = other.force_ != null ? other.force_.Clone() : null;
    forcepos_ = other.forcepos_ != null ? other.forcepos_.Clone() : null;
    width_ = other.width_;
    height_ = other.height_;
    shardsize_ = other.shardsize_;
    surfacetype_ = other.surfacetype_;
    frontcolor_ = other.frontcolor_;
    backcolor_ = other.backcolor_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEShatterSurface Clone() {
    return new CMsgTEShatterSurface(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 2;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "force" field.</summary>
  public const int ForceFieldNumber = 3;
  private global::CMsgVector force_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Force {
    get { return force_; }
    set {
      force_ = value;
    }
  }

  /// <summary>Field number for the "forcepos" field.</summary>
  public const int ForceposFieldNumber = 4;
  private global::CMsgVector forcepos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Forcepos {
    get { return forcepos_; }
    set {
      forcepos_ = value;
    }
  }

  /// <summary>Field number for the "width" field.</summary>
  public const int WidthFieldNumber = 5;
  private readonly static float WidthDefaultValue = 0F;

  private float width_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Width {
    get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
    set {
      _hasBits0 |= 1;
      width_ = value;
    }
  }
  /// <summary>Gets whether the "width" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWidth {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "width" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWidth() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "height" field.</summary>
  public const int HeightFieldNumber = 6;
  private readonly static float HeightDefaultValue = 0F;

  private float height_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Height {
    get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
    set {
      _hasBits0 |= 2;
      height_ = value;
    }
  }
  /// <summary>Gets whether the "height" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeight {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "height" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeight() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "shardsize" field.</summary>
  public const int ShardsizeFieldNumber = 7;
  private readonly static float ShardsizeDefaultValue = 0F;

  private float shardsize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Shardsize {
    get { if ((_hasBits0 & 4) != 0) { return shardsize_; } else { return ShardsizeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      shardsize_ = value;
    }
  }
  /// <summary>Gets whether the "shardsize" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShardsize {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "shardsize" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShardsize() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "surfacetype" field.</summary>
  public const int SurfacetypeFieldNumber = 8;
  private readonly static uint SurfacetypeDefaultValue = 0;

  private uint surfacetype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Surfacetype {
    get { if ((_hasBits0 & 8) != 0) { return surfacetype_; } else { return SurfacetypeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      surfacetype_ = value;
    }
  }
  /// <summary>Gets whether the "surfacetype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSurfacetype {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "surfacetype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSurfacetype() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "frontcolor" field.</summary>
  public const int FrontcolorFieldNumber = 9;
  private readonly static uint FrontcolorDefaultValue = 0;

  private uint frontcolor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Frontcolor {
    get { if ((_hasBits0 & 16) != 0) { return frontcolor_; } else { return FrontcolorDefaultValue; } }
    set {
      _hasBits0 |= 16;
      frontcolor_ = value;
    }
  }
  /// <summary>Gets whether the "frontcolor" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFrontcolor {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "frontcolor" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFrontcolor() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "backcolor" field.</summary>
  public const int BackcolorFieldNumber = 10;
  private readonly static uint BackcolorDefaultValue = 0;

  private uint backcolor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Backcolor {
    get { if ((_hasBits0 & 32) != 0) { return backcolor_; } else { return BackcolorDefaultValue; } }
    set {
      _hasBits0 |= 32;
      backcolor_ = value;
    }
  }
  /// <summary>Gets whether the "backcolor" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBackcolor {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "backcolor" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBackcolor() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEShatterSurface);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEShatterSurface other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (!object.Equals(Force, other.Force)) return false;
    if (!object.Equals(Forcepos, other.Forcepos)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Width, other.Width)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Height, other.Height)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Shardsize, other.Shardsize)) return false;
    if (Surfacetype != other.Surfacetype) return false;
    if (Frontcolor != other.Frontcolor) return false;
    if (Backcolor != other.Backcolor) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (force_ != null) hash ^= Force.GetHashCode();
    if (forcepos_ != null) hash ^= Forcepos.GetHashCode();
    if (HasWidth) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Width);
    if (HasHeight) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Height);
    if (HasShardsize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Shardsize);
    if (HasSurfacetype) hash ^= Surfacetype.GetHashCode();
    if (HasFrontcolor) hash ^= Frontcolor.GetHashCode();
    if (HasBackcolor) hash ^= Backcolor.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (force_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Force);
    }
    if (forcepos_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Forcepos);
    }
    if (HasWidth) {
      output.WriteRawTag(45);
      output.WriteFloat(Width);
    }
    if (HasHeight) {
      output.WriteRawTag(53);
      output.WriteFloat(Height);
    }
    if (HasShardsize) {
      output.WriteRawTag(61);
      output.WriteFloat(Shardsize);
    }
    if (HasSurfacetype) {
      output.WriteRawTag(64);
      output.WriteUInt32(Surfacetype);
    }
    if (HasFrontcolor) {
      output.WriteRawTag(77);
      output.WriteFixed32(Frontcolor);
    }
    if (HasBackcolor) {
      output.WriteRawTag(85);
      output.WriteFixed32(Backcolor);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (force_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Force);
    }
    if (forcepos_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Forcepos);
    }
    if (HasWidth) {
      output.WriteRawTag(45);
      output.WriteFloat(Width);
    }
    if (HasHeight) {
      output.WriteRawTag(53);
      output.WriteFloat(Height);
    }
    if (HasShardsize) {
      output.WriteRawTag(61);
      output.WriteFloat(Shardsize);
    }
    if (HasSurfacetype) {
      output.WriteRawTag(64);
      output.WriteUInt32(Surfacetype);
    }
    if (HasFrontcolor) {
      output.WriteRawTag(77);
      output.WriteFixed32(Frontcolor);
    }
    if (HasBackcolor) {
      output.WriteRawTag(85);
      output.WriteFixed32(Backcolor);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (force_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Force);
    }
    if (forcepos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forcepos);
    }
    if (HasWidth) {
      size += 1 + 4;
    }
    if (HasHeight) {
      size += 1 + 4;
    }
    if (HasShardsize) {
      size += 1 + 4;
    }
    if (HasSurfacetype) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Surfacetype);
    }
    if (HasFrontcolor) {
      size += 1 + 4;
    }
    if (HasBackcolor) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEShatterSurface other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.force_ != null) {
      if (force_ == null) {
        Force = new global::CMsgVector();
      }
      Force.MergeFrom(other.Force);
    }
    if (other.forcepos_ != null) {
      if (forcepos_ == null) {
        Forcepos = new global::CMsgVector();
      }
      Forcepos.MergeFrom(other.Forcepos);
    }
    if (other.HasWidth) {
      Width = other.Width;
    }
    if (other.HasHeight) {
      Height = other.Height;
    }
    if (other.HasShardsize) {
      Shardsize = other.Shardsize;
    }
    if (other.HasSurfacetype) {
      Surfacetype = other.Surfacetype;
    }
    if (other.HasFrontcolor) {
      Frontcolor = other.Frontcolor;
    }
    if (other.HasBackcolor) {
      Backcolor = other.Backcolor;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 26: {
          if (force_ == null) {
            Force = new global::CMsgVector();
          }
          input.ReadMessage(Force);
          break;
        }
        case 34: {
          if (forcepos_ == null) {
            Forcepos = new global::CMsgVector();
          }
          input.ReadMessage(Forcepos);
          break;
        }
        case 45: {
          Width = input.ReadFloat();
          break;
        }
        case 53: {
          Height = input.ReadFloat();
          break;
        }
        case 61: {
          Shardsize = input.ReadFloat();
          break;
        }
        case 64: {
          Surfacetype = input.ReadUInt32();
          break;
        }
        case 77: {
          Frontcolor = input.ReadFixed32();
          break;
        }
        case 85: {
          Backcolor = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 26: {
          if (force_ == null) {
            Force = new global::CMsgVector();
          }
          input.ReadMessage(Force);
          break;
        }
        case 34: {
          if (forcepos_ == null) {
            Forcepos = new global::CMsgVector();
          }
          input.ReadMessage(Forcepos);
          break;
        }
        case 45: {
          Width = input.ReadFloat();
          break;
        }
        case 53: {
          Height = input.ReadFloat();
          break;
        }
        case 61: {
          Shardsize = input.ReadFloat();
          break;
        }
        case 64: {
          Surfacetype = input.ReadUInt32();
          break;
        }
        case 77: {
          Frontcolor = input.ReadFixed32();
          break;
        }
        case 85: {
          Backcolor = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEGlowSprite : pb::IMessage<CMsgTEGlowSprite>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEGlowSprite> _parser = new pb::MessageParser<CMsgTEGlowSprite>(() => new CMsgTEGlowSprite());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEGlowSprite> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEGlowSprite() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEGlowSprite(CMsgTEGlowSprite other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    scale_ = other.scale_;
    life_ = other.life_;
    brightness_ = other.brightness_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEGlowSprite Clone() {
    return new CMsgTEGlowSprite(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 2;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 1) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "life" field.</summary>
  public const int LifeFieldNumber = 3;
  private readonly static float LifeDefaultValue = 0F;

  private float life_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Life {
    get { if ((_hasBits0 & 2) != 0) { return life_; } else { return LifeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      life_ = value;
    }
  }
  /// <summary>Gets whether the "life" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLife {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "life" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLife() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "brightness" field.</summary>
  public const int BrightnessFieldNumber = 4;
  private readonly static uint BrightnessDefaultValue = 0;

  private uint brightness_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Brightness {
    get { if ((_hasBits0 & 4) != 0) { return brightness_; } else { return BrightnessDefaultValue; } }
    set {
      _hasBits0 |= 4;
      brightness_ = value;
    }
  }
  /// <summary>Gets whether the "brightness" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBrightness {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "brightness" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBrightness() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEGlowSprite);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEGlowSprite other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Life, other.Life)) return false;
    if (Brightness != other.Brightness) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (HasLife) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Life);
    if (HasBrightness) hash ^= Brightness.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (HasLife) {
      output.WriteRawTag(29);
      output.WriteFloat(Life);
    }
    if (HasBrightness) {
      output.WriteRawTag(32);
      output.WriteUInt32(Brightness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (HasLife) {
      output.WriteRawTag(29);
      output.WriteFloat(Life);
    }
    if (HasBrightness) {
      output.WriteRawTag(32);
      output.WriteUInt32(Brightness);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (HasLife) {
      size += 1 + 4;
    }
    if (HasBrightness) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Brightness);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEGlowSprite other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.HasLife) {
      Life = other.Life;
    }
    if (other.HasBrightness) {
      Brightness = other.Brightness;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
        case 29: {
          Life = input.ReadFloat();
          break;
        }
        case 32: {
          Brightness = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
        case 29: {
          Life = input.ReadFloat();
          break;
        }
        case 32: {
          Brightness = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEImpact : pb::IMessage<CMsgTEImpact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEImpact> _parser = new pb::MessageParser<CMsgTEImpact>(() => new CMsgTEImpact());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEImpact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEImpact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEImpact(CMsgTEImpact other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    normal_ = other.normal_ != null ? other.normal_.Clone() : null;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEImpact Clone() {
    return new CMsgTEImpact(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 2;
  private global::CMsgVector normal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Normal {
    get { return normal_; }
    set {
      normal_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 3;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEImpact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEImpact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Normal, other.Normal)) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (normal_ != null) hash ^= Normal.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (HasType) {
      output.WriteRawTag(24);
      output.WriteUInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (HasType) {
      output.WriteRawTag(24);
      output.WriteUInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (normal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEImpact other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.normal_ != null) {
      if (normal_ == null) {
        Normal = new global::CMsgVector();
      }
      Normal.MergeFrom(other.Normal);
    }
    if (other.HasType) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 24: {
          Type = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 24: {
          Type = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEMuzzleFlash : pb::IMessage<CMsgTEMuzzleFlash>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEMuzzleFlash> _parser = new pb::MessageParser<CMsgTEMuzzleFlash>(() => new CMsgTEMuzzleFlash());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEMuzzleFlash> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEMuzzleFlash() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEMuzzleFlash(CMsgTEMuzzleFlash other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    scale_ = other.scale_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEMuzzleFlash Clone() {
    return new CMsgTEMuzzleFlash(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 2;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 3;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 1) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 4;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 2) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEMuzzleFlash);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEMuzzleFlash other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (HasType) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasScale) {
      output.WriteRawTag(29);
      output.WriteFloat(Scale);
    }
    if (HasType) {
      output.WriteRawTag(32);
      output.WriteUInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasScale) {
      output.WriteRawTag(29);
      output.WriteFloat(Scale);
    }
    if (HasType) {
      output.WriteRawTag(32);
      output.WriteUInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEMuzzleFlash other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 29: {
          Scale = input.ReadFloat();
          break;
        }
        case 32: {
          Type = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 29: {
          Scale = input.ReadFloat();
          break;
        }
        case 32: {
          Type = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEBloodStream : pb::IMessage<CMsgTEBloodStream>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEBloodStream> _parser = new pb::MessageParser<CMsgTEBloodStream>(() => new CMsgTEBloodStream());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEBloodStream> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBloodStream() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBloodStream(CMsgTEBloodStream other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    direction_ = other.direction_ != null ? other.direction_.Clone() : null;
    color_ = other.color_;
    amount_ = other.amount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEBloodStream Clone() {
    return new CMsgTEBloodStream(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 2;
  private global::CMsgVector direction_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 3;
  private readonly static uint ColorDefaultValue = 0;

  private uint color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Color {
    get { if ((_hasBits0 & 1) != 0) { return color_; } else { return ColorDefaultValue; } }
    set {
      _hasBits0 |= 1;
      color_ = value;
    }
  }
  /// <summary>Gets whether the "color" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasColor {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "color" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearColor() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 4;
  private readonly static uint AmountDefaultValue = 0;

  private uint amount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Amount {
    get { if ((_hasBits0 & 2) != 0) { return amount_; } else { return AmountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      amount_ = value;
    }
  }
  /// <summary>Gets whether the "amount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAmount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "amount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAmount() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEBloodStream);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEBloodStream other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Direction, other.Direction)) return false;
    if (Color != other.Color) return false;
    if (Amount != other.Amount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (direction_ != null) hash ^= Direction.GetHashCode();
    if (HasColor) hash ^= Color.GetHashCode();
    if (HasAmount) hash ^= Amount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (direction_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Direction);
    }
    if (HasColor) {
      output.WriteRawTag(29);
      output.WriteFixed32(Color);
    }
    if (HasAmount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (direction_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Direction);
    }
    if (HasColor) {
      output.WriteRawTag(29);
      output.WriteFixed32(Color);
    }
    if (HasAmount) {
      output.WriteRawTag(32);
      output.WriteUInt32(Amount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (direction_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
    }
    if (HasColor) {
      size += 1 + 4;
    }
    if (HasAmount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEBloodStream other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.direction_ != null) {
      if (direction_ == null) {
        Direction = new global::CMsgVector();
      }
      Direction.MergeFrom(other.Direction);
    }
    if (other.HasColor) {
      Color = other.Color;
    }
    if (other.HasAmount) {
      Amount = other.Amount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 29: {
          Color = input.ReadFixed32();
          break;
        }
        case 32: {
          Amount = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 29: {
          Color = input.ReadFixed32();
          break;
        }
        case 32: {
          Amount = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEExplosion : pb::IMessage<CMsgTEExplosion>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEExplosion> _parser = new pb::MessageParser<CMsgTEExplosion>(() => new CMsgTEExplosion());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEExplosion> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEExplosion() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEExplosion(CMsgTEExplosion other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    framerate_ = other.framerate_;
    flags_ = other.flags_;
    normal_ = other.normal_ != null ? other.normal_.Clone() : null;
    materialtype_ = other.materialtype_;
    radius_ = other.radius_;
    magnitude_ = other.magnitude_;
    scale_ = other.scale_;
    affectRagdolls_ = other.affectRagdolls_;
    effectName_ = other.effectName_;
    explosionType_ = other.explosionType_;
    createDebris_ = other.createDebris_;
    debrisOrigin_ = other.debrisOrigin_ != null ? other.debrisOrigin_.Clone() : null;
    debrisSurfaceprop_ = other.debrisSurfaceprop_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEExplosion Clone() {
    return new CMsgTEExplosion(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "framerate" field.</summary>
  public const int FramerateFieldNumber = 2;
  private readonly static uint FramerateDefaultValue = 0;

  private uint framerate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Framerate {
    get { if ((_hasBits0 & 1) != 0) { return framerate_; } else { return FramerateDefaultValue; } }
    set {
      _hasBits0 |= 1;
      framerate_ = value;
    }
  }
  /// <summary>Gets whether the "framerate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFramerate {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "framerate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFramerate() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 3;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 4;
  private global::CMsgVector normal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Normal {
    get { return normal_; }
    set {
      normal_ = value;
    }
  }

  /// <summary>Field number for the "materialtype" field.</summary>
  public const int MaterialtypeFieldNumber = 5;
  private readonly static uint MaterialtypeDefaultValue = 0;

  private uint materialtype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Materialtype {
    get { if ((_hasBits0 & 4) != 0) { return materialtype_; } else { return MaterialtypeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      materialtype_ = value;
    }
  }
  /// <summary>Gets whether the "materialtype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaterialtype {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "materialtype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaterialtype() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "radius" field.</summary>
  public const int RadiusFieldNumber = 6;
  private readonly static uint RadiusDefaultValue = 0;

  private uint radius_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Radius {
    get { if ((_hasBits0 & 8) != 0) { return radius_; } else { return RadiusDefaultValue; } }
    set {
      _hasBits0 |= 8;
      radius_ = value;
    }
  }
  /// <summary>Gets whether the "radius" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRadius {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "radius" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRadius() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "magnitude" field.</summary>
  public const int MagnitudeFieldNumber = 7;
  private readonly static uint MagnitudeDefaultValue = 0;

  private uint magnitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Magnitude {
    get { if ((_hasBits0 & 16) != 0) { return magnitude_; } else { return MagnitudeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      magnitude_ = value;
    }
  }
  /// <summary>Gets whether the "magnitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMagnitude {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "magnitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMagnitude() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 8;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 32) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 32;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "affect_ragdolls" field.</summary>
  public const int AffectRagdollsFieldNumber = 9;
  private readonly static bool AffectRagdollsDefaultValue = false;

  private bool affectRagdolls_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool AffectRagdolls {
    get { if ((_hasBits0 & 64) != 0) { return affectRagdolls_; } else { return AffectRagdollsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      affectRagdolls_ = value;
    }
  }
  /// <summary>Gets whether the "affect_ragdolls" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAffectRagdolls {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "affect_ragdolls" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAffectRagdolls() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "effect_name" field.</summary>
  public const int EffectNameFieldNumber = 10;
  private readonly static string EffectNameDefaultValue = "";

  private string effectName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EffectName {
    get { return effectName_ ?? EffectNameDefaultValue; }
    set {
      effectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "effect_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEffectName {
    get { return effectName_ != null; }
  }
  /// <summary>Clears the value of the "effect_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEffectName() {
    effectName_ = null;
  }

  /// <summary>Field number for the "explosion_type" field.</summary>
  public const int ExplosionTypeFieldNumber = 11;
  private readonly static uint ExplosionTypeDefaultValue = 0;

  private uint explosionType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExplosionType {
    get { if ((_hasBits0 & 128) != 0) { return explosionType_; } else { return ExplosionTypeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      explosionType_ = value;
    }
  }
  /// <summary>Gets whether the "explosion_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExplosionType {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "explosion_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExplosionType() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "create_debris" field.</summary>
  public const int CreateDebrisFieldNumber = 12;
  private readonly static bool CreateDebrisDefaultValue = false;

  private bool createDebris_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CreateDebris {
    get { if ((_hasBits0 & 256) != 0) { return createDebris_; } else { return CreateDebrisDefaultValue; } }
    set {
      _hasBits0 |= 256;
      createDebris_ = value;
    }
  }
  /// <summary>Gets whether the "create_debris" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreateDebris {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "create_debris" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreateDebris() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "debris_origin" field.</summary>
  public const int DebrisOriginFieldNumber = 13;
  private global::CMsgVector debrisOrigin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector DebrisOrigin {
    get { return debrisOrigin_; }
    set {
      debrisOrigin_ = value;
    }
  }

  /// <summary>Field number for the "debris_surfaceprop" field.</summary>
  public const int DebrisSurfacepropFieldNumber = 14;
  private readonly static uint DebrisSurfacepropDefaultValue = 0;

  private uint debrisSurfaceprop_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DebrisSurfaceprop {
    get { if ((_hasBits0 & 512) != 0) { return debrisSurfaceprop_; } else { return DebrisSurfacepropDefaultValue; } }
    set {
      _hasBits0 |= 512;
      debrisSurfaceprop_ = value;
    }
  }
  /// <summary>Gets whether the "debris_surfaceprop" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDebrisSurfaceprop {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "debris_surfaceprop" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDebrisSurfaceprop() {
    _hasBits0 &= ~512;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEExplosion);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEExplosion other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (Framerate != other.Framerate) return false;
    if (Flags != other.Flags) return false;
    if (!object.Equals(Normal, other.Normal)) return false;
    if (Materialtype != other.Materialtype) return false;
    if (Radius != other.Radius) return false;
    if (Magnitude != other.Magnitude) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (AffectRagdolls != other.AffectRagdolls) return false;
    if (EffectName != other.EffectName) return false;
    if (ExplosionType != other.ExplosionType) return false;
    if (CreateDebris != other.CreateDebris) return false;
    if (!object.Equals(DebrisOrigin, other.DebrisOrigin)) return false;
    if (DebrisSurfaceprop != other.DebrisSurfaceprop) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasFramerate) hash ^= Framerate.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (normal_ != null) hash ^= Normal.GetHashCode();
    if (HasMaterialtype) hash ^= Materialtype.GetHashCode();
    if (HasRadius) hash ^= Radius.GetHashCode();
    if (HasMagnitude) hash ^= Magnitude.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (HasAffectRagdolls) hash ^= AffectRagdolls.GetHashCode();
    if (HasEffectName) hash ^= EffectName.GetHashCode();
    if (HasExplosionType) hash ^= ExplosionType.GetHashCode();
    if (HasCreateDebris) hash ^= CreateDebris.GetHashCode();
    if (debrisOrigin_ != null) hash ^= DebrisOrigin.GetHashCode();
    if (HasDebrisSurfaceprop) hash ^= DebrisSurfaceprop.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasFramerate) {
      output.WriteRawTag(16);
      output.WriteUInt32(Framerate);
    }
    if (HasFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(Flags);
    }
    if (normal_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Normal);
    }
    if (HasMaterialtype) {
      output.WriteRawTag(40);
      output.WriteUInt32(Materialtype);
    }
    if (HasRadius) {
      output.WriteRawTag(48);
      output.WriteUInt32(Radius);
    }
    if (HasMagnitude) {
      output.WriteRawTag(56);
      output.WriteUInt32(Magnitude);
    }
    if (HasScale) {
      output.WriteRawTag(69);
      output.WriteFloat(Scale);
    }
    if (HasAffectRagdolls) {
      output.WriteRawTag(72);
      output.WriteBool(AffectRagdolls);
    }
    if (HasEffectName) {
      output.WriteRawTag(82);
      output.WriteString(EffectName);
    }
    if (HasExplosionType) {
      output.WriteRawTag(88);
      output.WriteUInt32(ExplosionType);
    }
    if (HasCreateDebris) {
      output.WriteRawTag(96);
      output.WriteBool(CreateDebris);
    }
    if (debrisOrigin_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(DebrisOrigin);
    }
    if (HasDebrisSurfaceprop) {
      output.WriteRawTag(117);
      output.WriteFixed32(DebrisSurfaceprop);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasFramerate) {
      output.WriteRawTag(16);
      output.WriteUInt32(Framerate);
    }
    if (HasFlags) {
      output.WriteRawTag(24);
      output.WriteUInt32(Flags);
    }
    if (normal_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Normal);
    }
    if (HasMaterialtype) {
      output.WriteRawTag(40);
      output.WriteUInt32(Materialtype);
    }
    if (HasRadius) {
      output.WriteRawTag(48);
      output.WriteUInt32(Radius);
    }
    if (HasMagnitude) {
      output.WriteRawTag(56);
      output.WriteUInt32(Magnitude);
    }
    if (HasScale) {
      output.WriteRawTag(69);
      output.WriteFloat(Scale);
    }
    if (HasAffectRagdolls) {
      output.WriteRawTag(72);
      output.WriteBool(AffectRagdolls);
    }
    if (HasEffectName) {
      output.WriteRawTag(82);
      output.WriteString(EffectName);
    }
    if (HasExplosionType) {
      output.WriteRawTag(88);
      output.WriteUInt32(ExplosionType);
    }
    if (HasCreateDebris) {
      output.WriteRawTag(96);
      output.WriteBool(CreateDebris);
    }
    if (debrisOrigin_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(DebrisOrigin);
    }
    if (HasDebrisSurfaceprop) {
      output.WriteRawTag(117);
      output.WriteFixed32(DebrisSurfaceprop);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasFramerate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Framerate);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (normal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
    }
    if (HasMaterialtype) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Materialtype);
    }
    if (HasRadius) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Radius);
    }
    if (HasMagnitude) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Magnitude);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (HasAffectRagdolls) {
      size += 1 + 1;
    }
    if (HasEffectName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EffectName);
    }
    if (HasExplosionType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExplosionType);
    }
    if (HasCreateDebris) {
      size += 1 + 1;
    }
    if (debrisOrigin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DebrisOrigin);
    }
    if (HasDebrisSurfaceprop) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEExplosion other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasFramerate) {
      Framerate = other.Framerate;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.normal_ != null) {
      if (normal_ == null) {
        Normal = new global::CMsgVector();
      }
      Normal.MergeFrom(other.Normal);
    }
    if (other.HasMaterialtype) {
      Materialtype = other.Materialtype;
    }
    if (other.HasRadius) {
      Radius = other.Radius;
    }
    if (other.HasMagnitude) {
      Magnitude = other.Magnitude;
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.HasAffectRagdolls) {
      AffectRagdolls = other.AffectRagdolls;
    }
    if (other.HasEffectName) {
      EffectName = other.EffectName;
    }
    if (other.HasExplosionType) {
      ExplosionType = other.ExplosionType;
    }
    if (other.HasCreateDebris) {
      CreateDebris = other.CreateDebris;
    }
    if (other.debrisOrigin_ != null) {
      if (debrisOrigin_ == null) {
        DebrisOrigin = new global::CMsgVector();
      }
      DebrisOrigin.MergeFrom(other.DebrisOrigin);
    }
    if (other.HasDebrisSurfaceprop) {
      DebrisSurfaceprop = other.DebrisSurfaceprop;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Framerate = input.ReadUInt32();
          break;
        }
        case 24: {
          Flags = input.ReadUInt32();
          break;
        }
        case 34: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 40: {
          Materialtype = input.ReadUInt32();
          break;
        }
        case 48: {
          Radius = input.ReadUInt32();
          break;
        }
        case 56: {
          Magnitude = input.ReadUInt32();
          break;
        }
        case 69: {
          Scale = input.ReadFloat();
          break;
        }
        case 72: {
          AffectRagdolls = input.ReadBool();
          break;
        }
        case 82: {
          EffectName = input.ReadString();
          break;
        }
        case 88: {
          ExplosionType = input.ReadUInt32();
          break;
        }
        case 96: {
          CreateDebris = input.ReadBool();
          break;
        }
        case 106: {
          if (debrisOrigin_ == null) {
            DebrisOrigin = new global::CMsgVector();
          }
          input.ReadMessage(DebrisOrigin);
          break;
        }
        case 117: {
          DebrisSurfaceprop = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Framerate = input.ReadUInt32();
          break;
        }
        case 24: {
          Flags = input.ReadUInt32();
          break;
        }
        case 34: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 40: {
          Materialtype = input.ReadUInt32();
          break;
        }
        case 48: {
          Radius = input.ReadUInt32();
          break;
        }
        case 56: {
          Magnitude = input.ReadUInt32();
          break;
        }
        case 69: {
          Scale = input.ReadFloat();
          break;
        }
        case 72: {
          AffectRagdolls = input.ReadBool();
          break;
        }
        case 82: {
          EffectName = input.ReadString();
          break;
        }
        case 88: {
          ExplosionType = input.ReadUInt32();
          break;
        }
        case 96: {
          CreateDebris = input.ReadBool();
          break;
        }
        case 106: {
          if (debrisOrigin_ == null) {
            DebrisOrigin = new global::CMsgVector();
          }
          input.ReadMessage(DebrisOrigin);
          break;
        }
        case 117: {
          DebrisSurfaceprop = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEDust : pb::IMessage<CMsgTEDust>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEDust> _parser = new pb::MessageParser<CMsgTEDust>(() => new CMsgTEDust());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEDust> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDust() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDust(CMsgTEDust other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    size_ = other.size_;
    speed_ = other.speed_;
    direction_ = other.direction_ != null ? other.direction_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEDust Clone() {
    return new CMsgTEDust(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "size" field.</summary>
  public const int SizeFieldNumber = 2;
  private readonly static float SizeDefaultValue = 0F;

  private float size_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Size {
    get { if ((_hasBits0 & 1) != 0) { return size_; } else { return SizeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      size_ = value;
    }
  }
  /// <summary>Gets whether the "size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSize {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSize() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 3;
  private readonly static float SpeedDefaultValue = 0F;

  private float speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Speed {
    get { if ((_hasBits0 & 2) != 0) { return speed_; } else { return SpeedDefaultValue; } }
    set {
      _hasBits0 |= 2;
      speed_ = value;
    }
  }
  /// <summary>Gets whether the "speed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpeed {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "speed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpeed() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 4;
  private global::CMsgVector direction_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEDust);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEDust other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Size, other.Size)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Speed, other.Speed)) return false;
    if (!object.Equals(Direction, other.Direction)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasSize) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Size);
    if (HasSpeed) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Speed);
    if (direction_ != null) hash ^= Direction.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasSize) {
      output.WriteRawTag(21);
      output.WriteFloat(Size);
    }
    if (HasSpeed) {
      output.WriteRawTag(29);
      output.WriteFloat(Speed);
    }
    if (direction_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Direction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasSize) {
      output.WriteRawTag(21);
      output.WriteFloat(Size);
    }
    if (HasSpeed) {
      output.WriteRawTag(29);
      output.WriteFloat(Speed);
    }
    if (direction_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Direction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasSize) {
      size += 1 + 4;
    }
    if (HasSpeed) {
      size += 1 + 4;
    }
    if (direction_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEDust other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasSize) {
      Size = other.Size;
    }
    if (other.HasSpeed) {
      Speed = other.Speed;
    }
    if (other.direction_ != null) {
      if (direction_ == null) {
        Direction = new global::CMsgVector();
      }
      Direction.MergeFrom(other.Direction);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Size = input.ReadFloat();
          break;
        }
        case 29: {
          Speed = input.ReadFloat();
          break;
        }
        case 34: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Size = input.ReadFloat();
          break;
        }
        case 29: {
          Speed = input.ReadFloat();
          break;
        }
        case 34: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTELargeFunnel : pb::IMessage<CMsgTELargeFunnel>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTELargeFunnel> _parser = new pb::MessageParser<CMsgTELargeFunnel>(() => new CMsgTELargeFunnel());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTELargeFunnel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTELargeFunnel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTELargeFunnel(CMsgTELargeFunnel other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    reversed_ = other.reversed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTELargeFunnel Clone() {
    return new CMsgTELargeFunnel(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "reversed" field.</summary>
  public const int ReversedFieldNumber = 2;
  private readonly static uint ReversedDefaultValue = 0;

  private uint reversed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Reversed {
    get { if ((_hasBits0 & 1) != 0) { return reversed_; } else { return ReversedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reversed_ = value;
    }
  }
  /// <summary>Gets whether the "reversed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReversed {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reversed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReversed() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTELargeFunnel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTELargeFunnel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (Reversed != other.Reversed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasReversed) hash ^= Reversed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasReversed) {
      output.WriteRawTag(16);
      output.WriteUInt32(Reversed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasReversed) {
      output.WriteRawTag(16);
      output.WriteUInt32(Reversed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasReversed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Reversed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTELargeFunnel other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasReversed) {
      Reversed = other.Reversed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Reversed = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Reversed = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTESparks : pb::IMessage<CMsgTESparks>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTESparks> _parser = new pb::MessageParser<CMsgTESparks>(() => new CMsgTESparks());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTESparks> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESparks() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESparks(CMsgTESparks other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    magnitude_ = other.magnitude_;
    length_ = other.length_;
    direction_ = other.direction_ != null ? other.direction_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESparks Clone() {
    return new CMsgTESparks(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "magnitude" field.</summary>
  public const int MagnitudeFieldNumber = 2;
  private readonly static uint MagnitudeDefaultValue = 0;

  private uint magnitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Magnitude {
    get { if ((_hasBits0 & 1) != 0) { return magnitude_; } else { return MagnitudeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      magnitude_ = value;
    }
  }
  /// <summary>Gets whether the "magnitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMagnitude {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "magnitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMagnitude() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "length" field.</summary>
  public const int LengthFieldNumber = 3;
  private readonly static uint LengthDefaultValue = 0;

  private uint length_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Length {
    get { if ((_hasBits0 & 2) != 0) { return length_; } else { return LengthDefaultValue; } }
    set {
      _hasBits0 |= 2;
      length_ = value;
    }
  }
  /// <summary>Gets whether the "length" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLength {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "length" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLength() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 4;
  private global::CMsgVector direction_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTESparks);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTESparks other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (Magnitude != other.Magnitude) return false;
    if (Length != other.Length) return false;
    if (!object.Equals(Direction, other.Direction)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasMagnitude) hash ^= Magnitude.GetHashCode();
    if (HasLength) hash ^= Length.GetHashCode();
    if (direction_ != null) hash ^= Direction.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasMagnitude) {
      output.WriteRawTag(16);
      output.WriteUInt32(Magnitude);
    }
    if (HasLength) {
      output.WriteRawTag(24);
      output.WriteUInt32(Length);
    }
    if (direction_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Direction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasMagnitude) {
      output.WriteRawTag(16);
      output.WriteUInt32(Magnitude);
    }
    if (HasLength) {
      output.WriteRawTag(24);
      output.WriteUInt32(Length);
    }
    if (direction_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(Direction);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasMagnitude) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Magnitude);
    }
    if (HasLength) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
    }
    if (direction_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTESparks other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasMagnitude) {
      Magnitude = other.Magnitude;
    }
    if (other.HasLength) {
      Length = other.Length;
    }
    if (other.direction_ != null) {
      if (direction_ == null) {
        Direction = new global::CMsgVector();
      }
      Direction.MergeFrom(other.Direction);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Magnitude = input.ReadUInt32();
          break;
        }
        case 24: {
          Length = input.ReadUInt32();
          break;
        }
        case 34: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Magnitude = input.ReadUInt32();
          break;
        }
        case 24: {
          Length = input.ReadUInt32();
          break;
        }
        case 34: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEPhysicsProp : pb::IMessage<CMsgTEPhysicsProp>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEPhysicsProp> _parser = new pb::MessageParser<CMsgTEPhysicsProp>(() => new CMsgTEPhysicsProp());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEPhysicsProp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPhysicsProp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPhysicsProp(CMsgTEPhysicsProp other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    velocity_ = other.velocity_ != null ? other.velocity_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    skin_ = other.skin_;
    flags_ = other.flags_;
    effects_ = other.effects_;
    color_ = other.color_;
    modelindex_ = other.modelindex_;
    unusedBreakmodelsnottomake_ = other.unusedBreakmodelsnottomake_;
    scale_ = other.scale_;
    dmgpos_ = other.dmgpos_ != null ? other.dmgpos_.Clone() : null;
    dmgdir_ = other.dmgdir_ != null ? other.dmgdir_.Clone() : null;
    dmgtype_ = other.dmgtype_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPhysicsProp Clone() {
    return new CMsgTEPhysicsProp(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "velocity" field.</summary>
  public const int VelocityFieldNumber = 2;
  private global::CMsgVector velocity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Velocity {
    get { return velocity_; }
    set {
      velocity_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 3;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "skin" field.</summary>
  public const int SkinFieldNumber = 4;
  private readonly static uint SkinDefaultValue = 0;

  private uint skin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Skin {
    get { if ((_hasBits0 & 1) != 0) { return skin_; } else { return SkinDefaultValue; } }
    set {
      _hasBits0 |= 1;
      skin_ = value;
    }
  }
  /// <summary>Gets whether the "skin" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSkin {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "skin" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSkin() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 5;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "effects" field.</summary>
  public const int EffectsFieldNumber = 6;
  private readonly static uint EffectsDefaultValue = 0;

  private uint effects_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Effects {
    get { if ((_hasBits0 & 4) != 0) { return effects_; } else { return EffectsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      effects_ = value;
    }
  }
  /// <summary>Gets whether the "effects" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEffects {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "effects" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEffects() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "color" field.</summary>
  public const int ColorFieldNumber = 7;
  private readonly static uint ColorDefaultValue = 0;

  private uint color_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Color {
    get { if ((_hasBits0 & 8) != 0) { return color_; } else { return ColorDefaultValue; } }
    set {
      _hasBits0 |= 8;
      color_ = value;
    }
  }
  /// <summary>Gets whether the "color" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasColor {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "color" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearColor() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "modelindex" field.</summary>
  public const int ModelindexFieldNumber = 8;
  private readonly static ulong ModelindexDefaultValue = 0UL;

  private ulong modelindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Modelindex {
    get { if ((_hasBits0 & 16) != 0) { return modelindex_; } else { return ModelindexDefaultValue; } }
    set {
      _hasBits0 |= 16;
      modelindex_ = value;
    }
  }
  /// <summary>Gets whether the "modelindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasModelindex {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "modelindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearModelindex() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "unused_breakmodelsnottomake" field.</summary>
  public const int UnusedBreakmodelsnottomakeFieldNumber = 9;
  private readonly static uint UnusedBreakmodelsnottomakeDefaultValue = 0;

  private uint unusedBreakmodelsnottomake_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UnusedBreakmodelsnottomake {
    get { if ((_hasBits0 & 32) != 0) { return unusedBreakmodelsnottomake_; } else { return UnusedBreakmodelsnottomakeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      unusedBreakmodelsnottomake_ = value;
    }
  }
  /// <summary>Gets whether the "unused_breakmodelsnottomake" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUnusedBreakmodelsnottomake {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "unused_breakmodelsnottomake" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUnusedBreakmodelsnottomake() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 10;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 64) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 64;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "dmgpos" field.</summary>
  public const int DmgposFieldNumber = 11;
  private global::CMsgVector dmgpos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Dmgpos {
    get { return dmgpos_; }
    set {
      dmgpos_ = value;
    }
  }

  /// <summary>Field number for the "dmgdir" field.</summary>
  public const int DmgdirFieldNumber = 12;
  private global::CMsgVector dmgdir_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Dmgdir {
    get { return dmgdir_; }
    set {
      dmgdir_ = value;
    }
  }

  /// <summary>Field number for the "dmgtype" field.</summary>
  public const int DmgtypeFieldNumber = 13;
  private readonly static int DmgtypeDefaultValue = 0;

  private int dmgtype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Dmgtype {
    get { if ((_hasBits0 & 128) != 0) { return dmgtype_; } else { return DmgtypeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      dmgtype_ = value;
    }
  }
  /// <summary>Gets whether the "dmgtype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDmgtype {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "dmgtype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDmgtype() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEPhysicsProp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEPhysicsProp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Velocity, other.Velocity)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (Skin != other.Skin) return false;
    if (Flags != other.Flags) return false;
    if (Effects != other.Effects) return false;
    if (Color != other.Color) return false;
    if (Modelindex != other.Modelindex) return false;
    if (UnusedBreakmodelsnottomake != other.UnusedBreakmodelsnottomake) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (!object.Equals(Dmgpos, other.Dmgpos)) return false;
    if (!object.Equals(Dmgdir, other.Dmgdir)) return false;
    if (Dmgtype != other.Dmgtype) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (velocity_ != null) hash ^= Velocity.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasSkin) hash ^= Skin.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasEffects) hash ^= Effects.GetHashCode();
    if (HasColor) hash ^= Color.GetHashCode();
    if (HasModelindex) hash ^= Modelindex.GetHashCode();
    if (HasUnusedBreakmodelsnottomake) hash ^= UnusedBreakmodelsnottomake.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (dmgpos_ != null) hash ^= Dmgpos.GetHashCode();
    if (dmgdir_ != null) hash ^= Dmgdir.GetHashCode();
    if (HasDmgtype) hash ^= Dmgtype.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (velocity_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Velocity);
    }
    if (angles_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Angles);
    }
    if (HasSkin) {
      output.WriteRawTag(37);
      output.WriteFixed32(Skin);
    }
    if (HasFlags) {
      output.WriteRawTag(40);
      output.WriteUInt32(Flags);
    }
    if (HasEffects) {
      output.WriteRawTag(48);
      output.WriteUInt32(Effects);
    }
    if (HasColor) {
      output.WriteRawTag(61);
      output.WriteFixed32(Color);
    }
    if (HasModelindex) {
      output.WriteRawTag(65);
      output.WriteFixed64(Modelindex);
    }
    if (HasUnusedBreakmodelsnottomake) {
      output.WriteRawTag(72);
      output.WriteUInt32(UnusedBreakmodelsnottomake);
    }
    if (HasScale) {
      output.WriteRawTag(85);
      output.WriteFloat(Scale);
    }
    if (dmgpos_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Dmgpos);
    }
    if (dmgdir_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Dmgdir);
    }
    if (HasDmgtype) {
      output.WriteRawTag(104);
      output.WriteInt32(Dmgtype);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (velocity_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Velocity);
    }
    if (angles_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Angles);
    }
    if (HasSkin) {
      output.WriteRawTag(37);
      output.WriteFixed32(Skin);
    }
    if (HasFlags) {
      output.WriteRawTag(40);
      output.WriteUInt32(Flags);
    }
    if (HasEffects) {
      output.WriteRawTag(48);
      output.WriteUInt32(Effects);
    }
    if (HasColor) {
      output.WriteRawTag(61);
      output.WriteFixed32(Color);
    }
    if (HasModelindex) {
      output.WriteRawTag(65);
      output.WriteFixed64(Modelindex);
    }
    if (HasUnusedBreakmodelsnottomake) {
      output.WriteRawTag(72);
      output.WriteUInt32(UnusedBreakmodelsnottomake);
    }
    if (HasScale) {
      output.WriteRawTag(85);
      output.WriteFloat(Scale);
    }
    if (dmgpos_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(Dmgpos);
    }
    if (dmgdir_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(Dmgdir);
    }
    if (HasDmgtype) {
      output.WriteRawTag(104);
      output.WriteInt32(Dmgtype);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (velocity_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Velocity);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasSkin) {
      size += 1 + 4;
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (HasEffects) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Effects);
    }
    if (HasColor) {
      size += 1 + 4;
    }
    if (HasModelindex) {
      size += 1 + 8;
    }
    if (HasUnusedBreakmodelsnottomake) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UnusedBreakmodelsnottomake);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (dmgpos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dmgpos);
    }
    if (dmgdir_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dmgdir);
    }
    if (HasDmgtype) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dmgtype);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEPhysicsProp other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.velocity_ != null) {
      if (velocity_ == null) {
        Velocity = new global::CMsgVector();
      }
      Velocity.MergeFrom(other.Velocity);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasSkin) {
      Skin = other.Skin;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasEffects) {
      Effects = other.Effects;
    }
    if (other.HasColor) {
      Color = other.Color;
    }
    if (other.HasModelindex) {
      Modelindex = other.Modelindex;
    }
    if (other.HasUnusedBreakmodelsnottomake) {
      UnusedBreakmodelsnottomake = other.UnusedBreakmodelsnottomake;
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.dmgpos_ != null) {
      if (dmgpos_ == null) {
        Dmgpos = new global::CMsgVector();
      }
      Dmgpos.MergeFrom(other.Dmgpos);
    }
    if (other.dmgdir_ != null) {
      if (dmgdir_ == null) {
        Dmgdir = new global::CMsgVector();
      }
      Dmgdir.MergeFrom(other.Dmgdir);
    }
    if (other.HasDmgtype) {
      Dmgtype = other.Dmgtype;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (velocity_ == null) {
            Velocity = new global::CMsgVector();
          }
          input.ReadMessage(Velocity);
          break;
        }
        case 26: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 37: {
          Skin = input.ReadFixed32();
          break;
        }
        case 40: {
          Flags = input.ReadUInt32();
          break;
        }
        case 48: {
          Effects = input.ReadUInt32();
          break;
        }
        case 61: {
          Color = input.ReadFixed32();
          break;
        }
        case 65: {
          Modelindex = input.ReadFixed64();
          break;
        }
        case 72: {
          UnusedBreakmodelsnottomake = input.ReadUInt32();
          break;
        }
        case 85: {
          Scale = input.ReadFloat();
          break;
        }
        case 90: {
          if (dmgpos_ == null) {
            Dmgpos = new global::CMsgVector();
          }
          input.ReadMessage(Dmgpos);
          break;
        }
        case 98: {
          if (dmgdir_ == null) {
            Dmgdir = new global::CMsgVector();
          }
          input.ReadMessage(Dmgdir);
          break;
        }
        case 104: {
          Dmgtype = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (velocity_ == null) {
            Velocity = new global::CMsgVector();
          }
          input.ReadMessage(Velocity);
          break;
        }
        case 26: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 37: {
          Skin = input.ReadFixed32();
          break;
        }
        case 40: {
          Flags = input.ReadUInt32();
          break;
        }
        case 48: {
          Effects = input.ReadUInt32();
          break;
        }
        case 61: {
          Color = input.ReadFixed32();
          break;
        }
        case 65: {
          Modelindex = input.ReadFixed64();
          break;
        }
        case 72: {
          UnusedBreakmodelsnottomake = input.ReadUInt32();
          break;
        }
        case 85: {
          Scale = input.ReadFloat();
          break;
        }
        case 90: {
          if (dmgpos_ == null) {
            Dmgpos = new global::CMsgVector();
          }
          input.ReadMessage(Dmgpos);
          break;
        }
        case 98: {
          if (dmgdir_ == null) {
            Dmgdir = new global::CMsgVector();
          }
          input.ReadMessage(Dmgdir);
          break;
        }
        case 104: {
          Dmgtype = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEPlayerDecal : pb::IMessage<CMsgTEPlayerDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEPlayerDecal> _parser = new pb::MessageParser<CMsgTEPlayerDecal>(() => new CMsgTEPlayerDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEPlayerDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerDecal(CMsgTEPlayerDecal other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    player_ = other.player_;
    entity_ = other.entity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEPlayerDecal Clone() {
    return new CMsgTEPlayerDecal(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 2;
  private readonly static int PlayerDefaultValue = -1;

  private int player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Player {
    get { if ((_hasBits0 & 1) != 0) { return player_; } else { return PlayerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      player_ = value;
    }
  }
  /// <summary>Gets whether the "player" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayer() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "entity" field.</summary>
  public const int EntityFieldNumber = 3;
  private readonly static int EntityDefaultValue = -1;

  private int entity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Entity {
    get { if ((_hasBits0 & 2) != 0) { return entity_; } else { return EntityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      entity_ = value;
    }
  }
  /// <summary>Gets whether the "entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntity() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEPlayerDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEPlayerDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (Player != other.Player) return false;
    if (Entity != other.Entity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasPlayer) hash ^= Player.GetHashCode();
    if (HasEntity) hash ^= Entity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasPlayer) {
      output.WriteRawTag(16);
      output.WriteInt32(Player);
    }
    if (HasEntity) {
      output.WriteRawTag(24);
      output.WriteInt32(Entity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasPlayer) {
      output.WriteRawTag(16);
      output.WriteInt32(Player);
    }
    if (HasEntity) {
      output.WriteRawTag(24);
      output.WriteInt32(Entity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasPlayer) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Player);
    }
    if (HasEntity) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Entity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEPlayerDecal other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasPlayer) {
      Player = other.Player;
    }
    if (other.HasEntity) {
      Entity = other.Entity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Player = input.ReadInt32();
          break;
        }
        case 24: {
          Entity = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 16: {
          Player = input.ReadInt32();
          break;
        }
        case 24: {
          Entity = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEProjectedDecal : pb::IMessage<CMsgTEProjectedDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEProjectedDecal> _parser = new pb::MessageParser<CMsgTEProjectedDecal>(() => new CMsgTEProjectedDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEProjectedDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEProjectedDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEProjectedDecal(CMsgTEProjectedDecal other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    index_ = other.index_;
    distance_ = other.distance_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEProjectedDecal Clone() {
    return new CMsgTEProjectedDecal(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 2;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 3;
  private readonly static uint IndexDefaultValue = 0;

  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Index {
    get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      index_ = value;
    }
  }
  /// <summary>Gets whether the "index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "distance" field.</summary>
  public const int DistanceFieldNumber = 4;
  private readonly static float DistanceDefaultValue = 0F;

  private float distance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Distance {
    get { if ((_hasBits0 & 2) != 0) { return distance_; } else { return DistanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      distance_ = value;
    }
  }
  /// <summary>Gets whether the "distance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDistance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "distance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDistance() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEProjectedDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEProjectedDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (Index != other.Index) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Distance, other.Distance)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasIndex) hash ^= Index.GetHashCode();
    if (HasDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Distance);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasIndex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Index);
    }
    if (HasDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasIndex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Index);
    }
    if (HasDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(Distance);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (HasDistance) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEProjectedDecal other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasIndex) {
      Index = other.Index;
    }
    if (other.HasDistance) {
      Distance = other.Distance;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 24: {
          Index = input.ReadUInt32();
          break;
        }
        case 37: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 24: {
          Index = input.ReadUInt32();
          break;
        }
        case 37: {
          Distance = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTESmoke : pb::IMessage<CMsgTESmoke>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTESmoke> _parser = new pb::MessageParser<CMsgTESmoke>(() => new CMsgTESmoke());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTESmoke> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESmoke() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESmoke(CMsgTESmoke other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    scale_ = other.scale_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTESmoke Clone() {
    return new CMsgTESmoke(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 2;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 1) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTESmoke);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTESmoke other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTESmoke other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTEWorldDecal : pb::IMessage<CMsgTEWorldDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTEWorldDecal> _parser = new pb::MessageParser<CMsgTEWorldDecal>(() => new CMsgTEWorldDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTEWorldDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TeReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEWorldDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEWorldDecal(CMsgTEWorldDecal other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    normal_ = other.normal_ != null ? other.normal_.Clone() : null;
    index_ = other.index_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTEWorldDecal Clone() {
    return new CMsgTEWorldDecal(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "normal" field.</summary>
  public const int NormalFieldNumber = 2;
  private global::CMsgVector normal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Normal {
    get { return normal_; }
    set {
      normal_ = value;
    }
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 3;
  private readonly static uint IndexDefaultValue = 0;

  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Index {
    get { if ((_hasBits0 & 1) != 0) { return index_; } else { return IndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      index_ = value;
    }
  }
  /// <summary>Gets whether the "index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndex() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTEWorldDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTEWorldDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Normal, other.Normal)) return false;
    if (Index != other.Index) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (normal_ != null) hash ^= Normal.GetHashCode();
    if (HasIndex) hash ^= Index.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (HasIndex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (normal_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Normal);
    }
    if (HasIndex) {
      output.WriteRawTag(24);
      output.WriteUInt32(Index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (normal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
    }
    if (HasIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTEWorldDecal other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.normal_ != null) {
      if (normal_ == null) {
        Normal = new global::CMsgVector();
      }
      Normal.MergeFrom(other.Normal);
    }
    if (other.HasIndex) {
      Index = other.Index;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 24: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (normal_ == null) {
            Normal = new global::CMsgVector();
          }
          input.ReadMessage(Normal);
          break;
        }
        case 24: {
          Index = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
