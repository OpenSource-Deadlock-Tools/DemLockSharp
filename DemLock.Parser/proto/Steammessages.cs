// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from steammessages.proto</summary>
public static partial class SteammessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for steammessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static SteammessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNzdGVhbW1lc3NhZ2VzLnByb3RvGiBnb29nbGUvcHJvdG9idWYvZGVzY3Jp",
          "cHRvci5wcm90byLxAgoSQ01zZ1Byb3RvQnVmSGVhZGVyEhcKD2NsaWVudF9z",
          "dGVhbV9pZBgBIAEoBhIZChFjbGllbnRfc2Vzc2lvbl9pZBgCIAEoBRIVCg1z",
          "b3VyY2VfYXBwX2lkGAMgASgNEisKDWpvYl9pZF9zb3VyY2UYCiABKAY6FDE4",
          "NDQ2NzQ0MDczNzA5NTUxNjE1EisKDWpvYl9pZF90YXJnZXQYCyABKAY6FDE4",
          "NDQ2NzQ0MDczNzA5NTUxNjE1EhcKD3RhcmdldF9qb2JfbmFtZRgMIAEoCRIS",
          "CgdlcmVzdWx0GA0gASgFOgEyEhUKDWVycm9yX21lc3NhZ2UYDiABKAkSRAoK",
          "Z2NfbXNnX3NyYxjIASABKA4yES5HQ1Byb3RvQnVmTXNnU3JjOhxHQ1Byb3Rv",
          "QnVmTXNnU3JjX1Vuc3BlY2lmaWVkEiAKE2djX2Rpcl9pbmRleF9zb3VyY2UY",
          "yQEgASgFOgItMToKgKYdgAKIph2ACCJMCh5DR0NTeXN0ZW1Nc2dfR2V0QWNj",
          "b3VudERldGFpbHMSDwoHc3RlYW1pZBgBIAEoBhINCgVhcHBpZBgCIAEoDToK",
          "gKYdgAGIph2ABCKMCAonQ0dDU3lzdGVtTXNnX0dldEFjY291bnREZXRhaWxz",
          "X1Jlc3BvbnNlEh0KEmVyZXN1bHRfZGVwcmVjYXRlZBgBIAEoDToBMhIUCgxh",
          "Y2NvdW50X25hbWUYAiABKAkSFAoMcGVyc29uYV9uYW1lGAMgASgJEhoKEmlz",
          "X3Byb2ZpbGVfY3JlYXRlZBgaIAEoCBIZChFpc19wcm9maWxlX3B1YmxpYxgE",
          "IAEoCBIbChNpc19pbnZlbnRvcnlfcHVibGljGAUgASgIEhUKDWlzX3ZhY19i",
          "YW5uZWQYByABKAgSFQoNaXNfY3liZXJfY2FmZRgIIAEoCBIZChFpc19zY2hv",
          "b2xfYWNjb3VudBgJIAEoCBISCgppc19saW1pdGVkGAogASgIEhUKDWlzX3N1",
          "YnNjcmliZWQYCyABKAgSDwoHcGFja2FnZRgMIAEoDRIdChVpc19mcmVlX3Ry",
          "aWFsX2FjY291bnQYDSABKAgSHQoVZnJlZV90cmlhbF9leHBpcmF0aW9uGA4g",
          "ASgNEhcKD2lzX2xvd192aW9sZW5jZRgPIAEoCBIeChZpc19hY2NvdW50X2xv",
          "Y2tlZF9kb3duGBAgASgIEhsKE2lzX2NvbW11bml0eV9iYW5uZWQYESABKAgS",
          "FwoPaXNfdHJhZGVfYmFubmVkGBIgASgIEhwKFHRyYWRlX2Jhbl9leHBpcmF0",
          "aW9uGBMgASgNEhEKCWFjY291bnRpZBgUIAEoDRIbChNzdXNwZW5zaW9uX2Vu",
          "ZF90aW1lGBUgASgNEhAKCGN1cnJlbmN5GBYgASgJEhMKC3N0ZWFtX2xldmVs",
          "GBcgASgNEhQKDGZyaWVuZF9jb3VudBgYIAEoDRIdChVhY2NvdW50X2NyZWF0",
          "aW9uX3RpbWUYGSABKA0SHQoVaXNfc3RlYW1ndWFyZF9lbmFibGVkGBsgASgI",
          "EhkKEWlzX3Bob25lX3ZlcmlmaWVkGBwgASgIEiIKGmlzX3R3b19mYWN0b3Jf",
          "YXV0aF9lbmFibGVkGB0gASgIEh8KF3R3b19mYWN0b3JfZW5hYmxlZF90aW1l",
          "GB4gASgNEh8KF3Bob25lX3ZlcmlmaWNhdGlvbl90aW1lGB8gASgNEhAKCHBo",
          "b25lX2lkGCEgASgEEhwKFGlzX3Bob25lX2lkZW50aWZ5aW5nGCIgASgIEhoK",
          "EnJ0X2lkZW50aXR5X2xpbmtlZBgjIAEoDRIVCg1ydF9iaXJ0aF9kYXRlGCQg",
          "ASgNEhgKEHR4bl9jb3VudHJ5X2NvZGUYJSABKAkSHgoWaGFzX2FjY2VwdGVk",
          "X2NoaW5hX3NzYRgmIAEoCBIdChVpc19iYW5uZWRfc3RlYW1fY2hpbmEYJyAB",
          "KAg6CoCmHYABiKYdgAQicAoPQ0lQTG9jYXRpb25JbmZvEgoKAmlwGAEgASgN",
          "EhAKCGxhdGl0dWRlGAIgASgCEhEKCWxvbmdpdHVkZRgDIAEoAhIPCgdjb3Vu",
          "dHJ5GAQgASgJEg0KBXN0YXRlGAUgASgJEgwKBGNpdHkYBiABKAkiPgobQ0dD",
          "TXNnR2V0SVBMb2NhdGlvblJlc3BvbnNlEh8KBWluZm9zGAEgAygLMhAuQ0lQ",
          "TG9jYXRpb25JbmZvKp0BCgtFR0NQbGF0Zm9ybRIWChJrX2VHQ1BsYXRmb3Jt",
          "X05vbmUQABIUChBrX2VHQ1BsYXRmb3JtX1BDEAESFQoRa19lR0NQbGF0Zm9y",
          "bV9NYWMQAhIXChNrX2VHQ1BsYXRmb3JtX0xpbnV4EAMSGQoVa19lR0NQbGF0",
          "Zm9ybV9BbmRyb2lkEAQSFQoRa19lR0NQbGF0Zm9ybV9pT1MQBSrbAQoQR0NQ",
          "cm90b0J1Zk1zZ1NyYxIgChxHQ1Byb3RvQnVmTXNnU3JjX1Vuc3BlY2lmaWVk",
          "EAASHwobR0NQcm90b0J1Zk1zZ1NyY19Gcm9tU3lzdGVtEAESIAocR0NQcm90",
          "b0J1Zk1zZ1NyY19Gcm9tU3RlYW1JRBACEhsKF0dDUHJvdG9CdWZNc2dTcmNf",
          "RnJvbUdDEAMSIAocR0NQcm90b0J1Zk1zZ1NyY19SZXBseVN5c3RlbRAEEiMK",
          "H0dDUHJvdG9CdWZNc2dTcmNfU3Bvb2ZlZFN0ZWFtSUQQBTo5CglrZXlfZmll",
          "bGQSHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRpb25zGODUAyABKAg6BWZh",
          "bHNlOkEKEm1zZ3Bvb2xfc29mdF9saW1pdBIfLmdvb2dsZS5wcm90b2J1Zi5N",
          "ZXNzYWdlT3B0aW9ucxjg1AMgASgFOgIzMjpCChJtc2dwb29sX2hhcmRfbGlt",
          "aXQSHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9wdGlvbnMY4dQDIAEoBToD",
          "Mzg0"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EGCPlatform), typeof(global::GCProtoBufMsgSrc), }, new pb::Extension[] { SteammessagesExtensions.KeyField, SteammessagesExtensions.MsgpoolSoftLimit, SteammessagesExtensions.MsgpoolHardLimit }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgProtoBufHeader), global::CMsgProtoBufHeader.Parser, new[]{ "ClientSteamId", "ClientSessionId", "SourceAppId", "JobIdSource", "JobIdTarget", "TargetJobName", "Eresult", "ErrorMessage", "GcMsgSrc", "GcDirIndexSource" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGCSystemMsg_GetAccountDetails), global::CGCSystemMsg_GetAccountDetails.Parser, new[]{ "Steamid", "Appid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGCSystemMsg_GetAccountDetails_Response), global::CGCSystemMsg_GetAccountDetails_Response.Parser, new[]{ "EresultDeprecated", "AccountName", "PersonaName", "IsProfileCreated", "IsProfilePublic", "IsInventoryPublic", "IsVacBanned", "IsCyberCafe", "IsSchoolAccount", "IsLimited", "IsSubscribed", "Package", "IsFreeTrialAccount", "FreeTrialExpiration", "IsLowViolence", "IsAccountLockedDown", "IsCommunityBanned", "IsTradeBanned", "TradeBanExpiration", "Accountid", "SuspensionEndTime", "Currency", "SteamLevel", "FriendCount", "AccountCreationTime", "IsSteamguardEnabled", "IsPhoneVerified", "IsTwoFactorAuthEnabled", "TwoFactorEnabledTime", "PhoneVerificationTime", "PhoneId", "IsPhoneIdentifying", "RtIdentityLinked", "RtBirthDate", "TxnCountryCode", "HasAcceptedChinaSsa", "IsBannedSteamChina" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CIPLocationInfo), global::CIPLocationInfo.Parser, new[]{ "Ip", "Latitude", "Longitude", "Country", "State", "City" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CGCMsgGetIPLocationResponse), global::CGCMsgGetIPLocationResponse.Parser, new[]{ "Infos" }, null, null, null, null)
        }));
  }
  #endregion

}
/// <summary>Holder for extension identifiers generated from the top level of steammessages.proto</summary>
public static partial class SteammessagesExtensions {
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool> KeyField =
    new pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool>(60000, pb::FieldCodec.ForBool(480000, false));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int> MsgpoolSoftLimit =
    new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int>(60000, pb::FieldCodec.ForInt32(480000, 32));
  public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int> MsgpoolHardLimit =
    new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, int>(60001, pb::FieldCodec.ForInt32(480008, 384));
}

#region Enums
public enum EGCPlatform {
  [pbr::OriginalName("k_eGCPlatform_None")] KEGcplatformNone = 0,
  [pbr::OriginalName("k_eGCPlatform_PC")] KEGcplatformPc = 1,
  [pbr::OriginalName("k_eGCPlatform_Mac")] KEGcplatformMac = 2,
  [pbr::OriginalName("k_eGCPlatform_Linux")] KEGcplatformLinux = 3,
  [pbr::OriginalName("k_eGCPlatform_Android")] KEGcplatformAndroid = 4,
  [pbr::OriginalName("k_eGCPlatform_iOS")] KEGcplatformIOs = 5,
}

public enum GCProtoBufMsgSrc {
  [pbr::OriginalName("GCProtoBufMsgSrc_Unspecified")] Unspecified = 0,
  [pbr::OriginalName("GCProtoBufMsgSrc_FromSystem")] FromSystem = 1,
  [pbr::OriginalName("GCProtoBufMsgSrc_FromSteamID")] FromSteamId = 2,
  [pbr::OriginalName("GCProtoBufMsgSrc_FromGC")] FromGc = 3,
  [pbr::OriginalName("GCProtoBufMsgSrc_ReplySystem")] ReplySystem = 4,
  [pbr::OriginalName("GCProtoBufMsgSrc_SpoofedSteamID")] SpoofedSteamId = 5,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgProtoBufHeader : pb::IMessage<CMsgProtoBufHeader>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgProtoBufHeader> _parser = new pb::MessageParser<CMsgProtoBufHeader>(() => new CMsgProtoBufHeader());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgProtoBufHeader> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader(CMsgProtoBufHeader other) : this() {
    _hasBits0 = other._hasBits0;
    clientSteamId_ = other.clientSteamId_;
    clientSessionId_ = other.clientSessionId_;
    sourceAppId_ = other.sourceAppId_;
    jobIdSource_ = other.jobIdSource_;
    jobIdTarget_ = other.jobIdTarget_;
    targetJobName_ = other.targetJobName_;
    eresult_ = other.eresult_;
    errorMessage_ = other.errorMessage_;
    gcMsgSrc_ = other.gcMsgSrc_;
    gcDirIndexSource_ = other.gcDirIndexSource_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgProtoBufHeader Clone() {
    return new CMsgProtoBufHeader(this);
  }

  /// <summary>Field number for the "client_steam_id" field.</summary>
  public const int ClientSteamIdFieldNumber = 1;
  private readonly static ulong ClientSteamIdDefaultValue = 0UL;

  private ulong clientSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ClientSteamId {
    get { if ((_hasBits0 & 1) != 0) { return clientSteamId_; } else { return ClientSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clientSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "client_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSteamId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "client_session_id" field.</summary>
  public const int ClientSessionIdFieldNumber = 2;
  private readonly static int ClientSessionIdDefaultValue = 0;

  private int clientSessionId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ClientSessionId {
    get { if ((_hasBits0 & 2) != 0) { return clientSessionId_; } else { return ClientSessionIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      clientSessionId_ = value;
    }
  }
  /// <summary>Gets whether the "client_session_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientSessionId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "client_session_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientSessionId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "source_app_id" field.</summary>
  public const int SourceAppIdFieldNumber = 3;
  private readonly static uint SourceAppIdDefaultValue = 0;

  private uint sourceAppId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SourceAppId {
    get { if ((_hasBits0 & 4) != 0) { return sourceAppId_; } else { return SourceAppIdDefaultValue; } }
    set {
      _hasBits0 |= 4;
      sourceAppId_ = value;
    }
  }
  /// <summary>Gets whether the "source_app_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSourceAppId {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "source_app_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSourceAppId() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "job_id_source" field.</summary>
  public const int JobIdSourceFieldNumber = 10;
  private readonly static ulong JobIdSourceDefaultValue = 18446744073709551615UL;

  private ulong jobIdSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong JobIdSource {
    get { if ((_hasBits0 & 8) != 0) { return jobIdSource_; } else { return JobIdSourceDefaultValue; } }
    set {
      _hasBits0 |= 8;
      jobIdSource_ = value;
    }
  }
  /// <summary>Gets whether the "job_id_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJobIdSource {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "job_id_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJobIdSource() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "job_id_target" field.</summary>
  public const int JobIdTargetFieldNumber = 11;
  private readonly static ulong JobIdTargetDefaultValue = 18446744073709551615UL;

  private ulong jobIdTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong JobIdTarget {
    get { if ((_hasBits0 & 16) != 0) { return jobIdTarget_; } else { return JobIdTargetDefaultValue; } }
    set {
      _hasBits0 |= 16;
      jobIdTarget_ = value;
    }
  }
  /// <summary>Gets whether the "job_id_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJobIdTarget {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "job_id_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJobIdTarget() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "target_job_name" field.</summary>
  public const int TargetJobNameFieldNumber = 12;
  private readonly static string TargetJobNameDefaultValue = "";

  private string targetJobName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TargetJobName {
    get { return targetJobName_ ?? TargetJobNameDefaultValue; }
    set {
      targetJobName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "target_job_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTargetJobName {
    get { return targetJobName_ != null; }
  }
  /// <summary>Clears the value of the "target_job_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTargetJobName() {
    targetJobName_ = null;
  }

  /// <summary>Field number for the "eresult" field.</summary>
  public const int EresultFieldNumber = 13;
  private readonly static int EresultDefaultValue = 2;

  private int eresult_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eresult {
    get { if ((_hasBits0 & 32) != 0) { return eresult_; } else { return EresultDefaultValue; } }
    set {
      _hasBits0 |= 32;
      eresult_ = value;
    }
  }
  /// <summary>Gets whether the "eresult" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresult {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "eresult" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresult() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "error_message" field.</summary>
  public const int ErrorMessageFieldNumber = 14;
  private readonly static string ErrorMessageDefaultValue = "";

  private string errorMessage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ErrorMessage {
    get { return errorMessage_ ?? ErrorMessageDefaultValue; }
    set {
      errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "error_message" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasErrorMessage {
    get { return errorMessage_ != null; }
  }
  /// <summary>Clears the value of the "error_message" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearErrorMessage() {
    errorMessage_ = null;
  }

  /// <summary>Field number for the "gc_msg_src" field.</summary>
  public const int GcMsgSrcFieldNumber = 200;
  private readonly static global::GCProtoBufMsgSrc GcMsgSrcDefaultValue = global::GCProtoBufMsgSrc.Unspecified;

  private global::GCProtoBufMsgSrc gcMsgSrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GCProtoBufMsgSrc GcMsgSrc {
    get { if ((_hasBits0 & 64) != 0) { return gcMsgSrc_; } else { return GcMsgSrcDefaultValue; } }
    set {
      _hasBits0 |= 64;
      gcMsgSrc_ = value;
    }
  }
  /// <summary>Gets whether the "gc_msg_src" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGcMsgSrc {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "gc_msg_src" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGcMsgSrc() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "gc_dir_index_source" field.</summary>
  public const int GcDirIndexSourceFieldNumber = 201;
  private readonly static int GcDirIndexSourceDefaultValue = -1;

  private int gcDirIndexSource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int GcDirIndexSource {
    get { if ((_hasBits0 & 128) != 0) { return gcDirIndexSource_; } else { return GcDirIndexSourceDefaultValue; } }
    set {
      _hasBits0 |= 128;
      gcDirIndexSource_ = value;
    }
  }
  /// <summary>Gets whether the "gc_dir_index_source" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGcDirIndexSource {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "gc_dir_index_source" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGcDirIndexSource() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgProtoBufHeader);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgProtoBufHeader other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientSteamId != other.ClientSteamId) return false;
    if (ClientSessionId != other.ClientSessionId) return false;
    if (SourceAppId != other.SourceAppId) return false;
    if (JobIdSource != other.JobIdSource) return false;
    if (JobIdTarget != other.JobIdTarget) return false;
    if (TargetJobName != other.TargetJobName) return false;
    if (Eresult != other.Eresult) return false;
    if (ErrorMessage != other.ErrorMessage) return false;
    if (GcMsgSrc != other.GcMsgSrc) return false;
    if (GcDirIndexSource != other.GcDirIndexSource) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasClientSteamId) hash ^= ClientSteamId.GetHashCode();
    if (HasClientSessionId) hash ^= ClientSessionId.GetHashCode();
    if (HasSourceAppId) hash ^= SourceAppId.GetHashCode();
    if (HasJobIdSource) hash ^= JobIdSource.GetHashCode();
    if (HasJobIdTarget) hash ^= JobIdTarget.GetHashCode();
    if (HasTargetJobName) hash ^= TargetJobName.GetHashCode();
    if (HasEresult) hash ^= Eresult.GetHashCode();
    if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
    if (HasGcMsgSrc) hash ^= GcMsgSrc.GetHashCode();
    if (HasGcDirIndexSource) hash ^= GcDirIndexSource.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasClientSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(ClientSteamId);
    }
    if (HasClientSessionId) {
      output.WriteRawTag(16);
      output.WriteInt32(ClientSessionId);
    }
    if (HasSourceAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(SourceAppId);
    }
    if (HasJobIdSource) {
      output.WriteRawTag(81);
      output.WriteFixed64(JobIdSource);
    }
    if (HasJobIdTarget) {
      output.WriteRawTag(89);
      output.WriteFixed64(JobIdTarget);
    }
    if (HasTargetJobName) {
      output.WriteRawTag(98);
      output.WriteString(TargetJobName);
    }
    if (HasEresult) {
      output.WriteRawTag(104);
      output.WriteInt32(Eresult);
    }
    if (HasErrorMessage) {
      output.WriteRawTag(114);
      output.WriteString(ErrorMessage);
    }
    if (HasGcMsgSrc) {
      output.WriteRawTag(192, 12);
      output.WriteEnum((int) GcMsgSrc);
    }
    if (HasGcDirIndexSource) {
      output.WriteRawTag(200, 12);
      output.WriteInt32(GcDirIndexSource);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasClientSteamId) {
      output.WriteRawTag(9);
      output.WriteFixed64(ClientSteamId);
    }
    if (HasClientSessionId) {
      output.WriteRawTag(16);
      output.WriteInt32(ClientSessionId);
    }
    if (HasSourceAppId) {
      output.WriteRawTag(24);
      output.WriteUInt32(SourceAppId);
    }
    if (HasJobIdSource) {
      output.WriteRawTag(81);
      output.WriteFixed64(JobIdSource);
    }
    if (HasJobIdTarget) {
      output.WriteRawTag(89);
      output.WriteFixed64(JobIdTarget);
    }
    if (HasTargetJobName) {
      output.WriteRawTag(98);
      output.WriteString(TargetJobName);
    }
    if (HasEresult) {
      output.WriteRawTag(104);
      output.WriteInt32(Eresult);
    }
    if (HasErrorMessage) {
      output.WriteRawTag(114);
      output.WriteString(ErrorMessage);
    }
    if (HasGcMsgSrc) {
      output.WriteRawTag(192, 12);
      output.WriteEnum((int) GcMsgSrc);
    }
    if (HasGcDirIndexSource) {
      output.WriteRawTag(200, 12);
      output.WriteInt32(GcDirIndexSource);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasClientSteamId) {
      size += 1 + 8;
    }
    if (HasClientSessionId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientSessionId);
    }
    if (HasSourceAppId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceAppId);
    }
    if (HasJobIdSource) {
      size += 1 + 8;
    }
    if (HasJobIdTarget) {
      size += 1 + 8;
    }
    if (HasTargetJobName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetJobName);
    }
    if (HasEresult) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eresult);
    }
    if (HasErrorMessage) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
    }
    if (HasGcMsgSrc) {
      size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) GcMsgSrc);
    }
    if (HasGcDirIndexSource) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(GcDirIndexSource);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgProtoBufHeader other) {
    if (other == null) {
      return;
    }
    if (other.HasClientSteamId) {
      ClientSteamId = other.ClientSteamId;
    }
    if (other.HasClientSessionId) {
      ClientSessionId = other.ClientSessionId;
    }
    if (other.HasSourceAppId) {
      SourceAppId = other.SourceAppId;
    }
    if (other.HasJobIdSource) {
      JobIdSource = other.JobIdSource;
    }
    if (other.HasJobIdTarget) {
      JobIdTarget = other.JobIdTarget;
    }
    if (other.HasTargetJobName) {
      TargetJobName = other.TargetJobName;
    }
    if (other.HasEresult) {
      Eresult = other.Eresult;
    }
    if (other.HasErrorMessage) {
      ErrorMessage = other.ErrorMessage;
    }
    if (other.HasGcMsgSrc) {
      GcMsgSrc = other.GcMsgSrc;
    }
    if (other.HasGcDirIndexSource) {
      GcDirIndexSource = other.GcDirIndexSource;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          ClientSteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          ClientSessionId = input.ReadInt32();
          break;
        }
        case 24: {
          SourceAppId = input.ReadUInt32();
          break;
        }
        case 81: {
          JobIdSource = input.ReadFixed64();
          break;
        }
        case 89: {
          JobIdTarget = input.ReadFixed64();
          break;
        }
        case 98: {
          TargetJobName = input.ReadString();
          break;
        }
        case 104: {
          Eresult = input.ReadInt32();
          break;
        }
        case 114: {
          ErrorMessage = input.ReadString();
          break;
        }
        case 1600: {
          GcMsgSrc = (global::GCProtoBufMsgSrc) input.ReadEnum();
          break;
        }
        case 1608: {
          GcDirIndexSource = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          ClientSteamId = input.ReadFixed64();
          break;
        }
        case 16: {
          ClientSessionId = input.ReadInt32();
          break;
        }
        case 24: {
          SourceAppId = input.ReadUInt32();
          break;
        }
        case 81: {
          JobIdSource = input.ReadFixed64();
          break;
        }
        case 89: {
          JobIdTarget = input.ReadFixed64();
          break;
        }
        case 98: {
          TargetJobName = input.ReadString();
          break;
        }
        case 104: {
          Eresult = input.ReadInt32();
          break;
        }
        case 114: {
          ErrorMessage = input.ReadString();
          break;
        }
        case 1600: {
          GcMsgSrc = (global::GCProtoBufMsgSrc) input.ReadEnum();
          break;
        }
        case 1608: {
          GcDirIndexSource = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CGCSystemMsg_GetAccountDetails : pb::IMessage<CGCSystemMsg_GetAccountDetails>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGCSystemMsg_GetAccountDetails> _parser = new pb::MessageParser<CGCSystemMsg_GetAccountDetails>(() => new CGCSystemMsg_GetAccountDetails());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGCSystemMsg_GetAccountDetails> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails(CGCSystemMsg_GetAccountDetails other) : this() {
    _hasBits0 = other._hasBits0;
    steamid_ = other.steamid_;
    appid_ = other.appid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails Clone() {
    return new CGCSystemMsg_GetAccountDetails(this);
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 1;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 2;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGCSystemMsg_GetAccountDetails);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGCSystemMsg_GetAccountDetails other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Steamid != other.Steamid) return false;
    if (Appid != other.Appid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamid) {
      output.WriteRawTag(9);
      output.WriteFixed64(Steamid);
    }
    if (HasAppid) {
      output.WriteRawTag(16);
      output.WriteUInt32(Appid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGCSystemMsg_GetAccountDetails other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 16: {
          Appid = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CGCSystemMsg_GetAccountDetails_Response : pb::IMessage<CGCSystemMsg_GetAccountDetails_Response>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGCSystemMsg_GetAccountDetails_Response> _parser = new pb::MessageParser<CGCSystemMsg_GetAccountDetails_Response>(() => new CGCSystemMsg_GetAccountDetails_Response());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  private int _hasBits1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGCSystemMsg_GetAccountDetails_Response> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails_Response() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails_Response(CGCSystemMsg_GetAccountDetails_Response other) : this() {
    _hasBits0 = other._hasBits0;
    _hasBits1 = other._hasBits1;
    eresultDeprecated_ = other.eresultDeprecated_;
    accountName_ = other.accountName_;
    personaName_ = other.personaName_;
    isProfileCreated_ = other.isProfileCreated_;
    isProfilePublic_ = other.isProfilePublic_;
    isInventoryPublic_ = other.isInventoryPublic_;
    isVacBanned_ = other.isVacBanned_;
    isCyberCafe_ = other.isCyberCafe_;
    isSchoolAccount_ = other.isSchoolAccount_;
    isLimited_ = other.isLimited_;
    isSubscribed_ = other.isSubscribed_;
    package_ = other.package_;
    isFreeTrialAccount_ = other.isFreeTrialAccount_;
    freeTrialExpiration_ = other.freeTrialExpiration_;
    isLowViolence_ = other.isLowViolence_;
    isAccountLockedDown_ = other.isAccountLockedDown_;
    isCommunityBanned_ = other.isCommunityBanned_;
    isTradeBanned_ = other.isTradeBanned_;
    tradeBanExpiration_ = other.tradeBanExpiration_;
    accountid_ = other.accountid_;
    suspensionEndTime_ = other.suspensionEndTime_;
    currency_ = other.currency_;
    steamLevel_ = other.steamLevel_;
    friendCount_ = other.friendCount_;
    accountCreationTime_ = other.accountCreationTime_;
    isSteamguardEnabled_ = other.isSteamguardEnabled_;
    isPhoneVerified_ = other.isPhoneVerified_;
    isTwoFactorAuthEnabled_ = other.isTwoFactorAuthEnabled_;
    twoFactorEnabledTime_ = other.twoFactorEnabledTime_;
    phoneVerificationTime_ = other.phoneVerificationTime_;
    phoneId_ = other.phoneId_;
    isPhoneIdentifying_ = other.isPhoneIdentifying_;
    rtIdentityLinked_ = other.rtIdentityLinked_;
    rtBirthDate_ = other.rtBirthDate_;
    txnCountryCode_ = other.txnCountryCode_;
    hasAcceptedChinaSsa_ = other.hasAcceptedChinaSsa_;
    isBannedSteamChina_ = other.isBannedSteamChina_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCSystemMsg_GetAccountDetails_Response Clone() {
    return new CGCSystemMsg_GetAccountDetails_Response(this);
  }

  /// <summary>Field number for the "eresult_deprecated" field.</summary>
  public const int EresultDeprecatedFieldNumber = 1;
  private readonly static uint EresultDeprecatedDefaultValue = 2;

  private uint eresultDeprecated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EresultDeprecated {
    get { if ((_hasBits0 & 1) != 0) { return eresultDeprecated_; } else { return EresultDeprecatedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eresultDeprecated_ = value;
    }
  }
  /// <summary>Gets whether the "eresult_deprecated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEresultDeprecated {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eresult_deprecated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEresultDeprecated() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "account_name" field.</summary>
  public const int AccountNameFieldNumber = 2;
  private readonly static string AccountNameDefaultValue = "";

  private string accountName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AccountName {
    get { return accountName_ ?? AccountNameDefaultValue; }
    set {
      accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "account_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountName {
    get { return accountName_ != null; }
  }
  /// <summary>Clears the value of the "account_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountName() {
    accountName_ = null;
  }

  /// <summary>Field number for the "persona_name" field.</summary>
  public const int PersonaNameFieldNumber = 3;
  private readonly static string PersonaNameDefaultValue = "";

  private string personaName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string PersonaName {
    get { return personaName_ ?? PersonaNameDefaultValue; }
    set {
      personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "persona_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPersonaName {
    get { return personaName_ != null; }
  }
  /// <summary>Clears the value of the "persona_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPersonaName() {
    personaName_ = null;
  }

  /// <summary>Field number for the "is_profile_created" field.</summary>
  public const int IsProfileCreatedFieldNumber = 26;
  private readonly static bool IsProfileCreatedDefaultValue = false;

  private bool isProfileCreated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsProfileCreated {
    get { if ((_hasBits0 & 2097152) != 0) { return isProfileCreated_; } else { return IsProfileCreatedDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      isProfileCreated_ = value;
    }
  }
  /// <summary>Gets whether the "is_profile_created" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsProfileCreated {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "is_profile_created" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsProfileCreated() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "is_profile_public" field.</summary>
  public const int IsProfilePublicFieldNumber = 4;
  private readonly static bool IsProfilePublicDefaultValue = false;

  private bool isProfilePublic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsProfilePublic {
    get { if ((_hasBits0 & 2) != 0) { return isProfilePublic_; } else { return IsProfilePublicDefaultValue; } }
    set {
      _hasBits0 |= 2;
      isProfilePublic_ = value;
    }
  }
  /// <summary>Gets whether the "is_profile_public" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsProfilePublic {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "is_profile_public" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsProfilePublic() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "is_inventory_public" field.</summary>
  public const int IsInventoryPublicFieldNumber = 5;
  private readonly static bool IsInventoryPublicDefaultValue = false;

  private bool isInventoryPublic_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsInventoryPublic {
    get { if ((_hasBits0 & 4) != 0) { return isInventoryPublic_; } else { return IsInventoryPublicDefaultValue; } }
    set {
      _hasBits0 |= 4;
      isInventoryPublic_ = value;
    }
  }
  /// <summary>Gets whether the "is_inventory_public" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsInventoryPublic {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "is_inventory_public" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsInventoryPublic() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "is_vac_banned" field.</summary>
  public const int IsVacBannedFieldNumber = 7;
  private readonly static bool IsVacBannedDefaultValue = false;

  private bool isVacBanned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsVacBanned {
    get { if ((_hasBits0 & 8) != 0) { return isVacBanned_; } else { return IsVacBannedDefaultValue; } }
    set {
      _hasBits0 |= 8;
      isVacBanned_ = value;
    }
  }
  /// <summary>Gets whether the "is_vac_banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsVacBanned {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "is_vac_banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsVacBanned() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "is_cyber_cafe" field.</summary>
  public const int IsCyberCafeFieldNumber = 8;
  private readonly static bool IsCyberCafeDefaultValue = false;

  private bool isCyberCafe_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsCyberCafe {
    get { if ((_hasBits0 & 16) != 0) { return isCyberCafe_; } else { return IsCyberCafeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      isCyberCafe_ = value;
    }
  }
  /// <summary>Gets whether the "is_cyber_cafe" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsCyberCafe {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "is_cyber_cafe" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsCyberCafe() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "is_school_account" field.</summary>
  public const int IsSchoolAccountFieldNumber = 9;
  private readonly static bool IsSchoolAccountDefaultValue = false;

  private bool isSchoolAccount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSchoolAccount {
    get { if ((_hasBits0 & 32) != 0) { return isSchoolAccount_; } else { return IsSchoolAccountDefaultValue; } }
    set {
      _hasBits0 |= 32;
      isSchoolAccount_ = value;
    }
  }
  /// <summary>Gets whether the "is_school_account" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsSchoolAccount {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "is_school_account" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsSchoolAccount() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "is_limited" field.</summary>
  public const int IsLimitedFieldNumber = 10;
  private readonly static bool IsLimitedDefaultValue = false;

  private bool isLimited_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLimited {
    get { if ((_hasBits0 & 64) != 0) { return isLimited_; } else { return IsLimitedDefaultValue; } }
    set {
      _hasBits0 |= 64;
      isLimited_ = value;
    }
  }
  /// <summary>Gets whether the "is_limited" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsLimited {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "is_limited" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsLimited() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "is_subscribed" field.</summary>
  public const int IsSubscribedFieldNumber = 11;
  private readonly static bool IsSubscribedDefaultValue = false;

  private bool isSubscribed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSubscribed {
    get { if ((_hasBits0 & 128) != 0) { return isSubscribed_; } else { return IsSubscribedDefaultValue; } }
    set {
      _hasBits0 |= 128;
      isSubscribed_ = value;
    }
  }
  /// <summary>Gets whether the "is_subscribed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsSubscribed {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "is_subscribed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsSubscribed() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "package" field.</summary>
  public const int PackageFieldNumber = 12;
  private readonly static uint PackageDefaultValue = 0;

  private uint package_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Package {
    get { if ((_hasBits0 & 256) != 0) { return package_; } else { return PackageDefaultValue; } }
    set {
      _hasBits0 |= 256;
      package_ = value;
    }
  }
  /// <summary>Gets whether the "package" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPackage {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "package" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPackage() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "is_free_trial_account" field.</summary>
  public const int IsFreeTrialAccountFieldNumber = 13;
  private readonly static bool IsFreeTrialAccountDefaultValue = false;

  private bool isFreeTrialAccount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsFreeTrialAccount {
    get { if ((_hasBits0 & 512) != 0) { return isFreeTrialAccount_; } else { return IsFreeTrialAccountDefaultValue; } }
    set {
      _hasBits0 |= 512;
      isFreeTrialAccount_ = value;
    }
  }
  /// <summary>Gets whether the "is_free_trial_account" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsFreeTrialAccount {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "is_free_trial_account" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsFreeTrialAccount() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "free_trial_expiration" field.</summary>
  public const int FreeTrialExpirationFieldNumber = 14;
  private readonly static uint FreeTrialExpirationDefaultValue = 0;

  private uint freeTrialExpiration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FreeTrialExpiration {
    get { if ((_hasBits0 & 1024) != 0) { return freeTrialExpiration_; } else { return FreeTrialExpirationDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      freeTrialExpiration_ = value;
    }
  }
  /// <summary>Gets whether the "free_trial_expiration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFreeTrialExpiration {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "free_trial_expiration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFreeTrialExpiration() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "is_low_violence" field.</summary>
  public const int IsLowViolenceFieldNumber = 15;
  private readonly static bool IsLowViolenceDefaultValue = false;

  private bool isLowViolence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLowViolence {
    get { if ((_hasBits0 & 2048) != 0) { return isLowViolence_; } else { return IsLowViolenceDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      isLowViolence_ = value;
    }
  }
  /// <summary>Gets whether the "is_low_violence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsLowViolence {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "is_low_violence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsLowViolence() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "is_account_locked_down" field.</summary>
  public const int IsAccountLockedDownFieldNumber = 16;
  private readonly static bool IsAccountLockedDownDefaultValue = false;

  private bool isAccountLockedDown_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsAccountLockedDown {
    get { if ((_hasBits0 & 4096) != 0) { return isAccountLockedDown_; } else { return IsAccountLockedDownDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      isAccountLockedDown_ = value;
    }
  }
  /// <summary>Gets whether the "is_account_locked_down" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsAccountLockedDown {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "is_account_locked_down" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsAccountLockedDown() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "is_community_banned" field.</summary>
  public const int IsCommunityBannedFieldNumber = 17;
  private readonly static bool IsCommunityBannedDefaultValue = false;

  private bool isCommunityBanned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsCommunityBanned {
    get { if ((_hasBits0 & 8192) != 0) { return isCommunityBanned_; } else { return IsCommunityBannedDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      isCommunityBanned_ = value;
    }
  }
  /// <summary>Gets whether the "is_community_banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsCommunityBanned {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "is_community_banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsCommunityBanned() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "is_trade_banned" field.</summary>
  public const int IsTradeBannedFieldNumber = 18;
  private readonly static bool IsTradeBannedDefaultValue = false;

  private bool isTradeBanned_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsTradeBanned {
    get { if ((_hasBits0 & 16384) != 0) { return isTradeBanned_; } else { return IsTradeBannedDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      isTradeBanned_ = value;
    }
  }
  /// <summary>Gets whether the "is_trade_banned" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsTradeBanned {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "is_trade_banned" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsTradeBanned() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "trade_ban_expiration" field.</summary>
  public const int TradeBanExpirationFieldNumber = 19;
  private readonly static uint TradeBanExpirationDefaultValue = 0;

  private uint tradeBanExpiration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TradeBanExpiration {
    get { if ((_hasBits0 & 32768) != 0) { return tradeBanExpiration_; } else { return TradeBanExpirationDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      tradeBanExpiration_ = value;
    }
  }
  /// <summary>Gets whether the "trade_ban_expiration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTradeBanExpiration {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "trade_ban_expiration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTradeBanExpiration() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "accountid" field.</summary>
  public const int AccountidFieldNumber = 20;
  private readonly static uint AccountidDefaultValue = 0;

  private uint accountid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Accountid {
    get { if ((_hasBits0 & 65536) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      accountid_ = value;
    }
  }
  /// <summary>Gets whether the "accountid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountid {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "accountid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountid() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "suspension_end_time" field.</summary>
  public const int SuspensionEndTimeFieldNumber = 21;
  private readonly static uint SuspensionEndTimeDefaultValue = 0;

  private uint suspensionEndTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SuspensionEndTime {
    get { if ((_hasBits0 & 131072) != 0) { return suspensionEndTime_; } else { return SuspensionEndTimeDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      suspensionEndTime_ = value;
    }
  }
  /// <summary>Gets whether the "suspension_end_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSuspensionEndTime {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "suspension_end_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSuspensionEndTime() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "currency" field.</summary>
  public const int CurrencyFieldNumber = 22;
  private readonly static string CurrencyDefaultValue = "";

  private string currency_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Currency {
    get { return currency_ ?? CurrencyDefaultValue; }
    set {
      currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "currency" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCurrency {
    get { return currency_ != null; }
  }
  /// <summary>Clears the value of the "currency" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCurrency() {
    currency_ = null;
  }

  /// <summary>Field number for the "steam_level" field.</summary>
  public const int SteamLevelFieldNumber = 23;
  private readonly static uint SteamLevelDefaultValue = 0;

  private uint steamLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SteamLevel {
    get { if ((_hasBits0 & 262144) != 0) { return steamLevel_; } else { return SteamLevelDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      steamLevel_ = value;
    }
  }
  /// <summary>Gets whether the "steam_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamLevel {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "steam_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamLevel() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "friend_count" field.</summary>
  public const int FriendCountFieldNumber = 24;
  private readonly static uint FriendCountDefaultValue = 0;

  private uint friendCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FriendCount {
    get { if ((_hasBits0 & 524288) != 0) { return friendCount_; } else { return FriendCountDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      friendCount_ = value;
    }
  }
  /// <summary>Gets whether the "friend_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFriendCount {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "friend_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFriendCount() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "account_creation_time" field.</summary>
  public const int AccountCreationTimeFieldNumber = 25;
  private readonly static uint AccountCreationTimeDefaultValue = 0;

  private uint accountCreationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountCreationTime {
    get { if ((_hasBits0 & 1048576) != 0) { return accountCreationTime_; } else { return AccountCreationTimeDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      accountCreationTime_ = value;
    }
  }
  /// <summary>Gets whether the "account_creation_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountCreationTime {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "account_creation_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountCreationTime() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "is_steamguard_enabled" field.</summary>
  public const int IsSteamguardEnabledFieldNumber = 27;
  private readonly static bool IsSteamguardEnabledDefaultValue = false;

  private bool isSteamguardEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsSteamguardEnabled {
    get { if ((_hasBits0 & 4194304) != 0) { return isSteamguardEnabled_; } else { return IsSteamguardEnabledDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      isSteamguardEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "is_steamguard_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsSteamguardEnabled {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "is_steamguard_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsSteamguardEnabled() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "is_phone_verified" field.</summary>
  public const int IsPhoneVerifiedFieldNumber = 28;
  private readonly static bool IsPhoneVerifiedDefaultValue = false;

  private bool isPhoneVerified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPhoneVerified {
    get { if ((_hasBits0 & 8388608) != 0) { return isPhoneVerified_; } else { return IsPhoneVerifiedDefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      isPhoneVerified_ = value;
    }
  }
  /// <summary>Gets whether the "is_phone_verified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPhoneVerified {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "is_phone_verified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPhoneVerified() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "is_two_factor_auth_enabled" field.</summary>
  public const int IsTwoFactorAuthEnabledFieldNumber = 29;
  private readonly static bool IsTwoFactorAuthEnabledDefaultValue = false;

  private bool isTwoFactorAuthEnabled_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsTwoFactorAuthEnabled {
    get { if ((_hasBits0 & 16777216) != 0) { return isTwoFactorAuthEnabled_; } else { return IsTwoFactorAuthEnabledDefaultValue; } }
    set {
      _hasBits0 |= 16777216;
      isTwoFactorAuthEnabled_ = value;
    }
  }
  /// <summary>Gets whether the "is_two_factor_auth_enabled" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsTwoFactorAuthEnabled {
    get { return (_hasBits0 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "is_two_factor_auth_enabled" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsTwoFactorAuthEnabled() {
    _hasBits0 &= ~16777216;
  }

  /// <summary>Field number for the "two_factor_enabled_time" field.</summary>
  public const int TwoFactorEnabledTimeFieldNumber = 30;
  private readonly static uint TwoFactorEnabledTimeDefaultValue = 0;

  private uint twoFactorEnabledTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TwoFactorEnabledTime {
    get { if ((_hasBits0 & 33554432) != 0) { return twoFactorEnabledTime_; } else { return TwoFactorEnabledTimeDefaultValue; } }
    set {
      _hasBits0 |= 33554432;
      twoFactorEnabledTime_ = value;
    }
  }
  /// <summary>Gets whether the "two_factor_enabled_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTwoFactorEnabledTime {
    get { return (_hasBits0 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "two_factor_enabled_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTwoFactorEnabledTime() {
    _hasBits0 &= ~33554432;
  }

  /// <summary>Field number for the "phone_verification_time" field.</summary>
  public const int PhoneVerificationTimeFieldNumber = 31;
  private readonly static uint PhoneVerificationTimeDefaultValue = 0;

  private uint phoneVerificationTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PhoneVerificationTime {
    get { if ((_hasBits0 & 67108864) != 0) { return phoneVerificationTime_; } else { return PhoneVerificationTimeDefaultValue; } }
    set {
      _hasBits0 |= 67108864;
      phoneVerificationTime_ = value;
    }
  }
  /// <summary>Gets whether the "phone_verification_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPhoneVerificationTime {
    get { return (_hasBits0 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "phone_verification_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPhoneVerificationTime() {
    _hasBits0 &= ~67108864;
  }

  /// <summary>Field number for the "phone_id" field.</summary>
  public const int PhoneIdFieldNumber = 33;
  private readonly static ulong PhoneIdDefaultValue = 0UL;

  private ulong phoneId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PhoneId {
    get { if ((_hasBits0 & 134217728) != 0) { return phoneId_; } else { return PhoneIdDefaultValue; } }
    set {
      _hasBits0 |= 134217728;
      phoneId_ = value;
    }
  }
  /// <summary>Gets whether the "phone_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPhoneId {
    get { return (_hasBits0 & 134217728) != 0; }
  }
  /// <summary>Clears the value of the "phone_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPhoneId() {
    _hasBits0 &= ~134217728;
  }

  /// <summary>Field number for the "is_phone_identifying" field.</summary>
  public const int IsPhoneIdentifyingFieldNumber = 34;
  private readonly static bool IsPhoneIdentifyingDefaultValue = false;

  private bool isPhoneIdentifying_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsPhoneIdentifying {
    get { if ((_hasBits0 & 268435456) != 0) { return isPhoneIdentifying_; } else { return IsPhoneIdentifyingDefaultValue; } }
    set {
      _hasBits0 |= 268435456;
      isPhoneIdentifying_ = value;
    }
  }
  /// <summary>Gets whether the "is_phone_identifying" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsPhoneIdentifying {
    get { return (_hasBits0 & 268435456) != 0; }
  }
  /// <summary>Clears the value of the "is_phone_identifying" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsPhoneIdentifying() {
    _hasBits0 &= ~268435456;
  }

  /// <summary>Field number for the "rt_identity_linked" field.</summary>
  public const int RtIdentityLinkedFieldNumber = 35;
  private readonly static uint RtIdentityLinkedDefaultValue = 0;

  private uint rtIdentityLinked_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtIdentityLinked {
    get { if ((_hasBits0 & 536870912) != 0) { return rtIdentityLinked_; } else { return RtIdentityLinkedDefaultValue; } }
    set {
      _hasBits0 |= 536870912;
      rtIdentityLinked_ = value;
    }
  }
  /// <summary>Gets whether the "rt_identity_linked" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtIdentityLinked {
    get { return (_hasBits0 & 536870912) != 0; }
  }
  /// <summary>Clears the value of the "rt_identity_linked" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtIdentityLinked() {
    _hasBits0 &= ~536870912;
  }

  /// <summary>Field number for the "rt_birth_date" field.</summary>
  public const int RtBirthDateFieldNumber = 36;
  private readonly static uint RtBirthDateDefaultValue = 0;

  private uint rtBirthDate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RtBirthDate {
    get { if ((_hasBits0 & 1073741824) != 0) { return rtBirthDate_; } else { return RtBirthDateDefaultValue; } }
    set {
      _hasBits0 |= 1073741824;
      rtBirthDate_ = value;
    }
  }
  /// <summary>Gets whether the "rt_birth_date" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRtBirthDate {
    get { return (_hasBits0 & 1073741824) != 0; }
  }
  /// <summary>Clears the value of the "rt_birth_date" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRtBirthDate() {
    _hasBits0 &= ~1073741824;
  }

  /// <summary>Field number for the "txn_country_code" field.</summary>
  public const int TxnCountryCodeFieldNumber = 37;
  private readonly static string TxnCountryCodeDefaultValue = "";

  private string txnCountryCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string TxnCountryCode {
    get { return txnCountryCode_ ?? TxnCountryCodeDefaultValue; }
    set {
      txnCountryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "txn_country_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTxnCountryCode {
    get { return txnCountryCode_ != null; }
  }
  /// <summary>Clears the value of the "txn_country_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTxnCountryCode() {
    txnCountryCode_ = null;
  }

  /// <summary>Field number for the "has_accepted_china_ssa" field.</summary>
  public const int HasAcceptedChinaSsaFieldNumber = 38;
  private readonly static bool HasAcceptedChinaSsaDefaultValue = false;

  private bool hasAcceptedChinaSsa_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAcceptedChinaSsa {
    get { if ((_hasBits0 & -2147483648) != 0) { return hasAcceptedChinaSsa_; } else { return HasAcceptedChinaSsaDefaultValue; } }
    set {
      _hasBits0 |= -2147483648;
      hasAcceptedChinaSsa_ = value;
    }
  }
  /// <summary>Gets whether the "has_accepted_china_ssa" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasAcceptedChinaSsa {
    get { return (_hasBits0 & -2147483648) != 0; }
  }
  /// <summary>Clears the value of the "has_accepted_china_ssa" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasAcceptedChinaSsa() {
    _hasBits0 &= ~-2147483648;
  }

  /// <summary>Field number for the "is_banned_steam_china" field.</summary>
  public const int IsBannedSteamChinaFieldNumber = 39;
  private readonly static bool IsBannedSteamChinaDefaultValue = false;

  private bool isBannedSteamChina_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsBannedSteamChina {
    get { if ((_hasBits1 & 1) != 0) { return isBannedSteamChina_; } else { return IsBannedSteamChinaDefaultValue; } }
    set {
      _hasBits1 |= 1;
      isBannedSteamChina_ = value;
    }
  }
  /// <summary>Gets whether the "is_banned_steam_china" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsBannedSteamChina {
    get { return (_hasBits1 & 1) != 0; }
  }
  /// <summary>Clears the value of the "is_banned_steam_china" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsBannedSteamChina() {
    _hasBits1 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGCSystemMsg_GetAccountDetails_Response);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGCSystemMsg_GetAccountDetails_Response other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EresultDeprecated != other.EresultDeprecated) return false;
    if (AccountName != other.AccountName) return false;
    if (PersonaName != other.PersonaName) return false;
    if (IsProfileCreated != other.IsProfileCreated) return false;
    if (IsProfilePublic != other.IsProfilePublic) return false;
    if (IsInventoryPublic != other.IsInventoryPublic) return false;
    if (IsVacBanned != other.IsVacBanned) return false;
    if (IsCyberCafe != other.IsCyberCafe) return false;
    if (IsSchoolAccount != other.IsSchoolAccount) return false;
    if (IsLimited != other.IsLimited) return false;
    if (IsSubscribed != other.IsSubscribed) return false;
    if (Package != other.Package) return false;
    if (IsFreeTrialAccount != other.IsFreeTrialAccount) return false;
    if (FreeTrialExpiration != other.FreeTrialExpiration) return false;
    if (IsLowViolence != other.IsLowViolence) return false;
    if (IsAccountLockedDown != other.IsAccountLockedDown) return false;
    if (IsCommunityBanned != other.IsCommunityBanned) return false;
    if (IsTradeBanned != other.IsTradeBanned) return false;
    if (TradeBanExpiration != other.TradeBanExpiration) return false;
    if (Accountid != other.Accountid) return false;
    if (SuspensionEndTime != other.SuspensionEndTime) return false;
    if (Currency != other.Currency) return false;
    if (SteamLevel != other.SteamLevel) return false;
    if (FriendCount != other.FriendCount) return false;
    if (AccountCreationTime != other.AccountCreationTime) return false;
    if (IsSteamguardEnabled != other.IsSteamguardEnabled) return false;
    if (IsPhoneVerified != other.IsPhoneVerified) return false;
    if (IsTwoFactorAuthEnabled != other.IsTwoFactorAuthEnabled) return false;
    if (TwoFactorEnabledTime != other.TwoFactorEnabledTime) return false;
    if (PhoneVerificationTime != other.PhoneVerificationTime) return false;
    if (PhoneId != other.PhoneId) return false;
    if (IsPhoneIdentifying != other.IsPhoneIdentifying) return false;
    if (RtIdentityLinked != other.RtIdentityLinked) return false;
    if (RtBirthDate != other.RtBirthDate) return false;
    if (TxnCountryCode != other.TxnCountryCode) return false;
    if (HasAcceptedChinaSsa != other.HasAcceptedChinaSsa) return false;
    if (IsBannedSteamChina != other.IsBannedSteamChina) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEresultDeprecated) hash ^= EresultDeprecated.GetHashCode();
    if (HasAccountName) hash ^= AccountName.GetHashCode();
    if (HasPersonaName) hash ^= PersonaName.GetHashCode();
    if (HasIsProfileCreated) hash ^= IsProfileCreated.GetHashCode();
    if (HasIsProfilePublic) hash ^= IsProfilePublic.GetHashCode();
    if (HasIsInventoryPublic) hash ^= IsInventoryPublic.GetHashCode();
    if (HasIsVacBanned) hash ^= IsVacBanned.GetHashCode();
    if (HasIsCyberCafe) hash ^= IsCyberCafe.GetHashCode();
    if (HasIsSchoolAccount) hash ^= IsSchoolAccount.GetHashCode();
    if (HasIsLimited) hash ^= IsLimited.GetHashCode();
    if (HasIsSubscribed) hash ^= IsSubscribed.GetHashCode();
    if (HasPackage) hash ^= Package.GetHashCode();
    if (HasIsFreeTrialAccount) hash ^= IsFreeTrialAccount.GetHashCode();
    if (HasFreeTrialExpiration) hash ^= FreeTrialExpiration.GetHashCode();
    if (HasIsLowViolence) hash ^= IsLowViolence.GetHashCode();
    if (HasIsAccountLockedDown) hash ^= IsAccountLockedDown.GetHashCode();
    if (HasIsCommunityBanned) hash ^= IsCommunityBanned.GetHashCode();
    if (HasIsTradeBanned) hash ^= IsTradeBanned.GetHashCode();
    if (HasTradeBanExpiration) hash ^= TradeBanExpiration.GetHashCode();
    if (HasAccountid) hash ^= Accountid.GetHashCode();
    if (HasSuspensionEndTime) hash ^= SuspensionEndTime.GetHashCode();
    if (HasCurrency) hash ^= Currency.GetHashCode();
    if (HasSteamLevel) hash ^= SteamLevel.GetHashCode();
    if (HasFriendCount) hash ^= FriendCount.GetHashCode();
    if (HasAccountCreationTime) hash ^= AccountCreationTime.GetHashCode();
    if (HasIsSteamguardEnabled) hash ^= IsSteamguardEnabled.GetHashCode();
    if (HasIsPhoneVerified) hash ^= IsPhoneVerified.GetHashCode();
    if (HasIsTwoFactorAuthEnabled) hash ^= IsTwoFactorAuthEnabled.GetHashCode();
    if (HasTwoFactorEnabledTime) hash ^= TwoFactorEnabledTime.GetHashCode();
    if (HasPhoneVerificationTime) hash ^= PhoneVerificationTime.GetHashCode();
    if (HasPhoneId) hash ^= PhoneId.GetHashCode();
    if (HasIsPhoneIdentifying) hash ^= IsPhoneIdentifying.GetHashCode();
    if (HasRtIdentityLinked) hash ^= RtIdentityLinked.GetHashCode();
    if (HasRtBirthDate) hash ^= RtBirthDate.GetHashCode();
    if (HasTxnCountryCode) hash ^= TxnCountryCode.GetHashCode();
    if (HasHasAcceptedChinaSsa) hash ^= HasAcceptedChinaSsa.GetHashCode();
    if (HasIsBannedSteamChina) hash ^= IsBannedSteamChina.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEresultDeprecated) {
      output.WriteRawTag(8);
      output.WriteUInt32(EresultDeprecated);
    }
    if (HasAccountName) {
      output.WriteRawTag(18);
      output.WriteString(AccountName);
    }
    if (HasPersonaName) {
      output.WriteRawTag(26);
      output.WriteString(PersonaName);
    }
    if (HasIsProfilePublic) {
      output.WriteRawTag(32);
      output.WriteBool(IsProfilePublic);
    }
    if (HasIsInventoryPublic) {
      output.WriteRawTag(40);
      output.WriteBool(IsInventoryPublic);
    }
    if (HasIsVacBanned) {
      output.WriteRawTag(56);
      output.WriteBool(IsVacBanned);
    }
    if (HasIsCyberCafe) {
      output.WriteRawTag(64);
      output.WriteBool(IsCyberCafe);
    }
    if (HasIsSchoolAccount) {
      output.WriteRawTag(72);
      output.WriteBool(IsSchoolAccount);
    }
    if (HasIsLimited) {
      output.WriteRawTag(80);
      output.WriteBool(IsLimited);
    }
    if (HasIsSubscribed) {
      output.WriteRawTag(88);
      output.WriteBool(IsSubscribed);
    }
    if (HasPackage) {
      output.WriteRawTag(96);
      output.WriteUInt32(Package);
    }
    if (HasIsFreeTrialAccount) {
      output.WriteRawTag(104);
      output.WriteBool(IsFreeTrialAccount);
    }
    if (HasFreeTrialExpiration) {
      output.WriteRawTag(112);
      output.WriteUInt32(FreeTrialExpiration);
    }
    if (HasIsLowViolence) {
      output.WriteRawTag(120);
      output.WriteBool(IsLowViolence);
    }
    if (HasIsAccountLockedDown) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsAccountLockedDown);
    }
    if (HasIsCommunityBanned) {
      output.WriteRawTag(136, 1);
      output.WriteBool(IsCommunityBanned);
    }
    if (HasIsTradeBanned) {
      output.WriteRawTag(144, 1);
      output.WriteBool(IsTradeBanned);
    }
    if (HasTradeBanExpiration) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TradeBanExpiration);
    }
    if (HasAccountid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(Accountid);
    }
    if (HasSuspensionEndTime) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(SuspensionEndTime);
    }
    if (HasCurrency) {
      output.WriteRawTag(178, 1);
      output.WriteString(Currency);
    }
    if (HasSteamLevel) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(SteamLevel);
    }
    if (HasFriendCount) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(FriendCount);
    }
    if (HasAccountCreationTime) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(AccountCreationTime);
    }
    if (HasIsProfileCreated) {
      output.WriteRawTag(208, 1);
      output.WriteBool(IsProfileCreated);
    }
    if (HasIsSteamguardEnabled) {
      output.WriteRawTag(216, 1);
      output.WriteBool(IsSteamguardEnabled);
    }
    if (HasIsPhoneVerified) {
      output.WriteRawTag(224, 1);
      output.WriteBool(IsPhoneVerified);
    }
    if (HasIsTwoFactorAuthEnabled) {
      output.WriteRawTag(232, 1);
      output.WriteBool(IsTwoFactorAuthEnabled);
    }
    if (HasTwoFactorEnabledTime) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(TwoFactorEnabledTime);
    }
    if (HasPhoneVerificationTime) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(PhoneVerificationTime);
    }
    if (HasPhoneId) {
      output.WriteRawTag(136, 2);
      output.WriteUInt64(PhoneId);
    }
    if (HasIsPhoneIdentifying) {
      output.WriteRawTag(144, 2);
      output.WriteBool(IsPhoneIdentifying);
    }
    if (HasRtIdentityLinked) {
      output.WriteRawTag(152, 2);
      output.WriteUInt32(RtIdentityLinked);
    }
    if (HasRtBirthDate) {
      output.WriteRawTag(160, 2);
      output.WriteUInt32(RtBirthDate);
    }
    if (HasTxnCountryCode) {
      output.WriteRawTag(170, 2);
      output.WriteString(TxnCountryCode);
    }
    if (HasHasAcceptedChinaSsa) {
      output.WriteRawTag(176, 2);
      output.WriteBool(HasAcceptedChinaSsa);
    }
    if (HasIsBannedSteamChina) {
      output.WriteRawTag(184, 2);
      output.WriteBool(IsBannedSteamChina);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEresultDeprecated) {
      output.WriteRawTag(8);
      output.WriteUInt32(EresultDeprecated);
    }
    if (HasAccountName) {
      output.WriteRawTag(18);
      output.WriteString(AccountName);
    }
    if (HasPersonaName) {
      output.WriteRawTag(26);
      output.WriteString(PersonaName);
    }
    if (HasIsProfilePublic) {
      output.WriteRawTag(32);
      output.WriteBool(IsProfilePublic);
    }
    if (HasIsInventoryPublic) {
      output.WriteRawTag(40);
      output.WriteBool(IsInventoryPublic);
    }
    if (HasIsVacBanned) {
      output.WriteRawTag(56);
      output.WriteBool(IsVacBanned);
    }
    if (HasIsCyberCafe) {
      output.WriteRawTag(64);
      output.WriteBool(IsCyberCafe);
    }
    if (HasIsSchoolAccount) {
      output.WriteRawTag(72);
      output.WriteBool(IsSchoolAccount);
    }
    if (HasIsLimited) {
      output.WriteRawTag(80);
      output.WriteBool(IsLimited);
    }
    if (HasIsSubscribed) {
      output.WriteRawTag(88);
      output.WriteBool(IsSubscribed);
    }
    if (HasPackage) {
      output.WriteRawTag(96);
      output.WriteUInt32(Package);
    }
    if (HasIsFreeTrialAccount) {
      output.WriteRawTag(104);
      output.WriteBool(IsFreeTrialAccount);
    }
    if (HasFreeTrialExpiration) {
      output.WriteRawTag(112);
      output.WriteUInt32(FreeTrialExpiration);
    }
    if (HasIsLowViolence) {
      output.WriteRawTag(120);
      output.WriteBool(IsLowViolence);
    }
    if (HasIsAccountLockedDown) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsAccountLockedDown);
    }
    if (HasIsCommunityBanned) {
      output.WriteRawTag(136, 1);
      output.WriteBool(IsCommunityBanned);
    }
    if (HasIsTradeBanned) {
      output.WriteRawTag(144, 1);
      output.WriteBool(IsTradeBanned);
    }
    if (HasTradeBanExpiration) {
      output.WriteRawTag(152, 1);
      output.WriteUInt32(TradeBanExpiration);
    }
    if (HasAccountid) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(Accountid);
    }
    if (HasSuspensionEndTime) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(SuspensionEndTime);
    }
    if (HasCurrency) {
      output.WriteRawTag(178, 1);
      output.WriteString(Currency);
    }
    if (HasSteamLevel) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(SteamLevel);
    }
    if (HasFriendCount) {
      output.WriteRawTag(192, 1);
      output.WriteUInt32(FriendCount);
    }
    if (HasAccountCreationTime) {
      output.WriteRawTag(200, 1);
      output.WriteUInt32(AccountCreationTime);
    }
    if (HasIsProfileCreated) {
      output.WriteRawTag(208, 1);
      output.WriteBool(IsProfileCreated);
    }
    if (HasIsSteamguardEnabled) {
      output.WriteRawTag(216, 1);
      output.WriteBool(IsSteamguardEnabled);
    }
    if (HasIsPhoneVerified) {
      output.WriteRawTag(224, 1);
      output.WriteBool(IsPhoneVerified);
    }
    if (HasIsTwoFactorAuthEnabled) {
      output.WriteRawTag(232, 1);
      output.WriteBool(IsTwoFactorAuthEnabled);
    }
    if (HasTwoFactorEnabledTime) {
      output.WriteRawTag(240, 1);
      output.WriteUInt32(TwoFactorEnabledTime);
    }
    if (HasPhoneVerificationTime) {
      output.WriteRawTag(248, 1);
      output.WriteUInt32(PhoneVerificationTime);
    }
    if (HasPhoneId) {
      output.WriteRawTag(136, 2);
      output.WriteUInt64(PhoneId);
    }
    if (HasIsPhoneIdentifying) {
      output.WriteRawTag(144, 2);
      output.WriteBool(IsPhoneIdentifying);
    }
    if (HasRtIdentityLinked) {
      output.WriteRawTag(152, 2);
      output.WriteUInt32(RtIdentityLinked);
    }
    if (HasRtBirthDate) {
      output.WriteRawTag(160, 2);
      output.WriteUInt32(RtBirthDate);
    }
    if (HasTxnCountryCode) {
      output.WriteRawTag(170, 2);
      output.WriteString(TxnCountryCode);
    }
    if (HasHasAcceptedChinaSsa) {
      output.WriteRawTag(176, 2);
      output.WriteBool(HasAcceptedChinaSsa);
    }
    if (HasIsBannedSteamChina) {
      output.WriteRawTag(184, 2);
      output.WriteBool(IsBannedSteamChina);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEresultDeprecated) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EresultDeprecated);
    }
    if (HasAccountName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
    }
    if (HasPersonaName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
    }
    if (HasIsProfileCreated) {
      size += 2 + 1;
    }
    if (HasIsProfilePublic) {
      size += 1 + 1;
    }
    if (HasIsInventoryPublic) {
      size += 1 + 1;
    }
    if (HasIsVacBanned) {
      size += 1 + 1;
    }
    if (HasIsCyberCafe) {
      size += 1 + 1;
    }
    if (HasIsSchoolAccount) {
      size += 1 + 1;
    }
    if (HasIsLimited) {
      size += 1 + 1;
    }
    if (HasIsSubscribed) {
      size += 1 + 1;
    }
    if (HasPackage) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Package);
    }
    if (HasIsFreeTrialAccount) {
      size += 1 + 1;
    }
    if (HasFreeTrialExpiration) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FreeTrialExpiration);
    }
    if (HasIsLowViolence) {
      size += 1 + 1;
    }
    if (HasIsAccountLockedDown) {
      size += 2 + 1;
    }
    if (HasIsCommunityBanned) {
      size += 2 + 1;
    }
    if (HasIsTradeBanned) {
      size += 2 + 1;
    }
    if (HasTradeBanExpiration) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TradeBanExpiration);
    }
    if (HasAccountid) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
    }
    if (HasSuspensionEndTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SuspensionEndTime);
    }
    if (HasCurrency) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Currency);
    }
    if (HasSteamLevel) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SteamLevel);
    }
    if (HasFriendCount) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(FriendCount);
    }
    if (HasAccountCreationTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AccountCreationTime);
    }
    if (HasIsSteamguardEnabled) {
      size += 2 + 1;
    }
    if (HasIsPhoneVerified) {
      size += 2 + 1;
    }
    if (HasIsTwoFactorAuthEnabled) {
      size += 2 + 1;
    }
    if (HasTwoFactorEnabledTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TwoFactorEnabledTime);
    }
    if (HasPhoneVerificationTime) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PhoneVerificationTime);
    }
    if (HasPhoneId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(PhoneId);
    }
    if (HasIsPhoneIdentifying) {
      size += 2 + 1;
    }
    if (HasRtIdentityLinked) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RtIdentityLinked);
    }
    if (HasRtBirthDate) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RtBirthDate);
    }
    if (HasTxnCountryCode) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(TxnCountryCode);
    }
    if (HasHasAcceptedChinaSsa) {
      size += 2 + 1;
    }
    if (HasIsBannedSteamChina) {
      size += 2 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGCSystemMsg_GetAccountDetails_Response other) {
    if (other == null) {
      return;
    }
    if (other.HasEresultDeprecated) {
      EresultDeprecated = other.EresultDeprecated;
    }
    if (other.HasAccountName) {
      AccountName = other.AccountName;
    }
    if (other.HasPersonaName) {
      PersonaName = other.PersonaName;
    }
    if (other.HasIsProfileCreated) {
      IsProfileCreated = other.IsProfileCreated;
    }
    if (other.HasIsProfilePublic) {
      IsProfilePublic = other.IsProfilePublic;
    }
    if (other.HasIsInventoryPublic) {
      IsInventoryPublic = other.IsInventoryPublic;
    }
    if (other.HasIsVacBanned) {
      IsVacBanned = other.IsVacBanned;
    }
    if (other.HasIsCyberCafe) {
      IsCyberCafe = other.IsCyberCafe;
    }
    if (other.HasIsSchoolAccount) {
      IsSchoolAccount = other.IsSchoolAccount;
    }
    if (other.HasIsLimited) {
      IsLimited = other.IsLimited;
    }
    if (other.HasIsSubscribed) {
      IsSubscribed = other.IsSubscribed;
    }
    if (other.HasPackage) {
      Package = other.Package;
    }
    if (other.HasIsFreeTrialAccount) {
      IsFreeTrialAccount = other.IsFreeTrialAccount;
    }
    if (other.HasFreeTrialExpiration) {
      FreeTrialExpiration = other.FreeTrialExpiration;
    }
    if (other.HasIsLowViolence) {
      IsLowViolence = other.IsLowViolence;
    }
    if (other.HasIsAccountLockedDown) {
      IsAccountLockedDown = other.IsAccountLockedDown;
    }
    if (other.HasIsCommunityBanned) {
      IsCommunityBanned = other.IsCommunityBanned;
    }
    if (other.HasIsTradeBanned) {
      IsTradeBanned = other.IsTradeBanned;
    }
    if (other.HasTradeBanExpiration) {
      TradeBanExpiration = other.TradeBanExpiration;
    }
    if (other.HasAccountid) {
      Accountid = other.Accountid;
    }
    if (other.HasSuspensionEndTime) {
      SuspensionEndTime = other.SuspensionEndTime;
    }
    if (other.HasCurrency) {
      Currency = other.Currency;
    }
    if (other.HasSteamLevel) {
      SteamLevel = other.SteamLevel;
    }
    if (other.HasFriendCount) {
      FriendCount = other.FriendCount;
    }
    if (other.HasAccountCreationTime) {
      AccountCreationTime = other.AccountCreationTime;
    }
    if (other.HasIsSteamguardEnabled) {
      IsSteamguardEnabled = other.IsSteamguardEnabled;
    }
    if (other.HasIsPhoneVerified) {
      IsPhoneVerified = other.IsPhoneVerified;
    }
    if (other.HasIsTwoFactorAuthEnabled) {
      IsTwoFactorAuthEnabled = other.IsTwoFactorAuthEnabled;
    }
    if (other.HasTwoFactorEnabledTime) {
      TwoFactorEnabledTime = other.TwoFactorEnabledTime;
    }
    if (other.HasPhoneVerificationTime) {
      PhoneVerificationTime = other.PhoneVerificationTime;
    }
    if (other.HasPhoneId) {
      PhoneId = other.PhoneId;
    }
    if (other.HasIsPhoneIdentifying) {
      IsPhoneIdentifying = other.IsPhoneIdentifying;
    }
    if (other.HasRtIdentityLinked) {
      RtIdentityLinked = other.RtIdentityLinked;
    }
    if (other.HasRtBirthDate) {
      RtBirthDate = other.RtBirthDate;
    }
    if (other.HasTxnCountryCode) {
      TxnCountryCode = other.TxnCountryCode;
    }
    if (other.HasHasAcceptedChinaSsa) {
      HasAcceptedChinaSsa = other.HasAcceptedChinaSsa;
    }
    if (other.HasIsBannedSteamChina) {
      IsBannedSteamChina = other.IsBannedSteamChina;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EresultDeprecated = input.ReadUInt32();
          break;
        }
        case 18: {
          AccountName = input.ReadString();
          break;
        }
        case 26: {
          PersonaName = input.ReadString();
          break;
        }
        case 32: {
          IsProfilePublic = input.ReadBool();
          break;
        }
        case 40: {
          IsInventoryPublic = input.ReadBool();
          break;
        }
        case 56: {
          IsVacBanned = input.ReadBool();
          break;
        }
        case 64: {
          IsCyberCafe = input.ReadBool();
          break;
        }
        case 72: {
          IsSchoolAccount = input.ReadBool();
          break;
        }
        case 80: {
          IsLimited = input.ReadBool();
          break;
        }
        case 88: {
          IsSubscribed = input.ReadBool();
          break;
        }
        case 96: {
          Package = input.ReadUInt32();
          break;
        }
        case 104: {
          IsFreeTrialAccount = input.ReadBool();
          break;
        }
        case 112: {
          FreeTrialExpiration = input.ReadUInt32();
          break;
        }
        case 120: {
          IsLowViolence = input.ReadBool();
          break;
        }
        case 128: {
          IsAccountLockedDown = input.ReadBool();
          break;
        }
        case 136: {
          IsCommunityBanned = input.ReadBool();
          break;
        }
        case 144: {
          IsTradeBanned = input.ReadBool();
          break;
        }
        case 152: {
          TradeBanExpiration = input.ReadUInt32();
          break;
        }
        case 160: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 168: {
          SuspensionEndTime = input.ReadUInt32();
          break;
        }
        case 178: {
          Currency = input.ReadString();
          break;
        }
        case 184: {
          SteamLevel = input.ReadUInt32();
          break;
        }
        case 192: {
          FriendCount = input.ReadUInt32();
          break;
        }
        case 200: {
          AccountCreationTime = input.ReadUInt32();
          break;
        }
        case 208: {
          IsProfileCreated = input.ReadBool();
          break;
        }
        case 216: {
          IsSteamguardEnabled = input.ReadBool();
          break;
        }
        case 224: {
          IsPhoneVerified = input.ReadBool();
          break;
        }
        case 232: {
          IsTwoFactorAuthEnabled = input.ReadBool();
          break;
        }
        case 240: {
          TwoFactorEnabledTime = input.ReadUInt32();
          break;
        }
        case 248: {
          PhoneVerificationTime = input.ReadUInt32();
          break;
        }
        case 264: {
          PhoneId = input.ReadUInt64();
          break;
        }
        case 272: {
          IsPhoneIdentifying = input.ReadBool();
          break;
        }
        case 280: {
          RtIdentityLinked = input.ReadUInt32();
          break;
        }
        case 288: {
          RtBirthDate = input.ReadUInt32();
          break;
        }
        case 298: {
          TxnCountryCode = input.ReadString();
          break;
        }
        case 304: {
          HasAcceptedChinaSsa = input.ReadBool();
          break;
        }
        case 312: {
          IsBannedSteamChina = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EresultDeprecated = input.ReadUInt32();
          break;
        }
        case 18: {
          AccountName = input.ReadString();
          break;
        }
        case 26: {
          PersonaName = input.ReadString();
          break;
        }
        case 32: {
          IsProfilePublic = input.ReadBool();
          break;
        }
        case 40: {
          IsInventoryPublic = input.ReadBool();
          break;
        }
        case 56: {
          IsVacBanned = input.ReadBool();
          break;
        }
        case 64: {
          IsCyberCafe = input.ReadBool();
          break;
        }
        case 72: {
          IsSchoolAccount = input.ReadBool();
          break;
        }
        case 80: {
          IsLimited = input.ReadBool();
          break;
        }
        case 88: {
          IsSubscribed = input.ReadBool();
          break;
        }
        case 96: {
          Package = input.ReadUInt32();
          break;
        }
        case 104: {
          IsFreeTrialAccount = input.ReadBool();
          break;
        }
        case 112: {
          FreeTrialExpiration = input.ReadUInt32();
          break;
        }
        case 120: {
          IsLowViolence = input.ReadBool();
          break;
        }
        case 128: {
          IsAccountLockedDown = input.ReadBool();
          break;
        }
        case 136: {
          IsCommunityBanned = input.ReadBool();
          break;
        }
        case 144: {
          IsTradeBanned = input.ReadBool();
          break;
        }
        case 152: {
          TradeBanExpiration = input.ReadUInt32();
          break;
        }
        case 160: {
          Accountid = input.ReadUInt32();
          break;
        }
        case 168: {
          SuspensionEndTime = input.ReadUInt32();
          break;
        }
        case 178: {
          Currency = input.ReadString();
          break;
        }
        case 184: {
          SteamLevel = input.ReadUInt32();
          break;
        }
        case 192: {
          FriendCount = input.ReadUInt32();
          break;
        }
        case 200: {
          AccountCreationTime = input.ReadUInt32();
          break;
        }
        case 208: {
          IsProfileCreated = input.ReadBool();
          break;
        }
        case 216: {
          IsSteamguardEnabled = input.ReadBool();
          break;
        }
        case 224: {
          IsPhoneVerified = input.ReadBool();
          break;
        }
        case 232: {
          IsTwoFactorAuthEnabled = input.ReadBool();
          break;
        }
        case 240: {
          TwoFactorEnabledTime = input.ReadUInt32();
          break;
        }
        case 248: {
          PhoneVerificationTime = input.ReadUInt32();
          break;
        }
        case 264: {
          PhoneId = input.ReadUInt64();
          break;
        }
        case 272: {
          IsPhoneIdentifying = input.ReadBool();
          break;
        }
        case 280: {
          RtIdentityLinked = input.ReadUInt32();
          break;
        }
        case 288: {
          RtBirthDate = input.ReadUInt32();
          break;
        }
        case 298: {
          TxnCountryCode = input.ReadString();
          break;
        }
        case 304: {
          HasAcceptedChinaSsa = input.ReadBool();
          break;
        }
        case 312: {
          IsBannedSteamChina = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CIPLocationInfo : pb::IMessage<CIPLocationInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CIPLocationInfo> _parser = new pb::MessageParser<CIPLocationInfo>(() => new CIPLocationInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CIPLocationInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CIPLocationInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CIPLocationInfo(CIPLocationInfo other) : this() {
    _hasBits0 = other._hasBits0;
    ip_ = other.ip_;
    latitude_ = other.latitude_;
    longitude_ = other.longitude_;
    country_ = other.country_;
    state_ = other.state_;
    city_ = other.city_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CIPLocationInfo Clone() {
    return new CIPLocationInfo(this);
  }

  /// <summary>Field number for the "ip" field.</summary>
  public const int IpFieldNumber = 1;
  private readonly static uint IpDefaultValue = 0;

  private uint ip_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ip {
    get { if ((_hasBits0 & 1) != 0) { return ip_; } else { return IpDefaultValue; } }
    set {
      _hasBits0 |= 1;
      ip_ = value;
    }
  }
  /// <summary>Gets whether the "ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIp {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIp() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "latitude" field.</summary>
  public const int LatitudeFieldNumber = 2;
  private readonly static float LatitudeDefaultValue = 0F;

  private float latitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Latitude {
    get { if ((_hasBits0 & 2) != 0) { return latitude_; } else { return LatitudeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      latitude_ = value;
    }
  }
  /// <summary>Gets whether the "latitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLatitude {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "latitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLatitude() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "longitude" field.</summary>
  public const int LongitudeFieldNumber = 3;
  private readonly static float LongitudeDefaultValue = 0F;

  private float longitude_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Longitude {
    get { if ((_hasBits0 & 4) != 0) { return longitude_; } else { return LongitudeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      longitude_ = value;
    }
  }
  /// <summary>Gets whether the "longitude" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLongitude {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "longitude" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLongitude() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "country" field.</summary>
  public const int CountryFieldNumber = 4;
  private readonly static string CountryDefaultValue = "";

  private string country_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Country {
    get { return country_ ?? CountryDefaultValue; }
    set {
      country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "country" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCountry {
    get { return country_ != null; }
  }
  /// <summary>Clears the value of the "country" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCountry() {
    country_ = null;
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 5;
  private readonly static string StateDefaultValue = "";

  private string state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string State {
    get { return state_ ?? StateDefaultValue; }
    set {
      state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasState {
    get { return state_ != null; }
  }
  /// <summary>Clears the value of the "state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearState() {
    state_ = null;
  }

  /// <summary>Field number for the "city" field.</summary>
  public const int CityFieldNumber = 6;
  private readonly static string CityDefaultValue = "";

  private string city_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string City {
    get { return city_ ?? CityDefaultValue; }
    set {
      city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "city" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCity {
    get { return city_ != null; }
  }
  /// <summary>Clears the value of the "city" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCity() {
    city_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CIPLocationInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CIPLocationInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Ip != other.Ip) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
    if (Country != other.Country) return false;
    if (State != other.State) return false;
    if (City != other.City) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIp) hash ^= Ip.GetHashCode();
    if (HasLatitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
    if (HasLongitude) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
    if (HasCountry) hash ^= Country.GetHashCode();
    if (HasState) hash ^= State.GetHashCode();
    if (HasCity) hash ^= City.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Ip);
    }
    if (HasLatitude) {
      output.WriteRawTag(21);
      output.WriteFloat(Latitude);
    }
    if (HasLongitude) {
      output.WriteRawTag(29);
      output.WriteFloat(Longitude);
    }
    if (HasCountry) {
      output.WriteRawTag(34);
      output.WriteString(Country);
    }
    if (HasState) {
      output.WriteRawTag(42);
      output.WriteString(State);
    }
    if (HasCity) {
      output.WriteRawTag(50);
      output.WriteString(City);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIp) {
      output.WriteRawTag(8);
      output.WriteUInt32(Ip);
    }
    if (HasLatitude) {
      output.WriteRawTag(21);
      output.WriteFloat(Latitude);
    }
    if (HasLongitude) {
      output.WriteRawTag(29);
      output.WriteFloat(Longitude);
    }
    if (HasCountry) {
      output.WriteRawTag(34);
      output.WriteString(Country);
    }
    if (HasState) {
      output.WriteRawTag(42);
      output.WriteString(State);
    }
    if (HasCity) {
      output.WriteRawTag(50);
      output.WriteString(City);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ip);
    }
    if (HasLatitude) {
      size += 1 + 4;
    }
    if (HasLongitude) {
      size += 1 + 4;
    }
    if (HasCountry) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
    }
    if (HasState) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
    }
    if (HasCity) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CIPLocationInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasIp) {
      Ip = other.Ip;
    }
    if (other.HasLatitude) {
      Latitude = other.Latitude;
    }
    if (other.HasLongitude) {
      Longitude = other.Longitude;
    }
    if (other.HasCountry) {
      Country = other.Country;
    }
    if (other.HasState) {
      State = other.State;
    }
    if (other.HasCity) {
      City = other.City;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Ip = input.ReadUInt32();
          break;
        }
        case 21: {
          Latitude = input.ReadFloat();
          break;
        }
        case 29: {
          Longitude = input.ReadFloat();
          break;
        }
        case 34: {
          Country = input.ReadString();
          break;
        }
        case 42: {
          State = input.ReadString();
          break;
        }
        case 50: {
          City = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Ip = input.ReadUInt32();
          break;
        }
        case 21: {
          Latitude = input.ReadFloat();
          break;
        }
        case 29: {
          Longitude = input.ReadFloat();
          break;
        }
        case 34: {
          Country = input.ReadString();
          break;
        }
        case 42: {
          State = input.ReadString();
          break;
        }
        case 50: {
          City = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CGCMsgGetIPLocationResponse : pb::IMessage<CGCMsgGetIPLocationResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CGCMsgGetIPLocationResponse> _parser = new pb::MessageParser<CGCMsgGetIPLocationResponse>(() => new CGCMsgGetIPLocationResponse());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CGCMsgGetIPLocationResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::SteammessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCMsgGetIPLocationResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCMsgGetIPLocationResponse(CGCMsgGetIPLocationResponse other) : this() {
    infos_ = other.infos_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CGCMsgGetIPLocationResponse Clone() {
    return new CGCMsgGetIPLocationResponse(this);
  }

  /// <summary>Field number for the "infos" field.</summary>
  public const int InfosFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CIPLocationInfo> _repeated_infos_codec
      = pb::FieldCodec.ForMessage(10, global::CIPLocationInfo.Parser);
  private readonly pbc::RepeatedField<global::CIPLocationInfo> infos_ = new pbc::RepeatedField<global::CIPLocationInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CIPLocationInfo> Infos {
    get { return infos_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CGCMsgGetIPLocationResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CGCMsgGetIPLocationResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!infos_.Equals(other.infos_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= infos_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    infos_.WriteTo(output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    infos_.WriteTo(ref output, _repeated_infos_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += infos_.CalculateSize(_repeated_infos_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CGCMsgGetIPLocationResponse other) {
    if (other == null) {
      return;
    }
    infos_.Add(other.infos_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          infos_.AddEntriesFrom(input, _repeated_infos_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          infos_.AddEntriesFrom(ref input, _repeated_infos_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
