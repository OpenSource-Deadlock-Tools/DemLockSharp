// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: citadel_gcmessages_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from citadel_gcmessages_common.proto</summary>
public static partial class CitadelGcmessagesCommonReflection {

  #region Descriptor
  /// <summary>File descriptor for citadel_gcmessages_common.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CitadelGcmessagesCommonReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Ch9jaXRhZGVsX2djbWVzc2FnZXNfY29tbW9uLnByb3RvGhNzdGVhbW1lc3Nh",
          "Z2VzLnByb3RvGhZnY3Nka19nY21lc3NhZ2VzLnByb3RvItsDCg9DU09DaXRh",
          "ZGVsTG9iYnkSEAoIbG9iYnlfaWQYASABKAQSEAoIbWF0Y2hfaWQYAiABKAQS",
          "QwoKbWF0Y2hfbW9kZRgDIAEoDjISLkVDaXRhZGVsTWF0Y2hNb2RlOhtrX0VD",
          "aXRhZGVsTWF0Y2hNb2RlX0ludmFsaWQSQAoJZ2FtZV9tb2RlGAQgASgOMhEu",
          "RUNpdGFkZWxHYW1lTW9kZToaa19FQ2l0YWRlbEdhbWVNb2RlX0ludmFsaWQS",
          "HQoVY29tcGF0aWJpbGl0eV92ZXJzaW9uGAUgASgNEicKDmV4dHJhX21lc3Nh",
          "Z2VzGAYgAygLMg8uQ0V4dHJhTXNnQmxvY2sSFwoPc2VydmVyX3N0ZWFtX2lk",
          "GAcgASgGEkQKDHNlcnZlcl9zdGF0ZRgIIAEoDjISLkVMb2JieVNlcnZlclN0",
          "YXRlOhprX2VMb2JieVNlcnZlclN0YXRlX0Fzc2lnbhIWCg51ZHBfY29ubmVj",
          "dF9pcBgJIAEoDRIYChB1ZHBfY29ubmVjdF9wb3J0GAogASgNEhMKC3Nkcl9h",
          "ZGRyZXNzGAwgASgMEhYKDnNlcnZlcl92ZXJzaW9uGA0gASgNEhcKD3NhZmVf",
          "dG9fYWJhbmRvbhgOIAEoCCKQAQoaQ0xvYmJ5RGF0YV9Qb3N0TWF0Y2hTdXJ2",
          "ZXkSOQoHc3VydmV5cxgBIAMoCzIoLkNMb2JieURhdGFfUG9zdE1hdGNoU3Vy",
          "dmV5LlBsYXllclN1cnZleRo3CgxQbGF5ZXJTdXJ2ZXkSEgoKYWNjb3VudF9p",
          "ZBgBIAEoDRITCgtxdWVzdGlvbl9pZBgCIAEoDSKCAQoaQ01zZ0hlcm9TZWxl",
          "Y3Rpb25NYXRjaEluZm8SOQoPaGVyb19zZWxlY3Rpb25zGAEgAygLMiAuQ01z",
          "Z0hlcm9TZWxlY3Rpb25NYXRjaEluZm8uSGVybxopCgRIZXJvEg8KB2hlcm9f",
          "aWQYASABKA0SEAoIcHJpb3JpdHkYAiABKA0iggMKGUNNc2dTdGFydEZpbmRp",
          "bmdNYXRjaEluZm8SGQoRc2VydmVyX3NlYXJjaF9rZXkYASABKAkSHQoVc2Vy",
          "dmVyX2NvbW1hbmRfc3RyaW5nGAIgASgJEkMKCm1hdGNoX21vZGUYAyABKA4y",
          "Ei5FQ2l0YWRlbE1hdGNoTW9kZToba19FQ2l0YWRlbE1hdGNoTW9kZV9JbnZh",
          "bGlkEkAKCWdhbWVfbW9kZRgFIAEoDjIRLkVDaXRhZGVsR2FtZU1vZGU6Gmtf",
          "RUNpdGFkZWxHYW1lTW9kZV9JbnZhbGlkEhIKCnNvbG9fbWF0Y2gYBiABKAgS",
          "TAoOYm90X2RpZmZpY3VsdHkYByABKA4yFi5FQ2l0YWRlbEJvdERpZmZpY3Vs",
          "dHk6HGtfRUNpdGFkZWxCb3REaWZmaWN1bHR5X05vbmUSQgoLcmVnaW9uX21v",
          "ZGUYCCABKA4yEy5FQ2l0YWRlbFJlZ2lvbk1vZGU6GGtfRUNpdGFkZWxSZWdp",
          "b25Nb2RlX1JPVyKiAgoYQ01zZ0FueVRvR0NSZXBvcnRBc3NlcnRzEg8KB3Zl",
          "cnNpb24YASABKA0SOAoHYXNzZXJ0cxgCIAMoCzInLkNNc2dBbnlUb0dDUmVw",
          "b3J0QXNzZXJ0cy5UcmFja2VkQXNzZXJ0GroBCg1UcmFja2VkQXNzZXJ0EhAK",
          "CGZpbGVuYW1lGAEgASgJEhMKC2xpbmVfbnVtYmVyGAIgASgNEhIKCnNhbXBs",
          "ZV9tc2cYAyABKAkSFAoMc2FtcGxlX3N0YWNrGAQgASgJEhMKC3RpbWVzX2Zp",
          "cmVkGAUgASgNEhUKDWZ1bmN0aW9uX25hbWUYBiABKAkSEQoJY29uZGl0aW9u",
          "GAcgASgJEhkKEXRvdGFsX3RpbWVzX2ZpcmVkGAggASgNIjMKIENNc2dBbnlU",
          "b0dDUmVwb3J0QXNzZXJ0c1Jlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiUgoZ",
          "Q01zZ1JlZ2lvblBpbmdUaW1lc0NsaWVudBIdChFkYXRhX2NlbnRlcl9jb2Rl",
          "cxgBIAMoB0ICEAESFgoKcGluZ190aW1lcxgCIAMoDUICEAEiowsKD0NTT0Np",
          "dGFkZWxQYXJ0eRIQCghwYXJ0eV9pZBgBIAEoBBIoCgdtZW1iZXJzGAIgAygL",
          "MhcuQ1NPQ2l0YWRlbFBhcnR5Lk1lbWJlchIoCgdpbnZpdGVzGAMgAygLMhcu",
          "Q1NPQ2l0YWRlbFBhcnR5Lkludml0ZRIaChJkZXZfc2VydmVyX2NvbW1hbmQY",
          "BCABKAkSMQoMbGVmdF9tZW1iZXJzGAUgAygLMhsuQ1NPQ2l0YWRlbFBhcnR5",
          "LkxlZnRNZW1iZXISEQoJam9pbl9jb2RlGAYgASgEEkwKDmJvdF9kaWZmaWN1",
          "bHR5GAcgASgOMhYuRUNpdGFkZWxCb3REaWZmaWN1bHR5OhxrX0VDaXRhZGVs",
          "Qm90RGlmZmljdWx0eV9Ob25lEkMKCm1hdGNoX21vZGUYCSABKA4yEi5FQ2l0",
          "YWRlbE1hdGNoTW9kZToba19FQ2l0YWRlbE1hdGNoTW9kZV9JbnZhbGlkEkAK",
          "CWdhbWVfbW9kZRgKIAEoDjIRLkVDaXRhZGVsR2FtZU1vZGU6GmtfRUNpdGFk",
          "ZWxHYW1lTW9kZV9JbnZhbGlkEh8KF21hdGNoX21ha2luZ19zdGFydF90aW1l",
          "GAsgASgNEhkKEXNlcnZlcl9zZWFyY2hfa2V5GAwgASgJEiEKGWlzX2hpZ2hf",
          "c2tpbGxfcmFuZ2VfcGFydHkYDSABKAgSNgoJY2hhdF9tb2RlGA4gASgOMhou",
          "Q1NPQ2l0YWRlbFBhcnR5LkVDaGF0TW9kZToHa19lTm9uZRJCCgtyZWdpb25f",
          "bW9kZRgPIAEoDjITLkVDaXRhZGVsUmVnaW9uTW9kZToYa19FQ2l0YWRlbFJl",
          "Z2lvbk1vZGVfUk9XGoIDCgZNZW1iZXISEgoKYWNjb3VudF9pZBgBIAEoDRIU",
          "CgxwZXJzb25hX25hbWUYAiABKAkSFAoMcmlnaHRzX2ZsYWdzGAMgASgNEhAK",
          "CGlzX3JlYWR5GAQgASgIEkcKC3BsYXllcl90eXBlGAUgASgOMhwuQ1NPQ2l0",
          "YWRlbFBhcnR5LkVQbGF5ZXJUeXBlOhRrX2VQbGF5ZXJUeXBlX1BsYXllchId",
          "ChVjb21wYXRpYmlsaXR5X3ZlcnNpb24YBiABKA0SMgoIcGxhdGZvcm0YByAB",
          "KA4yDC5FR0NQbGF0Zm9ybToSa19lR0NQbGF0Zm9ybV9Ob25lEgwKBHRlYW0Y",
          "CCABKA0SMAoLaGVyb19yb3N0ZXIYCSABKAsyGy5DTXNnSGVyb1NlbGVjdGlv",
          "bk1hdGNoSW5mbxITCgtwZXJtaXNzaW9ucxgKIAEoBBIbChNuZXdfcGxheWVy",
          "X3Byb2dyZXNzGAsgASgEEhgKDG93bmVkX2hlcm9lcxgMIAMoDUICEAEafwoK",
          "TGVmdE1lbWJlchISCgphY2NvdW50X2lkGAEgASgNEhQKDHJpZ2h0c19mbGFn",
          "cxgCIAEoDRJHCgtwbGF5ZXJfdHlwZRgDIAEoDjIcLkNTT0NpdGFkZWxQYXJ0",
          "eS5FUGxheWVyVHlwZToUa19lUGxheWVyVHlwZV9QbGF5ZXIaRgoGSW52aXRl",
          "EhIKCmFjY291bnRfaWQYASABKA0SFAoMcGVyc29uYV9uYW1lGAIgASgJEhIK",
          "Cmludml0ZWRfYnkYAyABKA0iRwoNRU1lbWJlclJpZ2h0cxIZChVrX2VNZW1i",
          "ZXJSaWdodHNfQWRtaW4QARIbChdrX2VNZW1iZXJSaWdodHNfQ3JlYXRvchAC",
          "IkQKC0VQbGF5ZXJUeXBlEhgKFGtfZVBsYXllclR5cGVfUGxheWVyEAASGwoX",
          "a19lUGxheWVyVHlwZV9TcGVjdGF0b3IQASI7CglFQ2hhdE1vZGUSCwoHa19l",
          "Tm9uZRAAEhAKDGtfZVBhcnR5Q2hhdBABEg8KC2tfZVRlYW1DaGF0EAIiwQIK",
          "GENNc2dNYXRjaFBsYXllclBhdGhzRGF0YRIPCgd2ZXJzaW9uGAEgASgNEhIK",
          "CmludGVydmFsX3MYAiABKAISFAoMeF9yZXNvbHV0aW9uGAMgASgNEhQKDHlf",
          "cmVzb2x1dGlvbhgEIAEoDRItCgVwYXRocxgFIAMoCzIeLkNNc2dNYXRjaFBs",
          "YXllclBhdGhzRGF0YS5QYXRoGqQBCgRQYXRoEhMKC3BsYXllcl9zbG90GAEg",
          "ASgNEg0KBXhfbWluGAIgASgCEg0KBXlfbWluGAMgASgCEg0KBXhfbWF4GAQg",
          "ASgCEg0KBXlfbWF4GAUgASgCEhEKBXhfcG9zGAYgAygNQgIQARIRCgV5X3Bv",
          "cxgHIAMoDUICEAESEQoFYWxpdmUYCCADKAhCAhABEhIKBmhlYWx0aBgJIAMo",
          "DUICEAEizgUKG0NNc2dNYXRjaFBsYXllckRhbWFnZU1hdHJpeBJBCg5kYW1h",
          "Z2VfZGVhbGVycxgBIAMoCzIpLkNNc2dNYXRjaFBsYXllckRhbWFnZU1hdHJp",
          "eC5EYW1hZ2VEZWFsZXISGQoNc2FtcGxlX3RpbWVfcxgCIAMoDUICEAESQgoO",
          "c291cmNlX2RldGFpbHMYAyABKAsyKi5DTXNnTWF0Y2hQbGF5ZXJEYW1hZ2VN",
          "YXRyaXguU291cmNlRGV0YWlscxpACg5EYW1hZ2VUb1BsYXllchIaChJ0YXJn",
          "ZXRfcGxheWVyX3Nsb3QYASABKA0SEgoGZGFtYWdlGAIgAygNQgIQARp0CgxE",
          "YW1hZ2VTb3VyY2USRgoRZGFtYWdlX3RvX3BsYXllcnMYAiADKAsyKy5DTXNn",
          "TWF0Y2hQbGF5ZXJEYW1hZ2VNYXRyaXguRGFtYWdlVG9QbGF5ZXISHAoUc291",
          "cmNlX2RldGFpbHNfaW5kZXgYBCABKA0abQoMRGFtYWdlRGVhbGVyEhoKEmRl",
          "YWxlcl9wbGF5ZXJfc2xvdBgBIAEoDRJBCg5kYW1hZ2Vfc291cmNlcxgCIAMo",
          "CzIpLkNNc2dNYXRjaFBsYXllckRhbWFnZU1hdHJpeC5EYW1hZ2VTb3VyY2Ua",
          "YwoNU291cmNlRGV0YWlscxI9CglzdGF0X3R5cGUYASADKA4yJi5DTXNnTWF0",
          "Y2hQbGF5ZXJEYW1hZ2VNYXRyaXguRVN0YXRUeXBlQgIQARITCgtzb3VyY2Vf",
          "bmFtZRgCIAMoCSKAAQoJRVN0YXRUeXBlEhIKDmtfZVR5cGVfRGFtYWdlEAAS",
          "EwoPa19lVHlwZV9IZWFsaW5nEAESGQoVa19lVHlwZV9IZWFsUHJldmVudGVk",
          "EAISFQoRa19lVHlwZV9NaXRpZ2F0ZWQQAxIYChRrX2VUeXBlX0xldGhhbERh",
          "bWFnZRAEIqojChlDTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzEjgKCm1hdGNo",
          "X2luZm8YAiABKAsyJC5DTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzLk1hdGNo",
          "SW5mbxorCghQb3NpdGlvbhIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgD",
          "IAEoAhrEAQoGRGVhdGhzEhMKC2dhbWVfdGltZV9zGAEgASgNEhoKEmtpbGxl",
          "cl9wbGF5ZXJfc2xvdBgJIAEoDRI2CglkZWF0aF9wb3MYCiABKAsyIy5DTXNn",
          "TWF0Y2hNZXRhRGF0YUNvbnRlbnRzLlBvc2l0aW9uEjcKCmtpbGxlcl9wb3MY",
          "CyABKAsyIy5DTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzLlBvc2l0aW9uEhgK",
          "EGRlYXRoX2R1cmF0aW9uX3MYDCABKA0agAEKBUl0ZW1zEhMKC2dhbWVfdGlt",
          "ZV9zGAEgASgNEg8KB2l0ZW1faWQYAiABKA0SEgoKdXBncmFkZV9pZBgDIAEo",
          "DRITCgtzb2xkX3RpbWVfcxgEIAEoDRINCgVmbGFncxgFIAEoDRIZChFpbWJ1",
          "ZWRfYWJpbGl0eV9pZBgGIAEoDRpBCgRQaW5nEhEKCXBpbmdfdHlwZRgBIAEo",
          "DRIRCglwaW5nX2RhdGEYAiABKA0SEwoLZ2FtZV90aW1lX3MYAyABKA0akAEK",
          "CkdvbGRTb3VyY2USQgoGc291cmNlGAEgASgOMiYuQ01zZ01hdGNoTWV0YURh",
          "dGFDb250ZW50cy5FR29sZFNvdXJjZToKa19lUGxheWVycxINCgVraWxscxgC",
          "IAEoDRIOCgZkYW1hZ2UYAyABKA0SDAoEZ29sZBgEIAEoDRIRCglnb2xkX29y",
          "YnMYBSABKA0aLgoSQ3VzdG9tVXNlclN0YXRJbmZvEgwKBG5hbWUYASABKAkS",
          "CgoCaWQYAiABKA0aKwoOQ3VzdG9tVXNlclN0YXQSDQoFdmFsdWUYAiABKA0S",
          "CgoCaWQYAyABKA0atwgKC1BsYXllclN0YXRzEhQKDHRpbWVfc3RhbXBfcxgB",
          "IAEoDRIRCgluZXRfd29ydGgYAiABKA0SEwoLZ29sZF9wbGF5ZXIYAyABKA0S",
          "GAoQZ29sZF9wbGF5ZXJfb3JicxgEIAEoDRIcChRnb2xkX2xhbmVfY3JlZXBf",
          "b3JicxgFIAEoDRIfChdnb2xkX25ldXRyYWxfY3JlZXBfb3JicxgGIAEoDRIR",
          "Cglnb2xkX2Jvc3MYByABKA0SFQoNZ29sZF9ib3NzX29yYhgIIAEoDRIVCg1n",
          "b2xkX3RyZWFzdXJlGAkgASgNEhMKC2dvbGRfZGVuaWVkGAogASgNEhcKD2dv",
          "bGRfZGVhdGhfbG9zcxgLIAEoDRIXCg9nb2xkX2xhbmVfY3JlZXAYDCABKA0S",
          "GgoSZ29sZF9uZXV0cmFsX2NyZWVwGA0gASgNEg0KBWtpbGxzGA4gASgNEg4K",
          "BmRlYXRocxgPIAEoDRIPCgdhc3Npc3RzGBAgASgNEhMKC2NyZWVwX2tpbGxz",
          "GBEgASgNEhUKDW5ldXRyYWxfa2lsbHMYEiABKA0SFwoPcG9zc2libGVfY3Jl",
          "ZXBzGBMgASgNEhQKDGNyZWVwX2RhbWFnZRgUIAEoDRIVCg1wbGF5ZXJfZGFt",
          "YWdlGBUgASgNEhYKDm5ldXRyYWxfZGFtYWdlGBYgASgNEhMKC2Jvc3NfZGFt",
          "YWdlGBcgASgNEg4KBmRlbmllcxgYIAEoDRIWCg5wbGF5ZXJfaGVhbGluZxgZ",
          "IAEoDRIWCg5hYmlsaXR5X3BvaW50cxgaIAEoDRIUCgxzZWxmX2hlYWxpbmcY",
          "GyABKA0SGwoTcGxheWVyX2RhbWFnZV90YWtlbhgcIAEoDRISCgptYXhfaGVh",
          "bHRoGB0gASgNEhQKDHdlYXBvbl9wb3dlchgeIAEoDRISCgp0ZWNoX3Bvd2Vy",
          "GB8gASgNEhEKCXNob3RzX2hpdBggIAEoDRIUCgxzaG90c19taXNzZWQYISAB",
          "KA0SFwoPZGFtYWdlX2Fic29yYmVkGCIgASgNEhsKE2Fic29ycHRpb25fcHJv",
          "dmlkZWQYIyABKA0SGAoQaGVyb19idWxsZXRzX2hpdBgkIAEoDRIdChVoZXJv",
          "X2J1bGxldHNfaGl0X2NyaXQYJSABKA0SFgoOaGVhbF9wcmV2ZW50ZWQYJiAB",
          "KA0SEQoJaGVhbF9sb3N0GCcgASgNEjsKDGdvbGRfc291cmNlcxgoIAMoCzIl",
          "LkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuR29sZFNvdXJjZRJEChFjdXN0",
          "b21fdXNlcl9zdGF0cxgpIAMoCzIpLkNNc2dNYXRjaE1ldGFEYXRhQ29udGVu",
          "dHMuQ3VzdG9tVXNlclN0YXQSGAoQZGFtYWdlX21pdGlnYXRlZBgqIAEoDRIN",
          "CgVsZXZlbBgrIAEoDRo4CgtBYmlsaXR5U3RhdBISCgphYmlsaXR5X2lkGAEg",
          "ASgNEhUKDWFiaWxpdHlfdmFsdWUYAiABKA0aRQoKQm9va1Jld2FyZBIPCgdi",
          "b29rX2lkGAEgASgNEhEKCXhwX2Ftb3VudBgCIAEoDRITCgtzdGFydGluZ194",
          "cBgDIAEoDRq8BQoHUGxheWVycxISCgphY2NvdW50X2lkGAEgASgNEhMKC3Bs",
          "YXllcl9zbG90GAIgASgNEjgKDWRlYXRoX2RldGFpbHMYAyADKAsyIS5DTXNn",
          "TWF0Y2hNZXRhRGF0YUNvbnRlbnRzLkRlYXRocxIvCgVpdGVtcxgEIAMoCzIg",
          "LkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuSXRlbXMSNQoFc3RhdHMYBSAD",
          "KAsyJi5DTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzLlBsYXllclN0YXRzEjsK",
          "BHRlYW0YBiABKA4yEi5FQ2l0YWRlbExvYmJ5VGVhbToZa19FQ2l0YWRlbExv",
          "YmJ5VGVhbV9UZWFtMBINCgVraWxscxgIIAEoDRIOCgZkZWF0aHMYCSABKA0S",
          "DwoHYXNzaXN0cxgKIAEoDRIRCgluZXRfd29ydGgYCyABKA0SDwoHaGVyb19p",
          "ZBgMIAEoDRIRCglsYXN0X2hpdHMYDSABKA0SDgoGZGVuaWVzGA4gASgNEhYK",
          "DmFiaWxpdHlfcG9pbnRzGA8gASgNEg0KBXBhcnR5GBAgASgNEhUKDWFzc2ln",
          "bmVkX2xhbmUYESABKA0SDQoFbGV2ZWwYEiABKA0SLgoFcGluZ3MYEyADKAsy",
          "Hy5DTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzLlBpbmcSPQoNYWJpbGl0eV9z",
          "dGF0cxgUIAMoCzImLkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuQWJpbGl0",
          "eVN0YXQSGwoPc3RhdHNfdHlwZV9zdGF0GBUgAygCQgIQARI7Cgxib29rX3Jl",
          "d2FyZHMYFiADKAsyJS5DTXNnTWF0Y2hNZXRhRGF0YUNvbnRlbnRzLkJvb2tS",
          "ZXdhcmQSHAoUYWJhbmRvbl9tYXRjaF90aW1lX3MYFyABKA0ajwMKCU9iamVj",
          "dGl2ZRJPChNsZWdhY3lfb2JqZWN0aXZlX2lkGAEgASgOMhIuRUNpdGFkZWxP",
          "YmplY3RpdmU6HmtfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTBfQ29yZRIYChBk",
          "ZXN0cm95ZWRfdGltZV9zGAIgASgNEhQKDGNyZWVwX2RhbWFnZRgEIAEoDRIe",
          "ChZjcmVlcF9kYW1hZ2VfbWl0aWdhdGVkGAUgASgNEhUKDXBsYXllcl9kYW1h",
          "Z2UYBiABKA0SHwoXcGxheWVyX2RhbWFnZV9taXRpZ2F0ZWQYByABKA0SGwoT",
          "Zmlyc3RfZGFtYWdlX3RpbWVfcxgIIAEoDRJPChF0ZWFtX29iamVjdGl2ZV9p",
          "ZBgJIAEoDjIWLkVDaXRhZGVsVGVhbU9iamVjdGl2ZToca19lQ2l0YWRlbFRl",
          "YW1PYmplY3RpdmVfQ29yZRI7CgR0ZWFtGAogASgOMhIuRUNpdGFkZWxMb2Ji",
          "eVRlYW06GWtfRUNpdGFkZWxMb2JieVRlYW1fVGVhbTAarAEKB01pZEJvc3MS",
          "QgoLdGVhbV9raWxsZWQYASABKA4yEi5FQ2l0YWRlbExvYmJ5VGVhbToZa19F",
          "Q2l0YWRlbExvYmJ5VGVhbV9UZWFtMBJDCgx0ZWFtX2NsYWltZWQYAiABKA4y",
          "Ei5FQ2l0YWRlbExvYmJ5VGVhbToZa19FQ2l0YWRlbExvYmJ5VGVhbV9UZWFt",
          "MBIYChBkZXN0cm95ZWRfdGltZV9zGAMgASgNGksKBVBhdXNlEhMKC2dhbWVf",
          "dGltZV9zGAEgASgNEhgKEHBhdXNlX2R1cmF0aW9uX3MYAiABKA0SEwoLcGxh",
          "eWVyX3Nsb3QYAyABKA0aPgoSV2F0Y2hlZERlYXRoUmVwbGF5EhMKC2dhbWVf",
          "dGltZV9zGAEgASgNEhMKC3BsYXllcl9zbG90GAIgASgNGp4HCglNYXRjaElu",
          "Zm8SEgoKZHVyYXRpb25fcxgBIAEoDRJTCg1tYXRjaF9vdXRjb21lGAIgASgO",
          "MiguQ01zZ01hdGNoTWV0YURhdGFDb250ZW50cy5FTWF0Y2hPdXRjb21lOhJr",
          "X2VPdXRjb21lX1RlYW1XaW4SQwoMd2lubmluZ190ZWFtGAMgASgOMhIuRUNp",
          "dGFkZWxMb2JieVRlYW06GWtfRUNpdGFkZWxMb2JieVRlYW1fVGVhbTASMwoH",
          "cGxheWVycxgEIAMoCzIiLkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuUGxh",
          "eWVycxISCgpzdGFydF90aW1lGAUgASgNEhAKCG1hdGNoX2lkGAYgASgEEh4K",
          "FmxlZ2FjeV9vYmplY3RpdmVzX21hc2sYCCABKA0SQAoJZ2FtZV9tb2RlGAkg",
          "ASgOMhEuRUNpdGFkZWxHYW1lTW9kZToaa19FQ2l0YWRlbEdhbWVNb2RlX0lu",
          "dmFsaWQSQwoKbWF0Y2hfbW9kZRgKIAEoDjISLkVDaXRhZGVsTWF0Y2hNb2Rl",
          "OhtrX0VDaXRhZGVsTWF0Y2hNb2RlX0ludmFsaWQSOAoKb2JqZWN0aXZlcxgL",
          "IAMoCzIkLkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuT2JqZWN0aXZlEi4K",
          "C21hdGNoX3BhdGhzGAwgASgLMhkuQ01zZ01hdGNoUGxheWVyUGF0aHNEYXRh",
          "EjMKDWRhbWFnZV9tYXRyaXgYDSABKAsyHC5DTXNnTWF0Y2hQbGF5ZXJEYW1h",
          "Z2VNYXRyaXgSNgoMbWF0Y2hfcGF1c2VzGA4gAygLMiAuQ01zZ01hdGNoTWV0",
          "YURhdGFDb250ZW50cy5QYXVzZRJIChFjdXN0b21fdXNlcl9zdGF0cxgPIAMo",
          "CzItLkNNc2dNYXRjaE1ldGFEYXRhQ29udGVudHMuQ3VzdG9tVXNlclN0YXRJ",
          "bmZvEkwKFXdhdGNoZWRfZGVhdGhfcmVwbGF5cxgQIAMoCzItLkNNc2dNYXRj",
          "aE1ldGFEYXRhQ29udGVudHMuV2F0Y2hlZERlYXRoUmVwbGF5Eh0KFW9iamVj",
          "dGl2ZXNfbWFza190ZWFtMBgRIAEoBBIdChVvYmplY3RpdmVzX21hc2tfdGVh",
          "bTEYEiABKAQSNAoIbWlkX2Jvc3MYEyADKAsyIi5DTXNnTWF0Y2hNZXRhRGF0",
          "YUNvbnRlbnRzLk1pZEJvc3MiPQoNRU1hdGNoT3V0Y29tZRIWChJrX2VPdXRj",
          "b21lX1RlYW1XaW4QABIUChBrX2VPdXRjb21lX0Vycm9yEAEigAEKC0VHb2xk",
          "U291cmNlEg4KCmtfZVBsYXllcnMQARIRCg1rX2VMYW5lQ3JlZXBzEAISDwoL",
          "a19lTmV1dHJhbHMQAxINCglrX2VCb3NzZXMQBBIPCgtrX2VUcmVhc3VyZRAF",
          "Eg4KCmtfZUFzc2lzdHMQBhINCglrX2VEZW5pZXMQByJNChFDTXNnTWF0Y2hN",
          "ZXRhRGF0YRIPCgd2ZXJzaW9uGAEgASgNEhUKDW1hdGNoX2RldGFpbHMYAiAB",
          "KAwSEAoIbWF0Y2hfaWQYAyABKAQiNAoLQ01zZ01hcExpbmUSCQoBeBgBIAEo",
          "BRIJCgF5GAIgASgFEg8KB2luaXRpYWwYAyABKAgikAEKFENNc2dBY2NvdW50",
          "SGVyb1N0YXRzEg8KB2hlcm9faWQYASABKA0SDwoHc3RhdF9pZBgCIAMoDRIT",
          "Cgt0b3RhbF92YWx1ZRgDIAMoBBIVCg1tZWRhbHNfYnJvbnplGAQgAygNEhUK",
          "DW1lZGFsc19zaWx2ZXIYBSADKA0SEwoLbWVkYWxzX2dvbGQYBiADKA0iTQoU",
          "Q01zZ0FjY291bnRCb29rU3RhdHMSDwoHYm9va19pZBgBIAEoDRIPCgdib29r",
          "X3hwGAIgASgNEhMKC2Jvb2tfbWF4X3hwGAMgASgNIkwKEENNc2dBY2NvdW50",
          "U3RhdHMSEgoKYWNjb3VudF9pZBgBIAEoDRIkCgVzdGF0cxgCIAMoCzIVLkNN",
          "c2dBY2NvdW50SGVyb1N0YXRzKosBCg1DTXNnTGFuZUNvbG9yEhgKFGtfRUxh",
          "bmVDb2xvcl9JbnZhbGlkEAASFwoTa19FTGFuZUNvbG9yX1llbGxvdxABEhcK",
          "E2tfRUxhbmVDb2xvcl9PcmFuZ2UQAxIVChFrX0VMYW5lQ29sb3JfQmx1ZRAE",
          "EhcKE2tfRUxhbmVDb2xvcl9QdXJwbGUQBipkChhFR0NDaXRhZGVsQ29tbW9u",
          "TWVzc2FnZXMSHwoaa19FTXNnQW55VG9HQ1JlcG9ydEFzc2VydHMQ2DYSJwoi",
          "a19FTXNnQW55VG9HQ1JlcG9ydEFzc2VydHNSZXNwb25zZRDZNiqDAgoRRUNp",
          "dGFkZWxNYXRjaE1vZGUSHwoba19FQ2l0YWRlbE1hdGNoTW9kZV9JbnZhbGlk",
          "EAASIAoca19FQ2l0YWRlbE1hdGNoTW9kZV9VbnJhbmtlZBABEiQKIGtfRUNp",
          "dGFkZWxNYXRjaE1vZGVfUHJpdmF0ZUxvYmJ5EAISHwoba19FQ2l0YWRlbE1h",
          "dGNoTW9kZV9Db29wQm90EAMSHgoaa19FQ2l0YWRlbE1hdGNoTW9kZV9SYW5r",
          "ZWQQBBIiCh5rX0VDaXRhZGVsTWF0Y2hNb2RlX1NlcnZlclRlc3QQBRIgChxr",
          "X0VDaXRhZGVsTWF0Y2hNb2RlX1R1dG9yaWFsEAYqdAoRRUNpdGFkZWxMb2Ji",
          "eVRlYW0SHQoZa19FQ2l0YWRlbExvYmJ5VGVhbV9UZWFtMBAAEh0KGWtfRUNp",
          "dGFkZWxMb2JieVRlYW1fVGVhbTEQARIhCh1rX0VDaXRhZGVsTG9iYnlUZWFt",
          "X1NwZWN0YXRvchAQKlIKGEVDaXRhZGVsQWNjb3VudFN0YXRNZWRhbBILCgdr",
          "X2VOb25lEAASDQoJa19lQnJvbnplEAESDQoJa19lU2lsdmVyEAISCwoHa19l",
          "R29sZBADKtoLChFFQ2l0YWRlbE9iamVjdGl2ZRIiCh5rX2VDaXRhZGVsT2Jq",
          "ZWN0aXZlX1RlYW0wX0NvcmUQABIpCiVrX2VDaXRhZGVsT2JqZWN0aXZlX1Rl",
          "YW0wX1RpZXIxX0xhbmUxEAESKQola19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFt",
          "MF9UaWVyMV9MYW5lMhACEikKJWtfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTBf",
          "VGllcjFfTGFuZTMQAxIpCiVrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0wX1Rp",
          "ZXIxX0xhbmU0EAQSKQola19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMF9UaWVy",
          "Ml9MYW5lMRAFEikKJWtfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTBfVGllcjJf",
          "TGFuZTIQBhIpCiVrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0wX1RpZXIyX0xh",
          "bmUzEAcSKQola19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMF9UaWVyMl9MYW5l",
          "NBAIEiMKH2tfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTBfVGl0YW4QCRI0CjBr",
          "X2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0wX1RpdGFuU2hpZWxkR2VuZXJhdG9y",
          "XzEQChI0CjBrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0wX1RpdGFuU2hpZWxk",
          "R2VuZXJhdG9yXzIQCxIvCitrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0wX0Jh",
          "cnJhY2tCb3NzX0xhbmUxEAwSLwora19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFt",
          "MF9CYXJyYWNrQm9zc19MYW5lMhANEi8KK2tfZUNpdGFkZWxPYmplY3RpdmVf",
          "VGVhbTBfQmFycmFja0Jvc3NfTGFuZTMQDhIvCitrX2VDaXRhZGVsT2JqZWN0",
          "aXZlX1RlYW0wX0JhcnJhY2tCb3NzX0xhbmU0EA8SIgoea19lQ2l0YWRlbE9i",
          "amVjdGl2ZV9UZWFtMV9Db3JlEBASKQola19lQ2l0YWRlbE9iamVjdGl2ZV9U",
          "ZWFtMV9UaWVyMV9MYW5lMRAREikKJWtfZUNpdGFkZWxPYmplY3RpdmVfVGVh",
          "bTFfVGllcjFfTGFuZTIQEhIpCiVrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0x",
          "X1RpZXIxX0xhbmUzEBMSKQola19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMV9U",
          "aWVyMV9MYW5lNBAUEikKJWtfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTFfVGll",
          "cjJfTGFuZTEQFRIpCiVrX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0xX1RpZXIy",
          "X0xhbmUyEBYSKQola19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMV9UaWVyMl9M",
          "YW5lMxAXEikKJWtfZUNpdGFkZWxPYmplY3RpdmVfVGVhbTFfVGllcjJfTGFu",
          "ZTQQGBIjCh9rX2VDaXRhZGVsT2JqZWN0aXZlX1RlYW0xX1RpdGFuEBkSNAow",
          "a19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMV9UaXRhblNoaWVsZEdlbmVyYXRv",
          "cl8xEBoSNAowa19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMV9UaXRhblNoaWVs",
          "ZEdlbmVyYXRvcl8yEBsSLwora19lQ2l0YWRlbE9iamVjdGl2ZV9UZWFtMV9C",
          "YXJyYWNrQm9zc19MYW5lMRAcEi8KK2tfZUNpdGFkZWxPYmplY3RpdmVfVGVh",
          "bTFfQmFycmFja0Jvc3NfTGFuZTIQHRIvCitrX2VDaXRhZGVsT2JqZWN0aXZl",
          "X1RlYW0xX0JhcnJhY2tCb3NzX0xhbmUzEB4SLwora19lQ2l0YWRlbE9iamVj",
          "dGl2ZV9UZWFtMV9CYXJyYWNrQm9zc19MYW5lNBAfEiMKH2tfZUNpdGFkZWxP",
          "YmplY3RpdmVfTmV1dHJhbF9NaWQQICrIBQoVRUNpdGFkZWxUZWFtT2JqZWN0",
          "aXZlEiAKHGtfZUNpdGFkZWxUZWFtT2JqZWN0aXZlX0NvcmUQABInCiNrX2VD",
          "aXRhZGVsVGVhbU9iamVjdGl2ZV9UaWVyMV9MYW5lMRABEicKI2tfZUNpdGFk",
          "ZWxUZWFtT2JqZWN0aXZlX1RpZXIxX0xhbmUyEAISJwoja19lQ2l0YWRlbFRl",
          "YW1PYmplY3RpdmVfVGllcjFfTGFuZTMQAxInCiNrX2VDaXRhZGVsVGVhbU9i",
          "amVjdGl2ZV9UaWVyMV9MYW5lNBAEEicKI2tfZUNpdGFkZWxUZWFtT2JqZWN0",
          "aXZlX1RpZXIyX0xhbmUxEAUSJwoja19lQ2l0YWRlbFRlYW1PYmplY3RpdmVf",
          "VGllcjJfTGFuZTIQBhInCiNrX2VDaXRhZGVsVGVhbU9iamVjdGl2ZV9UaWVy",
          "Ml9MYW5lMxAHEicKI2tfZUNpdGFkZWxUZWFtT2JqZWN0aXZlX1RpZXIyX0xh",
          "bmU0EAgSIQoda19lQ2l0YWRlbFRlYW1PYmplY3RpdmVfVGl0YW4QCRIyCi5r",
          "X2VDaXRhZGVsVGVhbU9iamVjdGl2ZV9UaXRhblNoaWVsZEdlbmVyYXRvcl8x",
          "EAoSMgoua19lQ2l0YWRlbFRlYW1PYmplY3RpdmVfVGl0YW5TaGllbGRHZW5l",
          "cmF0b3JfMhALEi0KKWtfZUNpdGFkZWxUZWFtT2JqZWN0aXZlX0JhcnJhY2tC",
          "b3NzX0xhbmUxEAwSLQopa19lQ2l0YWRlbFRlYW1PYmplY3RpdmVfQmFycmFj",
          "a0Jvc3NfTGFuZTIQDRItCilrX2VDaXRhZGVsVGVhbU9iamVjdGl2ZV9CYXJy",
          "YWNrQm9zc19MYW5lMxAOEi0KKWtfZUNpdGFkZWxUZWFtT2JqZWN0aXZlX0Jh",
          "cnJhY2tCb3NzX0xhbmU0EA8q7AEKFUVDaXRhZGVsQm90RGlmZmljdWx0eRIg",
          "ChxrX0VDaXRhZGVsQm90RGlmZmljdWx0eV9Ob25lEAASIAoca19FQ2l0YWRl",
          "bEJvdERpZmZpY3VsdHlfRWFzeRABEiIKHmtfRUNpdGFkZWxCb3REaWZmaWN1",
          "bHR5X01lZGl1bRACEiAKHGtfRUNpdGFkZWxCb3REaWZmaWN1bHR5X0hhcmQQ",
          "AxIlCiFrX0VDaXRhZGVsQm90RGlmZmljdWx0eV9OaWdodG1hcmUQBBIiCh5r",
          "X0VDaXRhZGVsQm90RGlmZmljdWx0eV9HdWlkZWQQBSraAQoSRUNpdGFkZWxS",
          "ZWdpb25Nb2RlEhwKGGtfRUNpdGFkZWxSZWdpb25Nb2RlX1JPVxAAEh8KG2tf",
          "RUNpdGFkZWxSZWdpb25Nb2RlX0V1cm9wZRABEh8KG2tfRUNpdGFkZWxSZWdp",
          "b25Nb2RlX1NFQXNpYRACEiEKHWtfRUNpdGFkZWxSZWdpb25Nb2RlX1NBbWVy",
          "aWNhEAMSHwoba19FQ2l0YWRlbFJlZ2lvbk1vZGVfUnVzc2lhEAQSIAoca19F",
          "Q2l0YWRlbFJlZ2lvbk1vZGVfT2NlYW5pYRAFKpEBChBFQ2l0YWRlbEdhbWVN",
          "b2RlEh4KGmtfRUNpdGFkZWxHYW1lTW9kZV9JbnZhbGlkEAASHQoZa19FQ2l0",
          "YWRlbEdhbWVNb2RlX05vcm1hbBABEh4KGmtfRUNpdGFkZWxHYW1lTW9kZV8x",
          "djFUZXN0EAISHgoaa19FQ2l0YWRlbEdhbWVNb2RlX1NhbmRib3gQAyq8AQoR",
          "RUxvYmJ5U2VydmVyU3RhdGUSHgoaa19lTG9iYnlTZXJ2ZXJTdGF0ZV9Bc3Np",
          "Z24QABIeChprX2VMb2JieVNlcnZlclN0YXRlX0luR2FtZRABEiEKHWtfZUxv",
          "YmJ5U2VydmVyU3RhdGVfUG9zdE1hdGNoEAISIQoda19lTG9iYnlTZXJ2ZXJT",
          "dGF0ZV9TaWduZWRPdXQQAxIhCh1rX2VMb2JieVNlcnZlclN0YXRlX0FiYW5k",
          "b25lZBAE"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::SteammessagesReflection.Descriptor, global::GcsdkGcmessagesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CMsgLaneColor), typeof(global::EGCCitadelCommonMessages), typeof(global::ECitadelMatchMode), typeof(global::ECitadelLobbyTeam), typeof(global::ECitadelAccountStatMedal), typeof(global::ECitadelObjective), typeof(global::ECitadelTeamObjective), typeof(global::ECitadelBotDifficulty), typeof(global::ECitadelRegionMode), typeof(global::ECitadelGameMode), typeof(global::ELobbyServerState), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOCitadelLobby), global::CSOCitadelLobby.Parser, new[]{ "LobbyId", "MatchId", "MatchMode", "GameMode", "CompatibilityVersion", "ExtraMessages", "ServerSteamId", "ServerState", "UdpConnectIp", "UdpConnectPort", "SdrAddress", "ServerVersion", "SafeToAbandon" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CLobbyData_PostMatchSurvey), global::CLobbyData_PostMatchSurvey.Parser, new[]{ "Surveys" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey), global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey.Parser, new[]{ "AccountId", "QuestionId" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgHeroSelectionMatchInfo), global::CMsgHeroSelectionMatchInfo.Parser, new[]{ "HeroSelections" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgHeroSelectionMatchInfo.Types.Hero), global::CMsgHeroSelectionMatchInfo.Types.Hero.Parser, new[]{ "HeroId", "Priority" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgStartFindingMatchInfo), global::CMsgStartFindingMatchInfo.Parser, new[]{ "ServerSearchKey", "ServerCommandString", "MatchMode", "GameMode", "SoloMatch", "BotDifficulty", "RegionMode" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAnyToGCReportAsserts), global::CMsgAnyToGCReportAsserts.Parser, new[]{ "Version", "Asserts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAnyToGCReportAsserts.Types.TrackedAssert), global::CMsgAnyToGCReportAsserts.Types.TrackedAssert.Parser, new[]{ "Filename", "LineNumber", "SampleMsg", "SampleStack", "TimesFired", "FunctionName", "Condition", "TotalTimesFired" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAnyToGCReportAssertsResponse), global::CMsgAnyToGCReportAssertsResponse.Parser, new[]{ "Success" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRegionPingTimesClient), global::CMsgRegionPingTimesClient.Parser, new[]{ "DataCenterCodes", "PingTimes" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOCitadelParty), global::CSOCitadelParty.Parser, new[]{ "PartyId", "Members", "Invites", "DevServerCommand", "LeftMembers", "JoinCode", "BotDifficulty", "MatchMode", "GameMode", "MatchMakingStartTime", "ServerSearchKey", "IsHighSkillRangeParty", "ChatMode", "RegionMode" }, null, new[]{ typeof(global::CSOCitadelParty.Types.EMemberRights), typeof(global::CSOCitadelParty.Types.EPlayerType), typeof(global::CSOCitadelParty.Types.EChatMode) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSOCitadelParty.Types.Member), global::CSOCitadelParty.Types.Member.Parser, new[]{ "AccountId", "PersonaName", "RightsFlags", "IsReady", "PlayerType", "CompatibilityVersion", "Platform", "Team", "HeroRoster", "Permissions", "NewPlayerProgress", "OwnedHeroes" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOCitadelParty.Types.LeftMember), global::CSOCitadelParty.Types.LeftMember.Parser, new[]{ "AccountId", "RightsFlags", "PlayerType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSOCitadelParty.Types.Invite), global::CSOCitadelParty.Types.Invite.Parser, new[]{ "AccountId", "PersonaName", "InvitedBy" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerPathsData), global::CMsgMatchPlayerPathsData.Parser, new[]{ "Version", "IntervalS", "XResolution", "YResolution", "Paths" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerPathsData.Types.Path), global::CMsgMatchPlayerPathsData.Types.Path.Parser, new[]{ "PlayerSlot", "XMin", "YMin", "XMax", "YMax", "XPos", "YPos", "Alive", "Health" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerDamageMatrix), global::CMsgMatchPlayerDamageMatrix.Parser, new[]{ "DamageDealers", "SampleTimeS", "SourceDetails" }, null, new[]{ typeof(global::CMsgMatchPlayerDamageMatrix.Types.EStatType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer), global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer.Parser, new[]{ "TargetPlayerSlot", "Damage" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerDamageMatrix.Types.DamageSource), global::CMsgMatchPlayerDamageMatrix.Types.DamageSource.Parser, new[]{ "DamageToPlayers", "SourceDetailsIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer), global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer.Parser, new[]{ "DealerPlayerSlot", "DamageSources" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails), global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails.Parser, new[]{ "StatType", "SourceName" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents), global::CMsgMatchMetaDataContents.Parser, new[]{ "MatchInfo" }, null, new[]{ typeof(global::CMsgMatchMetaDataContents.Types.EMatchOutcome), typeof(global::CMsgMatchMetaDataContents.Types.EGoldSource) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Position), global::CMsgMatchMetaDataContents.Types.Position.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Deaths), global::CMsgMatchMetaDataContents.Types.Deaths.Parser, new[]{ "GameTimeS", "KillerPlayerSlot", "DeathPos", "KillerPos", "DeathDurationS" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Items), global::CMsgMatchMetaDataContents.Types.Items.Parser, new[]{ "GameTimeS", "ItemId", "UpgradeId", "SoldTimeS", "Flags", "ImbuedAbilityId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Ping), global::CMsgMatchMetaDataContents.Types.Ping.Parser, new[]{ "PingType", "PingData", "GameTimeS" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.GoldSource), global::CMsgMatchMetaDataContents.Types.GoldSource.Parser, new[]{ "Source", "Kills", "Damage", "Gold", "GoldOrbs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo), global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo.Parser, new[]{ "Name", "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.CustomUserStat), global::CMsgMatchMetaDataContents.Types.CustomUserStat.Parser, new[]{ "Value", "Id" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.PlayerStats), global::CMsgMatchMetaDataContents.Types.PlayerStats.Parser, new[]{ "TimeStampS", "NetWorth", "GoldPlayer", "GoldPlayerOrbs", "GoldLaneCreepOrbs", "GoldNeutralCreepOrbs", "GoldBoss", "GoldBossOrb", "GoldTreasure", "GoldDenied", "GoldDeathLoss", "GoldLaneCreep", "GoldNeutralCreep", "Kills", "Deaths", "Assists", "CreepKills", "NeutralKills", "PossibleCreeps", "CreepDamage", "PlayerDamage", "NeutralDamage", "BossDamage", "Denies", "PlayerHealing", "AbilityPoints", "SelfHealing", "PlayerDamageTaken", "MaxHealth", "WeaponPower", "TechPower", "ShotsHit", "ShotsMissed", "DamageAbsorbed", "AbsorptionProvided", "HeroBulletsHit", "HeroBulletsHitCrit", "HealPrevented", "HealLost", "GoldSources", "CustomUserStats", "DamageMitigated", "Level" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.AbilityStat), global::CMsgMatchMetaDataContents.Types.AbilityStat.Parser, new[]{ "AbilityId", "AbilityValue" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.BookReward), global::CMsgMatchMetaDataContents.Types.BookReward.Parser, new[]{ "BookId", "XpAmount", "StartingXp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Players), global::CMsgMatchMetaDataContents.Types.Players.Parser, new[]{ "AccountId", "PlayerSlot", "DeathDetails", "Items", "Stats", "Team", "Kills", "Deaths", "Assists", "NetWorth", "HeroId", "LastHits", "Denies", "AbilityPoints", "Party", "AssignedLane", "Level", "Pings", "AbilityStats", "StatsTypeStat", "BookRewards", "AbandonMatchTimeS" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Objective), global::CMsgMatchMetaDataContents.Types.Objective.Parser, new[]{ "LegacyObjectiveId", "DestroyedTimeS", "CreepDamage", "CreepDamageMitigated", "PlayerDamage", "PlayerDamageMitigated", "FirstDamageTimeS", "TeamObjectiveId", "Team" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.MidBoss), global::CMsgMatchMetaDataContents.Types.MidBoss.Parser, new[]{ "TeamKilled", "TeamClaimed", "DestroyedTimeS" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.Pause), global::CMsgMatchMetaDataContents.Types.Pause.Parser, new[]{ "GameTimeS", "PauseDurationS", "PlayerSlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay), global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay.Parser, new[]{ "GameTimeS", "PlayerSlot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaDataContents.Types.MatchInfo), global::CMsgMatchMetaDataContents.Types.MatchInfo.Parser, new[]{ "DurationS", "MatchOutcome", "WinningTeam", "Players", "StartTime", "MatchId", "LegacyObjectivesMask", "GameMode", "MatchMode", "Objectives", "MatchPaths", "DamageMatrix", "MatchPauses", "CustomUserStats", "WatchedDeathReplays", "ObjectivesMaskTeam0", "ObjectivesMaskTeam1", "MidBoss" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMatchMetaData), global::CMsgMatchMetaData.Parser, new[]{ "Version", "MatchDetails", "MatchId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgMapLine), global::CMsgMapLine.Parser, new[]{ "X", "Y", "Initial" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAccountHeroStats), global::CMsgAccountHeroStats.Parser, new[]{ "HeroId", "StatId", "TotalValue", "MedalsBronze", "MedalsSilver", "MedalsGold" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAccountBookStats), global::CMsgAccountBookStats.Parser, new[]{ "BookId", "BookXp", "BookMaxXp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgAccountStats), global::CMsgAccountStats.Parser, new[]{ "AccountId", "Stats" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum CMsgLaneColor {
  [pbr::OriginalName("k_ELaneColor_Invalid")] KElaneColorInvalid = 0,
  [pbr::OriginalName("k_ELaneColor_Yellow")] KElaneColorYellow = 1,
  [pbr::OriginalName("k_ELaneColor_Orange")] KElaneColorOrange = 3,
  [pbr::OriginalName("k_ELaneColor_Blue")] KElaneColorBlue = 4,
  [pbr::OriginalName("k_ELaneColor_Purple")] KElaneColorPurple = 6,
}

public enum EGCCitadelCommonMessages {
  [pbr::OriginalName("k_EMsgAnyToGCReportAsserts")] KEmsgAnyToGcreportAsserts = 7000,
  [pbr::OriginalName("k_EMsgAnyToGCReportAssertsResponse")] KEmsgAnyToGcreportAssertsResponse = 7001,
}

public enum ECitadelMatchMode {
  [pbr::OriginalName("k_ECitadelMatchMode_Invalid")] KEcitadelMatchModeInvalid = 0,
  [pbr::OriginalName("k_ECitadelMatchMode_Unranked")] KEcitadelMatchModeUnranked = 1,
  [pbr::OriginalName("k_ECitadelMatchMode_PrivateLobby")] KEcitadelMatchModePrivateLobby = 2,
  [pbr::OriginalName("k_ECitadelMatchMode_CoopBot")] KEcitadelMatchModeCoopBot = 3,
  [pbr::OriginalName("k_ECitadelMatchMode_Ranked")] KEcitadelMatchModeRanked = 4,
  [pbr::OriginalName("k_ECitadelMatchMode_ServerTest")] KEcitadelMatchModeServerTest = 5,
  [pbr::OriginalName("k_ECitadelMatchMode_Tutorial")] KEcitadelMatchModeTutorial = 6,
}

public enum ECitadelLobbyTeam {
  [pbr::OriginalName("k_ECitadelLobbyTeam_Team0")] KEcitadelLobbyTeamTeam0 = 0,
  [pbr::OriginalName("k_ECitadelLobbyTeam_Team1")] KEcitadelLobbyTeamTeam1 = 1,
  [pbr::OriginalName("k_ECitadelLobbyTeam_Spectator")] KEcitadelLobbyTeamSpectator = 16,
}

public enum ECitadelAccountStatMedal {
  [pbr::OriginalName("k_eNone")] KENone = 0,
  [pbr::OriginalName("k_eBronze")] KEBronze = 1,
  [pbr::OriginalName("k_eSilver")] KESilver = 2,
  [pbr::OriginalName("k_eGold")] KEGold = 3,
}

public enum ECitadelObjective {
  [pbr::OriginalName("k_eCitadelObjective_Team0_Core")] KECitadelObjectiveTeam0Core = 0,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier1_Lane1")] KECitadelObjectiveTeam0Tier1Lane1 = 1,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier1_Lane2")] KECitadelObjectiveTeam0Tier1Lane2 = 2,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier1_Lane3")] KECitadelObjectiveTeam0Tier1Lane3 = 3,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier1_Lane4")] KECitadelObjectiveTeam0Tier1Lane4 = 4,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier2_Lane1")] KECitadelObjectiveTeam0Tier2Lane1 = 5,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier2_Lane2")] KECitadelObjectiveTeam0Tier2Lane2 = 6,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier2_Lane3")] KECitadelObjectiveTeam0Tier2Lane3 = 7,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Tier2_Lane4")] KECitadelObjectiveTeam0Tier2Lane4 = 8,
  [pbr::OriginalName("k_eCitadelObjective_Team0_Titan")] KECitadelObjectiveTeam0Titan = 9,
  [pbr::OriginalName("k_eCitadelObjective_Team0_TitanShieldGenerator_1")] KECitadelObjectiveTeam0TitanShieldGenerator1 = 10,
  [pbr::OriginalName("k_eCitadelObjective_Team0_TitanShieldGenerator_2")] KECitadelObjectiveTeam0TitanShieldGenerator2 = 11,
  [pbr::OriginalName("k_eCitadelObjective_Team0_BarrackBoss_Lane1")] KECitadelObjectiveTeam0BarrackBossLane1 = 12,
  [pbr::OriginalName("k_eCitadelObjective_Team0_BarrackBoss_Lane2")] KECitadelObjectiveTeam0BarrackBossLane2 = 13,
  [pbr::OriginalName("k_eCitadelObjective_Team0_BarrackBoss_Lane3")] KECitadelObjectiveTeam0BarrackBossLane3 = 14,
  [pbr::OriginalName("k_eCitadelObjective_Team0_BarrackBoss_Lane4")] KECitadelObjectiveTeam0BarrackBossLane4 = 15,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Core")] KECitadelObjectiveTeam1Core = 16,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier1_Lane1")] KECitadelObjectiveTeam1Tier1Lane1 = 17,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier1_Lane2")] KECitadelObjectiveTeam1Tier1Lane2 = 18,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier1_Lane3")] KECitadelObjectiveTeam1Tier1Lane3 = 19,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier1_Lane4")] KECitadelObjectiveTeam1Tier1Lane4 = 20,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier2_Lane1")] KECitadelObjectiveTeam1Tier2Lane1 = 21,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier2_Lane2")] KECitadelObjectiveTeam1Tier2Lane2 = 22,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier2_Lane3")] KECitadelObjectiveTeam1Tier2Lane3 = 23,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Tier2_Lane4")] KECitadelObjectiveTeam1Tier2Lane4 = 24,
  [pbr::OriginalName("k_eCitadelObjective_Team1_Titan")] KECitadelObjectiveTeam1Titan = 25,
  [pbr::OriginalName("k_eCitadelObjective_Team1_TitanShieldGenerator_1")] KECitadelObjectiveTeam1TitanShieldGenerator1 = 26,
  [pbr::OriginalName("k_eCitadelObjective_Team1_TitanShieldGenerator_2")] KECitadelObjectiveTeam1TitanShieldGenerator2 = 27,
  [pbr::OriginalName("k_eCitadelObjective_Team1_BarrackBoss_Lane1")] KECitadelObjectiveTeam1BarrackBossLane1 = 28,
  [pbr::OriginalName("k_eCitadelObjective_Team1_BarrackBoss_Lane2")] KECitadelObjectiveTeam1BarrackBossLane2 = 29,
  [pbr::OriginalName("k_eCitadelObjective_Team1_BarrackBoss_Lane3")] KECitadelObjectiveTeam1BarrackBossLane3 = 30,
  [pbr::OriginalName("k_eCitadelObjective_Team1_BarrackBoss_Lane4")] KECitadelObjectiveTeam1BarrackBossLane4 = 31,
  [pbr::OriginalName("k_eCitadelObjective_Neutral_Mid")] KECitadelObjectiveNeutralMid = 32,
}

public enum ECitadelTeamObjective {
  [pbr::OriginalName("k_eCitadelTeamObjective_Core")] KECitadelTeamObjectiveCore = 0,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier1_Lane1")] KECitadelTeamObjectiveTier1Lane1 = 1,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier1_Lane2")] KECitadelTeamObjectiveTier1Lane2 = 2,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier1_Lane3")] KECitadelTeamObjectiveTier1Lane3 = 3,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier1_Lane4")] KECitadelTeamObjectiveTier1Lane4 = 4,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier2_Lane1")] KECitadelTeamObjectiveTier2Lane1 = 5,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier2_Lane2")] KECitadelTeamObjectiveTier2Lane2 = 6,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier2_Lane3")] KECitadelTeamObjectiveTier2Lane3 = 7,
  [pbr::OriginalName("k_eCitadelTeamObjective_Tier2_Lane4")] KECitadelTeamObjectiveTier2Lane4 = 8,
  [pbr::OriginalName("k_eCitadelTeamObjective_Titan")] KECitadelTeamObjectiveTitan = 9,
  [pbr::OriginalName("k_eCitadelTeamObjective_TitanShieldGenerator_1")] KECitadelTeamObjectiveTitanShieldGenerator1 = 10,
  [pbr::OriginalName("k_eCitadelTeamObjective_TitanShieldGenerator_2")] KECitadelTeamObjectiveTitanShieldGenerator2 = 11,
  [pbr::OriginalName("k_eCitadelTeamObjective_BarrackBoss_Lane1")] KECitadelTeamObjectiveBarrackBossLane1 = 12,
  [pbr::OriginalName("k_eCitadelTeamObjective_BarrackBoss_Lane2")] KECitadelTeamObjectiveBarrackBossLane2 = 13,
  [pbr::OriginalName("k_eCitadelTeamObjective_BarrackBoss_Lane3")] KECitadelTeamObjectiveBarrackBossLane3 = 14,
  [pbr::OriginalName("k_eCitadelTeamObjective_BarrackBoss_Lane4")] KECitadelTeamObjectiveBarrackBossLane4 = 15,
}

public enum ECitadelBotDifficulty {
  [pbr::OriginalName("k_ECitadelBotDifficulty_None")] KEcitadelBotDifficultyNone = 0,
  [pbr::OriginalName("k_ECitadelBotDifficulty_Easy")] KEcitadelBotDifficultyEasy = 1,
  [pbr::OriginalName("k_ECitadelBotDifficulty_Medium")] KEcitadelBotDifficultyMedium = 2,
  [pbr::OriginalName("k_ECitadelBotDifficulty_Hard")] KEcitadelBotDifficultyHard = 3,
  [pbr::OriginalName("k_ECitadelBotDifficulty_Nightmare")] KEcitadelBotDifficultyNightmare = 4,
  [pbr::OriginalName("k_ECitadelBotDifficulty_Guided")] KEcitadelBotDifficultyGuided = 5,
}

public enum ECitadelRegionMode {
  [pbr::OriginalName("k_ECitadelRegionMode_ROW")] KEcitadelRegionModeRow = 0,
  [pbr::OriginalName("k_ECitadelRegionMode_Europe")] KEcitadelRegionModeEurope = 1,
  [pbr::OriginalName("k_ECitadelRegionMode_SEAsia")] KEcitadelRegionModeSeasia = 2,
  [pbr::OriginalName("k_ECitadelRegionMode_SAmerica")] KEcitadelRegionModeSamerica = 3,
  [pbr::OriginalName("k_ECitadelRegionMode_Russia")] KEcitadelRegionModeRussia = 4,
  [pbr::OriginalName("k_ECitadelRegionMode_Oceania")] KEcitadelRegionModeOceania = 5,
}

public enum ECitadelGameMode {
  [pbr::OriginalName("k_ECitadelGameMode_Invalid")] KEcitadelGameModeInvalid = 0,
  [pbr::OriginalName("k_ECitadelGameMode_Normal")] KEcitadelGameModeNormal = 1,
  [pbr::OriginalName("k_ECitadelGameMode_1v1Test")] KEcitadelGameMode1V1Test = 2,
  [pbr::OriginalName("k_ECitadelGameMode_Sandbox")] KEcitadelGameModeSandbox = 3,
}

public enum ELobbyServerState {
  [pbr::OriginalName("k_eLobbyServerState_Assign")] KELobbyServerStateAssign = 0,
  [pbr::OriginalName("k_eLobbyServerState_InGame")] KELobbyServerStateInGame = 1,
  [pbr::OriginalName("k_eLobbyServerState_PostMatch")] KELobbyServerStatePostMatch = 2,
  [pbr::OriginalName("k_eLobbyServerState_SignedOut")] KELobbyServerStateSignedOut = 3,
  [pbr::OriginalName("k_eLobbyServerState_Abandoned")] KELobbyServerStateAbandoned = 4,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSOCitadelLobby : pb::IMessage<CSOCitadelLobby>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOCitadelLobby> _parser = new pb::MessageParser<CSOCitadelLobby>(() => new CSOCitadelLobby());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOCitadelLobby> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelLobby() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelLobby(CSOCitadelLobby other) : this() {
    _hasBits0 = other._hasBits0;
    lobbyId_ = other.lobbyId_;
    matchId_ = other.matchId_;
    matchMode_ = other.matchMode_;
    gameMode_ = other.gameMode_;
    compatibilityVersion_ = other.compatibilityVersion_;
    extraMessages_ = other.extraMessages_.Clone();
    serverSteamId_ = other.serverSteamId_;
    serverState_ = other.serverState_;
    udpConnectIp_ = other.udpConnectIp_;
    udpConnectPort_ = other.udpConnectPort_;
    sdrAddress_ = other.sdrAddress_;
    serverVersion_ = other.serverVersion_;
    safeToAbandon_ = other.safeToAbandon_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelLobby Clone() {
    return new CSOCitadelLobby(this);
  }

  /// <summary>Field number for the "lobby_id" field.</summary>
  public const int LobbyIdFieldNumber = 1;
  private readonly static ulong LobbyIdDefaultValue = 0UL;

  private ulong lobbyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong LobbyId {
    get { if ((_hasBits0 & 1) != 0) { return lobbyId_; } else { return LobbyIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      lobbyId_ = value;
    }
  }
  /// <summary>Gets whether the "lobby_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLobbyId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "lobby_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLobbyId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 2;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "match_mode" field.</summary>
  public const int MatchModeFieldNumber = 3;
  private readonly static global::ECitadelMatchMode MatchModeDefaultValue = global::ECitadelMatchMode.KEcitadelMatchModeInvalid;

  private global::ECitadelMatchMode matchMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelMatchMode MatchMode {
    get { if ((_hasBits0 & 4) != 0) { return matchMode_; } else { return MatchModeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      matchMode_ = value;
    }
  }
  /// <summary>Gets whether the "match_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchMode {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "match_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchMode() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "game_mode" field.</summary>
  public const int GameModeFieldNumber = 4;
  private readonly static global::ECitadelGameMode GameModeDefaultValue = global::ECitadelGameMode.KEcitadelGameModeInvalid;

  private global::ECitadelGameMode gameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelGameMode GameMode {
    get { if ((_hasBits0 & 8) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      gameMode_ = value;
    }
  }
  /// <summary>Gets whether the "game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMode {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMode() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "compatibility_version" field.</summary>
  public const int CompatibilityVersionFieldNumber = 5;
  private readonly static uint CompatibilityVersionDefaultValue = 0;

  private uint compatibilityVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CompatibilityVersion {
    get { if ((_hasBits0 & 16) != 0) { return compatibilityVersion_; } else { return CompatibilityVersionDefaultValue; } }
    set {
      _hasBits0 |= 16;
      compatibilityVersion_ = value;
    }
  }
  /// <summary>Gets whether the "compatibility_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCompatibilityVersion {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "compatibility_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCompatibilityVersion() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "extra_messages" field.</summary>
  public const int ExtraMessagesFieldNumber = 6;
  private static readonly pb::FieldCodec<global::CExtraMsgBlock> _repeated_extraMessages_codec
      = pb::FieldCodec.ForMessage(50, global::CExtraMsgBlock.Parser);
  private readonly pbc::RepeatedField<global::CExtraMsgBlock> extraMessages_ = new pbc::RepeatedField<global::CExtraMsgBlock>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CExtraMsgBlock> ExtraMessages {
    get { return extraMessages_; }
  }

  /// <summary>Field number for the "server_steam_id" field.</summary>
  public const int ServerSteamIdFieldNumber = 7;
  private readonly static ulong ServerSteamIdDefaultValue = 0UL;

  private ulong serverSteamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ServerSteamId {
    get { if ((_hasBits0 & 32) != 0) { return serverSteamId_; } else { return ServerSteamIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      serverSteamId_ = value;
    }
  }
  /// <summary>Gets whether the "server_steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerSteamId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "server_steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerSteamId() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "server_state" field.</summary>
  public const int ServerStateFieldNumber = 8;
  private readonly static global::ELobbyServerState ServerStateDefaultValue = global::ELobbyServerState.KELobbyServerStateAssign;

  private global::ELobbyServerState serverState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ELobbyServerState ServerState {
    get { if ((_hasBits0 & 64) != 0) { return serverState_; } else { return ServerStateDefaultValue; } }
    set {
      _hasBits0 |= 64;
      serverState_ = value;
    }
  }
  /// <summary>Gets whether the "server_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerState {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "server_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerState() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "udp_connect_ip" field.</summary>
  public const int UdpConnectIpFieldNumber = 9;
  private readonly static uint UdpConnectIpDefaultValue = 0;

  private uint udpConnectIp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UdpConnectIp {
    get { if ((_hasBits0 & 128) != 0) { return udpConnectIp_; } else { return UdpConnectIpDefaultValue; } }
    set {
      _hasBits0 |= 128;
      udpConnectIp_ = value;
    }
  }
  /// <summary>Gets whether the "udp_connect_ip" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUdpConnectIp {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "udp_connect_ip" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUdpConnectIp() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "udp_connect_port" field.</summary>
  public const int UdpConnectPortFieldNumber = 10;
  private readonly static uint UdpConnectPortDefaultValue = 0;

  private uint udpConnectPort_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UdpConnectPort {
    get { if ((_hasBits0 & 256) != 0) { return udpConnectPort_; } else { return UdpConnectPortDefaultValue; } }
    set {
      _hasBits0 |= 256;
      udpConnectPort_ = value;
    }
  }
  /// <summary>Gets whether the "udp_connect_port" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUdpConnectPort {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "udp_connect_port" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUdpConnectPort() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "sdr_address" field.</summary>
  public const int SdrAddressFieldNumber = 12;
  private readonly static pb::ByteString SdrAddressDefaultValue = pb::ByteString.Empty;

  private pb::ByteString sdrAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SdrAddress {
    get { return sdrAddress_ ?? SdrAddressDefaultValue; }
    set {
      sdrAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sdr_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSdrAddress {
    get { return sdrAddress_ != null; }
  }
  /// <summary>Clears the value of the "sdr_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSdrAddress() {
    sdrAddress_ = null;
  }

  /// <summary>Field number for the "server_version" field.</summary>
  public const int ServerVersionFieldNumber = 13;
  private readonly static uint ServerVersionDefaultValue = 0;

  private uint serverVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerVersion {
    get { if ((_hasBits0 & 512) != 0) { return serverVersion_; } else { return ServerVersionDefaultValue; } }
    set {
      _hasBits0 |= 512;
      serverVersion_ = value;
    }
  }
  /// <summary>Gets whether the "server_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerVersion {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "server_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerVersion() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "safe_to_abandon" field.</summary>
  public const int SafeToAbandonFieldNumber = 14;
  private readonly static bool SafeToAbandonDefaultValue = false;

  private bool safeToAbandon_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SafeToAbandon {
    get { if ((_hasBits0 & 1024) != 0) { return safeToAbandon_; } else { return SafeToAbandonDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      safeToAbandon_ = value;
    }
  }
  /// <summary>Gets whether the "safe_to_abandon" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSafeToAbandon {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "safe_to_abandon" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSafeToAbandon() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOCitadelLobby);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOCitadelLobby other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (LobbyId != other.LobbyId) return false;
    if (MatchId != other.MatchId) return false;
    if (MatchMode != other.MatchMode) return false;
    if (GameMode != other.GameMode) return false;
    if (CompatibilityVersion != other.CompatibilityVersion) return false;
    if(!extraMessages_.Equals(other.extraMessages_)) return false;
    if (ServerSteamId != other.ServerSteamId) return false;
    if (ServerState != other.ServerState) return false;
    if (UdpConnectIp != other.UdpConnectIp) return false;
    if (UdpConnectPort != other.UdpConnectPort) return false;
    if (SdrAddress != other.SdrAddress) return false;
    if (ServerVersion != other.ServerVersion) return false;
    if (SafeToAbandon != other.SafeToAbandon) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasLobbyId) hash ^= LobbyId.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (HasMatchMode) hash ^= MatchMode.GetHashCode();
    if (HasGameMode) hash ^= GameMode.GetHashCode();
    if (HasCompatibilityVersion) hash ^= CompatibilityVersion.GetHashCode();
    hash ^= extraMessages_.GetHashCode();
    if (HasServerSteamId) hash ^= ServerSteamId.GetHashCode();
    if (HasServerState) hash ^= ServerState.GetHashCode();
    if (HasUdpConnectIp) hash ^= UdpConnectIp.GetHashCode();
    if (HasUdpConnectPort) hash ^= UdpConnectPort.GetHashCode();
    if (HasSdrAddress) hash ^= SdrAddress.GetHashCode();
    if (HasServerVersion) hash ^= ServerVersion.GetHashCode();
    if (HasSafeToAbandon) hash ^= SafeToAbandon.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasLobbyId) {
      output.WriteRawTag(8);
      output.WriteUInt64(LobbyId);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasMatchMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(32);
      output.WriteEnum((int) GameMode);
    }
    if (HasCompatibilityVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(CompatibilityVersion);
    }
    extraMessages_.WriteTo(output, _repeated_extraMessages_codec);
    if (HasServerSteamId) {
      output.WriteRawTag(57);
      output.WriteFixed64(ServerSteamId);
    }
    if (HasServerState) {
      output.WriteRawTag(64);
      output.WriteEnum((int) ServerState);
    }
    if (HasUdpConnectIp) {
      output.WriteRawTag(72);
      output.WriteUInt32(UdpConnectIp);
    }
    if (HasUdpConnectPort) {
      output.WriteRawTag(80);
      output.WriteUInt32(UdpConnectPort);
    }
    if (HasSdrAddress) {
      output.WriteRawTag(98);
      output.WriteBytes(SdrAddress);
    }
    if (HasServerVersion) {
      output.WriteRawTag(104);
      output.WriteUInt32(ServerVersion);
    }
    if (HasSafeToAbandon) {
      output.WriteRawTag(112);
      output.WriteBool(SafeToAbandon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasLobbyId) {
      output.WriteRawTag(8);
      output.WriteUInt64(LobbyId);
    }
    if (HasMatchId) {
      output.WriteRawTag(16);
      output.WriteUInt64(MatchId);
    }
    if (HasMatchMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(32);
      output.WriteEnum((int) GameMode);
    }
    if (HasCompatibilityVersion) {
      output.WriteRawTag(40);
      output.WriteUInt32(CompatibilityVersion);
    }
    extraMessages_.WriteTo(ref output, _repeated_extraMessages_codec);
    if (HasServerSteamId) {
      output.WriteRawTag(57);
      output.WriteFixed64(ServerSteamId);
    }
    if (HasServerState) {
      output.WriteRawTag(64);
      output.WriteEnum((int) ServerState);
    }
    if (HasUdpConnectIp) {
      output.WriteRawTag(72);
      output.WriteUInt32(UdpConnectIp);
    }
    if (HasUdpConnectPort) {
      output.WriteRawTag(80);
      output.WriteUInt32(UdpConnectPort);
    }
    if (HasSdrAddress) {
      output.WriteRawTag(98);
      output.WriteBytes(SdrAddress);
    }
    if (HasServerVersion) {
      output.WriteRawTag(104);
      output.WriteUInt32(ServerVersion);
    }
    if (HasSafeToAbandon) {
      output.WriteRawTag(112);
      output.WriteBool(SafeToAbandon);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasLobbyId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LobbyId);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (HasMatchMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
    }
    if (HasGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
    }
    if (HasCompatibilityVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CompatibilityVersion);
    }
    size += extraMessages_.CalculateSize(_repeated_extraMessages_codec);
    if (HasServerSteamId) {
      size += 1 + 8;
    }
    if (HasServerState) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServerState);
    }
    if (HasUdpConnectIp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UdpConnectIp);
    }
    if (HasUdpConnectPort) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UdpConnectPort);
    }
    if (HasSdrAddress) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SdrAddress);
    }
    if (HasServerVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerVersion);
    }
    if (HasSafeToAbandon) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOCitadelLobby other) {
    if (other == null) {
      return;
    }
    if (other.HasLobbyId) {
      LobbyId = other.LobbyId;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    if (other.HasMatchMode) {
      MatchMode = other.MatchMode;
    }
    if (other.HasGameMode) {
      GameMode = other.GameMode;
    }
    if (other.HasCompatibilityVersion) {
      CompatibilityVersion = other.CompatibilityVersion;
    }
    extraMessages_.Add(other.extraMessages_);
    if (other.HasServerSteamId) {
      ServerSteamId = other.ServerSteamId;
    }
    if (other.HasServerState) {
      ServerState = other.ServerState;
    }
    if (other.HasUdpConnectIp) {
      UdpConnectIp = other.UdpConnectIp;
    }
    if (other.HasUdpConnectPort) {
      UdpConnectPort = other.UdpConnectPort;
    }
    if (other.HasSdrAddress) {
      SdrAddress = other.SdrAddress;
    }
    if (other.HasServerVersion) {
      ServerVersion = other.ServerVersion;
    }
    if (other.HasSafeToAbandon) {
      SafeToAbandon = other.SafeToAbandon;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          LobbyId = input.ReadUInt64();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 32: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 40: {
          CompatibilityVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          extraMessages_.AddEntriesFrom(input, _repeated_extraMessages_codec);
          break;
        }
        case 57: {
          ServerSteamId = input.ReadFixed64();
          break;
        }
        case 64: {
          ServerState = (global::ELobbyServerState) input.ReadEnum();
          break;
        }
        case 72: {
          UdpConnectIp = input.ReadUInt32();
          break;
        }
        case 80: {
          UdpConnectPort = input.ReadUInt32();
          break;
        }
        case 98: {
          SdrAddress = input.ReadBytes();
          break;
        }
        case 104: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 112: {
          SafeToAbandon = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          LobbyId = input.ReadUInt64();
          break;
        }
        case 16: {
          MatchId = input.ReadUInt64();
          break;
        }
        case 24: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 32: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 40: {
          CompatibilityVersion = input.ReadUInt32();
          break;
        }
        case 50: {
          extraMessages_.AddEntriesFrom(ref input, _repeated_extraMessages_codec);
          break;
        }
        case 57: {
          ServerSteamId = input.ReadFixed64();
          break;
        }
        case 64: {
          ServerState = (global::ELobbyServerState) input.ReadEnum();
          break;
        }
        case 72: {
          UdpConnectIp = input.ReadUInt32();
          break;
        }
        case 80: {
          UdpConnectPort = input.ReadUInt32();
          break;
        }
        case 98: {
          SdrAddress = input.ReadBytes();
          break;
        }
        case 104: {
          ServerVersion = input.ReadUInt32();
          break;
        }
        case 112: {
          SafeToAbandon = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CLobbyData_PostMatchSurvey : pb::IMessage<CLobbyData_PostMatchSurvey>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CLobbyData_PostMatchSurvey> _parser = new pb::MessageParser<CLobbyData_PostMatchSurvey>(() => new CLobbyData_PostMatchSurvey());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CLobbyData_PostMatchSurvey> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLobbyData_PostMatchSurvey() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLobbyData_PostMatchSurvey(CLobbyData_PostMatchSurvey other) : this() {
    surveys_ = other.surveys_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CLobbyData_PostMatchSurvey Clone() {
    return new CLobbyData_PostMatchSurvey(this);
  }

  /// <summary>Field number for the "surveys" field.</summary>
  public const int SurveysFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey> _repeated_surveys_codec
      = pb::FieldCodec.ForMessage(10, global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey.Parser);
  private readonly pbc::RepeatedField<global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey> surveys_ = new pbc::RepeatedField<global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CLobbyData_PostMatchSurvey.Types.PlayerSurvey> Surveys {
    get { return surveys_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CLobbyData_PostMatchSurvey);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CLobbyData_PostMatchSurvey other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!surveys_.Equals(other.surveys_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= surveys_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    surveys_.WriteTo(output, _repeated_surveys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    surveys_.WriteTo(ref output, _repeated_surveys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += surveys_.CalculateSize(_repeated_surveys_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CLobbyData_PostMatchSurvey other) {
    if (other == null) {
      return;
    }
    surveys_.Add(other.surveys_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          surveys_.AddEntriesFrom(input, _repeated_surveys_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          surveys_.AddEntriesFrom(ref input, _repeated_surveys_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CLobbyData_PostMatchSurvey message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class PlayerSurvey : pb::IMessage<PlayerSurvey>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<PlayerSurvey> _parser = new pb::MessageParser<PlayerSurvey>(() => new PlayerSurvey());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<PlayerSurvey> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CLobbyData_PostMatchSurvey.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerSurvey() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerSurvey(PlayerSurvey other) : this() {
        _hasBits0 = other._hasBits0;
        accountId_ = other.accountId_;
        questionId_ = other.questionId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerSurvey Clone() {
        return new PlayerSurvey(this);
      }

      /// <summary>Field number for the "account_id" field.</summary>
      public const int AccountIdFieldNumber = 1;
      private readonly static uint AccountIdDefaultValue = 0;

      private uint accountId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountId {
        get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountId_ = value;
        }
      }
      /// <summary>Gets whether the "account_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "question_id" field.</summary>
      public const int QuestionIdFieldNumber = 2;
      private readonly static uint QuestionIdDefaultValue = 0;

      private uint questionId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint QuestionId {
        get { if ((_hasBits0 & 2) != 0) { return questionId_; } else { return QuestionIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          questionId_ = value;
        }
      }
      /// <summary>Gets whether the "question_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasQuestionId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "question_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearQuestionId() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as PlayerSurvey);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(PlayerSurvey other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountId != other.AccountId) return false;
        if (QuestionId != other.QuestionId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountId) hash ^= AccountId.GetHashCode();
        if (HasQuestionId) hash ^= QuestionId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasQuestionId) {
          output.WriteRawTag(16);
          output.WriteUInt32(QuestionId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasQuestionId) {
          output.WriteRawTag(16);
          output.WriteUInt32(QuestionId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
        }
        if (HasQuestionId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestionId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(PlayerSurvey other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasQuestionId) {
          QuestionId = other.QuestionId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              QuestionId = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              QuestionId = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgHeroSelectionMatchInfo : pb::IMessage<CMsgHeroSelectionMatchInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgHeroSelectionMatchInfo> _parser = new pb::MessageParser<CMsgHeroSelectionMatchInfo>(() => new CMsgHeroSelectionMatchInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgHeroSelectionMatchInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgHeroSelectionMatchInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgHeroSelectionMatchInfo(CMsgHeroSelectionMatchInfo other) : this() {
    heroSelections_ = other.heroSelections_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgHeroSelectionMatchInfo Clone() {
    return new CMsgHeroSelectionMatchInfo(this);
  }

  /// <summary>Field number for the "hero_selections" field.</summary>
  public const int HeroSelectionsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgHeroSelectionMatchInfo.Types.Hero> _repeated_heroSelections_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgHeroSelectionMatchInfo.Types.Hero.Parser);
  private readonly pbc::RepeatedField<global::CMsgHeroSelectionMatchInfo.Types.Hero> heroSelections_ = new pbc::RepeatedField<global::CMsgHeroSelectionMatchInfo.Types.Hero>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgHeroSelectionMatchInfo.Types.Hero> HeroSelections {
    get { return heroSelections_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgHeroSelectionMatchInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgHeroSelectionMatchInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!heroSelections_.Equals(other.heroSelections_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= heroSelections_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    heroSelections_.WriteTo(output, _repeated_heroSelections_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    heroSelections_.WriteTo(ref output, _repeated_heroSelections_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += heroSelections_.CalculateSize(_repeated_heroSelections_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgHeroSelectionMatchInfo other) {
    if (other == null) {
      return;
    }
    heroSelections_.Add(other.heroSelections_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          heroSelections_.AddEntriesFrom(input, _repeated_heroSelections_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          heroSelections_.AddEntriesFrom(ref input, _repeated_heroSelections_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgHeroSelectionMatchInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Hero : pb::IMessage<Hero>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Hero> _parser = new pb::MessageParser<Hero>(() => new Hero());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Hero> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgHeroSelectionMatchInfo.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Hero() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Hero(Hero other) : this() {
        _hasBits0 = other._hasBits0;
        heroId_ = other.heroId_;
        priority_ = other.priority_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Hero Clone() {
        return new Hero(this);
      }

      /// <summary>Field number for the "hero_id" field.</summary>
      public const int HeroIdFieldNumber = 1;
      private readonly static uint HeroIdDefaultValue = 0;

      private uint heroId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HeroId {
        get { if ((_hasBits0 & 1) != 0) { return heroId_; } else { return HeroIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          heroId_ = value;
        }
      }
      /// <summary>Gets whether the "hero_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeroId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "hero_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeroId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "priority" field.</summary>
      public const int PriorityFieldNumber = 2;
      private readonly static uint PriorityDefaultValue = 0;

      private uint priority_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Priority {
        get { if ((_hasBits0 & 2) != 0) { return priority_; } else { return PriorityDefaultValue; } }
        set {
          _hasBits0 |= 2;
          priority_ = value;
        }
      }
      /// <summary>Gets whether the "priority" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPriority {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "priority" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPriority() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Hero);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Hero other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (HeroId != other.HeroId) return false;
        if (Priority != other.Priority) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasHeroId) hash ^= HeroId.GetHashCode();
        if (HasPriority) hash ^= Priority.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasHeroId) {
          output.WriteRawTag(8);
          output.WriteUInt32(HeroId);
        }
        if (HasPriority) {
          output.WriteRawTag(16);
          output.WriteUInt32(Priority);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasHeroId) {
          output.WriteRawTag(8);
          output.WriteUInt32(HeroId);
        }
        if (HasPriority) {
          output.WriteRawTag(16);
          output.WriteUInt32(Priority);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasHeroId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeroId);
        }
        if (HasPriority) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Priority);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Hero other) {
        if (other == null) {
          return;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasPriority) {
          Priority = other.Priority;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              HeroId = input.ReadUInt32();
              break;
            }
            case 16: {
              Priority = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              HeroId = input.ReadUInt32();
              break;
            }
            case 16: {
              Priority = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgStartFindingMatchInfo : pb::IMessage<CMsgStartFindingMatchInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgStartFindingMatchInfo> _parser = new pb::MessageParser<CMsgStartFindingMatchInfo>(() => new CMsgStartFindingMatchInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgStartFindingMatchInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgStartFindingMatchInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgStartFindingMatchInfo(CMsgStartFindingMatchInfo other) : this() {
    _hasBits0 = other._hasBits0;
    serverSearchKey_ = other.serverSearchKey_;
    serverCommandString_ = other.serverCommandString_;
    matchMode_ = other.matchMode_;
    gameMode_ = other.gameMode_;
    soloMatch_ = other.soloMatch_;
    botDifficulty_ = other.botDifficulty_;
    regionMode_ = other.regionMode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgStartFindingMatchInfo Clone() {
    return new CMsgStartFindingMatchInfo(this);
  }

  /// <summary>Field number for the "server_search_key" field.</summary>
  public const int ServerSearchKeyFieldNumber = 1;
  private readonly static string ServerSearchKeyDefaultValue = "";

  private string serverSearchKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerSearchKey {
    get { return serverSearchKey_ ?? ServerSearchKeyDefaultValue; }
    set {
      serverSearchKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_search_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerSearchKey {
    get { return serverSearchKey_ != null; }
  }
  /// <summary>Clears the value of the "server_search_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerSearchKey() {
    serverSearchKey_ = null;
  }

  /// <summary>Field number for the "server_command_string" field.</summary>
  public const int ServerCommandStringFieldNumber = 2;
  private readonly static string ServerCommandStringDefaultValue = "";

  private string serverCommandString_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerCommandString {
    get { return serverCommandString_ ?? ServerCommandStringDefaultValue; }
    set {
      serverCommandString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_command_string" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerCommandString {
    get { return serverCommandString_ != null; }
  }
  /// <summary>Clears the value of the "server_command_string" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerCommandString() {
    serverCommandString_ = null;
  }

  /// <summary>Field number for the "match_mode" field.</summary>
  public const int MatchModeFieldNumber = 3;
  private readonly static global::ECitadelMatchMode MatchModeDefaultValue = global::ECitadelMatchMode.KEcitadelMatchModeInvalid;

  private global::ECitadelMatchMode matchMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelMatchMode MatchMode {
    get { if ((_hasBits0 & 1) != 0) { return matchMode_; } else { return MatchModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      matchMode_ = value;
    }
  }
  /// <summary>Gets whether the "match_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "match_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "game_mode" field.</summary>
  public const int GameModeFieldNumber = 5;
  private readonly static global::ECitadelGameMode GameModeDefaultValue = global::ECitadelGameMode.KEcitadelGameModeInvalid;

  private global::ECitadelGameMode gameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelGameMode GameMode {
    get { if ((_hasBits0 & 2) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      gameMode_ = value;
    }
  }
  /// <summary>Gets whether the "game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "solo_match" field.</summary>
  public const int SoloMatchFieldNumber = 6;
  private readonly static bool SoloMatchDefaultValue = false;

  private bool soloMatch_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool SoloMatch {
    get { if ((_hasBits0 & 4) != 0) { return soloMatch_; } else { return SoloMatchDefaultValue; } }
    set {
      _hasBits0 |= 4;
      soloMatch_ = value;
    }
  }
  /// <summary>Gets whether the "solo_match" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSoloMatch {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "solo_match" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSoloMatch() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "bot_difficulty" field.</summary>
  public const int BotDifficultyFieldNumber = 7;
  private readonly static global::ECitadelBotDifficulty BotDifficultyDefaultValue = global::ECitadelBotDifficulty.KEcitadelBotDifficultyNone;

  private global::ECitadelBotDifficulty botDifficulty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelBotDifficulty BotDifficulty {
    get { if ((_hasBits0 & 8) != 0) { return botDifficulty_; } else { return BotDifficultyDefaultValue; } }
    set {
      _hasBits0 |= 8;
      botDifficulty_ = value;
    }
  }
  /// <summary>Gets whether the "bot_difficulty" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBotDifficulty {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "bot_difficulty" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBotDifficulty() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "region_mode" field.</summary>
  public const int RegionModeFieldNumber = 8;
  private readonly static global::ECitadelRegionMode RegionModeDefaultValue = global::ECitadelRegionMode.KEcitadelRegionModeRow;

  private global::ECitadelRegionMode regionMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelRegionMode RegionMode {
    get { if ((_hasBits0 & 16) != 0) { return regionMode_; } else { return RegionModeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      regionMode_ = value;
    }
  }
  /// <summary>Gets whether the "region_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRegionMode {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "region_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRegionMode() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgStartFindingMatchInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgStartFindingMatchInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ServerSearchKey != other.ServerSearchKey) return false;
    if (ServerCommandString != other.ServerCommandString) return false;
    if (MatchMode != other.MatchMode) return false;
    if (GameMode != other.GameMode) return false;
    if (SoloMatch != other.SoloMatch) return false;
    if (BotDifficulty != other.BotDifficulty) return false;
    if (RegionMode != other.RegionMode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasServerSearchKey) hash ^= ServerSearchKey.GetHashCode();
    if (HasServerCommandString) hash ^= ServerCommandString.GetHashCode();
    if (HasMatchMode) hash ^= MatchMode.GetHashCode();
    if (HasGameMode) hash ^= GameMode.GetHashCode();
    if (HasSoloMatch) hash ^= SoloMatch.GetHashCode();
    if (HasBotDifficulty) hash ^= BotDifficulty.GetHashCode();
    if (HasRegionMode) hash ^= RegionMode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasServerSearchKey) {
      output.WriteRawTag(10);
      output.WriteString(ServerSearchKey);
    }
    if (HasServerCommandString) {
      output.WriteRawTag(18);
      output.WriteString(ServerCommandString);
    }
    if (HasMatchMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(40);
      output.WriteEnum((int) GameMode);
    }
    if (HasSoloMatch) {
      output.WriteRawTag(48);
      output.WriteBool(SoloMatch);
    }
    if (HasBotDifficulty) {
      output.WriteRawTag(56);
      output.WriteEnum((int) BotDifficulty);
    }
    if (HasRegionMode) {
      output.WriteRawTag(64);
      output.WriteEnum((int) RegionMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasServerSearchKey) {
      output.WriteRawTag(10);
      output.WriteString(ServerSearchKey);
    }
    if (HasServerCommandString) {
      output.WriteRawTag(18);
      output.WriteString(ServerCommandString);
    }
    if (HasMatchMode) {
      output.WriteRawTag(24);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(40);
      output.WriteEnum((int) GameMode);
    }
    if (HasSoloMatch) {
      output.WriteRawTag(48);
      output.WriteBool(SoloMatch);
    }
    if (HasBotDifficulty) {
      output.WriteRawTag(56);
      output.WriteEnum((int) BotDifficulty);
    }
    if (HasRegionMode) {
      output.WriteRawTag(64);
      output.WriteEnum((int) RegionMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasServerSearchKey) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerSearchKey);
    }
    if (HasServerCommandString) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerCommandString);
    }
    if (HasMatchMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
    }
    if (HasGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
    }
    if (HasSoloMatch) {
      size += 1 + 1;
    }
    if (HasBotDifficulty) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BotDifficulty);
    }
    if (HasRegionMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RegionMode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgStartFindingMatchInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasServerSearchKey) {
      ServerSearchKey = other.ServerSearchKey;
    }
    if (other.HasServerCommandString) {
      ServerCommandString = other.ServerCommandString;
    }
    if (other.HasMatchMode) {
      MatchMode = other.MatchMode;
    }
    if (other.HasGameMode) {
      GameMode = other.GameMode;
    }
    if (other.HasSoloMatch) {
      SoloMatch = other.SoloMatch;
    }
    if (other.HasBotDifficulty) {
      BotDifficulty = other.BotDifficulty;
    }
    if (other.HasRegionMode) {
      RegionMode = other.RegionMode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ServerSearchKey = input.ReadString();
          break;
        }
        case 18: {
          ServerCommandString = input.ReadString();
          break;
        }
        case 24: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 40: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 48: {
          SoloMatch = input.ReadBool();
          break;
        }
        case 56: {
          BotDifficulty = (global::ECitadelBotDifficulty) input.ReadEnum();
          break;
        }
        case 64: {
          RegionMode = (global::ECitadelRegionMode) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ServerSearchKey = input.ReadString();
          break;
        }
        case 18: {
          ServerCommandString = input.ReadString();
          break;
        }
        case 24: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 40: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 48: {
          SoloMatch = input.ReadBool();
          break;
        }
        case 56: {
          BotDifficulty = (global::ECitadelBotDifficulty) input.ReadEnum();
          break;
        }
        case 64: {
          RegionMode = (global::ECitadelRegionMode) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgAnyToGCReportAsserts : pb::IMessage<CMsgAnyToGCReportAsserts>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAnyToGCReportAsserts> _parser = new pb::MessageParser<CMsgAnyToGCReportAsserts>(() => new CMsgAnyToGCReportAsserts());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAnyToGCReportAsserts> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAsserts() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAsserts(CMsgAnyToGCReportAsserts other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    asserts_ = other.asserts_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAsserts Clone() {
    return new CMsgAnyToGCReportAsserts(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "asserts" field.</summary>
  public const int AssertsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgAnyToGCReportAsserts.Types.TrackedAssert> _repeated_asserts_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgAnyToGCReportAsserts.Types.TrackedAssert.Parser);
  private readonly pbc::RepeatedField<global::CMsgAnyToGCReportAsserts.Types.TrackedAssert> asserts_ = new pbc::RepeatedField<global::CMsgAnyToGCReportAsserts.Types.TrackedAssert>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgAnyToGCReportAsserts.Types.TrackedAssert> Asserts {
    get { return asserts_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAnyToGCReportAsserts);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAnyToGCReportAsserts other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if(!asserts_.Equals(other.asserts_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    hash ^= asserts_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    asserts_.WriteTo(output, _repeated_asserts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    asserts_.WriteTo(ref output, _repeated_asserts_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    size += asserts_.CalculateSize(_repeated_asserts_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAnyToGCReportAsserts other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    asserts_.Add(other.asserts_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          asserts_.AddEntriesFrom(input, _repeated_asserts_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          asserts_.AddEntriesFrom(ref input, _repeated_asserts_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgAnyToGCReportAsserts message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class TrackedAssert : pb::IMessage<TrackedAssert>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<TrackedAssert> _parser = new pb::MessageParser<TrackedAssert>(() => new TrackedAssert());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<TrackedAssert> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgAnyToGCReportAsserts.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TrackedAssert() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TrackedAssert(TrackedAssert other) : this() {
        _hasBits0 = other._hasBits0;
        filename_ = other.filename_;
        lineNumber_ = other.lineNumber_;
        sampleMsg_ = other.sampleMsg_;
        sampleStack_ = other.sampleStack_;
        timesFired_ = other.timesFired_;
        functionName_ = other.functionName_;
        condition_ = other.condition_;
        totalTimesFired_ = other.totalTimesFired_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TrackedAssert Clone() {
        return new TrackedAssert(this);
      }

      /// <summary>Field number for the "filename" field.</summary>
      public const int FilenameFieldNumber = 1;
      private readonly static string FilenameDefaultValue = "";

      private string filename_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Filename {
        get { return filename_ ?? FilenameDefaultValue; }
        set {
          filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "filename" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFilename {
        get { return filename_ != null; }
      }
      /// <summary>Clears the value of the "filename" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFilename() {
        filename_ = null;
      }

      /// <summary>Field number for the "line_number" field.</summary>
      public const int LineNumberFieldNumber = 2;
      private readonly static uint LineNumberDefaultValue = 0;

      private uint lineNumber_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LineNumber {
        get { if ((_hasBits0 & 1) != 0) { return lineNumber_; } else { return LineNumberDefaultValue; } }
        set {
          _hasBits0 |= 1;
          lineNumber_ = value;
        }
      }
      /// <summary>Gets whether the "line_number" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLineNumber {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "line_number" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLineNumber() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "sample_msg" field.</summary>
      public const int SampleMsgFieldNumber = 3;
      private readonly static string SampleMsgDefaultValue = "";

      private string sampleMsg_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string SampleMsg {
        get { return sampleMsg_ ?? SampleMsgDefaultValue; }
        set {
          sampleMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sample_msg" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSampleMsg {
        get { return sampleMsg_ != null; }
      }
      /// <summary>Clears the value of the "sample_msg" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSampleMsg() {
        sampleMsg_ = null;
      }

      /// <summary>Field number for the "sample_stack" field.</summary>
      public const int SampleStackFieldNumber = 4;
      private readonly static string SampleStackDefaultValue = "";

      private string sampleStack_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string SampleStack {
        get { return sampleStack_ ?? SampleStackDefaultValue; }
        set {
          sampleStack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "sample_stack" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSampleStack {
        get { return sampleStack_ != null; }
      }
      /// <summary>Clears the value of the "sample_stack" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSampleStack() {
        sampleStack_ = null;
      }

      /// <summary>Field number for the "times_fired" field.</summary>
      public const int TimesFiredFieldNumber = 5;
      private readonly static uint TimesFiredDefaultValue = 0;

      private uint timesFired_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimesFired {
        get { if ((_hasBits0 & 2) != 0) { return timesFired_; } else { return TimesFiredDefaultValue; } }
        set {
          _hasBits0 |= 2;
          timesFired_ = value;
        }
      }
      /// <summary>Gets whether the "times_fired" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimesFired {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "times_fired" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimesFired() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "function_name" field.</summary>
      public const int FunctionNameFieldNumber = 6;
      private readonly static string FunctionNameDefaultValue = "";

      private string functionName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string FunctionName {
        get { return functionName_ ?? FunctionNameDefaultValue; }
        set {
          functionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "function_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFunctionName {
        get { return functionName_ != null; }
      }
      /// <summary>Clears the value of the "function_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFunctionName() {
        functionName_ = null;
      }

      /// <summary>Field number for the "condition" field.</summary>
      public const int ConditionFieldNumber = 7;
      private readonly static string ConditionDefaultValue = "";

      private string condition_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Condition {
        get { return condition_ ?? ConditionDefaultValue; }
        set {
          condition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "condition" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCondition {
        get { return condition_ != null; }
      }
      /// <summary>Clears the value of the "condition" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCondition() {
        condition_ = null;
      }

      /// <summary>Field number for the "total_times_fired" field.</summary>
      public const int TotalTimesFiredFieldNumber = 8;
      private readonly static uint TotalTimesFiredDefaultValue = 0;

      private uint totalTimesFired_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TotalTimesFired {
        get { if ((_hasBits0 & 4) != 0) { return totalTimesFired_; } else { return TotalTimesFiredDefaultValue; } }
        set {
          _hasBits0 |= 4;
          totalTimesFired_ = value;
        }
      }
      /// <summary>Gets whether the "total_times_fired" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTotalTimesFired {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "total_times_fired" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTotalTimesFired() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as TrackedAssert);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(TrackedAssert other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Filename != other.Filename) return false;
        if (LineNumber != other.LineNumber) return false;
        if (SampleMsg != other.SampleMsg) return false;
        if (SampleStack != other.SampleStack) return false;
        if (TimesFired != other.TimesFired) return false;
        if (FunctionName != other.FunctionName) return false;
        if (Condition != other.Condition) return false;
        if (TotalTimesFired != other.TotalTimesFired) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasFilename) hash ^= Filename.GetHashCode();
        if (HasLineNumber) hash ^= LineNumber.GetHashCode();
        if (HasSampleMsg) hash ^= SampleMsg.GetHashCode();
        if (HasSampleStack) hash ^= SampleStack.GetHashCode();
        if (HasTimesFired) hash ^= TimesFired.GetHashCode();
        if (HasFunctionName) hash ^= FunctionName.GetHashCode();
        if (HasCondition) hash ^= Condition.GetHashCode();
        if (HasTotalTimesFired) hash ^= TotalTimesFired.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasFilename) {
          output.WriteRawTag(10);
          output.WriteString(Filename);
        }
        if (HasLineNumber) {
          output.WriteRawTag(16);
          output.WriteUInt32(LineNumber);
        }
        if (HasSampleMsg) {
          output.WriteRawTag(26);
          output.WriteString(SampleMsg);
        }
        if (HasSampleStack) {
          output.WriteRawTag(34);
          output.WriteString(SampleStack);
        }
        if (HasTimesFired) {
          output.WriteRawTag(40);
          output.WriteUInt32(TimesFired);
        }
        if (HasFunctionName) {
          output.WriteRawTag(50);
          output.WriteString(FunctionName);
        }
        if (HasCondition) {
          output.WriteRawTag(58);
          output.WriteString(Condition);
        }
        if (HasTotalTimesFired) {
          output.WriteRawTag(64);
          output.WriteUInt32(TotalTimesFired);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasFilename) {
          output.WriteRawTag(10);
          output.WriteString(Filename);
        }
        if (HasLineNumber) {
          output.WriteRawTag(16);
          output.WriteUInt32(LineNumber);
        }
        if (HasSampleMsg) {
          output.WriteRawTag(26);
          output.WriteString(SampleMsg);
        }
        if (HasSampleStack) {
          output.WriteRawTag(34);
          output.WriteString(SampleStack);
        }
        if (HasTimesFired) {
          output.WriteRawTag(40);
          output.WriteUInt32(TimesFired);
        }
        if (HasFunctionName) {
          output.WriteRawTag(50);
          output.WriteString(FunctionName);
        }
        if (HasCondition) {
          output.WriteRawTag(58);
          output.WriteString(Condition);
        }
        if (HasTotalTimesFired) {
          output.WriteRawTag(64);
          output.WriteUInt32(TotalTimesFired);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasFilename) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
        }
        if (HasLineNumber) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LineNumber);
        }
        if (HasSampleMsg) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(SampleMsg);
        }
        if (HasSampleStack) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(SampleStack);
        }
        if (HasTimesFired) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimesFired);
        }
        if (HasFunctionName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionName);
        }
        if (HasCondition) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Condition);
        }
        if (HasTotalTimesFired) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalTimesFired);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(TrackedAssert other) {
        if (other == null) {
          return;
        }
        if (other.HasFilename) {
          Filename = other.Filename;
        }
        if (other.HasLineNumber) {
          LineNumber = other.LineNumber;
        }
        if (other.HasSampleMsg) {
          SampleMsg = other.SampleMsg;
        }
        if (other.HasSampleStack) {
          SampleStack = other.SampleStack;
        }
        if (other.HasTimesFired) {
          TimesFired = other.TimesFired;
        }
        if (other.HasFunctionName) {
          FunctionName = other.FunctionName;
        }
        if (other.HasCondition) {
          Condition = other.Condition;
        }
        if (other.HasTotalTimesFired) {
          TotalTimesFired = other.TotalTimesFired;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Filename = input.ReadString();
              break;
            }
            case 16: {
              LineNumber = input.ReadUInt32();
              break;
            }
            case 26: {
              SampleMsg = input.ReadString();
              break;
            }
            case 34: {
              SampleStack = input.ReadString();
              break;
            }
            case 40: {
              TimesFired = input.ReadUInt32();
              break;
            }
            case 50: {
              FunctionName = input.ReadString();
              break;
            }
            case 58: {
              Condition = input.ReadString();
              break;
            }
            case 64: {
              TotalTimesFired = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Filename = input.ReadString();
              break;
            }
            case 16: {
              LineNumber = input.ReadUInt32();
              break;
            }
            case 26: {
              SampleMsg = input.ReadString();
              break;
            }
            case 34: {
              SampleStack = input.ReadString();
              break;
            }
            case 40: {
              TimesFired = input.ReadUInt32();
              break;
            }
            case 50: {
              FunctionName = input.ReadString();
              break;
            }
            case 58: {
              Condition = input.ReadString();
              break;
            }
            case 64: {
              TotalTimesFired = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgAnyToGCReportAssertsResponse : pb::IMessage<CMsgAnyToGCReportAssertsResponse>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAnyToGCReportAssertsResponse> _parser = new pb::MessageParser<CMsgAnyToGCReportAssertsResponse>(() => new CMsgAnyToGCReportAssertsResponse());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAnyToGCReportAssertsResponse> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAssertsResponse() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAssertsResponse(CMsgAnyToGCReportAssertsResponse other) : this() {
    _hasBits0 = other._hasBits0;
    success_ = other.success_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAnyToGCReportAssertsResponse Clone() {
    return new CMsgAnyToGCReportAssertsResponse(this);
  }

  /// <summary>Field number for the "success" field.</summary>
  public const int SuccessFieldNumber = 1;
  private readonly static bool SuccessDefaultValue = false;

  private bool success_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Success {
    get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
    set {
      _hasBits0 |= 1;
      success_ = value;
    }
  }
  /// <summary>Gets whether the "success" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSuccess {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "success" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSuccess() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAnyToGCReportAssertsResponse);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAnyToGCReportAssertsResponse other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Success != other.Success) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSuccess) hash ^= Success.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSuccess) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSuccess) {
      output.WriteRawTag(8);
      output.WriteBool(Success);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSuccess) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAnyToGCReportAssertsResponse other) {
    if (other == null) {
      return;
    }
    if (other.HasSuccess) {
      Success = other.Success;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Success = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgRegionPingTimesClient : pb::IMessage<CMsgRegionPingTimesClient>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgRegionPingTimesClient> _parser = new pb::MessageParser<CMsgRegionPingTimesClient>(() => new CMsgRegionPingTimesClient());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgRegionPingTimesClient> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRegionPingTimesClient() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRegionPingTimesClient(CMsgRegionPingTimesClient other) : this() {
    dataCenterCodes_ = other.dataCenterCodes_.Clone();
    pingTimes_ = other.pingTimes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRegionPingTimesClient Clone() {
    return new CMsgRegionPingTimesClient(this);
  }

  /// <summary>Field number for the "data_center_codes" field.</summary>
  public const int DataCenterCodesFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_dataCenterCodes_codec
      = pb::FieldCodec.ForFixed32(10);
  private readonly pbc::RepeatedField<uint> dataCenterCodes_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> DataCenterCodes {
    get { return dataCenterCodes_; }
  }

  /// <summary>Field number for the "ping_times" field.</summary>
  public const int PingTimesFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_pingTimes_codec
      = pb::FieldCodec.ForUInt32(18);
  private readonly pbc::RepeatedField<uint> pingTimes_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> PingTimes {
    get { return pingTimes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgRegionPingTimesClient);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgRegionPingTimesClient other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!dataCenterCodes_.Equals(other.dataCenterCodes_)) return false;
    if(!pingTimes_.Equals(other.pingTimes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= dataCenterCodes_.GetHashCode();
    hash ^= pingTimes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    dataCenterCodes_.WriteTo(output, _repeated_dataCenterCodes_codec);
    pingTimes_.WriteTo(output, _repeated_pingTimes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    dataCenterCodes_.WriteTo(ref output, _repeated_dataCenterCodes_codec);
    pingTimes_.WriteTo(ref output, _repeated_pingTimes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += dataCenterCodes_.CalculateSize(_repeated_dataCenterCodes_codec);
    size += pingTimes_.CalculateSize(_repeated_pingTimes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgRegionPingTimesClient other) {
    if (other == null) {
      return;
    }
    dataCenterCodes_.Add(other.dataCenterCodes_);
    pingTimes_.Add(other.pingTimes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          dataCenterCodes_.AddEntriesFrom(input, _repeated_dataCenterCodes_codec);
          break;
        }
        case 18:
        case 16: {
          pingTimes_.AddEntriesFrom(input, _repeated_pingTimes_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 13: {
          dataCenterCodes_.AddEntriesFrom(ref input, _repeated_dataCenterCodes_codec);
          break;
        }
        case 18:
        case 16: {
          pingTimes_.AddEntriesFrom(ref input, _repeated_pingTimes_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSOCitadelParty : pb::IMessage<CSOCitadelParty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSOCitadelParty> _parser = new pb::MessageParser<CSOCitadelParty>(() => new CSOCitadelParty());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSOCitadelParty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelParty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelParty(CSOCitadelParty other) : this() {
    _hasBits0 = other._hasBits0;
    partyId_ = other.partyId_;
    members_ = other.members_.Clone();
    invites_ = other.invites_.Clone();
    devServerCommand_ = other.devServerCommand_;
    leftMembers_ = other.leftMembers_.Clone();
    joinCode_ = other.joinCode_;
    botDifficulty_ = other.botDifficulty_;
    matchMode_ = other.matchMode_;
    gameMode_ = other.gameMode_;
    matchMakingStartTime_ = other.matchMakingStartTime_;
    serverSearchKey_ = other.serverSearchKey_;
    isHighSkillRangeParty_ = other.isHighSkillRangeParty_;
    chatMode_ = other.chatMode_;
    regionMode_ = other.regionMode_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSOCitadelParty Clone() {
    return new CSOCitadelParty(this);
  }

  /// <summary>Field number for the "party_id" field.</summary>
  public const int PartyIdFieldNumber = 1;
  private readonly static ulong PartyIdDefaultValue = 0UL;

  private ulong partyId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong PartyId {
    get { if ((_hasBits0 & 1) != 0) { return partyId_; } else { return PartyIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      partyId_ = value;
    }
  }
  /// <summary>Gets whether the "party_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPartyId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "party_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPartyId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "members" field.</summary>
  public const int MembersFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CSOCitadelParty.Types.Member> _repeated_members_codec
      = pb::FieldCodec.ForMessage(18, global::CSOCitadelParty.Types.Member.Parser);
  private readonly pbc::RepeatedField<global::CSOCitadelParty.Types.Member> members_ = new pbc::RepeatedField<global::CSOCitadelParty.Types.Member>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSOCitadelParty.Types.Member> Members {
    get { return members_; }
  }

  /// <summary>Field number for the "invites" field.</summary>
  public const int InvitesFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CSOCitadelParty.Types.Invite> _repeated_invites_codec
      = pb::FieldCodec.ForMessage(26, global::CSOCitadelParty.Types.Invite.Parser);
  private readonly pbc::RepeatedField<global::CSOCitadelParty.Types.Invite> invites_ = new pbc::RepeatedField<global::CSOCitadelParty.Types.Invite>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSOCitadelParty.Types.Invite> Invites {
    get { return invites_; }
  }

  /// <summary>Field number for the "dev_server_command" field.</summary>
  public const int DevServerCommandFieldNumber = 4;
  private readonly static string DevServerCommandDefaultValue = "";

  private string devServerCommand_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DevServerCommand {
    get { return devServerCommand_ ?? DevServerCommandDefaultValue; }
    set {
      devServerCommand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "dev_server_command" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDevServerCommand {
    get { return devServerCommand_ != null; }
  }
  /// <summary>Clears the value of the "dev_server_command" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDevServerCommand() {
    devServerCommand_ = null;
  }

  /// <summary>Field number for the "left_members" field.</summary>
  public const int LeftMembersFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CSOCitadelParty.Types.LeftMember> _repeated_leftMembers_codec
      = pb::FieldCodec.ForMessage(42, global::CSOCitadelParty.Types.LeftMember.Parser);
  private readonly pbc::RepeatedField<global::CSOCitadelParty.Types.LeftMember> leftMembers_ = new pbc::RepeatedField<global::CSOCitadelParty.Types.LeftMember>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSOCitadelParty.Types.LeftMember> LeftMembers {
    get { return leftMembers_; }
  }

  /// <summary>Field number for the "join_code" field.</summary>
  public const int JoinCodeFieldNumber = 6;
  private readonly static ulong JoinCodeDefaultValue = 0UL;

  private ulong joinCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong JoinCode {
    get { if ((_hasBits0 & 2) != 0) { return joinCode_; } else { return JoinCodeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      joinCode_ = value;
    }
  }
  /// <summary>Gets whether the "join_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJoinCode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "join_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJoinCode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "bot_difficulty" field.</summary>
  public const int BotDifficultyFieldNumber = 7;
  private readonly static global::ECitadelBotDifficulty BotDifficultyDefaultValue = global::ECitadelBotDifficulty.KEcitadelBotDifficultyNone;

  private global::ECitadelBotDifficulty botDifficulty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelBotDifficulty BotDifficulty {
    get { if ((_hasBits0 & 4) != 0) { return botDifficulty_; } else { return BotDifficultyDefaultValue; } }
    set {
      _hasBits0 |= 4;
      botDifficulty_ = value;
    }
  }
  /// <summary>Gets whether the "bot_difficulty" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBotDifficulty {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "bot_difficulty" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBotDifficulty() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "match_mode" field.</summary>
  public const int MatchModeFieldNumber = 9;
  private readonly static global::ECitadelMatchMode MatchModeDefaultValue = global::ECitadelMatchMode.KEcitadelMatchModeInvalid;

  private global::ECitadelMatchMode matchMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelMatchMode MatchMode {
    get { if ((_hasBits0 & 8) != 0) { return matchMode_; } else { return MatchModeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      matchMode_ = value;
    }
  }
  /// <summary>Gets whether the "match_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchMode {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "match_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchMode() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "game_mode" field.</summary>
  public const int GameModeFieldNumber = 10;
  private readonly static global::ECitadelGameMode GameModeDefaultValue = global::ECitadelGameMode.KEcitadelGameModeInvalid;

  private global::ECitadelGameMode gameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelGameMode GameMode {
    get { if ((_hasBits0 & 16) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      gameMode_ = value;
    }
  }
  /// <summary>Gets whether the "game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMode {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMode() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "match_making_start_time" field.</summary>
  public const int MatchMakingStartTimeFieldNumber = 11;
  private readonly static uint MatchMakingStartTimeDefaultValue = 0;

  private uint matchMakingStartTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MatchMakingStartTime {
    get { if ((_hasBits0 & 32) != 0) { return matchMakingStartTime_; } else { return MatchMakingStartTimeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      matchMakingStartTime_ = value;
    }
  }
  /// <summary>Gets whether the "match_making_start_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchMakingStartTime {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "match_making_start_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchMakingStartTime() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "server_search_key" field.</summary>
  public const int ServerSearchKeyFieldNumber = 12;
  private readonly static string ServerSearchKeyDefaultValue = "";

  private string serverSearchKey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerSearchKey {
    get { return serverSearchKey_ ?? ServerSearchKeyDefaultValue; }
    set {
      serverSearchKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_search_key" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerSearchKey {
    get { return serverSearchKey_ != null; }
  }
  /// <summary>Clears the value of the "server_search_key" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerSearchKey() {
    serverSearchKey_ = null;
  }

  /// <summary>Field number for the "is_high_skill_range_party" field.</summary>
  public const int IsHighSkillRangePartyFieldNumber = 13;
  private readonly static bool IsHighSkillRangePartyDefaultValue = false;

  private bool isHighSkillRangeParty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsHighSkillRangeParty {
    get { if ((_hasBits0 & 64) != 0) { return isHighSkillRangeParty_; } else { return IsHighSkillRangePartyDefaultValue; } }
    set {
      _hasBits0 |= 64;
      isHighSkillRangeParty_ = value;
    }
  }
  /// <summary>Gets whether the "is_high_skill_range_party" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsHighSkillRangeParty {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "is_high_skill_range_party" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsHighSkillRangeParty() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "chat_mode" field.</summary>
  public const int ChatModeFieldNumber = 14;
  private readonly static global::CSOCitadelParty.Types.EChatMode ChatModeDefaultValue = global::CSOCitadelParty.Types.EChatMode.KENone;

  private global::CSOCitadelParty.Types.EChatMode chatMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CSOCitadelParty.Types.EChatMode ChatMode {
    get { if ((_hasBits0 & 128) != 0) { return chatMode_; } else { return ChatModeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      chatMode_ = value;
    }
  }
  /// <summary>Gets whether the "chat_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasChatMode {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "chat_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearChatMode() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "region_mode" field.</summary>
  public const int RegionModeFieldNumber = 15;
  private readonly static global::ECitadelRegionMode RegionModeDefaultValue = global::ECitadelRegionMode.KEcitadelRegionModeRow;

  private global::ECitadelRegionMode regionMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ECitadelRegionMode RegionMode {
    get { if ((_hasBits0 & 256) != 0) { return regionMode_; } else { return RegionModeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      regionMode_ = value;
    }
  }
  /// <summary>Gets whether the "region_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRegionMode {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "region_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRegionMode() {
    _hasBits0 &= ~256;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSOCitadelParty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSOCitadelParty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PartyId != other.PartyId) return false;
    if(!members_.Equals(other.members_)) return false;
    if(!invites_.Equals(other.invites_)) return false;
    if (DevServerCommand != other.DevServerCommand) return false;
    if(!leftMembers_.Equals(other.leftMembers_)) return false;
    if (JoinCode != other.JoinCode) return false;
    if (BotDifficulty != other.BotDifficulty) return false;
    if (MatchMode != other.MatchMode) return false;
    if (GameMode != other.GameMode) return false;
    if (MatchMakingStartTime != other.MatchMakingStartTime) return false;
    if (ServerSearchKey != other.ServerSearchKey) return false;
    if (IsHighSkillRangeParty != other.IsHighSkillRangeParty) return false;
    if (ChatMode != other.ChatMode) return false;
    if (RegionMode != other.RegionMode) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPartyId) hash ^= PartyId.GetHashCode();
    hash ^= members_.GetHashCode();
    hash ^= invites_.GetHashCode();
    if (HasDevServerCommand) hash ^= DevServerCommand.GetHashCode();
    hash ^= leftMembers_.GetHashCode();
    if (HasJoinCode) hash ^= JoinCode.GetHashCode();
    if (HasBotDifficulty) hash ^= BotDifficulty.GetHashCode();
    if (HasMatchMode) hash ^= MatchMode.GetHashCode();
    if (HasGameMode) hash ^= GameMode.GetHashCode();
    if (HasMatchMakingStartTime) hash ^= MatchMakingStartTime.GetHashCode();
    if (HasServerSearchKey) hash ^= ServerSearchKey.GetHashCode();
    if (HasIsHighSkillRangeParty) hash ^= IsHighSkillRangeParty.GetHashCode();
    if (HasChatMode) hash ^= ChatMode.GetHashCode();
    if (HasRegionMode) hash ^= RegionMode.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPartyId) {
      output.WriteRawTag(8);
      output.WriteUInt64(PartyId);
    }
    members_.WriteTo(output, _repeated_members_codec);
    invites_.WriteTo(output, _repeated_invites_codec);
    if (HasDevServerCommand) {
      output.WriteRawTag(34);
      output.WriteString(DevServerCommand);
    }
    leftMembers_.WriteTo(output, _repeated_leftMembers_codec);
    if (HasJoinCode) {
      output.WriteRawTag(48);
      output.WriteUInt64(JoinCode);
    }
    if (HasBotDifficulty) {
      output.WriteRawTag(56);
      output.WriteEnum((int) BotDifficulty);
    }
    if (HasMatchMode) {
      output.WriteRawTag(72);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(80);
      output.WriteEnum((int) GameMode);
    }
    if (HasMatchMakingStartTime) {
      output.WriteRawTag(88);
      output.WriteUInt32(MatchMakingStartTime);
    }
    if (HasServerSearchKey) {
      output.WriteRawTag(98);
      output.WriteString(ServerSearchKey);
    }
    if (HasIsHighSkillRangeParty) {
      output.WriteRawTag(104);
      output.WriteBool(IsHighSkillRangeParty);
    }
    if (HasChatMode) {
      output.WriteRawTag(112);
      output.WriteEnum((int) ChatMode);
    }
    if (HasRegionMode) {
      output.WriteRawTag(120);
      output.WriteEnum((int) RegionMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPartyId) {
      output.WriteRawTag(8);
      output.WriteUInt64(PartyId);
    }
    members_.WriteTo(ref output, _repeated_members_codec);
    invites_.WriteTo(ref output, _repeated_invites_codec);
    if (HasDevServerCommand) {
      output.WriteRawTag(34);
      output.WriteString(DevServerCommand);
    }
    leftMembers_.WriteTo(ref output, _repeated_leftMembers_codec);
    if (HasJoinCode) {
      output.WriteRawTag(48);
      output.WriteUInt64(JoinCode);
    }
    if (HasBotDifficulty) {
      output.WriteRawTag(56);
      output.WriteEnum((int) BotDifficulty);
    }
    if (HasMatchMode) {
      output.WriteRawTag(72);
      output.WriteEnum((int) MatchMode);
    }
    if (HasGameMode) {
      output.WriteRawTag(80);
      output.WriteEnum((int) GameMode);
    }
    if (HasMatchMakingStartTime) {
      output.WriteRawTag(88);
      output.WriteUInt32(MatchMakingStartTime);
    }
    if (HasServerSearchKey) {
      output.WriteRawTag(98);
      output.WriteString(ServerSearchKey);
    }
    if (HasIsHighSkillRangeParty) {
      output.WriteRawTag(104);
      output.WriteBool(IsHighSkillRangeParty);
    }
    if (HasChatMode) {
      output.WriteRawTag(112);
      output.WriteEnum((int) ChatMode);
    }
    if (HasRegionMode) {
      output.WriteRawTag(120);
      output.WriteEnum((int) RegionMode);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPartyId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PartyId);
    }
    size += members_.CalculateSize(_repeated_members_codec);
    size += invites_.CalculateSize(_repeated_invites_codec);
    if (HasDevServerCommand) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DevServerCommand);
    }
    size += leftMembers_.CalculateSize(_repeated_leftMembers_codec);
    if (HasJoinCode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(JoinCode);
    }
    if (HasBotDifficulty) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BotDifficulty);
    }
    if (HasMatchMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
    }
    if (HasGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
    }
    if (HasMatchMakingStartTime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MatchMakingStartTime);
    }
    if (HasServerSearchKey) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerSearchKey);
    }
    if (HasIsHighSkillRangeParty) {
      size += 1 + 1;
    }
    if (HasChatMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ChatMode);
    }
    if (HasRegionMode) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RegionMode);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSOCitadelParty other) {
    if (other == null) {
      return;
    }
    if (other.HasPartyId) {
      PartyId = other.PartyId;
    }
    members_.Add(other.members_);
    invites_.Add(other.invites_);
    if (other.HasDevServerCommand) {
      DevServerCommand = other.DevServerCommand;
    }
    leftMembers_.Add(other.leftMembers_);
    if (other.HasJoinCode) {
      JoinCode = other.JoinCode;
    }
    if (other.HasBotDifficulty) {
      BotDifficulty = other.BotDifficulty;
    }
    if (other.HasMatchMode) {
      MatchMode = other.MatchMode;
    }
    if (other.HasGameMode) {
      GameMode = other.GameMode;
    }
    if (other.HasMatchMakingStartTime) {
      MatchMakingStartTime = other.MatchMakingStartTime;
    }
    if (other.HasServerSearchKey) {
      ServerSearchKey = other.ServerSearchKey;
    }
    if (other.HasIsHighSkillRangeParty) {
      IsHighSkillRangeParty = other.IsHighSkillRangeParty;
    }
    if (other.HasChatMode) {
      ChatMode = other.ChatMode;
    }
    if (other.HasRegionMode) {
      RegionMode = other.RegionMode;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PartyId = input.ReadUInt64();
          break;
        }
        case 18: {
          members_.AddEntriesFrom(input, _repeated_members_codec);
          break;
        }
        case 26: {
          invites_.AddEntriesFrom(input, _repeated_invites_codec);
          break;
        }
        case 34: {
          DevServerCommand = input.ReadString();
          break;
        }
        case 42: {
          leftMembers_.AddEntriesFrom(input, _repeated_leftMembers_codec);
          break;
        }
        case 48: {
          JoinCode = input.ReadUInt64();
          break;
        }
        case 56: {
          BotDifficulty = (global::ECitadelBotDifficulty) input.ReadEnum();
          break;
        }
        case 72: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 80: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 88: {
          MatchMakingStartTime = input.ReadUInt32();
          break;
        }
        case 98: {
          ServerSearchKey = input.ReadString();
          break;
        }
        case 104: {
          IsHighSkillRangeParty = input.ReadBool();
          break;
        }
        case 112: {
          ChatMode = (global::CSOCitadelParty.Types.EChatMode) input.ReadEnum();
          break;
        }
        case 120: {
          RegionMode = (global::ECitadelRegionMode) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PartyId = input.ReadUInt64();
          break;
        }
        case 18: {
          members_.AddEntriesFrom(ref input, _repeated_members_codec);
          break;
        }
        case 26: {
          invites_.AddEntriesFrom(ref input, _repeated_invites_codec);
          break;
        }
        case 34: {
          DevServerCommand = input.ReadString();
          break;
        }
        case 42: {
          leftMembers_.AddEntriesFrom(ref input, _repeated_leftMembers_codec);
          break;
        }
        case 48: {
          JoinCode = input.ReadUInt64();
          break;
        }
        case 56: {
          BotDifficulty = (global::ECitadelBotDifficulty) input.ReadEnum();
          break;
        }
        case 72: {
          MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
          break;
        }
        case 80: {
          GameMode = (global::ECitadelGameMode) input.ReadEnum();
          break;
        }
        case 88: {
          MatchMakingStartTime = input.ReadUInt32();
          break;
        }
        case 98: {
          ServerSearchKey = input.ReadString();
          break;
        }
        case 104: {
          IsHighSkillRangeParty = input.ReadBool();
          break;
        }
        case 112: {
          ChatMode = (global::CSOCitadelParty.Types.EChatMode) input.ReadEnum();
          break;
        }
        case 120: {
          RegionMode = (global::ECitadelRegionMode) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSOCitadelParty message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum EMemberRights {
      [pbr::OriginalName("k_eMemberRights_Admin")] KEMemberRightsAdmin = 1,
      [pbr::OriginalName("k_eMemberRights_Creator")] KEMemberRightsCreator = 2,
    }

    public enum EPlayerType {
      [pbr::OriginalName("k_ePlayerType_Player")] KEPlayerTypePlayer = 0,
      [pbr::OriginalName("k_ePlayerType_Spectator")] KEPlayerTypeSpectator = 1,
    }

    public enum EChatMode {
      [pbr::OriginalName("k_eNone")] KENone = 0,
      [pbr::OriginalName("k_ePartyChat")] KEPartyChat = 1,
      [pbr::OriginalName("k_eTeamChat")] KETeamChat = 2,
    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Member : pb::IMessage<Member>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Member> _parser = new pb::MessageParser<Member>(() => new Member());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Member> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSOCitadelParty.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Member() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Member(Member other) : this() {
        _hasBits0 = other._hasBits0;
        accountId_ = other.accountId_;
        personaName_ = other.personaName_;
        rightsFlags_ = other.rightsFlags_;
        isReady_ = other.isReady_;
        playerType_ = other.playerType_;
        compatibilityVersion_ = other.compatibilityVersion_;
        platform_ = other.platform_;
        team_ = other.team_;
        heroRoster_ = other.heroRoster_ != null ? other.heroRoster_.Clone() : null;
        permissions_ = other.permissions_;
        newPlayerProgress_ = other.newPlayerProgress_;
        ownedHeroes_ = other.ownedHeroes_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Member Clone() {
        return new Member(this);
      }

      /// <summary>Field number for the "account_id" field.</summary>
      public const int AccountIdFieldNumber = 1;
      private readonly static uint AccountIdDefaultValue = 0;

      private uint accountId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountId {
        get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountId_ = value;
        }
      }
      /// <summary>Gets whether the "account_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "persona_name" field.</summary>
      public const int PersonaNameFieldNumber = 2;
      private readonly static string PersonaNameDefaultValue = "";

      private string personaName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PersonaName {
        get { return personaName_ ?? PersonaNameDefaultValue; }
        set {
          personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "persona_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPersonaName {
        get { return personaName_ != null; }
      }
      /// <summary>Clears the value of the "persona_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPersonaName() {
        personaName_ = null;
      }

      /// <summary>Field number for the "rights_flags" field.</summary>
      public const int RightsFlagsFieldNumber = 3;
      private readonly static uint RightsFlagsDefaultValue = 0;

      private uint rightsFlags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RightsFlags {
        get { if ((_hasBits0 & 2) != 0) { return rightsFlags_; } else { return RightsFlagsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          rightsFlags_ = value;
        }
      }
      /// <summary>Gets whether the "rights_flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRightsFlags {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "rights_flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRightsFlags() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "is_ready" field.</summary>
      public const int IsReadyFieldNumber = 4;
      private readonly static bool IsReadyDefaultValue = false;

      private bool isReady_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsReady {
        get { if ((_hasBits0 & 4) != 0) { return isReady_; } else { return IsReadyDefaultValue; } }
        set {
          _hasBits0 |= 4;
          isReady_ = value;
        }
      }
      /// <summary>Gets whether the "is_ready" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsReady {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "is_ready" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsReady() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "player_type" field.</summary>
      public const int PlayerTypeFieldNumber = 5;
      private readonly static global::CSOCitadelParty.Types.EPlayerType PlayerTypeDefaultValue = global::CSOCitadelParty.Types.EPlayerType.KEPlayerTypePlayer;

      private global::CSOCitadelParty.Types.EPlayerType playerType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CSOCitadelParty.Types.EPlayerType PlayerType {
        get { if ((_hasBits0 & 8) != 0) { return playerType_; } else { return PlayerTypeDefaultValue; } }
        set {
          _hasBits0 |= 8;
          playerType_ = value;
        }
      }
      /// <summary>Gets whether the "player_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerType {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "player_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerType() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "compatibility_version" field.</summary>
      public const int CompatibilityVersionFieldNumber = 6;
      private readonly static uint CompatibilityVersionDefaultValue = 0;

      private uint compatibilityVersion_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CompatibilityVersion {
        get { if ((_hasBits0 & 16) != 0) { return compatibilityVersion_; } else { return CompatibilityVersionDefaultValue; } }
        set {
          _hasBits0 |= 16;
          compatibilityVersion_ = value;
        }
      }
      /// <summary>Gets whether the "compatibility_version" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCompatibilityVersion {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "compatibility_version" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCompatibilityVersion() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "platform" field.</summary>
      public const int PlatformFieldNumber = 7;
      private readonly static global::EGCPlatform PlatformDefaultValue = global::EGCPlatform.KEGcplatformNone;

      private global::EGCPlatform platform_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::EGCPlatform Platform {
        get { if ((_hasBits0 & 32) != 0) { return platform_; } else { return PlatformDefaultValue; } }
        set {
          _hasBits0 |= 32;
          platform_ = value;
        }
      }
      /// <summary>Gets whether the "platform" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlatform {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "platform" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlatform() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "team" field.</summary>
      public const int TeamFieldNumber = 8;
      private readonly static uint TeamDefaultValue = 0;

      private uint team_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Team {
        get { if ((_hasBits0 & 64) != 0) { return team_; } else { return TeamDefaultValue; } }
        set {
          _hasBits0 |= 64;
          team_ = value;
        }
      }
      /// <summary>Gets whether the "team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeam {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeam() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "hero_roster" field.</summary>
      public const int HeroRosterFieldNumber = 9;
      private global::CMsgHeroSelectionMatchInfo heroRoster_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgHeroSelectionMatchInfo HeroRoster {
        get { return heroRoster_; }
        set {
          heroRoster_ = value;
        }
      }

      /// <summary>Field number for the "permissions" field.</summary>
      public const int PermissionsFieldNumber = 10;
      private readonly static ulong PermissionsDefaultValue = 0UL;

      private ulong permissions_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Permissions {
        get { if ((_hasBits0 & 128) != 0) { return permissions_; } else { return PermissionsDefaultValue; } }
        set {
          _hasBits0 |= 128;
          permissions_ = value;
        }
      }
      /// <summary>Gets whether the "permissions" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPermissions {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "permissions" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPermissions() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "new_player_progress" field.</summary>
      public const int NewPlayerProgressFieldNumber = 11;
      private readonly static ulong NewPlayerProgressDefaultValue = 0UL;

      private ulong newPlayerProgress_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong NewPlayerProgress {
        get { if ((_hasBits0 & 256) != 0) { return newPlayerProgress_; } else { return NewPlayerProgressDefaultValue; } }
        set {
          _hasBits0 |= 256;
          newPlayerProgress_ = value;
        }
      }
      /// <summary>Gets whether the "new_player_progress" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNewPlayerProgress {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "new_player_progress" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNewPlayerProgress() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "owned_heroes" field.</summary>
      public const int OwnedHeroesFieldNumber = 12;
      private static readonly pb::FieldCodec<uint> _repeated_ownedHeroes_codec
          = pb::FieldCodec.ForUInt32(98);
      private readonly pbc::RepeatedField<uint> ownedHeroes_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<uint> OwnedHeroes {
        get { return ownedHeroes_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Member);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Member other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountId != other.AccountId) return false;
        if (PersonaName != other.PersonaName) return false;
        if (RightsFlags != other.RightsFlags) return false;
        if (IsReady != other.IsReady) return false;
        if (PlayerType != other.PlayerType) return false;
        if (CompatibilityVersion != other.CompatibilityVersion) return false;
        if (Platform != other.Platform) return false;
        if (Team != other.Team) return false;
        if (!object.Equals(HeroRoster, other.HeroRoster)) return false;
        if (Permissions != other.Permissions) return false;
        if (NewPlayerProgress != other.NewPlayerProgress) return false;
        if(!ownedHeroes_.Equals(other.ownedHeroes_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountId) hash ^= AccountId.GetHashCode();
        if (HasPersonaName) hash ^= PersonaName.GetHashCode();
        if (HasRightsFlags) hash ^= RightsFlags.GetHashCode();
        if (HasIsReady) hash ^= IsReady.GetHashCode();
        if (HasPlayerType) hash ^= PlayerType.GetHashCode();
        if (HasCompatibilityVersion) hash ^= CompatibilityVersion.GetHashCode();
        if (HasPlatform) hash ^= Platform.GetHashCode();
        if (HasTeam) hash ^= Team.GetHashCode();
        if (heroRoster_ != null) hash ^= HeroRoster.GetHashCode();
        if (HasPermissions) hash ^= Permissions.GetHashCode();
        if (HasNewPlayerProgress) hash ^= NewPlayerProgress.GetHashCode();
        hash ^= ownedHeroes_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPersonaName) {
          output.WriteRawTag(18);
          output.WriteString(PersonaName);
        }
        if (HasRightsFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(RightsFlags);
        }
        if (HasIsReady) {
          output.WriteRawTag(32);
          output.WriteBool(IsReady);
        }
        if (HasPlayerType) {
          output.WriteRawTag(40);
          output.WriteEnum((int) PlayerType);
        }
        if (HasCompatibilityVersion) {
          output.WriteRawTag(48);
          output.WriteUInt32(CompatibilityVersion);
        }
        if (HasPlatform) {
          output.WriteRawTag(56);
          output.WriteEnum((int) Platform);
        }
        if (HasTeam) {
          output.WriteRawTag(64);
          output.WriteUInt32(Team);
        }
        if (heroRoster_ != null) {
          output.WriteRawTag(74);
          output.WriteMessage(HeroRoster);
        }
        if (HasPermissions) {
          output.WriteRawTag(80);
          output.WriteUInt64(Permissions);
        }
        if (HasNewPlayerProgress) {
          output.WriteRawTag(88);
          output.WriteUInt64(NewPlayerProgress);
        }
        ownedHeroes_.WriteTo(output, _repeated_ownedHeroes_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPersonaName) {
          output.WriteRawTag(18);
          output.WriteString(PersonaName);
        }
        if (HasRightsFlags) {
          output.WriteRawTag(24);
          output.WriteUInt32(RightsFlags);
        }
        if (HasIsReady) {
          output.WriteRawTag(32);
          output.WriteBool(IsReady);
        }
        if (HasPlayerType) {
          output.WriteRawTag(40);
          output.WriteEnum((int) PlayerType);
        }
        if (HasCompatibilityVersion) {
          output.WriteRawTag(48);
          output.WriteUInt32(CompatibilityVersion);
        }
        if (HasPlatform) {
          output.WriteRawTag(56);
          output.WriteEnum((int) Platform);
        }
        if (HasTeam) {
          output.WriteRawTag(64);
          output.WriteUInt32(Team);
        }
        if (heroRoster_ != null) {
          output.WriteRawTag(74);
          output.WriteMessage(HeroRoster);
        }
        if (HasPermissions) {
          output.WriteRawTag(80);
          output.WriteUInt64(Permissions);
        }
        if (HasNewPlayerProgress) {
          output.WriteRawTag(88);
          output.WriteUInt64(NewPlayerProgress);
        }
        ownedHeroes_.WriteTo(ref output, _repeated_ownedHeroes_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
        }
        if (HasPersonaName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
        }
        if (HasRightsFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RightsFlags);
        }
        if (HasIsReady) {
          size += 1 + 1;
        }
        if (HasPlayerType) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerType);
        }
        if (HasCompatibilityVersion) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CompatibilityVersion);
        }
        if (HasPlatform) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
        }
        if (HasTeam) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Team);
        }
        if (heroRoster_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeroRoster);
        }
        if (HasPermissions) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Permissions);
        }
        if (HasNewPlayerProgress) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NewPlayerProgress);
        }
        size += ownedHeroes_.CalculateSize(_repeated_ownedHeroes_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Member other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasPersonaName) {
          PersonaName = other.PersonaName;
        }
        if (other.HasRightsFlags) {
          RightsFlags = other.RightsFlags;
        }
        if (other.HasIsReady) {
          IsReady = other.IsReady;
        }
        if (other.HasPlayerType) {
          PlayerType = other.PlayerType;
        }
        if (other.HasCompatibilityVersion) {
          CompatibilityVersion = other.CompatibilityVersion;
        }
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasTeam) {
          Team = other.Team;
        }
        if (other.heroRoster_ != null) {
          if (heroRoster_ == null) {
            HeroRoster = new global::CMsgHeroSelectionMatchInfo();
          }
          HeroRoster.MergeFrom(other.HeroRoster);
        }
        if (other.HasPermissions) {
          Permissions = other.Permissions;
        }
        if (other.HasNewPlayerProgress) {
          NewPlayerProgress = other.NewPlayerProgress;
        }
        ownedHeroes_.Add(other.ownedHeroes_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 18: {
              PersonaName = input.ReadString();
              break;
            }
            case 24: {
              RightsFlags = input.ReadUInt32();
              break;
            }
            case 32: {
              IsReady = input.ReadBool();
              break;
            }
            case 40: {
              PlayerType = (global::CSOCitadelParty.Types.EPlayerType) input.ReadEnum();
              break;
            }
            case 48: {
              CompatibilityVersion = input.ReadUInt32();
              break;
            }
            case 56: {
              Platform = (global::EGCPlatform) input.ReadEnum();
              break;
            }
            case 64: {
              Team = input.ReadUInt32();
              break;
            }
            case 74: {
              if (heroRoster_ == null) {
                HeroRoster = new global::CMsgHeroSelectionMatchInfo();
              }
              input.ReadMessage(HeroRoster);
              break;
            }
            case 80: {
              Permissions = input.ReadUInt64();
              break;
            }
            case 88: {
              NewPlayerProgress = input.ReadUInt64();
              break;
            }
            case 98:
            case 96: {
              ownedHeroes_.AddEntriesFrom(input, _repeated_ownedHeroes_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 18: {
              PersonaName = input.ReadString();
              break;
            }
            case 24: {
              RightsFlags = input.ReadUInt32();
              break;
            }
            case 32: {
              IsReady = input.ReadBool();
              break;
            }
            case 40: {
              PlayerType = (global::CSOCitadelParty.Types.EPlayerType) input.ReadEnum();
              break;
            }
            case 48: {
              CompatibilityVersion = input.ReadUInt32();
              break;
            }
            case 56: {
              Platform = (global::EGCPlatform) input.ReadEnum();
              break;
            }
            case 64: {
              Team = input.ReadUInt32();
              break;
            }
            case 74: {
              if (heroRoster_ == null) {
                HeroRoster = new global::CMsgHeroSelectionMatchInfo();
              }
              input.ReadMessage(HeroRoster);
              break;
            }
            case 80: {
              Permissions = input.ReadUInt64();
              break;
            }
            case 88: {
              NewPlayerProgress = input.ReadUInt64();
              break;
            }
            case 98:
            case 96: {
              ownedHeroes_.AddEntriesFrom(ref input, _repeated_ownedHeroes_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class LeftMember : pb::IMessage<LeftMember>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<LeftMember> _parser = new pb::MessageParser<LeftMember>(() => new LeftMember());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<LeftMember> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSOCitadelParty.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LeftMember() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LeftMember(LeftMember other) : this() {
        _hasBits0 = other._hasBits0;
        accountId_ = other.accountId_;
        rightsFlags_ = other.rightsFlags_;
        playerType_ = other.playerType_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public LeftMember Clone() {
        return new LeftMember(this);
      }

      /// <summary>Field number for the "account_id" field.</summary>
      public const int AccountIdFieldNumber = 1;
      private readonly static uint AccountIdDefaultValue = 0;

      private uint accountId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountId {
        get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountId_ = value;
        }
      }
      /// <summary>Gets whether the "account_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "rights_flags" field.</summary>
      public const int RightsFlagsFieldNumber = 2;
      private readonly static uint RightsFlagsDefaultValue = 0;

      private uint rightsFlags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint RightsFlags {
        get { if ((_hasBits0 & 2) != 0) { return rightsFlags_; } else { return RightsFlagsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          rightsFlags_ = value;
        }
      }
      /// <summary>Gets whether the "rights_flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRightsFlags {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "rights_flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRightsFlags() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "player_type" field.</summary>
      public const int PlayerTypeFieldNumber = 3;
      private readonly static global::CSOCitadelParty.Types.EPlayerType PlayerTypeDefaultValue = global::CSOCitadelParty.Types.EPlayerType.KEPlayerTypePlayer;

      private global::CSOCitadelParty.Types.EPlayerType playerType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CSOCitadelParty.Types.EPlayerType PlayerType {
        get { if ((_hasBits0 & 4) != 0) { return playerType_; } else { return PlayerTypeDefaultValue; } }
        set {
          _hasBits0 |= 4;
          playerType_ = value;
        }
      }
      /// <summary>Gets whether the "player_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerType {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "player_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerType() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as LeftMember);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(LeftMember other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountId != other.AccountId) return false;
        if (RightsFlags != other.RightsFlags) return false;
        if (PlayerType != other.PlayerType) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountId) hash ^= AccountId.GetHashCode();
        if (HasRightsFlags) hash ^= RightsFlags.GetHashCode();
        if (HasPlayerType) hash ^= PlayerType.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasRightsFlags) {
          output.WriteRawTag(16);
          output.WriteUInt32(RightsFlags);
        }
        if (HasPlayerType) {
          output.WriteRawTag(24);
          output.WriteEnum((int) PlayerType);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasRightsFlags) {
          output.WriteRawTag(16);
          output.WriteUInt32(RightsFlags);
        }
        if (HasPlayerType) {
          output.WriteRawTag(24);
          output.WriteEnum((int) PlayerType);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
        }
        if (HasRightsFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RightsFlags);
        }
        if (HasPlayerType) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerType);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(LeftMember other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasRightsFlags) {
          RightsFlags = other.RightsFlags;
        }
        if (other.HasPlayerType) {
          PlayerType = other.PlayerType;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              RightsFlags = input.ReadUInt32();
              break;
            }
            case 24: {
              PlayerType = (global::CSOCitadelParty.Types.EPlayerType) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              RightsFlags = input.ReadUInt32();
              break;
            }
            case 24: {
              PlayerType = (global::CSOCitadelParty.Types.EPlayerType) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Invite : pb::IMessage<Invite>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Invite> _parser = new pb::MessageParser<Invite>(() => new Invite());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Invite> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSOCitadelParty.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Invite() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Invite(Invite other) : this() {
        _hasBits0 = other._hasBits0;
        accountId_ = other.accountId_;
        personaName_ = other.personaName_;
        invitedBy_ = other.invitedBy_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Invite Clone() {
        return new Invite(this);
      }

      /// <summary>Field number for the "account_id" field.</summary>
      public const int AccountIdFieldNumber = 1;
      private readonly static uint AccountIdDefaultValue = 0;

      private uint accountId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountId {
        get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountId_ = value;
        }
      }
      /// <summary>Gets whether the "account_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "persona_name" field.</summary>
      public const int PersonaNameFieldNumber = 2;
      private readonly static string PersonaNameDefaultValue = "";

      private string personaName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string PersonaName {
        get { return personaName_ ?? PersonaNameDefaultValue; }
        set {
          personaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "persona_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPersonaName {
        get { return personaName_ != null; }
      }
      /// <summary>Clears the value of the "persona_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPersonaName() {
        personaName_ = null;
      }

      /// <summary>Field number for the "invited_by" field.</summary>
      public const int InvitedByFieldNumber = 3;
      private readonly static uint InvitedByDefaultValue = 0;

      private uint invitedBy_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint InvitedBy {
        get { if ((_hasBits0 & 2) != 0) { return invitedBy_; } else { return InvitedByDefaultValue; } }
        set {
          _hasBits0 |= 2;
          invitedBy_ = value;
        }
      }
      /// <summary>Gets whether the "invited_by" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasInvitedBy {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "invited_by" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearInvitedBy() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Invite);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Invite other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountId != other.AccountId) return false;
        if (PersonaName != other.PersonaName) return false;
        if (InvitedBy != other.InvitedBy) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountId) hash ^= AccountId.GetHashCode();
        if (HasPersonaName) hash ^= PersonaName.GetHashCode();
        if (HasInvitedBy) hash ^= InvitedBy.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPersonaName) {
          output.WriteRawTag(18);
          output.WriteString(PersonaName);
        }
        if (HasInvitedBy) {
          output.WriteRawTag(24);
          output.WriteUInt32(InvitedBy);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPersonaName) {
          output.WriteRawTag(18);
          output.WriteString(PersonaName);
        }
        if (HasInvitedBy) {
          output.WriteRawTag(24);
          output.WriteUInt32(InvitedBy);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
        }
        if (HasPersonaName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonaName);
        }
        if (HasInvitedBy) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InvitedBy);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Invite other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasPersonaName) {
          PersonaName = other.PersonaName;
        }
        if (other.HasInvitedBy) {
          InvitedBy = other.InvitedBy;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 18: {
              PersonaName = input.ReadString();
              break;
            }
            case 24: {
              InvitedBy = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 18: {
              PersonaName = input.ReadString();
              break;
            }
            case 24: {
              InvitedBy = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgMatchPlayerPathsData : pb::IMessage<CMsgMatchPlayerPathsData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMatchPlayerPathsData> _parser = new pb::MessageParser<CMsgMatchPlayerPathsData>(() => new CMsgMatchPlayerPathsData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMatchPlayerPathsData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerPathsData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerPathsData(CMsgMatchPlayerPathsData other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    intervalS_ = other.intervalS_;
    xResolution_ = other.xResolution_;
    yResolution_ = other.yResolution_;
    paths_ = other.paths_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerPathsData Clone() {
    return new CMsgMatchPlayerPathsData(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "interval_s" field.</summary>
  public const int IntervalSFieldNumber = 2;
  private readonly static float IntervalSDefaultValue = 0F;

  private float intervalS_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float IntervalS {
    get { if ((_hasBits0 & 2) != 0) { return intervalS_; } else { return IntervalSDefaultValue; } }
    set {
      _hasBits0 |= 2;
      intervalS_ = value;
    }
  }
  /// <summary>Gets whether the "interval_s" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIntervalS {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "interval_s" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIntervalS() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "x_resolution" field.</summary>
  public const int XResolutionFieldNumber = 3;
  private readonly static uint XResolutionDefaultValue = 0;

  private uint xResolution_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint XResolution {
    get { if ((_hasBits0 & 4) != 0) { return xResolution_; } else { return XResolutionDefaultValue; } }
    set {
      _hasBits0 |= 4;
      xResolution_ = value;
    }
  }
  /// <summary>Gets whether the "x_resolution" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXResolution {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "x_resolution" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXResolution() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "y_resolution" field.</summary>
  public const int YResolutionFieldNumber = 4;
  private readonly static uint YResolutionDefaultValue = 0;

  private uint yResolution_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint YResolution {
    get { if ((_hasBits0 & 8) != 0) { return yResolution_; } else { return YResolutionDefaultValue; } }
    set {
      _hasBits0 |= 8;
      yResolution_ = value;
    }
  }
  /// <summary>Gets whether the "y_resolution" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYResolution {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "y_resolution" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYResolution() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "paths" field.</summary>
  public const int PathsFieldNumber = 5;
  private static readonly pb::FieldCodec<global::CMsgMatchPlayerPathsData.Types.Path> _repeated_paths_codec
      = pb::FieldCodec.ForMessage(42, global::CMsgMatchPlayerPathsData.Types.Path.Parser);
  private readonly pbc::RepeatedField<global::CMsgMatchPlayerPathsData.Types.Path> paths_ = new pbc::RepeatedField<global::CMsgMatchPlayerPathsData.Types.Path>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgMatchPlayerPathsData.Types.Path> Paths {
    get { return paths_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMatchPlayerPathsData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMatchPlayerPathsData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(IntervalS, other.IntervalS)) return false;
    if (XResolution != other.XResolution) return false;
    if (YResolution != other.YResolution) return false;
    if(!paths_.Equals(other.paths_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasIntervalS) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(IntervalS);
    if (HasXResolution) hash ^= XResolution.GetHashCode();
    if (HasYResolution) hash ^= YResolution.GetHashCode();
    hash ^= paths_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasIntervalS) {
      output.WriteRawTag(21);
      output.WriteFloat(IntervalS);
    }
    if (HasXResolution) {
      output.WriteRawTag(24);
      output.WriteUInt32(XResolution);
    }
    if (HasYResolution) {
      output.WriteRawTag(32);
      output.WriteUInt32(YResolution);
    }
    paths_.WriteTo(output, _repeated_paths_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasIntervalS) {
      output.WriteRawTag(21);
      output.WriteFloat(IntervalS);
    }
    if (HasXResolution) {
      output.WriteRawTag(24);
      output.WriteUInt32(XResolution);
    }
    if (HasYResolution) {
      output.WriteRawTag(32);
      output.WriteUInt32(YResolution);
    }
    paths_.WriteTo(ref output, _repeated_paths_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasIntervalS) {
      size += 1 + 4;
    }
    if (HasXResolution) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XResolution);
    }
    if (HasYResolution) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(YResolution);
    }
    size += paths_.CalculateSize(_repeated_paths_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMatchPlayerPathsData other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasIntervalS) {
      IntervalS = other.IntervalS;
    }
    if (other.HasXResolution) {
      XResolution = other.XResolution;
    }
    if (other.HasYResolution) {
      YResolution = other.YResolution;
    }
    paths_.Add(other.paths_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 21: {
          IntervalS = input.ReadFloat();
          break;
        }
        case 24: {
          XResolution = input.ReadUInt32();
          break;
        }
        case 32: {
          YResolution = input.ReadUInt32();
          break;
        }
        case 42: {
          paths_.AddEntriesFrom(input, _repeated_paths_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 21: {
          IntervalS = input.ReadFloat();
          break;
        }
        case 24: {
          XResolution = input.ReadUInt32();
          break;
        }
        case 32: {
          YResolution = input.ReadUInt32();
          break;
        }
        case 42: {
          paths_.AddEntriesFrom(ref input, _repeated_paths_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgMatchPlayerPathsData message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Path : pb::IMessage<Path>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Path> _parser = new pb::MessageParser<Path>(() => new Path());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Path> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchPlayerPathsData.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Path() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Path(Path other) : this() {
        _hasBits0 = other._hasBits0;
        playerSlot_ = other.playerSlot_;
        xMin_ = other.xMin_;
        yMin_ = other.yMin_;
        xMax_ = other.xMax_;
        yMax_ = other.yMax_;
        xPos_ = other.xPos_.Clone();
        yPos_ = other.yPos_.Clone();
        alive_ = other.alive_.Clone();
        health_ = other.health_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Path Clone() {
        return new Path(this);
      }

      /// <summary>Field number for the "player_slot" field.</summary>
      public const int PlayerSlotFieldNumber = 1;
      private readonly static uint PlayerSlotDefaultValue = 0;

      private uint playerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerSlot {
        get { if ((_hasBits0 & 1) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 1;
          playerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerSlot {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerSlot() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "x_min" field.</summary>
      public const int XMinFieldNumber = 2;
      private readonly static float XMinDefaultValue = 0F;

      private float xMin_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float XMin {
        get { if ((_hasBits0 & 2) != 0) { return xMin_; } else { return XMinDefaultValue; } }
        set {
          _hasBits0 |= 2;
          xMin_ = value;
        }
      }
      /// <summary>Gets whether the "x_min" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasXMin {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "x_min" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearXMin() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "y_min" field.</summary>
      public const int YMinFieldNumber = 3;
      private readonly static float YMinDefaultValue = 0F;

      private float yMin_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float YMin {
        get { if ((_hasBits0 & 4) != 0) { return yMin_; } else { return YMinDefaultValue; } }
        set {
          _hasBits0 |= 4;
          yMin_ = value;
        }
      }
      /// <summary>Gets whether the "y_min" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasYMin {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "y_min" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearYMin() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "x_max" field.</summary>
      public const int XMaxFieldNumber = 4;
      private readonly static float XMaxDefaultValue = 0F;

      private float xMax_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float XMax {
        get { if ((_hasBits0 & 8) != 0) { return xMax_; } else { return XMaxDefaultValue; } }
        set {
          _hasBits0 |= 8;
          xMax_ = value;
        }
      }
      /// <summary>Gets whether the "x_max" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasXMax {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "x_max" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearXMax() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "y_max" field.</summary>
      public const int YMaxFieldNumber = 5;
      private readonly static float YMaxDefaultValue = 0F;

      private float yMax_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float YMax {
        get { if ((_hasBits0 & 16) != 0) { return yMax_; } else { return YMaxDefaultValue; } }
        set {
          _hasBits0 |= 16;
          yMax_ = value;
        }
      }
      /// <summary>Gets whether the "y_max" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasYMax {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "y_max" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearYMax() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "x_pos" field.</summary>
      public const int XPosFieldNumber = 6;
      private static readonly pb::FieldCodec<uint> _repeated_xPos_codec
          = pb::FieldCodec.ForUInt32(50);
      private readonly pbc::RepeatedField<uint> xPos_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<uint> XPos {
        get { return xPos_; }
      }

      /// <summary>Field number for the "y_pos" field.</summary>
      public const int YPosFieldNumber = 7;
      private static readonly pb::FieldCodec<uint> _repeated_yPos_codec
          = pb::FieldCodec.ForUInt32(58);
      private readonly pbc::RepeatedField<uint> yPos_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<uint> YPos {
        get { return yPos_; }
      }

      /// <summary>Field number for the "alive" field.</summary>
      public const int AliveFieldNumber = 8;
      private static readonly pb::FieldCodec<bool> _repeated_alive_codec
          = pb::FieldCodec.ForBool(66);
      private readonly pbc::RepeatedField<bool> alive_ = new pbc::RepeatedField<bool>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<bool> Alive {
        get { return alive_; }
      }

      /// <summary>Field number for the "health" field.</summary>
      public const int HealthFieldNumber = 9;
      private static readonly pb::FieldCodec<uint> _repeated_health_codec
          = pb::FieldCodec.ForUInt32(74);
      private readonly pbc::RepeatedField<uint> health_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<uint> Health {
        get { return health_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Path);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Path other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PlayerSlot != other.PlayerSlot) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XMin, other.XMin)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YMin, other.YMin)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XMax, other.XMax)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YMax, other.YMax)) return false;
        if(!xPos_.Equals(other.xPos_)) return false;
        if(!yPos_.Equals(other.yPos_)) return false;
        if(!alive_.Equals(other.alive_)) return false;
        if(!health_.Equals(other.health_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
        if (HasXMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XMin);
        if (HasYMin) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YMin);
        if (HasXMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XMax);
        if (HasYMax) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YMax);
        hash ^= xPos_.GetHashCode();
        hash ^= yPos_.GetHashCode();
        hash ^= alive_.GetHashCode();
        hash ^= health_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(PlayerSlot);
        }
        if (HasXMin) {
          output.WriteRawTag(21);
          output.WriteFloat(XMin);
        }
        if (HasYMin) {
          output.WriteRawTag(29);
          output.WriteFloat(YMin);
        }
        if (HasXMax) {
          output.WriteRawTag(37);
          output.WriteFloat(XMax);
        }
        if (HasYMax) {
          output.WriteRawTag(45);
          output.WriteFloat(YMax);
        }
        xPos_.WriteTo(output, _repeated_xPos_codec);
        yPos_.WriteTo(output, _repeated_yPos_codec);
        alive_.WriteTo(output, _repeated_alive_codec);
        health_.WriteTo(output, _repeated_health_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(PlayerSlot);
        }
        if (HasXMin) {
          output.WriteRawTag(21);
          output.WriteFloat(XMin);
        }
        if (HasYMin) {
          output.WriteRawTag(29);
          output.WriteFloat(YMin);
        }
        if (HasXMax) {
          output.WriteRawTag(37);
          output.WriteFloat(XMax);
        }
        if (HasYMax) {
          output.WriteRawTag(45);
          output.WriteFloat(YMax);
        }
        xPos_.WriteTo(ref output, _repeated_xPos_codec);
        yPos_.WriteTo(ref output, _repeated_yPos_codec);
        alive_.WriteTo(ref output, _repeated_alive_codec);
        health_.WriteTo(ref output, _repeated_health_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerSlot);
        }
        if (HasXMin) {
          size += 1 + 4;
        }
        if (HasYMin) {
          size += 1 + 4;
        }
        if (HasXMax) {
          size += 1 + 4;
        }
        if (HasYMax) {
          size += 1 + 4;
        }
        size += xPos_.CalculateSize(_repeated_xPos_codec);
        size += yPos_.CalculateSize(_repeated_yPos_codec);
        size += alive_.CalculateSize(_repeated_alive_codec);
        size += health_.CalculateSize(_repeated_health_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Path other) {
        if (other == null) {
          return;
        }
        if (other.HasPlayerSlot) {
          PlayerSlot = other.PlayerSlot;
        }
        if (other.HasXMin) {
          XMin = other.XMin;
        }
        if (other.HasYMin) {
          YMin = other.YMin;
        }
        if (other.HasXMax) {
          XMax = other.XMax;
        }
        if (other.HasYMax) {
          YMax = other.YMax;
        }
        xPos_.Add(other.xPos_);
        yPos_.Add(other.yPos_);
        alive_.Add(other.alive_);
        health_.Add(other.health_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
            case 21: {
              XMin = input.ReadFloat();
              break;
            }
            case 29: {
              YMin = input.ReadFloat();
              break;
            }
            case 37: {
              XMax = input.ReadFloat();
              break;
            }
            case 45: {
              YMax = input.ReadFloat();
              break;
            }
            case 50:
            case 48: {
              xPos_.AddEntriesFrom(input, _repeated_xPos_codec);
              break;
            }
            case 58:
            case 56: {
              yPos_.AddEntriesFrom(input, _repeated_yPos_codec);
              break;
            }
            case 66:
            case 64: {
              alive_.AddEntriesFrom(input, _repeated_alive_codec);
              break;
            }
            case 74:
            case 72: {
              health_.AddEntriesFrom(input, _repeated_health_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
            case 21: {
              XMin = input.ReadFloat();
              break;
            }
            case 29: {
              YMin = input.ReadFloat();
              break;
            }
            case 37: {
              XMax = input.ReadFloat();
              break;
            }
            case 45: {
              YMax = input.ReadFloat();
              break;
            }
            case 50:
            case 48: {
              xPos_.AddEntriesFrom(ref input, _repeated_xPos_codec);
              break;
            }
            case 58:
            case 56: {
              yPos_.AddEntriesFrom(ref input, _repeated_yPos_codec);
              break;
            }
            case 66:
            case 64: {
              alive_.AddEntriesFrom(ref input, _repeated_alive_codec);
              break;
            }
            case 74:
            case 72: {
              health_.AddEntriesFrom(ref input, _repeated_health_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgMatchPlayerDamageMatrix : pb::IMessage<CMsgMatchPlayerDamageMatrix>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMatchPlayerDamageMatrix> _parser = new pb::MessageParser<CMsgMatchPlayerDamageMatrix>(() => new CMsgMatchPlayerDamageMatrix());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMatchPlayerDamageMatrix> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerDamageMatrix() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerDamageMatrix(CMsgMatchPlayerDamageMatrix other) : this() {
    damageDealers_ = other.damageDealers_.Clone();
    sampleTimeS_ = other.sampleTimeS_.Clone();
    sourceDetails_ = other.sourceDetails_ != null ? other.sourceDetails_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchPlayerDamageMatrix Clone() {
    return new CMsgMatchPlayerDamageMatrix(this);
  }

  /// <summary>Field number for the "damage_dealers" field.</summary>
  public const int DamageDealersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer> _repeated_damageDealers_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer.Parser);
  private readonly pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer> damageDealers_ = new pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageDealer> DamageDealers {
    get { return damageDealers_; }
  }

  /// <summary>Field number for the "sample_time_s" field.</summary>
  public const int SampleTimeSFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_sampleTimeS_codec
      = pb::FieldCodec.ForUInt32(18);
  private readonly pbc::RepeatedField<uint> sampleTimeS_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> SampleTimeS {
    get { return sampleTimeS_; }
  }

  /// <summary>Field number for the "source_details" field.</summary>
  public const int SourceDetailsFieldNumber = 3;
  private global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails sourceDetails_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails SourceDetails {
    get { return sourceDetails_; }
    set {
      sourceDetails_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMatchPlayerDamageMatrix);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMatchPlayerDamageMatrix other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!damageDealers_.Equals(other.damageDealers_)) return false;
    if(!sampleTimeS_.Equals(other.sampleTimeS_)) return false;
    if (!object.Equals(SourceDetails, other.SourceDetails)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= damageDealers_.GetHashCode();
    hash ^= sampleTimeS_.GetHashCode();
    if (sourceDetails_ != null) hash ^= SourceDetails.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    damageDealers_.WriteTo(output, _repeated_damageDealers_codec);
    sampleTimeS_.WriteTo(output, _repeated_sampleTimeS_codec);
    if (sourceDetails_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SourceDetails);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    damageDealers_.WriteTo(ref output, _repeated_damageDealers_codec);
    sampleTimeS_.WriteTo(ref output, _repeated_sampleTimeS_codec);
    if (sourceDetails_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SourceDetails);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += damageDealers_.CalculateSize(_repeated_damageDealers_codec);
    size += sampleTimeS_.CalculateSize(_repeated_sampleTimeS_codec);
    if (sourceDetails_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceDetails);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMatchPlayerDamageMatrix other) {
    if (other == null) {
      return;
    }
    damageDealers_.Add(other.damageDealers_);
    sampleTimeS_.Add(other.sampleTimeS_);
    if (other.sourceDetails_ != null) {
      if (sourceDetails_ == null) {
        SourceDetails = new global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails();
      }
      SourceDetails.MergeFrom(other.SourceDetails);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          damageDealers_.AddEntriesFrom(input, _repeated_damageDealers_codec);
          break;
        }
        case 18:
        case 16: {
          sampleTimeS_.AddEntriesFrom(input, _repeated_sampleTimeS_codec);
          break;
        }
        case 26: {
          if (sourceDetails_ == null) {
            SourceDetails = new global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails();
          }
          input.ReadMessage(SourceDetails);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          damageDealers_.AddEntriesFrom(ref input, _repeated_damageDealers_codec);
          break;
        }
        case 18:
        case 16: {
          sampleTimeS_.AddEntriesFrom(ref input, _repeated_sampleTimeS_codec);
          break;
        }
        case 26: {
          if (sourceDetails_ == null) {
            SourceDetails = new global::CMsgMatchPlayerDamageMatrix.Types.SourceDetails();
          }
          input.ReadMessage(SourceDetails);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgMatchPlayerDamageMatrix message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum EStatType {
      [pbr::OriginalName("k_eType_Damage")] KETypeDamage = 0,
      [pbr::OriginalName("k_eType_Healing")] KETypeHealing = 1,
      [pbr::OriginalName("k_eType_HealPrevented")] KETypeHealPrevented = 2,
      [pbr::OriginalName("k_eType_Mitigated")] KETypeMitigated = 3,
      [pbr::OriginalName("k_eType_LethalDamage")] KETypeLethalDamage = 4,
    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class DamageToPlayer : pb::IMessage<DamageToPlayer>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DamageToPlayer> _parser = new pb::MessageParser<DamageToPlayer>(() => new DamageToPlayer());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DamageToPlayer> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchPlayerDamageMatrix.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageToPlayer() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageToPlayer(DamageToPlayer other) : this() {
        _hasBits0 = other._hasBits0;
        targetPlayerSlot_ = other.targetPlayerSlot_;
        damage_ = other.damage_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageToPlayer Clone() {
        return new DamageToPlayer(this);
      }

      /// <summary>Field number for the "target_player_slot" field.</summary>
      public const int TargetPlayerSlotFieldNumber = 1;
      private readonly static uint TargetPlayerSlotDefaultValue = 0;

      private uint targetPlayerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TargetPlayerSlot {
        get { if ((_hasBits0 & 1) != 0) { return targetPlayerSlot_; } else { return TargetPlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 1;
          targetPlayerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "target_player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTargetPlayerSlot {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "target_player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTargetPlayerSlot() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "damage" field.</summary>
      public const int DamageFieldNumber = 2;
      private static readonly pb::FieldCodec<uint> _repeated_damage_codec
          = pb::FieldCodec.ForUInt32(18);
      private readonly pbc::RepeatedField<uint> damage_ = new pbc::RepeatedField<uint>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<uint> Damage {
        get { return damage_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DamageToPlayer);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DamageToPlayer other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TargetPlayerSlot != other.TargetPlayerSlot) return false;
        if(!damage_.Equals(other.damage_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTargetPlayerSlot) hash ^= TargetPlayerSlot.GetHashCode();
        hash ^= damage_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTargetPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(TargetPlayerSlot);
        }
        damage_.WriteTo(output, _repeated_damage_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTargetPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(TargetPlayerSlot);
        }
        damage_.WriteTo(ref output, _repeated_damage_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTargetPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetPlayerSlot);
        }
        size += damage_.CalculateSize(_repeated_damage_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DamageToPlayer other) {
        if (other == null) {
          return;
        }
        if (other.HasTargetPlayerSlot) {
          TargetPlayerSlot = other.TargetPlayerSlot;
        }
        damage_.Add(other.damage_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              TargetPlayerSlot = input.ReadUInt32();
              break;
            }
            case 18:
            case 16: {
              damage_.AddEntriesFrom(input, _repeated_damage_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              TargetPlayerSlot = input.ReadUInt32();
              break;
            }
            case 18:
            case 16: {
              damage_.AddEntriesFrom(ref input, _repeated_damage_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class DamageSource : pb::IMessage<DamageSource>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DamageSource> _parser = new pb::MessageParser<DamageSource>(() => new DamageSource());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DamageSource> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchPlayerDamageMatrix.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageSource() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageSource(DamageSource other) : this() {
        _hasBits0 = other._hasBits0;
        damageToPlayers_ = other.damageToPlayers_.Clone();
        sourceDetailsIndex_ = other.sourceDetailsIndex_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageSource Clone() {
        return new DamageSource(this);
      }

      /// <summary>Field number for the "damage_to_players" field.</summary>
      public const int DamageToPlayersFieldNumber = 2;
      private static readonly pb::FieldCodec<global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer> _repeated_damageToPlayers_codec
          = pb::FieldCodec.ForMessage(18, global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer> damageToPlayers_ = new pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageToPlayer> DamageToPlayers {
        get { return damageToPlayers_; }
      }

      /// <summary>Field number for the "source_details_index" field.</summary>
      public const int SourceDetailsIndexFieldNumber = 4;
      private readonly static uint SourceDetailsIndexDefaultValue = 0;

      private uint sourceDetailsIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SourceDetailsIndex {
        get { if ((_hasBits0 & 1) != 0) { return sourceDetailsIndex_; } else { return SourceDetailsIndexDefaultValue; } }
        set {
          _hasBits0 |= 1;
          sourceDetailsIndex_ = value;
        }
      }
      /// <summary>Gets whether the "source_details_index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSourceDetailsIndex {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "source_details_index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSourceDetailsIndex() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DamageSource);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DamageSource other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if(!damageToPlayers_.Equals(other.damageToPlayers_)) return false;
        if (SourceDetailsIndex != other.SourceDetailsIndex) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        hash ^= damageToPlayers_.GetHashCode();
        if (HasSourceDetailsIndex) hash ^= SourceDetailsIndex.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        damageToPlayers_.WriteTo(output, _repeated_damageToPlayers_codec);
        if (HasSourceDetailsIndex) {
          output.WriteRawTag(32);
          output.WriteUInt32(SourceDetailsIndex);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        damageToPlayers_.WriteTo(ref output, _repeated_damageToPlayers_codec);
        if (HasSourceDetailsIndex) {
          output.WriteRawTag(32);
          output.WriteUInt32(SourceDetailsIndex);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        size += damageToPlayers_.CalculateSize(_repeated_damageToPlayers_codec);
        if (HasSourceDetailsIndex) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceDetailsIndex);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DamageSource other) {
        if (other == null) {
          return;
        }
        damageToPlayers_.Add(other.damageToPlayers_);
        if (other.HasSourceDetailsIndex) {
          SourceDetailsIndex = other.SourceDetailsIndex;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 18: {
              damageToPlayers_.AddEntriesFrom(input, _repeated_damageToPlayers_codec);
              break;
            }
            case 32: {
              SourceDetailsIndex = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 18: {
              damageToPlayers_.AddEntriesFrom(ref input, _repeated_damageToPlayers_codec);
              break;
            }
            case 32: {
              SourceDetailsIndex = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class DamageDealer : pb::IMessage<DamageDealer>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DamageDealer> _parser = new pb::MessageParser<DamageDealer>(() => new DamageDealer());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DamageDealer> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchPlayerDamageMatrix.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageDealer() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageDealer(DamageDealer other) : this() {
        _hasBits0 = other._hasBits0;
        dealerPlayerSlot_ = other.dealerPlayerSlot_;
        damageSources_ = other.damageSources_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DamageDealer Clone() {
        return new DamageDealer(this);
      }

      /// <summary>Field number for the "dealer_player_slot" field.</summary>
      public const int DealerPlayerSlotFieldNumber = 1;
      private readonly static uint DealerPlayerSlotDefaultValue = 0;

      private uint dealerPlayerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DealerPlayerSlot {
        get { if ((_hasBits0 & 1) != 0) { return dealerPlayerSlot_; } else { return DealerPlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 1;
          dealerPlayerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "dealer_player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDealerPlayerSlot {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "dealer_player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDealerPlayerSlot() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "damage_sources" field.</summary>
      public const int DamageSourcesFieldNumber = 2;
      private static readonly pb::FieldCodec<global::CMsgMatchPlayerDamageMatrix.Types.DamageSource> _repeated_damageSources_codec
          = pb::FieldCodec.ForMessage(18, global::CMsgMatchPlayerDamageMatrix.Types.DamageSource.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageSource> damageSources_ = new pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageSource>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.DamageSource> DamageSources {
        get { return damageSources_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DamageDealer);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DamageDealer other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (DealerPlayerSlot != other.DealerPlayerSlot) return false;
        if(!damageSources_.Equals(other.damageSources_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasDealerPlayerSlot) hash ^= DealerPlayerSlot.GetHashCode();
        hash ^= damageSources_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasDealerPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(DealerPlayerSlot);
        }
        damageSources_.WriteTo(output, _repeated_damageSources_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasDealerPlayerSlot) {
          output.WriteRawTag(8);
          output.WriteUInt32(DealerPlayerSlot);
        }
        damageSources_.WriteTo(ref output, _repeated_damageSources_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasDealerPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DealerPlayerSlot);
        }
        size += damageSources_.CalculateSize(_repeated_damageSources_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DamageDealer other) {
        if (other == null) {
          return;
        }
        if (other.HasDealerPlayerSlot) {
          DealerPlayerSlot = other.DealerPlayerSlot;
        }
        damageSources_.Add(other.damageSources_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              DealerPlayerSlot = input.ReadUInt32();
              break;
            }
            case 18: {
              damageSources_.AddEntriesFrom(input, _repeated_damageSources_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              DealerPlayerSlot = input.ReadUInt32();
              break;
            }
            case 18: {
              damageSources_.AddEntriesFrom(ref input, _repeated_damageSources_codec);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class SourceDetails : pb::IMessage<SourceDetails>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<SourceDetails> _parser = new pb::MessageParser<SourceDetails>(() => new SourceDetails());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<SourceDetails> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchPlayerDamageMatrix.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public SourceDetails() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public SourceDetails(SourceDetails other) : this() {
        statType_ = other.statType_.Clone();
        sourceName_ = other.sourceName_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public SourceDetails Clone() {
        return new SourceDetails(this);
      }

      /// <summary>Field number for the "stat_type" field.</summary>
      public const int StatTypeFieldNumber = 1;
      private static readonly pb::FieldCodec<global::CMsgMatchPlayerDamageMatrix.Types.EStatType> _repeated_statType_codec
          = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::CMsgMatchPlayerDamageMatrix.Types.EStatType) x);
      private readonly pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.EStatType> statType_ = new pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.EStatType>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchPlayerDamageMatrix.Types.EStatType> StatType {
        get { return statType_; }
      }

      /// <summary>Field number for the "source_name" field.</summary>
      public const int SourceNameFieldNumber = 2;
      private static readonly pb::FieldCodec<string> _repeated_sourceName_codec
          = pb::FieldCodec.ForString(18);
      private readonly pbc::RepeatedField<string> sourceName_ = new pbc::RepeatedField<string>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<string> SourceName {
        get { return sourceName_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as SourceDetails);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(SourceDetails other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if(!statType_.Equals(other.statType_)) return false;
        if(!sourceName_.Equals(other.sourceName_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        hash ^= statType_.GetHashCode();
        hash ^= sourceName_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        statType_.WriteTo(output, _repeated_statType_codec);
        sourceName_.WriteTo(output, _repeated_sourceName_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        statType_.WriteTo(ref output, _repeated_statType_codec);
        sourceName_.WriteTo(ref output, _repeated_sourceName_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        size += statType_.CalculateSize(_repeated_statType_codec);
        size += sourceName_.CalculateSize(_repeated_sourceName_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(SourceDetails other) {
        if (other == null) {
          return;
        }
        statType_.Add(other.statType_);
        sourceName_.Add(other.sourceName_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10:
            case 8: {
              statType_.AddEntriesFrom(input, _repeated_statType_codec);
              break;
            }
            case 18: {
              sourceName_.AddEntriesFrom(input, _repeated_sourceName_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10:
            case 8: {
              statType_.AddEntriesFrom(ref input, _repeated_statType_codec);
              break;
            }
            case 18: {
              sourceName_.AddEntriesFrom(ref input, _repeated_sourceName_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgMatchMetaDataContents : pb::IMessage<CMsgMatchMetaDataContents>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMatchMetaDataContents> _parser = new pb::MessageParser<CMsgMatchMetaDataContents>(() => new CMsgMatchMetaDataContents());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMatchMetaDataContents> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaDataContents() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaDataContents(CMsgMatchMetaDataContents other) : this() {
    matchInfo_ = other.matchInfo_ != null ? other.matchInfo_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaDataContents Clone() {
    return new CMsgMatchMetaDataContents(this);
  }

  /// <summary>Field number for the "match_info" field.</summary>
  public const int MatchInfoFieldNumber = 2;
  private global::CMsgMatchMetaDataContents.Types.MatchInfo matchInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgMatchMetaDataContents.Types.MatchInfo MatchInfo {
    get { return matchInfo_; }
    set {
      matchInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMatchMetaDataContents);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMatchMetaDataContents other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(MatchInfo, other.MatchInfo)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (matchInfo_ != null) hash ^= MatchInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (matchInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MatchInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (matchInfo_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MatchInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (matchInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMatchMetaDataContents other) {
    if (other == null) {
      return;
    }
    if (other.matchInfo_ != null) {
      if (matchInfo_ == null) {
        MatchInfo = new global::CMsgMatchMetaDataContents.Types.MatchInfo();
      }
      MatchInfo.MergeFrom(other.MatchInfo);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 18: {
          if (matchInfo_ == null) {
            MatchInfo = new global::CMsgMatchMetaDataContents.Types.MatchInfo();
          }
          input.ReadMessage(MatchInfo);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 18: {
          if (matchInfo_ == null) {
            MatchInfo = new global::CMsgMatchMetaDataContents.Types.MatchInfo();
          }
          input.ReadMessage(MatchInfo);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgMatchMetaDataContents message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum EMatchOutcome {
      [pbr::OriginalName("k_eOutcome_TeamWin")] KEOutcomeTeamWin = 0,
      [pbr::OriginalName("k_eOutcome_Error")] KEOutcomeError = 1,
    }

    public enum EGoldSource {
      [pbr::OriginalName("k_ePlayers")] KEPlayers = 1,
      [pbr::OriginalName("k_eLaneCreeps")] KELaneCreeps = 2,
      [pbr::OriginalName("k_eNeutrals")] KENeutrals = 3,
      [pbr::OriginalName("k_eBosses")] KEBosses = 4,
      [pbr::OriginalName("k_eTreasure")] KETreasure = 5,
      [pbr::OriginalName("k_eAssists")] KEAssists = 6,
      [pbr::OriginalName("k_eDenies")] KEDenies = 7,
    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Position : pb::IMessage<Position>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Position> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Position() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Position(Position other) : this() {
        _hasBits0 = other._hasBits0;
        x_ = other.x_;
        y_ = other.y_;
        z_ = other.z_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Position Clone() {
        return new Position(this);
      }

      /// <summary>Field number for the "x" field.</summary>
      public const int XFieldNumber = 1;
      private readonly static float XDefaultValue = 0F;

      private float x_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float X {
        get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
        set {
          _hasBits0 |= 1;
          x_ = value;
        }
      }
      /// <summary>Gets whether the "x" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasX {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "x" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearX() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "y" field.</summary>
      public const int YFieldNumber = 2;
      private readonly static float YDefaultValue = 0F;

      private float y_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Y {
        get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
        set {
          _hasBits0 |= 2;
          y_ = value;
        }
      }
      /// <summary>Gets whether the "y" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasY {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "y" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearY() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "z" field.</summary>
      public const int ZFieldNumber = 3;
      private readonly static float ZDefaultValue = 0F;

      private float z_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float Z {
        get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
        set {
          _hasBits0 |= 4;
          z_ = value;
        }
      }
      /// <summary>Gets whether the "z" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasZ {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "z" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearZ() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Position);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Position other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
        if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
        if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasX) {
          output.WriteRawTag(13);
          output.WriteFloat(X);
        }
        if (HasY) {
          output.WriteRawTag(21);
          output.WriteFloat(Y);
        }
        if (HasZ) {
          output.WriteRawTag(29);
          output.WriteFloat(Z);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasX) {
          output.WriteRawTag(13);
          output.WriteFloat(X);
        }
        if (HasY) {
          output.WriteRawTag(21);
          output.WriteFloat(Y);
        }
        if (HasZ) {
          output.WriteRawTag(29);
          output.WriteFloat(Z);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasX) {
          size += 1 + 4;
        }
        if (HasY) {
          size += 1 + 4;
        }
        if (HasZ) {
          size += 1 + 4;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Position other) {
        if (other == null) {
          return;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 13: {
              X = input.ReadFloat();
              break;
            }
            case 21: {
              Y = input.ReadFloat();
              break;
            }
            case 29: {
              Z = input.ReadFloat();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 13: {
              X = input.ReadFloat();
              break;
            }
            case 21: {
              Y = input.ReadFloat();
              break;
            }
            case 29: {
              Z = input.ReadFloat();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Deaths : pb::IMessage<Deaths>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Deaths> _parser = new pb::MessageParser<Deaths>(() => new Deaths());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Deaths> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Deaths() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Deaths(Deaths other) : this() {
        _hasBits0 = other._hasBits0;
        gameTimeS_ = other.gameTimeS_;
        killerPlayerSlot_ = other.killerPlayerSlot_;
        deathPos_ = other.deathPos_ != null ? other.deathPos_.Clone() : null;
        killerPos_ = other.killerPos_ != null ? other.killerPos_.Clone() : null;
        deathDurationS_ = other.deathDurationS_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Deaths Clone() {
        return new Deaths(this);
      }

      /// <summary>Field number for the "game_time_s" field.</summary>
      public const int GameTimeSFieldNumber = 1;
      private readonly static uint GameTimeSDefaultValue = 0;

      private uint gameTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameTimeS {
        get { if ((_hasBits0 & 1) != 0) { return gameTimeS_; } else { return GameTimeSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          gameTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "game_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameTimeS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "game_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameTimeS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "killer_player_slot" field.</summary>
      public const int KillerPlayerSlotFieldNumber = 9;
      private readonly static uint KillerPlayerSlotDefaultValue = 0;

      private uint killerPlayerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint KillerPlayerSlot {
        get { if ((_hasBits0 & 2) != 0) { return killerPlayerSlot_; } else { return KillerPlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          killerPlayerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "killer_player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKillerPlayerSlot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "killer_player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKillerPlayerSlot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "death_pos" field.</summary>
      public const int DeathPosFieldNumber = 10;
      private global::CMsgMatchMetaDataContents.Types.Position deathPos_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchMetaDataContents.Types.Position DeathPos {
        get { return deathPos_; }
        set {
          deathPos_ = value;
        }
      }

      /// <summary>Field number for the "killer_pos" field.</summary>
      public const int KillerPosFieldNumber = 11;
      private global::CMsgMatchMetaDataContents.Types.Position killerPos_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchMetaDataContents.Types.Position KillerPos {
        get { return killerPos_; }
        set {
          killerPos_ = value;
        }
      }

      /// <summary>Field number for the "death_duration_s" field.</summary>
      public const int DeathDurationSFieldNumber = 12;
      private readonly static uint DeathDurationSDefaultValue = 0;

      private uint deathDurationS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DeathDurationS {
        get { if ((_hasBits0 & 4) != 0) { return deathDurationS_; } else { return DeathDurationSDefaultValue; } }
        set {
          _hasBits0 |= 4;
          deathDurationS_ = value;
        }
      }
      /// <summary>Gets whether the "death_duration_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeathDurationS {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "death_duration_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeathDurationS() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Deaths);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Deaths other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (GameTimeS != other.GameTimeS) return false;
        if (KillerPlayerSlot != other.KillerPlayerSlot) return false;
        if (!object.Equals(DeathPos, other.DeathPos)) return false;
        if (!object.Equals(KillerPos, other.KillerPos)) return false;
        if (DeathDurationS != other.DeathDurationS) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasGameTimeS) hash ^= GameTimeS.GetHashCode();
        if (HasKillerPlayerSlot) hash ^= KillerPlayerSlot.GetHashCode();
        if (deathPos_ != null) hash ^= DeathPos.GetHashCode();
        if (killerPos_ != null) hash ^= KillerPos.GetHashCode();
        if (HasDeathDurationS) hash ^= DeathDurationS.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasKillerPlayerSlot) {
          output.WriteRawTag(72);
          output.WriteUInt32(KillerPlayerSlot);
        }
        if (deathPos_ != null) {
          output.WriteRawTag(82);
          output.WriteMessage(DeathPos);
        }
        if (killerPos_ != null) {
          output.WriteRawTag(90);
          output.WriteMessage(KillerPos);
        }
        if (HasDeathDurationS) {
          output.WriteRawTag(96);
          output.WriteUInt32(DeathDurationS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasKillerPlayerSlot) {
          output.WriteRawTag(72);
          output.WriteUInt32(KillerPlayerSlot);
        }
        if (deathPos_ != null) {
          output.WriteRawTag(82);
          output.WriteMessage(DeathPos);
        }
        if (killerPos_ != null) {
          output.WriteRawTag(90);
          output.WriteMessage(KillerPos);
        }
        if (HasDeathDurationS) {
          output.WriteRawTag(96);
          output.WriteUInt32(DeathDurationS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasGameTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameTimeS);
        }
        if (HasKillerPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KillerPlayerSlot);
        }
        if (deathPos_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeathPos);
        }
        if (killerPos_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(KillerPos);
        }
        if (HasDeathDurationS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DeathDurationS);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Deaths other) {
        if (other == null) {
          return;
        }
        if (other.HasGameTimeS) {
          GameTimeS = other.GameTimeS;
        }
        if (other.HasKillerPlayerSlot) {
          KillerPlayerSlot = other.KillerPlayerSlot;
        }
        if (other.deathPos_ != null) {
          if (deathPos_ == null) {
            DeathPos = new global::CMsgMatchMetaDataContents.Types.Position();
          }
          DeathPos.MergeFrom(other.DeathPos);
        }
        if (other.killerPos_ != null) {
          if (killerPos_ == null) {
            KillerPos = new global::CMsgMatchMetaDataContents.Types.Position();
          }
          KillerPos.MergeFrom(other.KillerPos);
        }
        if (other.HasDeathDurationS) {
          DeathDurationS = other.DeathDurationS;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 72: {
              KillerPlayerSlot = input.ReadUInt32();
              break;
            }
            case 82: {
              if (deathPos_ == null) {
                DeathPos = new global::CMsgMatchMetaDataContents.Types.Position();
              }
              input.ReadMessage(DeathPos);
              break;
            }
            case 90: {
              if (killerPos_ == null) {
                KillerPos = new global::CMsgMatchMetaDataContents.Types.Position();
              }
              input.ReadMessage(KillerPos);
              break;
            }
            case 96: {
              DeathDurationS = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 72: {
              KillerPlayerSlot = input.ReadUInt32();
              break;
            }
            case 82: {
              if (deathPos_ == null) {
                DeathPos = new global::CMsgMatchMetaDataContents.Types.Position();
              }
              input.ReadMessage(DeathPos);
              break;
            }
            case 90: {
              if (killerPos_ == null) {
                KillerPos = new global::CMsgMatchMetaDataContents.Types.Position();
              }
              input.ReadMessage(KillerPos);
              break;
            }
            case 96: {
              DeathDurationS = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Items : pb::IMessage<Items>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Items> _parser = new pb::MessageParser<Items>(() => new Items());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Items> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Items() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Items(Items other) : this() {
        _hasBits0 = other._hasBits0;
        gameTimeS_ = other.gameTimeS_;
        itemId_ = other.itemId_;
        upgradeId_ = other.upgradeId_;
        soldTimeS_ = other.soldTimeS_;
        flags_ = other.flags_;
        imbuedAbilityId_ = other.imbuedAbilityId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Items Clone() {
        return new Items(this);
      }

      /// <summary>Field number for the "game_time_s" field.</summary>
      public const int GameTimeSFieldNumber = 1;
      private readonly static uint GameTimeSDefaultValue = 0;

      private uint gameTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameTimeS {
        get { if ((_hasBits0 & 1) != 0) { return gameTimeS_; } else { return GameTimeSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          gameTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "game_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameTimeS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "game_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameTimeS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "item_id" field.</summary>
      public const int ItemIdFieldNumber = 2;
      private readonly static uint ItemIdDefaultValue = 0;

      private uint itemId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ItemId {
        get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          itemId_ = value;
        }
      }
      /// <summary>Gets whether the "item_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasItemId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "item_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearItemId() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "upgrade_id" field.</summary>
      public const int UpgradeIdFieldNumber = 3;
      private readonly static uint UpgradeIdDefaultValue = 0;

      private uint upgradeId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint UpgradeId {
        get { if ((_hasBits0 & 4) != 0) { return upgradeId_; } else { return UpgradeIdDefaultValue; } }
        set {
          _hasBits0 |= 4;
          upgradeId_ = value;
        }
      }
      /// <summary>Gets whether the "upgrade_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasUpgradeId {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "upgrade_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearUpgradeId() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "sold_time_s" field.</summary>
      public const int SoldTimeSFieldNumber = 4;
      private readonly static uint SoldTimeSDefaultValue = 0;

      private uint soldTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SoldTimeS {
        get { if ((_hasBits0 & 8) != 0) { return soldTimeS_; } else { return SoldTimeSDefaultValue; } }
        set {
          _hasBits0 |= 8;
          soldTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "sold_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSoldTimeS {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "sold_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSoldTimeS() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 5;
      private readonly static uint FlagsDefaultValue = 0;

      private uint flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Flags {
        get { if ((_hasBits0 & 16) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 16;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "imbued_ability_id" field.</summary>
      public const int ImbuedAbilityIdFieldNumber = 6;
      private readonly static uint ImbuedAbilityIdDefaultValue = 0;

      private uint imbuedAbilityId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ImbuedAbilityId {
        get { if ((_hasBits0 & 32) != 0) { return imbuedAbilityId_; } else { return ImbuedAbilityIdDefaultValue; } }
        set {
          _hasBits0 |= 32;
          imbuedAbilityId_ = value;
        }
      }
      /// <summary>Gets whether the "imbued_ability_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasImbuedAbilityId {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "imbued_ability_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearImbuedAbilityId() {
        _hasBits0 &= ~32;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Items);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Items other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (GameTimeS != other.GameTimeS) return false;
        if (ItemId != other.ItemId) return false;
        if (UpgradeId != other.UpgradeId) return false;
        if (SoldTimeS != other.SoldTimeS) return false;
        if (Flags != other.Flags) return false;
        if (ImbuedAbilityId != other.ImbuedAbilityId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasGameTimeS) hash ^= GameTimeS.GetHashCode();
        if (HasItemId) hash ^= ItemId.GetHashCode();
        if (HasUpgradeId) hash ^= UpgradeId.GetHashCode();
        if (HasSoldTimeS) hash ^= SoldTimeS.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasImbuedAbilityId) hash ^= ImbuedAbilityId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasItemId) {
          output.WriteRawTag(16);
          output.WriteUInt32(ItemId);
        }
        if (HasUpgradeId) {
          output.WriteRawTag(24);
          output.WriteUInt32(UpgradeId);
        }
        if (HasSoldTimeS) {
          output.WriteRawTag(32);
          output.WriteUInt32(SoldTimeS);
        }
        if (HasFlags) {
          output.WriteRawTag(40);
          output.WriteUInt32(Flags);
        }
        if (HasImbuedAbilityId) {
          output.WriteRawTag(48);
          output.WriteUInt32(ImbuedAbilityId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasItemId) {
          output.WriteRawTag(16);
          output.WriteUInt32(ItemId);
        }
        if (HasUpgradeId) {
          output.WriteRawTag(24);
          output.WriteUInt32(UpgradeId);
        }
        if (HasSoldTimeS) {
          output.WriteRawTag(32);
          output.WriteUInt32(SoldTimeS);
        }
        if (HasFlags) {
          output.WriteRawTag(40);
          output.WriteUInt32(Flags);
        }
        if (HasImbuedAbilityId) {
          output.WriteRawTag(48);
          output.WriteUInt32(ImbuedAbilityId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasGameTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameTimeS);
        }
        if (HasItemId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
        }
        if (HasUpgradeId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpgradeId);
        }
        if (HasSoldTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoldTimeS);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
        }
        if (HasImbuedAbilityId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImbuedAbilityId);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Items other) {
        if (other == null) {
          return;
        }
        if (other.HasGameTimeS) {
          GameTimeS = other.GameTimeS;
        }
        if (other.HasItemId) {
          ItemId = other.ItemId;
        }
        if (other.HasUpgradeId) {
          UpgradeId = other.UpgradeId;
        }
        if (other.HasSoldTimeS) {
          SoldTimeS = other.SoldTimeS;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasImbuedAbilityId) {
          ImbuedAbilityId = other.ImbuedAbilityId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              ItemId = input.ReadUInt32();
              break;
            }
            case 24: {
              UpgradeId = input.ReadUInt32();
              break;
            }
            case 32: {
              SoldTimeS = input.ReadUInt32();
              break;
            }
            case 40: {
              Flags = input.ReadUInt32();
              break;
            }
            case 48: {
              ImbuedAbilityId = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              ItemId = input.ReadUInt32();
              break;
            }
            case 24: {
              UpgradeId = input.ReadUInt32();
              break;
            }
            case 32: {
              SoldTimeS = input.ReadUInt32();
              break;
            }
            case 40: {
              Flags = input.ReadUInt32();
              break;
            }
            case 48: {
              ImbuedAbilityId = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Ping : pb::IMessage<Ping>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Ping> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Ping() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Ping(Ping other) : this() {
        _hasBits0 = other._hasBits0;
        pingType_ = other.pingType_;
        pingData_ = other.pingData_;
        gameTimeS_ = other.gameTimeS_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Ping Clone() {
        return new Ping(this);
      }

      /// <summary>Field number for the "ping_type" field.</summary>
      public const int PingTypeFieldNumber = 1;
      private readonly static uint PingTypeDefaultValue = 0;

      private uint pingType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PingType {
        get { if ((_hasBits0 & 1) != 0) { return pingType_; } else { return PingTypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          pingType_ = value;
        }
      }
      /// <summary>Gets whether the "ping_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPingType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "ping_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPingType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "ping_data" field.</summary>
      public const int PingDataFieldNumber = 2;
      private readonly static uint PingDataDefaultValue = 0;

      private uint pingData_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PingData {
        get { if ((_hasBits0 & 2) != 0) { return pingData_; } else { return PingDataDefaultValue; } }
        set {
          _hasBits0 |= 2;
          pingData_ = value;
        }
      }
      /// <summary>Gets whether the "ping_data" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPingData {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "ping_data" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPingData() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "game_time_s" field.</summary>
      public const int GameTimeSFieldNumber = 3;
      private readonly static uint GameTimeSDefaultValue = 0;

      private uint gameTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameTimeS {
        get { if ((_hasBits0 & 4) != 0) { return gameTimeS_; } else { return GameTimeSDefaultValue; } }
        set {
          _hasBits0 |= 4;
          gameTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "game_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameTimeS {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "game_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameTimeS() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Ping);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Ping other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PingType != other.PingType) return false;
        if (PingData != other.PingData) return false;
        if (GameTimeS != other.GameTimeS) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPingType) hash ^= PingType.GetHashCode();
        if (HasPingData) hash ^= PingData.GetHashCode();
        if (HasGameTimeS) hash ^= GameTimeS.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPingType) {
          output.WriteRawTag(8);
          output.WriteUInt32(PingType);
        }
        if (HasPingData) {
          output.WriteRawTag(16);
          output.WriteUInt32(PingData);
        }
        if (HasGameTimeS) {
          output.WriteRawTag(24);
          output.WriteUInt32(GameTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPingType) {
          output.WriteRawTag(8);
          output.WriteUInt32(PingType);
        }
        if (HasPingData) {
          output.WriteRawTag(16);
          output.WriteUInt32(PingData);
        }
        if (HasGameTimeS) {
          output.WriteRawTag(24);
          output.WriteUInt32(GameTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPingType) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingType);
        }
        if (HasPingData) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PingData);
        }
        if (HasGameTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameTimeS);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Ping other) {
        if (other == null) {
          return;
        }
        if (other.HasPingType) {
          PingType = other.PingType;
        }
        if (other.HasPingData) {
          PingData = other.PingData;
        }
        if (other.HasGameTimeS) {
          GameTimeS = other.GameTimeS;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              PingType = input.ReadUInt32();
              break;
            }
            case 16: {
              PingData = input.ReadUInt32();
              break;
            }
            case 24: {
              GameTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              PingType = input.ReadUInt32();
              break;
            }
            case 16: {
              PingData = input.ReadUInt32();
              break;
            }
            case 24: {
              GameTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class GoldSource : pb::IMessage<GoldSource>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<GoldSource> _parser = new pb::MessageParser<GoldSource>(() => new GoldSource());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<GoldSource> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[4]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GoldSource() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GoldSource(GoldSource other) : this() {
        _hasBits0 = other._hasBits0;
        source_ = other.source_;
        kills_ = other.kills_;
        damage_ = other.damage_;
        gold_ = other.gold_;
        goldOrbs_ = other.goldOrbs_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public GoldSource Clone() {
        return new GoldSource(this);
      }

      /// <summary>Field number for the "source" field.</summary>
      public const int SourceFieldNumber = 1;
      private readonly static global::CMsgMatchMetaDataContents.Types.EGoldSource SourceDefaultValue = global::CMsgMatchMetaDataContents.Types.EGoldSource.KEPlayers;

      private global::CMsgMatchMetaDataContents.Types.EGoldSource source_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchMetaDataContents.Types.EGoldSource Source {
        get { if ((_hasBits0 & 1) != 0) { return source_; } else { return SourceDefaultValue; } }
        set {
          _hasBits0 |= 1;
          source_ = value;
        }
      }
      /// <summary>Gets whether the "source" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSource {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "source" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSource() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "kills" field.</summary>
      public const int KillsFieldNumber = 2;
      private readonly static uint KillsDefaultValue = 0;

      private uint kills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Kills {
        get { if ((_hasBits0 & 2) != 0) { return kills_; } else { return KillsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          kills_ = value;
        }
      }
      /// <summary>Gets whether the "kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKills {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKills() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "damage" field.</summary>
      public const int DamageFieldNumber = 3;
      private readonly static uint DamageDefaultValue = 0;

      private uint damage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Damage {
        get { if ((_hasBits0 & 4) != 0) { return damage_; } else { return DamageDefaultValue; } }
        set {
          _hasBits0 |= 4;
          damage_ = value;
        }
      }
      /// <summary>Gets whether the "damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDamage {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDamage() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "gold" field.</summary>
      public const int GoldFieldNumber = 4;
      private readonly static uint GoldDefaultValue = 0;

      private uint gold_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Gold {
        get { if ((_hasBits0 & 8) != 0) { return gold_; } else { return GoldDefaultValue; } }
        set {
          _hasBits0 |= 8;
          gold_ = value;
        }
      }
      /// <summary>Gets whether the "gold" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGold {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "gold" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGold() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "gold_orbs" field.</summary>
      public const int GoldOrbsFieldNumber = 5;
      private readonly static uint GoldOrbsDefaultValue = 0;

      private uint goldOrbs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldOrbs {
        get { if ((_hasBits0 & 16) != 0) { return goldOrbs_; } else { return GoldOrbsDefaultValue; } }
        set {
          _hasBits0 |= 16;
          goldOrbs_ = value;
        }
      }
      /// <summary>Gets whether the "gold_orbs" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldOrbs {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "gold_orbs" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldOrbs() {
        _hasBits0 &= ~16;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as GoldSource);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(GoldSource other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Source != other.Source) return false;
        if (Kills != other.Kills) return false;
        if (Damage != other.Damage) return false;
        if (Gold != other.Gold) return false;
        if (GoldOrbs != other.GoldOrbs) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSource) hash ^= Source.GetHashCode();
        if (HasKills) hash ^= Kills.GetHashCode();
        if (HasDamage) hash ^= Damage.GetHashCode();
        if (HasGold) hash ^= Gold.GetHashCode();
        if (HasGoldOrbs) hash ^= GoldOrbs.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSource) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Source);
        }
        if (HasKills) {
          output.WriteRawTag(16);
          output.WriteUInt32(Kills);
        }
        if (HasDamage) {
          output.WriteRawTag(24);
          output.WriteUInt32(Damage);
        }
        if (HasGold) {
          output.WriteRawTag(32);
          output.WriteUInt32(Gold);
        }
        if (HasGoldOrbs) {
          output.WriteRawTag(40);
          output.WriteUInt32(GoldOrbs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSource) {
          output.WriteRawTag(8);
          output.WriteEnum((int) Source);
        }
        if (HasKills) {
          output.WriteRawTag(16);
          output.WriteUInt32(Kills);
        }
        if (HasDamage) {
          output.WriteRawTag(24);
          output.WriteUInt32(Damage);
        }
        if (HasGold) {
          output.WriteRawTag(32);
          output.WriteUInt32(Gold);
        }
        if (HasGoldOrbs) {
          output.WriteRawTag(40);
          output.WriteUInt32(GoldOrbs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSource) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
        }
        if (HasKills) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kills);
        }
        if (HasDamage) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damage);
        }
        if (HasGold) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gold);
        }
        if (HasGoldOrbs) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldOrbs);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(GoldSource other) {
        if (other == null) {
          return;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasKills) {
          Kills = other.Kills;
        }
        if (other.HasDamage) {
          Damage = other.Damage;
        }
        if (other.HasGold) {
          Gold = other.Gold;
        }
        if (other.HasGoldOrbs) {
          GoldOrbs = other.GoldOrbs;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Source = (global::CMsgMatchMetaDataContents.Types.EGoldSource) input.ReadEnum();
              break;
            }
            case 16: {
              Kills = input.ReadUInt32();
              break;
            }
            case 24: {
              Damage = input.ReadUInt32();
              break;
            }
            case 32: {
              Gold = input.ReadUInt32();
              break;
            }
            case 40: {
              GoldOrbs = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Source = (global::CMsgMatchMetaDataContents.Types.EGoldSource) input.ReadEnum();
              break;
            }
            case 16: {
              Kills = input.ReadUInt32();
              break;
            }
            case 24: {
              Damage = input.ReadUInt32();
              break;
            }
            case 32: {
              Gold = input.ReadUInt32();
              break;
            }
            case 40: {
              GoldOrbs = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class CustomUserStatInfo : pb::IMessage<CustomUserStatInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CustomUserStatInfo> _parser = new pb::MessageParser<CustomUserStatInfo>(() => new CustomUserStatInfo());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<CustomUserStatInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[5]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStatInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStatInfo(CustomUserStatInfo other) : this() {
        _hasBits0 = other._hasBits0;
        name_ = other.name_;
        id_ = other.id_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStatInfo Clone() {
        return new CustomUserStatInfo(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 2;
      private readonly static uint IdDefaultValue = 0;

      private uint id_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Id {
        get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          id_ = value;
        }
      }
      /// <summary>Gets whether the "id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearId() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as CustomUserStatInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(CustomUserStatInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Id != other.Id) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasId) hash ^= Id.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasId) {
          output.WriteRawTag(16);
          output.WriteUInt32(Id);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasId) {
          output.WriteRawTag(16);
          output.WriteUInt32(Id);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(CustomUserStatInfo other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 16: {
              Id = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 16: {
              Id = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class CustomUserStat : pb::IMessage<CustomUserStat>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CustomUserStat> _parser = new pb::MessageParser<CustomUserStat>(() => new CustomUserStat());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<CustomUserStat> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[6]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStat() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStat(CustomUserStat other) : this() {
        _hasBits0 = other._hasBits0;
        value_ = other.value_;
        id_ = other.id_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CustomUserStat Clone() {
        return new CustomUserStat(this);
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 2;
      private readonly static uint ValueDefaultValue = 0;

      private uint value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Value {
        get { if ((_hasBits0 & 1) != 0) { return value_; } else { return ValueDefaultValue; } }
        set {
          _hasBits0 |= 1;
          value_ = value;
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "id" field.</summary>
      public const int IdFieldNumber = 3;
      private readonly static uint IdDefaultValue = 0;

      private uint id_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Id {
        get { if ((_hasBits0 & 2) != 0) { return id_; } else { return IdDefaultValue; } }
        set {
          _hasBits0 |= 2;
          id_ = value;
        }
      }
      /// <summary>Gets whether the "id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasId {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearId() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as CustomUserStat);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(CustomUserStat other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Value != other.Value) return false;
        if (Id != other.Id) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasValue) hash ^= Value.GetHashCode();
        if (HasId) hash ^= Id.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(Value);
        }
        if (HasId) {
          output.WriteRawTag(24);
          output.WriteUInt32(Id);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(Value);
        }
        if (HasId) {
          output.WriteRawTag(24);
          output.WriteUInt32(Id);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
        }
        if (HasId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(CustomUserStat other) {
        if (other == null) {
          return;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        if (other.HasId) {
          Id = other.Id;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 16: {
              Value = input.ReadUInt32();
              break;
            }
            case 24: {
              Id = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 16: {
              Value = input.ReadUInt32();
              break;
            }
            case 24: {
              Id = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class PlayerStats : pb::IMessage<PlayerStats>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<PlayerStats> _parser = new pb::MessageParser<PlayerStats>(() => new PlayerStats());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      private int _hasBits1;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<PlayerStats> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[7]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerStats() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerStats(PlayerStats other) : this() {
        _hasBits0 = other._hasBits0;
        _hasBits1 = other._hasBits1;
        timeStampS_ = other.timeStampS_;
        netWorth_ = other.netWorth_;
        goldPlayer_ = other.goldPlayer_;
        goldPlayerOrbs_ = other.goldPlayerOrbs_;
        goldLaneCreepOrbs_ = other.goldLaneCreepOrbs_;
        goldNeutralCreepOrbs_ = other.goldNeutralCreepOrbs_;
        goldBoss_ = other.goldBoss_;
        goldBossOrb_ = other.goldBossOrb_;
        goldTreasure_ = other.goldTreasure_;
        goldDenied_ = other.goldDenied_;
        goldDeathLoss_ = other.goldDeathLoss_;
        goldLaneCreep_ = other.goldLaneCreep_;
        goldNeutralCreep_ = other.goldNeutralCreep_;
        kills_ = other.kills_;
        deaths_ = other.deaths_;
        assists_ = other.assists_;
        creepKills_ = other.creepKills_;
        neutralKills_ = other.neutralKills_;
        possibleCreeps_ = other.possibleCreeps_;
        creepDamage_ = other.creepDamage_;
        playerDamage_ = other.playerDamage_;
        neutralDamage_ = other.neutralDamage_;
        bossDamage_ = other.bossDamage_;
        denies_ = other.denies_;
        playerHealing_ = other.playerHealing_;
        abilityPoints_ = other.abilityPoints_;
        selfHealing_ = other.selfHealing_;
        playerDamageTaken_ = other.playerDamageTaken_;
        maxHealth_ = other.maxHealth_;
        weaponPower_ = other.weaponPower_;
        techPower_ = other.techPower_;
        shotsHit_ = other.shotsHit_;
        shotsMissed_ = other.shotsMissed_;
        damageAbsorbed_ = other.damageAbsorbed_;
        absorptionProvided_ = other.absorptionProvided_;
        heroBulletsHit_ = other.heroBulletsHit_;
        heroBulletsHitCrit_ = other.heroBulletsHitCrit_;
        healPrevented_ = other.healPrevented_;
        healLost_ = other.healLost_;
        goldSources_ = other.goldSources_.Clone();
        customUserStats_ = other.customUserStats_.Clone();
        damageMitigated_ = other.damageMitigated_;
        level_ = other.level_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public PlayerStats Clone() {
        return new PlayerStats(this);
      }

      /// <summary>Field number for the "time_stamp_s" field.</summary>
      public const int TimeStampSFieldNumber = 1;
      private readonly static uint TimeStampSDefaultValue = 0;

      private uint timeStampS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TimeStampS {
        get { if ((_hasBits0 & 1) != 0) { return timeStampS_; } else { return TimeStampSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          timeStampS_ = value;
        }
      }
      /// <summary>Gets whether the "time_stamp_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTimeStampS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "time_stamp_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTimeStampS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "net_worth" field.</summary>
      public const int NetWorthFieldNumber = 2;
      private readonly static uint NetWorthDefaultValue = 0;

      private uint netWorth_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint NetWorth {
        get { if ((_hasBits0 & 2) != 0) { return netWorth_; } else { return NetWorthDefaultValue; } }
        set {
          _hasBits0 |= 2;
          netWorth_ = value;
        }
      }
      /// <summary>Gets whether the "net_worth" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNetWorth {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "net_worth" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNetWorth() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "gold_player" field.</summary>
      public const int GoldPlayerFieldNumber = 3;
      private readonly static uint GoldPlayerDefaultValue = 0;

      private uint goldPlayer_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldPlayer {
        get { if ((_hasBits0 & 4) != 0) { return goldPlayer_; } else { return GoldPlayerDefaultValue; } }
        set {
          _hasBits0 |= 4;
          goldPlayer_ = value;
        }
      }
      /// <summary>Gets whether the "gold_player" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldPlayer {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "gold_player" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldPlayer() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "gold_player_orbs" field.</summary>
      public const int GoldPlayerOrbsFieldNumber = 4;
      private readonly static uint GoldPlayerOrbsDefaultValue = 0;

      private uint goldPlayerOrbs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldPlayerOrbs {
        get { if ((_hasBits0 & 8) != 0) { return goldPlayerOrbs_; } else { return GoldPlayerOrbsDefaultValue; } }
        set {
          _hasBits0 |= 8;
          goldPlayerOrbs_ = value;
        }
      }
      /// <summary>Gets whether the "gold_player_orbs" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldPlayerOrbs {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "gold_player_orbs" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldPlayerOrbs() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "gold_lane_creep_orbs" field.</summary>
      public const int GoldLaneCreepOrbsFieldNumber = 5;
      private readonly static uint GoldLaneCreepOrbsDefaultValue = 0;

      private uint goldLaneCreepOrbs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldLaneCreepOrbs {
        get { if ((_hasBits0 & 16) != 0) { return goldLaneCreepOrbs_; } else { return GoldLaneCreepOrbsDefaultValue; } }
        set {
          _hasBits0 |= 16;
          goldLaneCreepOrbs_ = value;
        }
      }
      /// <summary>Gets whether the "gold_lane_creep_orbs" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldLaneCreepOrbs {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "gold_lane_creep_orbs" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldLaneCreepOrbs() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "gold_neutral_creep_orbs" field.</summary>
      public const int GoldNeutralCreepOrbsFieldNumber = 6;
      private readonly static uint GoldNeutralCreepOrbsDefaultValue = 0;

      private uint goldNeutralCreepOrbs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldNeutralCreepOrbs {
        get { if ((_hasBits0 & 32) != 0) { return goldNeutralCreepOrbs_; } else { return GoldNeutralCreepOrbsDefaultValue; } }
        set {
          _hasBits0 |= 32;
          goldNeutralCreepOrbs_ = value;
        }
      }
      /// <summary>Gets whether the "gold_neutral_creep_orbs" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldNeutralCreepOrbs {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "gold_neutral_creep_orbs" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldNeutralCreepOrbs() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "gold_boss" field.</summary>
      public const int GoldBossFieldNumber = 7;
      private readonly static uint GoldBossDefaultValue = 0;

      private uint goldBoss_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldBoss {
        get { if ((_hasBits0 & 64) != 0) { return goldBoss_; } else { return GoldBossDefaultValue; } }
        set {
          _hasBits0 |= 64;
          goldBoss_ = value;
        }
      }
      /// <summary>Gets whether the "gold_boss" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldBoss {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "gold_boss" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldBoss() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "gold_boss_orb" field.</summary>
      public const int GoldBossOrbFieldNumber = 8;
      private readonly static uint GoldBossOrbDefaultValue = 0;

      private uint goldBossOrb_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldBossOrb {
        get { if ((_hasBits0 & 128) != 0) { return goldBossOrb_; } else { return GoldBossOrbDefaultValue; } }
        set {
          _hasBits0 |= 128;
          goldBossOrb_ = value;
        }
      }
      /// <summary>Gets whether the "gold_boss_orb" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldBossOrb {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "gold_boss_orb" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldBossOrb() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "gold_treasure" field.</summary>
      public const int GoldTreasureFieldNumber = 9;
      private readonly static uint GoldTreasureDefaultValue = 0;

      private uint goldTreasure_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldTreasure {
        get { if ((_hasBits0 & 256) != 0) { return goldTreasure_; } else { return GoldTreasureDefaultValue; } }
        set {
          _hasBits0 |= 256;
          goldTreasure_ = value;
        }
      }
      /// <summary>Gets whether the "gold_treasure" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldTreasure {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "gold_treasure" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldTreasure() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "gold_denied" field.</summary>
      public const int GoldDeniedFieldNumber = 10;
      private readonly static uint GoldDeniedDefaultValue = 0;

      private uint goldDenied_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldDenied {
        get { if ((_hasBits0 & 512) != 0) { return goldDenied_; } else { return GoldDeniedDefaultValue; } }
        set {
          _hasBits0 |= 512;
          goldDenied_ = value;
        }
      }
      /// <summary>Gets whether the "gold_denied" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldDenied {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "gold_denied" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldDenied() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "gold_death_loss" field.</summary>
      public const int GoldDeathLossFieldNumber = 11;
      private readonly static uint GoldDeathLossDefaultValue = 0;

      private uint goldDeathLoss_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldDeathLoss {
        get { if ((_hasBits0 & 1024) != 0) { return goldDeathLoss_; } else { return GoldDeathLossDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          goldDeathLoss_ = value;
        }
      }
      /// <summary>Gets whether the "gold_death_loss" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldDeathLoss {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "gold_death_loss" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldDeathLoss() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "gold_lane_creep" field.</summary>
      public const int GoldLaneCreepFieldNumber = 12;
      private readonly static uint GoldLaneCreepDefaultValue = 0;

      private uint goldLaneCreep_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldLaneCreep {
        get { if ((_hasBits0 & 2048) != 0) { return goldLaneCreep_; } else { return GoldLaneCreepDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          goldLaneCreep_ = value;
        }
      }
      /// <summary>Gets whether the "gold_lane_creep" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldLaneCreep {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "gold_lane_creep" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldLaneCreep() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "gold_neutral_creep" field.</summary>
      public const int GoldNeutralCreepFieldNumber = 13;
      private readonly static uint GoldNeutralCreepDefaultValue = 0;

      private uint goldNeutralCreep_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GoldNeutralCreep {
        get { if ((_hasBits0 & 4096) != 0) { return goldNeutralCreep_; } else { return GoldNeutralCreepDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          goldNeutralCreep_ = value;
        }
      }
      /// <summary>Gets whether the "gold_neutral_creep" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGoldNeutralCreep {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "gold_neutral_creep" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGoldNeutralCreep() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "kills" field.</summary>
      public const int KillsFieldNumber = 14;
      private readonly static uint KillsDefaultValue = 0;

      private uint kills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Kills {
        get { if ((_hasBits0 & 8192) != 0) { return kills_; } else { return KillsDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          kills_ = value;
        }
      }
      /// <summary>Gets whether the "kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKills {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKills() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "deaths" field.</summary>
      public const int DeathsFieldNumber = 15;
      private readonly static uint DeathsDefaultValue = 0;

      private uint deaths_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Deaths {
        get { if ((_hasBits0 & 16384) != 0) { return deaths_; } else { return DeathsDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          deaths_ = value;
        }
      }
      /// <summary>Gets whether the "deaths" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeaths {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "deaths" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeaths() {
        _hasBits0 &= ~16384;
      }

      /// <summary>Field number for the "assists" field.</summary>
      public const int AssistsFieldNumber = 16;
      private readonly static uint AssistsDefaultValue = 0;

      private uint assists_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Assists {
        get { if ((_hasBits0 & 32768) != 0) { return assists_; } else { return AssistsDefaultValue; } }
        set {
          _hasBits0 |= 32768;
          assists_ = value;
        }
      }
      /// <summary>Gets whether the "assists" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAssists {
        get { return (_hasBits0 & 32768) != 0; }
      }
      /// <summary>Clears the value of the "assists" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAssists() {
        _hasBits0 &= ~32768;
      }

      /// <summary>Field number for the "creep_kills" field.</summary>
      public const int CreepKillsFieldNumber = 17;
      private readonly static uint CreepKillsDefaultValue = 0;

      private uint creepKills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CreepKills {
        get { if ((_hasBits0 & 65536) != 0) { return creepKills_; } else { return CreepKillsDefaultValue; } }
        set {
          _hasBits0 |= 65536;
          creepKills_ = value;
        }
      }
      /// <summary>Gets whether the "creep_kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCreepKills {
        get { return (_hasBits0 & 65536) != 0; }
      }
      /// <summary>Clears the value of the "creep_kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCreepKills() {
        _hasBits0 &= ~65536;
      }

      /// <summary>Field number for the "neutral_kills" field.</summary>
      public const int NeutralKillsFieldNumber = 18;
      private readonly static uint NeutralKillsDefaultValue = 0;

      private uint neutralKills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint NeutralKills {
        get { if ((_hasBits0 & 131072) != 0) { return neutralKills_; } else { return NeutralKillsDefaultValue; } }
        set {
          _hasBits0 |= 131072;
          neutralKills_ = value;
        }
      }
      /// <summary>Gets whether the "neutral_kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNeutralKills {
        get { return (_hasBits0 & 131072) != 0; }
      }
      /// <summary>Clears the value of the "neutral_kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNeutralKills() {
        _hasBits0 &= ~131072;
      }

      /// <summary>Field number for the "possible_creeps" field.</summary>
      public const int PossibleCreepsFieldNumber = 19;
      private readonly static uint PossibleCreepsDefaultValue = 0;

      private uint possibleCreeps_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PossibleCreeps {
        get { if ((_hasBits0 & 262144) != 0) { return possibleCreeps_; } else { return PossibleCreepsDefaultValue; } }
        set {
          _hasBits0 |= 262144;
          possibleCreeps_ = value;
        }
      }
      /// <summary>Gets whether the "possible_creeps" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPossibleCreeps {
        get { return (_hasBits0 & 262144) != 0; }
      }
      /// <summary>Clears the value of the "possible_creeps" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPossibleCreeps() {
        _hasBits0 &= ~262144;
      }

      /// <summary>Field number for the "creep_damage" field.</summary>
      public const int CreepDamageFieldNumber = 20;
      private readonly static uint CreepDamageDefaultValue = 0;

      private uint creepDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CreepDamage {
        get { if ((_hasBits0 & 524288) != 0) { return creepDamage_; } else { return CreepDamageDefaultValue; } }
        set {
          _hasBits0 |= 524288;
          creepDamage_ = value;
        }
      }
      /// <summary>Gets whether the "creep_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCreepDamage {
        get { return (_hasBits0 & 524288) != 0; }
      }
      /// <summary>Clears the value of the "creep_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCreepDamage() {
        _hasBits0 &= ~524288;
      }

      /// <summary>Field number for the "player_damage" field.</summary>
      public const int PlayerDamageFieldNumber = 21;
      private readonly static uint PlayerDamageDefaultValue = 0;

      private uint playerDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerDamage {
        get { if ((_hasBits0 & 1048576) != 0) { return playerDamage_; } else { return PlayerDamageDefaultValue; } }
        set {
          _hasBits0 |= 1048576;
          playerDamage_ = value;
        }
      }
      /// <summary>Gets whether the "player_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerDamage {
        get { return (_hasBits0 & 1048576) != 0; }
      }
      /// <summary>Clears the value of the "player_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerDamage() {
        _hasBits0 &= ~1048576;
      }

      /// <summary>Field number for the "neutral_damage" field.</summary>
      public const int NeutralDamageFieldNumber = 22;
      private readonly static uint NeutralDamageDefaultValue = 0;

      private uint neutralDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint NeutralDamage {
        get { if ((_hasBits0 & 2097152) != 0) { return neutralDamage_; } else { return NeutralDamageDefaultValue; } }
        set {
          _hasBits0 |= 2097152;
          neutralDamage_ = value;
        }
      }
      /// <summary>Gets whether the "neutral_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNeutralDamage {
        get { return (_hasBits0 & 2097152) != 0; }
      }
      /// <summary>Clears the value of the "neutral_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNeutralDamage() {
        _hasBits0 &= ~2097152;
      }

      /// <summary>Field number for the "boss_damage" field.</summary>
      public const int BossDamageFieldNumber = 23;
      private readonly static uint BossDamageDefaultValue = 0;

      private uint bossDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BossDamage {
        get { if ((_hasBits0 & 4194304) != 0) { return bossDamage_; } else { return BossDamageDefaultValue; } }
        set {
          _hasBits0 |= 4194304;
          bossDamage_ = value;
        }
      }
      /// <summary>Gets whether the "boss_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBossDamage {
        get { return (_hasBits0 & 4194304) != 0; }
      }
      /// <summary>Clears the value of the "boss_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBossDamage() {
        _hasBits0 &= ~4194304;
      }

      /// <summary>Field number for the "denies" field.</summary>
      public const int DeniesFieldNumber = 24;
      private readonly static uint DeniesDefaultValue = 0;

      private uint denies_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Denies {
        get { if ((_hasBits0 & 8388608) != 0) { return denies_; } else { return DeniesDefaultValue; } }
        set {
          _hasBits0 |= 8388608;
          denies_ = value;
        }
      }
      /// <summary>Gets whether the "denies" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDenies {
        get { return (_hasBits0 & 8388608) != 0; }
      }
      /// <summary>Clears the value of the "denies" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDenies() {
        _hasBits0 &= ~8388608;
      }

      /// <summary>Field number for the "player_healing" field.</summary>
      public const int PlayerHealingFieldNumber = 25;
      private readonly static uint PlayerHealingDefaultValue = 0;

      private uint playerHealing_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerHealing {
        get { if ((_hasBits0 & 16777216) != 0) { return playerHealing_; } else { return PlayerHealingDefaultValue; } }
        set {
          _hasBits0 |= 16777216;
          playerHealing_ = value;
        }
      }
      /// <summary>Gets whether the "player_healing" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerHealing {
        get { return (_hasBits0 & 16777216) != 0; }
      }
      /// <summary>Clears the value of the "player_healing" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerHealing() {
        _hasBits0 &= ~16777216;
      }

      /// <summary>Field number for the "ability_points" field.</summary>
      public const int AbilityPointsFieldNumber = 26;
      private readonly static uint AbilityPointsDefaultValue = 0;

      private uint abilityPoints_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbilityPoints {
        get { if ((_hasBits0 & 33554432) != 0) { return abilityPoints_; } else { return AbilityPointsDefaultValue; } }
        set {
          _hasBits0 |= 33554432;
          abilityPoints_ = value;
        }
      }
      /// <summary>Gets whether the "ability_points" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbilityPoints {
        get { return (_hasBits0 & 33554432) != 0; }
      }
      /// <summary>Clears the value of the "ability_points" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbilityPoints() {
        _hasBits0 &= ~33554432;
      }

      /// <summary>Field number for the "self_healing" field.</summary>
      public const int SelfHealingFieldNumber = 27;
      private readonly static uint SelfHealingDefaultValue = 0;

      private uint selfHealing_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SelfHealing {
        get { if ((_hasBits0 & 67108864) != 0) { return selfHealing_; } else { return SelfHealingDefaultValue; } }
        set {
          _hasBits0 |= 67108864;
          selfHealing_ = value;
        }
      }
      /// <summary>Gets whether the "self_healing" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSelfHealing {
        get { return (_hasBits0 & 67108864) != 0; }
      }
      /// <summary>Clears the value of the "self_healing" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSelfHealing() {
        _hasBits0 &= ~67108864;
      }

      /// <summary>Field number for the "player_damage_taken" field.</summary>
      public const int PlayerDamageTakenFieldNumber = 28;
      private readonly static uint PlayerDamageTakenDefaultValue = 0;

      private uint playerDamageTaken_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerDamageTaken {
        get { if ((_hasBits0 & 134217728) != 0) { return playerDamageTaken_; } else { return PlayerDamageTakenDefaultValue; } }
        set {
          _hasBits0 |= 134217728;
          playerDamageTaken_ = value;
        }
      }
      /// <summary>Gets whether the "player_damage_taken" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerDamageTaken {
        get { return (_hasBits0 & 134217728) != 0; }
      }
      /// <summary>Clears the value of the "player_damage_taken" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerDamageTaken() {
        _hasBits0 &= ~134217728;
      }

      /// <summary>Field number for the "max_health" field.</summary>
      public const int MaxHealthFieldNumber = 29;
      private readonly static uint MaxHealthDefaultValue = 0;

      private uint maxHealth_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint MaxHealth {
        get { if ((_hasBits0 & 268435456) != 0) { return maxHealth_; } else { return MaxHealthDefaultValue; } }
        set {
          _hasBits0 |= 268435456;
          maxHealth_ = value;
        }
      }
      /// <summary>Gets whether the "max_health" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMaxHealth {
        get { return (_hasBits0 & 268435456) != 0; }
      }
      /// <summary>Clears the value of the "max_health" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMaxHealth() {
        _hasBits0 &= ~268435456;
      }

      /// <summary>Field number for the "weapon_power" field.</summary>
      public const int WeaponPowerFieldNumber = 30;
      private readonly static uint WeaponPowerDefaultValue = 0;

      private uint weaponPower_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint WeaponPower {
        get { if ((_hasBits0 & 536870912) != 0) { return weaponPower_; } else { return WeaponPowerDefaultValue; } }
        set {
          _hasBits0 |= 536870912;
          weaponPower_ = value;
        }
      }
      /// <summary>Gets whether the "weapon_power" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWeaponPower {
        get { return (_hasBits0 & 536870912) != 0; }
      }
      /// <summary>Clears the value of the "weapon_power" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWeaponPower() {
        _hasBits0 &= ~536870912;
      }

      /// <summary>Field number for the "tech_power" field.</summary>
      public const int TechPowerFieldNumber = 31;
      private readonly static uint TechPowerDefaultValue = 0;

      private uint techPower_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint TechPower {
        get { if ((_hasBits0 & 1073741824) != 0) { return techPower_; } else { return TechPowerDefaultValue; } }
        set {
          _hasBits0 |= 1073741824;
          techPower_ = value;
        }
      }
      /// <summary>Gets whether the "tech_power" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTechPower {
        get { return (_hasBits0 & 1073741824) != 0; }
      }
      /// <summary>Clears the value of the "tech_power" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTechPower() {
        _hasBits0 &= ~1073741824;
      }

      /// <summary>Field number for the "shots_hit" field.</summary>
      public const int ShotsHitFieldNumber = 32;
      private readonly static uint ShotsHitDefaultValue = 0;

      private uint shotsHit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ShotsHit {
        get { if ((_hasBits0 & -2147483648) != 0) { return shotsHit_; } else { return ShotsHitDefaultValue; } }
        set {
          _hasBits0 |= -2147483648;
          shotsHit_ = value;
        }
      }
      /// <summary>Gets whether the "shots_hit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShotsHit {
        get { return (_hasBits0 & -2147483648) != 0; }
      }
      /// <summary>Clears the value of the "shots_hit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShotsHit() {
        _hasBits0 &= ~-2147483648;
      }

      /// <summary>Field number for the "shots_missed" field.</summary>
      public const int ShotsMissedFieldNumber = 33;
      private readonly static uint ShotsMissedDefaultValue = 0;

      private uint shotsMissed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint ShotsMissed {
        get { if ((_hasBits1 & 1) != 0) { return shotsMissed_; } else { return ShotsMissedDefaultValue; } }
        set {
          _hasBits1 |= 1;
          shotsMissed_ = value;
        }
      }
      /// <summary>Gets whether the "shots_missed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShotsMissed {
        get { return (_hasBits1 & 1) != 0; }
      }
      /// <summary>Clears the value of the "shots_missed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShotsMissed() {
        _hasBits1 &= ~1;
      }

      /// <summary>Field number for the "damage_absorbed" field.</summary>
      public const int DamageAbsorbedFieldNumber = 34;
      private readonly static uint DamageAbsorbedDefaultValue = 0;

      private uint damageAbsorbed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DamageAbsorbed {
        get { if ((_hasBits1 & 2) != 0) { return damageAbsorbed_; } else { return DamageAbsorbedDefaultValue; } }
        set {
          _hasBits1 |= 2;
          damageAbsorbed_ = value;
        }
      }
      /// <summary>Gets whether the "damage_absorbed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDamageAbsorbed {
        get { return (_hasBits1 & 2) != 0; }
      }
      /// <summary>Clears the value of the "damage_absorbed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDamageAbsorbed() {
        _hasBits1 &= ~2;
      }

      /// <summary>Field number for the "absorption_provided" field.</summary>
      public const int AbsorptionProvidedFieldNumber = 35;
      private readonly static uint AbsorptionProvidedDefaultValue = 0;

      private uint absorptionProvided_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbsorptionProvided {
        get { if ((_hasBits1 & 4) != 0) { return absorptionProvided_; } else { return AbsorptionProvidedDefaultValue; } }
        set {
          _hasBits1 |= 4;
          absorptionProvided_ = value;
        }
      }
      /// <summary>Gets whether the "absorption_provided" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbsorptionProvided {
        get { return (_hasBits1 & 4) != 0; }
      }
      /// <summary>Clears the value of the "absorption_provided" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbsorptionProvided() {
        _hasBits1 &= ~4;
      }

      /// <summary>Field number for the "hero_bullets_hit" field.</summary>
      public const int HeroBulletsHitFieldNumber = 36;
      private readonly static uint HeroBulletsHitDefaultValue = 0;

      private uint heroBulletsHit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HeroBulletsHit {
        get { if ((_hasBits1 & 8) != 0) { return heroBulletsHit_; } else { return HeroBulletsHitDefaultValue; } }
        set {
          _hasBits1 |= 8;
          heroBulletsHit_ = value;
        }
      }
      /// <summary>Gets whether the "hero_bullets_hit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeroBulletsHit {
        get { return (_hasBits1 & 8) != 0; }
      }
      /// <summary>Clears the value of the "hero_bullets_hit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeroBulletsHit() {
        _hasBits1 &= ~8;
      }

      /// <summary>Field number for the "hero_bullets_hit_crit" field.</summary>
      public const int HeroBulletsHitCritFieldNumber = 37;
      private readonly static uint HeroBulletsHitCritDefaultValue = 0;

      private uint heroBulletsHitCrit_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HeroBulletsHitCrit {
        get { if ((_hasBits1 & 16) != 0) { return heroBulletsHitCrit_; } else { return HeroBulletsHitCritDefaultValue; } }
        set {
          _hasBits1 |= 16;
          heroBulletsHitCrit_ = value;
        }
      }
      /// <summary>Gets whether the "hero_bullets_hit_crit" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeroBulletsHitCrit {
        get { return (_hasBits1 & 16) != 0; }
      }
      /// <summary>Clears the value of the "hero_bullets_hit_crit" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeroBulletsHitCrit() {
        _hasBits1 &= ~16;
      }

      /// <summary>Field number for the "heal_prevented" field.</summary>
      public const int HealPreventedFieldNumber = 38;
      private readonly static uint HealPreventedDefaultValue = 0;

      private uint healPrevented_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HealPrevented {
        get { if ((_hasBits1 & 32) != 0) { return healPrevented_; } else { return HealPreventedDefaultValue; } }
        set {
          _hasBits1 |= 32;
          healPrevented_ = value;
        }
      }
      /// <summary>Gets whether the "heal_prevented" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHealPrevented {
        get { return (_hasBits1 & 32) != 0; }
      }
      /// <summary>Clears the value of the "heal_prevented" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHealPrevented() {
        _hasBits1 &= ~32;
      }

      /// <summary>Field number for the "heal_lost" field.</summary>
      public const int HealLostFieldNumber = 39;
      private readonly static uint HealLostDefaultValue = 0;

      private uint healLost_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HealLost {
        get { if ((_hasBits1 & 64) != 0) { return healLost_; } else { return HealLostDefaultValue; } }
        set {
          _hasBits1 |= 64;
          healLost_ = value;
        }
      }
      /// <summary>Gets whether the "heal_lost" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHealLost {
        get { return (_hasBits1 & 64) != 0; }
      }
      /// <summary>Clears the value of the "heal_lost" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHealLost() {
        _hasBits1 &= ~64;
      }

      /// <summary>Field number for the "gold_sources" field.</summary>
      public const int GoldSourcesFieldNumber = 40;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.GoldSource> _repeated_goldSources_codec
          = pb::FieldCodec.ForMessage(322, global::CMsgMatchMetaDataContents.Types.GoldSource.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.GoldSource> goldSources_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.GoldSource>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.GoldSource> GoldSources {
        get { return goldSources_; }
      }

      /// <summary>Field number for the "custom_user_stats" field.</summary>
      public const int CustomUserStatsFieldNumber = 41;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.CustomUserStat> _repeated_customUserStats_codec
          = pb::FieldCodec.ForMessage(330, global::CMsgMatchMetaDataContents.Types.CustomUserStat.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStat> customUserStats_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStat>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStat> CustomUserStats {
        get { return customUserStats_; }
      }

      /// <summary>Field number for the "damage_mitigated" field.</summary>
      public const int DamageMitigatedFieldNumber = 42;
      private readonly static uint DamageMitigatedDefaultValue = 0;

      private uint damageMitigated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DamageMitigated {
        get { if ((_hasBits1 & 128) != 0) { return damageMitigated_; } else { return DamageMitigatedDefaultValue; } }
        set {
          _hasBits1 |= 128;
          damageMitigated_ = value;
        }
      }
      /// <summary>Gets whether the "damage_mitigated" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDamageMitigated {
        get { return (_hasBits1 & 128) != 0; }
      }
      /// <summary>Clears the value of the "damage_mitigated" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDamageMitigated() {
        _hasBits1 &= ~128;
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 43;
      private readonly static uint LevelDefaultValue = 0;

      private uint level_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Level {
        get { if ((_hasBits1 & 256) != 0) { return level_; } else { return LevelDefaultValue; } }
        set {
          _hasBits1 |= 256;
          level_ = value;
        }
      }
      /// <summary>Gets whether the "level" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLevel {
        get { return (_hasBits1 & 256) != 0; }
      }
      /// <summary>Clears the value of the "level" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLevel() {
        _hasBits1 &= ~256;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as PlayerStats);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(PlayerStats other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TimeStampS != other.TimeStampS) return false;
        if (NetWorth != other.NetWorth) return false;
        if (GoldPlayer != other.GoldPlayer) return false;
        if (GoldPlayerOrbs != other.GoldPlayerOrbs) return false;
        if (GoldLaneCreepOrbs != other.GoldLaneCreepOrbs) return false;
        if (GoldNeutralCreepOrbs != other.GoldNeutralCreepOrbs) return false;
        if (GoldBoss != other.GoldBoss) return false;
        if (GoldBossOrb != other.GoldBossOrb) return false;
        if (GoldTreasure != other.GoldTreasure) return false;
        if (GoldDenied != other.GoldDenied) return false;
        if (GoldDeathLoss != other.GoldDeathLoss) return false;
        if (GoldLaneCreep != other.GoldLaneCreep) return false;
        if (GoldNeutralCreep != other.GoldNeutralCreep) return false;
        if (Kills != other.Kills) return false;
        if (Deaths != other.Deaths) return false;
        if (Assists != other.Assists) return false;
        if (CreepKills != other.CreepKills) return false;
        if (NeutralKills != other.NeutralKills) return false;
        if (PossibleCreeps != other.PossibleCreeps) return false;
        if (CreepDamage != other.CreepDamage) return false;
        if (PlayerDamage != other.PlayerDamage) return false;
        if (NeutralDamage != other.NeutralDamage) return false;
        if (BossDamage != other.BossDamage) return false;
        if (Denies != other.Denies) return false;
        if (PlayerHealing != other.PlayerHealing) return false;
        if (AbilityPoints != other.AbilityPoints) return false;
        if (SelfHealing != other.SelfHealing) return false;
        if (PlayerDamageTaken != other.PlayerDamageTaken) return false;
        if (MaxHealth != other.MaxHealth) return false;
        if (WeaponPower != other.WeaponPower) return false;
        if (TechPower != other.TechPower) return false;
        if (ShotsHit != other.ShotsHit) return false;
        if (ShotsMissed != other.ShotsMissed) return false;
        if (DamageAbsorbed != other.DamageAbsorbed) return false;
        if (AbsorptionProvided != other.AbsorptionProvided) return false;
        if (HeroBulletsHit != other.HeroBulletsHit) return false;
        if (HeroBulletsHitCrit != other.HeroBulletsHitCrit) return false;
        if (HealPrevented != other.HealPrevented) return false;
        if (HealLost != other.HealLost) return false;
        if(!goldSources_.Equals(other.goldSources_)) return false;
        if(!customUserStats_.Equals(other.customUserStats_)) return false;
        if (DamageMitigated != other.DamageMitigated) return false;
        if (Level != other.Level) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTimeStampS) hash ^= TimeStampS.GetHashCode();
        if (HasNetWorth) hash ^= NetWorth.GetHashCode();
        if (HasGoldPlayer) hash ^= GoldPlayer.GetHashCode();
        if (HasGoldPlayerOrbs) hash ^= GoldPlayerOrbs.GetHashCode();
        if (HasGoldLaneCreepOrbs) hash ^= GoldLaneCreepOrbs.GetHashCode();
        if (HasGoldNeutralCreepOrbs) hash ^= GoldNeutralCreepOrbs.GetHashCode();
        if (HasGoldBoss) hash ^= GoldBoss.GetHashCode();
        if (HasGoldBossOrb) hash ^= GoldBossOrb.GetHashCode();
        if (HasGoldTreasure) hash ^= GoldTreasure.GetHashCode();
        if (HasGoldDenied) hash ^= GoldDenied.GetHashCode();
        if (HasGoldDeathLoss) hash ^= GoldDeathLoss.GetHashCode();
        if (HasGoldLaneCreep) hash ^= GoldLaneCreep.GetHashCode();
        if (HasGoldNeutralCreep) hash ^= GoldNeutralCreep.GetHashCode();
        if (HasKills) hash ^= Kills.GetHashCode();
        if (HasDeaths) hash ^= Deaths.GetHashCode();
        if (HasAssists) hash ^= Assists.GetHashCode();
        if (HasCreepKills) hash ^= CreepKills.GetHashCode();
        if (HasNeutralKills) hash ^= NeutralKills.GetHashCode();
        if (HasPossibleCreeps) hash ^= PossibleCreeps.GetHashCode();
        if (HasCreepDamage) hash ^= CreepDamage.GetHashCode();
        if (HasPlayerDamage) hash ^= PlayerDamage.GetHashCode();
        if (HasNeutralDamage) hash ^= NeutralDamage.GetHashCode();
        if (HasBossDamage) hash ^= BossDamage.GetHashCode();
        if (HasDenies) hash ^= Denies.GetHashCode();
        if (HasPlayerHealing) hash ^= PlayerHealing.GetHashCode();
        if (HasAbilityPoints) hash ^= AbilityPoints.GetHashCode();
        if (HasSelfHealing) hash ^= SelfHealing.GetHashCode();
        if (HasPlayerDamageTaken) hash ^= PlayerDamageTaken.GetHashCode();
        if (HasMaxHealth) hash ^= MaxHealth.GetHashCode();
        if (HasWeaponPower) hash ^= WeaponPower.GetHashCode();
        if (HasTechPower) hash ^= TechPower.GetHashCode();
        if (HasShotsHit) hash ^= ShotsHit.GetHashCode();
        if (HasShotsMissed) hash ^= ShotsMissed.GetHashCode();
        if (HasDamageAbsorbed) hash ^= DamageAbsorbed.GetHashCode();
        if (HasAbsorptionProvided) hash ^= AbsorptionProvided.GetHashCode();
        if (HasHeroBulletsHit) hash ^= HeroBulletsHit.GetHashCode();
        if (HasHeroBulletsHitCrit) hash ^= HeroBulletsHitCrit.GetHashCode();
        if (HasHealPrevented) hash ^= HealPrevented.GetHashCode();
        if (HasHealLost) hash ^= HealLost.GetHashCode();
        hash ^= goldSources_.GetHashCode();
        hash ^= customUserStats_.GetHashCode();
        if (HasDamageMitigated) hash ^= DamageMitigated.GetHashCode();
        if (HasLevel) hash ^= Level.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTimeStampS) {
          output.WriteRawTag(8);
          output.WriteUInt32(TimeStampS);
        }
        if (HasNetWorth) {
          output.WriteRawTag(16);
          output.WriteUInt32(NetWorth);
        }
        if (HasGoldPlayer) {
          output.WriteRawTag(24);
          output.WriteUInt32(GoldPlayer);
        }
        if (HasGoldPlayerOrbs) {
          output.WriteRawTag(32);
          output.WriteUInt32(GoldPlayerOrbs);
        }
        if (HasGoldLaneCreepOrbs) {
          output.WriteRawTag(40);
          output.WriteUInt32(GoldLaneCreepOrbs);
        }
        if (HasGoldNeutralCreepOrbs) {
          output.WriteRawTag(48);
          output.WriteUInt32(GoldNeutralCreepOrbs);
        }
        if (HasGoldBoss) {
          output.WriteRawTag(56);
          output.WriteUInt32(GoldBoss);
        }
        if (HasGoldBossOrb) {
          output.WriteRawTag(64);
          output.WriteUInt32(GoldBossOrb);
        }
        if (HasGoldTreasure) {
          output.WriteRawTag(72);
          output.WriteUInt32(GoldTreasure);
        }
        if (HasGoldDenied) {
          output.WriteRawTag(80);
          output.WriteUInt32(GoldDenied);
        }
        if (HasGoldDeathLoss) {
          output.WriteRawTag(88);
          output.WriteUInt32(GoldDeathLoss);
        }
        if (HasGoldLaneCreep) {
          output.WriteRawTag(96);
          output.WriteUInt32(GoldLaneCreep);
        }
        if (HasGoldNeutralCreep) {
          output.WriteRawTag(104);
          output.WriteUInt32(GoldNeutralCreep);
        }
        if (HasKills) {
          output.WriteRawTag(112);
          output.WriteUInt32(Kills);
        }
        if (HasDeaths) {
          output.WriteRawTag(120);
          output.WriteUInt32(Deaths);
        }
        if (HasAssists) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(Assists);
        }
        if (HasCreepKills) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(CreepKills);
        }
        if (HasNeutralKills) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(NeutralKills);
        }
        if (HasPossibleCreeps) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(PossibleCreeps);
        }
        if (HasCreepDamage) {
          output.WriteRawTag(160, 1);
          output.WriteUInt32(CreepDamage);
        }
        if (HasPlayerDamage) {
          output.WriteRawTag(168, 1);
          output.WriteUInt32(PlayerDamage);
        }
        if (HasNeutralDamage) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(NeutralDamage);
        }
        if (HasBossDamage) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(BossDamage);
        }
        if (HasDenies) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(Denies);
        }
        if (HasPlayerHealing) {
          output.WriteRawTag(200, 1);
          output.WriteUInt32(PlayerHealing);
        }
        if (HasAbilityPoints) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(AbilityPoints);
        }
        if (HasSelfHealing) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(SelfHealing);
        }
        if (HasPlayerDamageTaken) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(PlayerDamageTaken);
        }
        if (HasMaxHealth) {
          output.WriteRawTag(232, 1);
          output.WriteUInt32(MaxHealth);
        }
        if (HasWeaponPower) {
          output.WriteRawTag(240, 1);
          output.WriteUInt32(WeaponPower);
        }
        if (HasTechPower) {
          output.WriteRawTag(248, 1);
          output.WriteUInt32(TechPower);
        }
        if (HasShotsHit) {
          output.WriteRawTag(128, 2);
          output.WriteUInt32(ShotsHit);
        }
        if (HasShotsMissed) {
          output.WriteRawTag(136, 2);
          output.WriteUInt32(ShotsMissed);
        }
        if (HasDamageAbsorbed) {
          output.WriteRawTag(144, 2);
          output.WriteUInt32(DamageAbsorbed);
        }
        if (HasAbsorptionProvided) {
          output.WriteRawTag(152, 2);
          output.WriteUInt32(AbsorptionProvided);
        }
        if (HasHeroBulletsHit) {
          output.WriteRawTag(160, 2);
          output.WriteUInt32(HeroBulletsHit);
        }
        if (HasHeroBulletsHitCrit) {
          output.WriteRawTag(168, 2);
          output.WriteUInt32(HeroBulletsHitCrit);
        }
        if (HasHealPrevented) {
          output.WriteRawTag(176, 2);
          output.WriteUInt32(HealPrevented);
        }
        if (HasHealLost) {
          output.WriteRawTag(184, 2);
          output.WriteUInt32(HealLost);
        }
        goldSources_.WriteTo(output, _repeated_goldSources_codec);
        customUserStats_.WriteTo(output, _repeated_customUserStats_codec);
        if (HasDamageMitigated) {
          output.WriteRawTag(208, 2);
          output.WriteUInt32(DamageMitigated);
        }
        if (HasLevel) {
          output.WriteRawTag(216, 2);
          output.WriteUInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTimeStampS) {
          output.WriteRawTag(8);
          output.WriteUInt32(TimeStampS);
        }
        if (HasNetWorth) {
          output.WriteRawTag(16);
          output.WriteUInt32(NetWorth);
        }
        if (HasGoldPlayer) {
          output.WriteRawTag(24);
          output.WriteUInt32(GoldPlayer);
        }
        if (HasGoldPlayerOrbs) {
          output.WriteRawTag(32);
          output.WriteUInt32(GoldPlayerOrbs);
        }
        if (HasGoldLaneCreepOrbs) {
          output.WriteRawTag(40);
          output.WriteUInt32(GoldLaneCreepOrbs);
        }
        if (HasGoldNeutralCreepOrbs) {
          output.WriteRawTag(48);
          output.WriteUInt32(GoldNeutralCreepOrbs);
        }
        if (HasGoldBoss) {
          output.WriteRawTag(56);
          output.WriteUInt32(GoldBoss);
        }
        if (HasGoldBossOrb) {
          output.WriteRawTag(64);
          output.WriteUInt32(GoldBossOrb);
        }
        if (HasGoldTreasure) {
          output.WriteRawTag(72);
          output.WriteUInt32(GoldTreasure);
        }
        if (HasGoldDenied) {
          output.WriteRawTag(80);
          output.WriteUInt32(GoldDenied);
        }
        if (HasGoldDeathLoss) {
          output.WriteRawTag(88);
          output.WriteUInt32(GoldDeathLoss);
        }
        if (HasGoldLaneCreep) {
          output.WriteRawTag(96);
          output.WriteUInt32(GoldLaneCreep);
        }
        if (HasGoldNeutralCreep) {
          output.WriteRawTag(104);
          output.WriteUInt32(GoldNeutralCreep);
        }
        if (HasKills) {
          output.WriteRawTag(112);
          output.WriteUInt32(Kills);
        }
        if (HasDeaths) {
          output.WriteRawTag(120);
          output.WriteUInt32(Deaths);
        }
        if (HasAssists) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(Assists);
        }
        if (HasCreepKills) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(CreepKills);
        }
        if (HasNeutralKills) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(NeutralKills);
        }
        if (HasPossibleCreeps) {
          output.WriteRawTag(152, 1);
          output.WriteUInt32(PossibleCreeps);
        }
        if (HasCreepDamage) {
          output.WriteRawTag(160, 1);
          output.WriteUInt32(CreepDamage);
        }
        if (HasPlayerDamage) {
          output.WriteRawTag(168, 1);
          output.WriteUInt32(PlayerDamage);
        }
        if (HasNeutralDamage) {
          output.WriteRawTag(176, 1);
          output.WriteUInt32(NeutralDamage);
        }
        if (HasBossDamage) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(BossDamage);
        }
        if (HasDenies) {
          output.WriteRawTag(192, 1);
          output.WriteUInt32(Denies);
        }
        if (HasPlayerHealing) {
          output.WriteRawTag(200, 1);
          output.WriteUInt32(PlayerHealing);
        }
        if (HasAbilityPoints) {
          output.WriteRawTag(208, 1);
          output.WriteUInt32(AbilityPoints);
        }
        if (HasSelfHealing) {
          output.WriteRawTag(216, 1);
          output.WriteUInt32(SelfHealing);
        }
        if (HasPlayerDamageTaken) {
          output.WriteRawTag(224, 1);
          output.WriteUInt32(PlayerDamageTaken);
        }
        if (HasMaxHealth) {
          output.WriteRawTag(232, 1);
          output.WriteUInt32(MaxHealth);
        }
        if (HasWeaponPower) {
          output.WriteRawTag(240, 1);
          output.WriteUInt32(WeaponPower);
        }
        if (HasTechPower) {
          output.WriteRawTag(248, 1);
          output.WriteUInt32(TechPower);
        }
        if (HasShotsHit) {
          output.WriteRawTag(128, 2);
          output.WriteUInt32(ShotsHit);
        }
        if (HasShotsMissed) {
          output.WriteRawTag(136, 2);
          output.WriteUInt32(ShotsMissed);
        }
        if (HasDamageAbsorbed) {
          output.WriteRawTag(144, 2);
          output.WriteUInt32(DamageAbsorbed);
        }
        if (HasAbsorptionProvided) {
          output.WriteRawTag(152, 2);
          output.WriteUInt32(AbsorptionProvided);
        }
        if (HasHeroBulletsHit) {
          output.WriteRawTag(160, 2);
          output.WriteUInt32(HeroBulletsHit);
        }
        if (HasHeroBulletsHitCrit) {
          output.WriteRawTag(168, 2);
          output.WriteUInt32(HeroBulletsHitCrit);
        }
        if (HasHealPrevented) {
          output.WriteRawTag(176, 2);
          output.WriteUInt32(HealPrevented);
        }
        if (HasHealLost) {
          output.WriteRawTag(184, 2);
          output.WriteUInt32(HealLost);
        }
        goldSources_.WriteTo(ref output, _repeated_goldSources_codec);
        customUserStats_.WriteTo(ref output, _repeated_customUserStats_codec);
        if (HasDamageMitigated) {
          output.WriteRawTag(208, 2);
          output.WriteUInt32(DamageMitigated);
        }
        if (HasLevel) {
          output.WriteRawTag(216, 2);
          output.WriteUInt32(Level);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTimeStampS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeStampS);
        }
        if (HasNetWorth) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NetWorth);
        }
        if (HasGoldPlayer) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldPlayer);
        }
        if (HasGoldPlayerOrbs) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldPlayerOrbs);
        }
        if (HasGoldLaneCreepOrbs) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldLaneCreepOrbs);
        }
        if (HasGoldNeutralCreepOrbs) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldNeutralCreepOrbs);
        }
        if (HasGoldBoss) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldBoss);
        }
        if (HasGoldBossOrb) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldBossOrb);
        }
        if (HasGoldTreasure) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldTreasure);
        }
        if (HasGoldDenied) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldDenied);
        }
        if (HasGoldDeathLoss) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldDeathLoss);
        }
        if (HasGoldLaneCreep) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldLaneCreep);
        }
        if (HasGoldNeutralCreep) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GoldNeutralCreep);
        }
        if (HasKills) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kills);
        }
        if (HasDeaths) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deaths);
        }
        if (HasAssists) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Assists);
        }
        if (HasCreepKills) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CreepKills);
        }
        if (HasNeutralKills) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NeutralKills);
        }
        if (HasPossibleCreeps) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PossibleCreeps);
        }
        if (HasCreepDamage) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CreepDamage);
        }
        if (HasPlayerDamage) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDamage);
        }
        if (HasNeutralDamage) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(NeutralDamage);
        }
        if (HasBossDamage) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(BossDamage);
        }
        if (HasDenies) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Denies);
        }
        if (HasPlayerHealing) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PlayerHealing);
        }
        if (HasAbilityPoints) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AbilityPoints);
        }
        if (HasSelfHealing) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(SelfHealing);
        }
        if (HasPlayerDamageTaken) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDamageTaken);
        }
        if (HasMaxHealth) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxHealth);
        }
        if (HasWeaponPower) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(WeaponPower);
        }
        if (HasTechPower) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(TechPower);
        }
        if (HasShotsHit) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ShotsHit);
        }
        if (HasShotsMissed) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ShotsMissed);
        }
        if (HasDamageAbsorbed) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DamageAbsorbed);
        }
        if (HasAbsorptionProvided) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AbsorptionProvided);
        }
        if (HasHeroBulletsHit) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HeroBulletsHit);
        }
        if (HasHeroBulletsHitCrit) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HeroBulletsHitCrit);
        }
        if (HasHealPrevented) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HealPrevented);
        }
        if (HasHealLost) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HealLost);
        }
        size += goldSources_.CalculateSize(_repeated_goldSources_codec);
        size += customUserStats_.CalculateSize(_repeated_customUserStats_codec);
        if (HasDamageMitigated) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(DamageMitigated);
        }
        if (HasLevel) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Level);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(PlayerStats other) {
        if (other == null) {
          return;
        }
        if (other.HasTimeStampS) {
          TimeStampS = other.TimeStampS;
        }
        if (other.HasNetWorth) {
          NetWorth = other.NetWorth;
        }
        if (other.HasGoldPlayer) {
          GoldPlayer = other.GoldPlayer;
        }
        if (other.HasGoldPlayerOrbs) {
          GoldPlayerOrbs = other.GoldPlayerOrbs;
        }
        if (other.HasGoldLaneCreepOrbs) {
          GoldLaneCreepOrbs = other.GoldLaneCreepOrbs;
        }
        if (other.HasGoldNeutralCreepOrbs) {
          GoldNeutralCreepOrbs = other.GoldNeutralCreepOrbs;
        }
        if (other.HasGoldBoss) {
          GoldBoss = other.GoldBoss;
        }
        if (other.HasGoldBossOrb) {
          GoldBossOrb = other.GoldBossOrb;
        }
        if (other.HasGoldTreasure) {
          GoldTreasure = other.GoldTreasure;
        }
        if (other.HasGoldDenied) {
          GoldDenied = other.GoldDenied;
        }
        if (other.HasGoldDeathLoss) {
          GoldDeathLoss = other.GoldDeathLoss;
        }
        if (other.HasGoldLaneCreep) {
          GoldLaneCreep = other.GoldLaneCreep;
        }
        if (other.HasGoldNeutralCreep) {
          GoldNeutralCreep = other.GoldNeutralCreep;
        }
        if (other.HasKills) {
          Kills = other.Kills;
        }
        if (other.HasDeaths) {
          Deaths = other.Deaths;
        }
        if (other.HasAssists) {
          Assists = other.Assists;
        }
        if (other.HasCreepKills) {
          CreepKills = other.CreepKills;
        }
        if (other.HasNeutralKills) {
          NeutralKills = other.NeutralKills;
        }
        if (other.HasPossibleCreeps) {
          PossibleCreeps = other.PossibleCreeps;
        }
        if (other.HasCreepDamage) {
          CreepDamage = other.CreepDamage;
        }
        if (other.HasPlayerDamage) {
          PlayerDamage = other.PlayerDamage;
        }
        if (other.HasNeutralDamage) {
          NeutralDamage = other.NeutralDamage;
        }
        if (other.HasBossDamage) {
          BossDamage = other.BossDamage;
        }
        if (other.HasDenies) {
          Denies = other.Denies;
        }
        if (other.HasPlayerHealing) {
          PlayerHealing = other.PlayerHealing;
        }
        if (other.HasAbilityPoints) {
          AbilityPoints = other.AbilityPoints;
        }
        if (other.HasSelfHealing) {
          SelfHealing = other.SelfHealing;
        }
        if (other.HasPlayerDamageTaken) {
          PlayerDamageTaken = other.PlayerDamageTaken;
        }
        if (other.HasMaxHealth) {
          MaxHealth = other.MaxHealth;
        }
        if (other.HasWeaponPower) {
          WeaponPower = other.WeaponPower;
        }
        if (other.HasTechPower) {
          TechPower = other.TechPower;
        }
        if (other.HasShotsHit) {
          ShotsHit = other.ShotsHit;
        }
        if (other.HasShotsMissed) {
          ShotsMissed = other.ShotsMissed;
        }
        if (other.HasDamageAbsorbed) {
          DamageAbsorbed = other.DamageAbsorbed;
        }
        if (other.HasAbsorptionProvided) {
          AbsorptionProvided = other.AbsorptionProvided;
        }
        if (other.HasHeroBulletsHit) {
          HeroBulletsHit = other.HeroBulletsHit;
        }
        if (other.HasHeroBulletsHitCrit) {
          HeroBulletsHitCrit = other.HeroBulletsHitCrit;
        }
        if (other.HasHealPrevented) {
          HealPrevented = other.HealPrevented;
        }
        if (other.HasHealLost) {
          HealLost = other.HealLost;
        }
        goldSources_.Add(other.goldSources_);
        customUserStats_.Add(other.customUserStats_);
        if (other.HasDamageMitigated) {
          DamageMitigated = other.DamageMitigated;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              TimeStampS = input.ReadUInt32();
              break;
            }
            case 16: {
              NetWorth = input.ReadUInt32();
              break;
            }
            case 24: {
              GoldPlayer = input.ReadUInt32();
              break;
            }
            case 32: {
              GoldPlayerOrbs = input.ReadUInt32();
              break;
            }
            case 40: {
              GoldLaneCreepOrbs = input.ReadUInt32();
              break;
            }
            case 48: {
              GoldNeutralCreepOrbs = input.ReadUInt32();
              break;
            }
            case 56: {
              GoldBoss = input.ReadUInt32();
              break;
            }
            case 64: {
              GoldBossOrb = input.ReadUInt32();
              break;
            }
            case 72: {
              GoldTreasure = input.ReadUInt32();
              break;
            }
            case 80: {
              GoldDenied = input.ReadUInt32();
              break;
            }
            case 88: {
              GoldDeathLoss = input.ReadUInt32();
              break;
            }
            case 96: {
              GoldLaneCreep = input.ReadUInt32();
              break;
            }
            case 104: {
              GoldNeutralCreep = input.ReadUInt32();
              break;
            }
            case 112: {
              Kills = input.ReadUInt32();
              break;
            }
            case 120: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 128: {
              Assists = input.ReadUInt32();
              break;
            }
            case 136: {
              CreepKills = input.ReadUInt32();
              break;
            }
            case 144: {
              NeutralKills = input.ReadUInt32();
              break;
            }
            case 152: {
              PossibleCreeps = input.ReadUInt32();
              break;
            }
            case 160: {
              CreepDamage = input.ReadUInt32();
              break;
            }
            case 168: {
              PlayerDamage = input.ReadUInt32();
              break;
            }
            case 176: {
              NeutralDamage = input.ReadUInt32();
              break;
            }
            case 184: {
              BossDamage = input.ReadUInt32();
              break;
            }
            case 192: {
              Denies = input.ReadUInt32();
              break;
            }
            case 200: {
              PlayerHealing = input.ReadUInt32();
              break;
            }
            case 208: {
              AbilityPoints = input.ReadUInt32();
              break;
            }
            case 216: {
              SelfHealing = input.ReadUInt32();
              break;
            }
            case 224: {
              PlayerDamageTaken = input.ReadUInt32();
              break;
            }
            case 232: {
              MaxHealth = input.ReadUInt32();
              break;
            }
            case 240: {
              WeaponPower = input.ReadUInt32();
              break;
            }
            case 248: {
              TechPower = input.ReadUInt32();
              break;
            }
            case 256: {
              ShotsHit = input.ReadUInt32();
              break;
            }
            case 264: {
              ShotsMissed = input.ReadUInt32();
              break;
            }
            case 272: {
              DamageAbsorbed = input.ReadUInt32();
              break;
            }
            case 280: {
              AbsorptionProvided = input.ReadUInt32();
              break;
            }
            case 288: {
              HeroBulletsHit = input.ReadUInt32();
              break;
            }
            case 296: {
              HeroBulletsHitCrit = input.ReadUInt32();
              break;
            }
            case 304: {
              HealPrevented = input.ReadUInt32();
              break;
            }
            case 312: {
              HealLost = input.ReadUInt32();
              break;
            }
            case 322: {
              goldSources_.AddEntriesFrom(input, _repeated_goldSources_codec);
              break;
            }
            case 330: {
              customUserStats_.AddEntriesFrom(input, _repeated_customUserStats_codec);
              break;
            }
            case 336: {
              DamageMitigated = input.ReadUInt32();
              break;
            }
            case 344: {
              Level = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              TimeStampS = input.ReadUInt32();
              break;
            }
            case 16: {
              NetWorth = input.ReadUInt32();
              break;
            }
            case 24: {
              GoldPlayer = input.ReadUInt32();
              break;
            }
            case 32: {
              GoldPlayerOrbs = input.ReadUInt32();
              break;
            }
            case 40: {
              GoldLaneCreepOrbs = input.ReadUInt32();
              break;
            }
            case 48: {
              GoldNeutralCreepOrbs = input.ReadUInt32();
              break;
            }
            case 56: {
              GoldBoss = input.ReadUInt32();
              break;
            }
            case 64: {
              GoldBossOrb = input.ReadUInt32();
              break;
            }
            case 72: {
              GoldTreasure = input.ReadUInt32();
              break;
            }
            case 80: {
              GoldDenied = input.ReadUInt32();
              break;
            }
            case 88: {
              GoldDeathLoss = input.ReadUInt32();
              break;
            }
            case 96: {
              GoldLaneCreep = input.ReadUInt32();
              break;
            }
            case 104: {
              GoldNeutralCreep = input.ReadUInt32();
              break;
            }
            case 112: {
              Kills = input.ReadUInt32();
              break;
            }
            case 120: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 128: {
              Assists = input.ReadUInt32();
              break;
            }
            case 136: {
              CreepKills = input.ReadUInt32();
              break;
            }
            case 144: {
              NeutralKills = input.ReadUInt32();
              break;
            }
            case 152: {
              PossibleCreeps = input.ReadUInt32();
              break;
            }
            case 160: {
              CreepDamage = input.ReadUInt32();
              break;
            }
            case 168: {
              PlayerDamage = input.ReadUInt32();
              break;
            }
            case 176: {
              NeutralDamage = input.ReadUInt32();
              break;
            }
            case 184: {
              BossDamage = input.ReadUInt32();
              break;
            }
            case 192: {
              Denies = input.ReadUInt32();
              break;
            }
            case 200: {
              PlayerHealing = input.ReadUInt32();
              break;
            }
            case 208: {
              AbilityPoints = input.ReadUInt32();
              break;
            }
            case 216: {
              SelfHealing = input.ReadUInt32();
              break;
            }
            case 224: {
              PlayerDamageTaken = input.ReadUInt32();
              break;
            }
            case 232: {
              MaxHealth = input.ReadUInt32();
              break;
            }
            case 240: {
              WeaponPower = input.ReadUInt32();
              break;
            }
            case 248: {
              TechPower = input.ReadUInt32();
              break;
            }
            case 256: {
              ShotsHit = input.ReadUInt32();
              break;
            }
            case 264: {
              ShotsMissed = input.ReadUInt32();
              break;
            }
            case 272: {
              DamageAbsorbed = input.ReadUInt32();
              break;
            }
            case 280: {
              AbsorptionProvided = input.ReadUInt32();
              break;
            }
            case 288: {
              HeroBulletsHit = input.ReadUInt32();
              break;
            }
            case 296: {
              HeroBulletsHitCrit = input.ReadUInt32();
              break;
            }
            case 304: {
              HealPrevented = input.ReadUInt32();
              break;
            }
            case 312: {
              HealLost = input.ReadUInt32();
              break;
            }
            case 322: {
              goldSources_.AddEntriesFrom(ref input, _repeated_goldSources_codec);
              break;
            }
            case 330: {
              customUserStats_.AddEntriesFrom(ref input, _repeated_customUserStats_codec);
              break;
            }
            case 336: {
              DamageMitigated = input.ReadUInt32();
              break;
            }
            case 344: {
              Level = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class AbilityStat : pb::IMessage<AbilityStat>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<AbilityStat> _parser = new pb::MessageParser<AbilityStat>(() => new AbilityStat());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<AbilityStat> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[8]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AbilityStat() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AbilityStat(AbilityStat other) : this() {
        _hasBits0 = other._hasBits0;
        abilityId_ = other.abilityId_;
        abilityValue_ = other.abilityValue_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public AbilityStat Clone() {
        return new AbilityStat(this);
      }

      /// <summary>Field number for the "ability_id" field.</summary>
      public const int AbilityIdFieldNumber = 1;
      private readonly static uint AbilityIdDefaultValue = 0;

      private uint abilityId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbilityId {
        get { if ((_hasBits0 & 1) != 0) { return abilityId_; } else { return AbilityIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          abilityId_ = value;
        }
      }
      /// <summary>Gets whether the "ability_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbilityId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "ability_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbilityId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "ability_value" field.</summary>
      public const int AbilityValueFieldNumber = 2;
      private readonly static uint AbilityValueDefaultValue = 0;

      private uint abilityValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbilityValue {
        get { if ((_hasBits0 & 2) != 0) { return abilityValue_; } else { return AbilityValueDefaultValue; } }
        set {
          _hasBits0 |= 2;
          abilityValue_ = value;
        }
      }
      /// <summary>Gets whether the "ability_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbilityValue {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "ability_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbilityValue() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as AbilityStat);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(AbilityStat other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AbilityId != other.AbilityId) return false;
        if (AbilityValue != other.AbilityValue) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAbilityId) hash ^= AbilityId.GetHashCode();
        if (HasAbilityValue) hash ^= AbilityValue.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAbilityId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AbilityId);
        }
        if (HasAbilityValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(AbilityValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAbilityId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AbilityId);
        }
        if (HasAbilityValue) {
          output.WriteRawTag(16);
          output.WriteUInt32(AbilityValue);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAbilityId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityId);
        }
        if (HasAbilityValue) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityValue);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(AbilityStat other) {
        if (other == null) {
          return;
        }
        if (other.HasAbilityId) {
          AbilityId = other.AbilityId;
        }
        if (other.HasAbilityValue) {
          AbilityValue = other.AbilityValue;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AbilityId = input.ReadUInt32();
              break;
            }
            case 16: {
              AbilityValue = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AbilityId = input.ReadUInt32();
              break;
            }
            case 16: {
              AbilityValue = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class BookReward : pb::IMessage<BookReward>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<BookReward> _parser = new pb::MessageParser<BookReward>(() => new BookReward());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<BookReward> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[9]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BookReward() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BookReward(BookReward other) : this() {
        _hasBits0 = other._hasBits0;
        bookId_ = other.bookId_;
        xpAmount_ = other.xpAmount_;
        startingXp_ = other.startingXp_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public BookReward Clone() {
        return new BookReward(this);
      }

      /// <summary>Field number for the "book_id" field.</summary>
      public const int BookIdFieldNumber = 1;
      private readonly static uint BookIdDefaultValue = 0;

      private uint bookId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BookId {
        get { if ((_hasBits0 & 1) != 0) { return bookId_; } else { return BookIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          bookId_ = value;
        }
      }
      /// <summary>Gets whether the "book_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBookId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "book_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBookId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "xp_amount" field.</summary>
      public const int XpAmountFieldNumber = 2;
      private readonly static uint XpAmountDefaultValue = 0;

      private uint xpAmount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint XpAmount {
        get { if ((_hasBits0 & 2) != 0) { return xpAmount_; } else { return XpAmountDefaultValue; } }
        set {
          _hasBits0 |= 2;
          xpAmount_ = value;
        }
      }
      /// <summary>Gets whether the "xp_amount" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasXpAmount {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "xp_amount" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearXpAmount() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "starting_xp" field.</summary>
      public const int StartingXpFieldNumber = 3;
      private readonly static uint StartingXpDefaultValue = 0;

      private uint startingXp_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint StartingXp {
        get { if ((_hasBits0 & 4) != 0) { return startingXp_; } else { return StartingXpDefaultValue; } }
        set {
          _hasBits0 |= 4;
          startingXp_ = value;
        }
      }
      /// <summary>Gets whether the "starting_xp" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStartingXp {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "starting_xp" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStartingXp() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as BookReward);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(BookReward other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (BookId != other.BookId) return false;
        if (XpAmount != other.XpAmount) return false;
        if (StartingXp != other.StartingXp) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasBookId) hash ^= BookId.GetHashCode();
        if (HasXpAmount) hash ^= XpAmount.GetHashCode();
        if (HasStartingXp) hash ^= StartingXp.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasBookId) {
          output.WriteRawTag(8);
          output.WriteUInt32(BookId);
        }
        if (HasXpAmount) {
          output.WriteRawTag(16);
          output.WriteUInt32(XpAmount);
        }
        if (HasStartingXp) {
          output.WriteRawTag(24);
          output.WriteUInt32(StartingXp);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasBookId) {
          output.WriteRawTag(8);
          output.WriteUInt32(BookId);
        }
        if (HasXpAmount) {
          output.WriteRawTag(16);
          output.WriteUInt32(XpAmount);
        }
        if (HasStartingXp) {
          output.WriteRawTag(24);
          output.WriteUInt32(StartingXp);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasBookId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BookId);
        }
        if (HasXpAmount) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(XpAmount);
        }
        if (HasStartingXp) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartingXp);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(BookReward other) {
        if (other == null) {
          return;
        }
        if (other.HasBookId) {
          BookId = other.BookId;
        }
        if (other.HasXpAmount) {
          XpAmount = other.XpAmount;
        }
        if (other.HasStartingXp) {
          StartingXp = other.StartingXp;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              BookId = input.ReadUInt32();
              break;
            }
            case 16: {
              XpAmount = input.ReadUInt32();
              break;
            }
            case 24: {
              StartingXp = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              BookId = input.ReadUInt32();
              break;
            }
            case 16: {
              XpAmount = input.ReadUInt32();
              break;
            }
            case 24: {
              StartingXp = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Players : pb::IMessage<Players>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Players> _parser = new pb::MessageParser<Players>(() => new Players());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Players> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[10]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Players() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Players(Players other) : this() {
        _hasBits0 = other._hasBits0;
        accountId_ = other.accountId_;
        playerSlot_ = other.playerSlot_;
        deathDetails_ = other.deathDetails_.Clone();
        items_ = other.items_.Clone();
        stats_ = other.stats_.Clone();
        team_ = other.team_;
        kills_ = other.kills_;
        deaths_ = other.deaths_;
        assists_ = other.assists_;
        netWorth_ = other.netWorth_;
        heroId_ = other.heroId_;
        lastHits_ = other.lastHits_;
        denies_ = other.denies_;
        abilityPoints_ = other.abilityPoints_;
        party_ = other.party_;
        assignedLane_ = other.assignedLane_;
        level_ = other.level_;
        pings_ = other.pings_.Clone();
        abilityStats_ = other.abilityStats_.Clone();
        statsTypeStat_ = other.statsTypeStat_.Clone();
        bookRewards_ = other.bookRewards_.Clone();
        abandonMatchTimeS_ = other.abandonMatchTimeS_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Players Clone() {
        return new Players(this);
      }

      /// <summary>Field number for the "account_id" field.</summary>
      public const int AccountIdFieldNumber = 1;
      private readonly static uint AccountIdDefaultValue = 0;

      private uint accountId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AccountId {
        get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          accountId_ = value;
        }
      }
      /// <summary>Gets whether the "account_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAccountId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "account_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAccountId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "player_slot" field.</summary>
      public const int PlayerSlotFieldNumber = 2;
      private readonly static uint PlayerSlotDefaultValue = 0;

      private uint playerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerSlot {
        get { if ((_hasBits0 & 2) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          playerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerSlot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerSlot() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "death_details" field.</summary>
      public const int DeathDetailsFieldNumber = 3;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Deaths> _repeated_deathDetails_codec
          = pb::FieldCodec.ForMessage(26, global::CMsgMatchMetaDataContents.Types.Deaths.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Deaths> deathDetails_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Deaths>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Deaths> DeathDetails {
        get { return deathDetails_; }
      }

      /// <summary>Field number for the "items" field.</summary>
      public const int ItemsFieldNumber = 4;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Items> _repeated_items_codec
          = pb::FieldCodec.ForMessage(34, global::CMsgMatchMetaDataContents.Types.Items.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Items> items_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Items>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Items> Items {
        get { return items_; }
      }

      /// <summary>Field number for the "stats" field.</summary>
      public const int StatsFieldNumber = 5;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.PlayerStats> _repeated_stats_codec
          = pb::FieldCodec.ForMessage(42, global::CMsgMatchMetaDataContents.Types.PlayerStats.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.PlayerStats> stats_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.PlayerStats>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.PlayerStats> Stats {
        get { return stats_; }
      }

      /// <summary>Field number for the "team" field.</summary>
      public const int TeamFieldNumber = 6;
      private readonly static global::ECitadelLobbyTeam TeamDefaultValue = global::ECitadelLobbyTeam.KEcitadelLobbyTeamTeam0;

      private global::ECitadelLobbyTeam team_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelLobbyTeam Team {
        get { if ((_hasBits0 & 4) != 0) { return team_; } else { return TeamDefaultValue; } }
        set {
          _hasBits0 |= 4;
          team_ = value;
        }
      }
      /// <summary>Gets whether the "team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeam {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeam() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "kills" field.</summary>
      public const int KillsFieldNumber = 8;
      private readonly static uint KillsDefaultValue = 0;

      private uint kills_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Kills {
        get { if ((_hasBits0 & 8) != 0) { return kills_; } else { return KillsDefaultValue; } }
        set {
          _hasBits0 |= 8;
          kills_ = value;
        }
      }
      /// <summary>Gets whether the "kills" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasKills {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "kills" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearKills() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "deaths" field.</summary>
      public const int DeathsFieldNumber = 9;
      private readonly static uint DeathsDefaultValue = 0;

      private uint deaths_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Deaths {
        get { if ((_hasBits0 & 16) != 0) { return deaths_; } else { return DeathsDefaultValue; } }
        set {
          _hasBits0 |= 16;
          deaths_ = value;
        }
      }
      /// <summary>Gets whether the "deaths" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDeaths {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "deaths" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDeaths() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "assists" field.</summary>
      public const int AssistsFieldNumber = 10;
      private readonly static uint AssistsDefaultValue = 0;

      private uint assists_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Assists {
        get { if ((_hasBits0 & 32) != 0) { return assists_; } else { return AssistsDefaultValue; } }
        set {
          _hasBits0 |= 32;
          assists_ = value;
        }
      }
      /// <summary>Gets whether the "assists" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAssists {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "assists" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAssists() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "net_worth" field.</summary>
      public const int NetWorthFieldNumber = 11;
      private readonly static uint NetWorthDefaultValue = 0;

      private uint netWorth_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint NetWorth {
        get { if ((_hasBits0 & 64) != 0) { return netWorth_; } else { return NetWorthDefaultValue; } }
        set {
          _hasBits0 |= 64;
          netWorth_ = value;
        }
      }
      /// <summary>Gets whether the "net_worth" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNetWorth {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "net_worth" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNetWorth() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "hero_id" field.</summary>
      public const int HeroIdFieldNumber = 12;
      private readonly static uint HeroIdDefaultValue = 0;

      private uint heroId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint HeroId {
        get { if ((_hasBits0 & 128) != 0) { return heroId_; } else { return HeroIdDefaultValue; } }
        set {
          _hasBits0 |= 128;
          heroId_ = value;
        }
      }
      /// <summary>Gets whether the "hero_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeroId {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "hero_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeroId() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "last_hits" field.</summary>
      public const int LastHitsFieldNumber = 13;
      private readonly static uint LastHitsDefaultValue = 0;

      private uint lastHits_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LastHits {
        get { if ((_hasBits0 & 256) != 0) { return lastHits_; } else { return LastHitsDefaultValue; } }
        set {
          _hasBits0 |= 256;
          lastHits_ = value;
        }
      }
      /// <summary>Gets whether the "last_hits" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLastHits {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "last_hits" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLastHits() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "denies" field.</summary>
      public const int DeniesFieldNumber = 14;
      private readonly static uint DeniesDefaultValue = 0;

      private uint denies_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Denies {
        get { if ((_hasBits0 & 512) != 0) { return denies_; } else { return DeniesDefaultValue; } }
        set {
          _hasBits0 |= 512;
          denies_ = value;
        }
      }
      /// <summary>Gets whether the "denies" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDenies {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "denies" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDenies() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "ability_points" field.</summary>
      public const int AbilityPointsFieldNumber = 15;
      private readonly static uint AbilityPointsDefaultValue = 0;

      private uint abilityPoints_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbilityPoints {
        get { if ((_hasBits0 & 1024) != 0) { return abilityPoints_; } else { return AbilityPointsDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          abilityPoints_ = value;
        }
      }
      /// <summary>Gets whether the "ability_points" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbilityPoints {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "ability_points" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbilityPoints() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "party" field.</summary>
      public const int PartyFieldNumber = 16;
      private readonly static uint PartyDefaultValue = 0;

      private uint party_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Party {
        get { if ((_hasBits0 & 2048) != 0) { return party_; } else { return PartyDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          party_ = value;
        }
      }
      /// <summary>Gets whether the "party" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasParty {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "party" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearParty() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "assigned_lane" field.</summary>
      public const int AssignedLaneFieldNumber = 17;
      private readonly static uint AssignedLaneDefaultValue = 0;

      private uint assignedLane_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AssignedLane {
        get { if ((_hasBits0 & 4096) != 0) { return assignedLane_; } else { return AssignedLaneDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          assignedLane_ = value;
        }
      }
      /// <summary>Gets whether the "assigned_lane" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAssignedLane {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "assigned_lane" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAssignedLane() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "level" field.</summary>
      public const int LevelFieldNumber = 18;
      private readonly static uint LevelDefaultValue = 0;

      private uint level_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Level {
        get { if ((_hasBits0 & 8192) != 0) { return level_; } else { return LevelDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          level_ = value;
        }
      }
      /// <summary>Gets whether the "level" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLevel {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "level" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLevel() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "pings" field.</summary>
      public const int PingsFieldNumber = 19;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Ping> _repeated_pings_codec
          = pb::FieldCodec.ForMessage(154, global::CMsgMatchMetaDataContents.Types.Ping.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Ping> pings_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Ping>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Ping> Pings {
        get { return pings_; }
      }

      /// <summary>Field number for the "ability_stats" field.</summary>
      public const int AbilityStatsFieldNumber = 20;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.AbilityStat> _repeated_abilityStats_codec
          = pb::FieldCodec.ForMessage(162, global::CMsgMatchMetaDataContents.Types.AbilityStat.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.AbilityStat> abilityStats_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.AbilityStat>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.AbilityStat> AbilityStats {
        get { return abilityStats_; }
      }

      /// <summary>Field number for the "stats_type_stat" field.</summary>
      public const int StatsTypeStatFieldNumber = 21;
      private static readonly pb::FieldCodec<float> _repeated_statsTypeStat_codec
          = pb::FieldCodec.ForFloat(170);
      private readonly pbc::RepeatedField<float> statsTypeStat_ = new pbc::RepeatedField<float>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<float> StatsTypeStat {
        get { return statsTypeStat_; }
      }

      /// <summary>Field number for the "book_rewards" field.</summary>
      public const int BookRewardsFieldNumber = 22;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.BookReward> _repeated_bookRewards_codec
          = pb::FieldCodec.ForMessage(178, global::CMsgMatchMetaDataContents.Types.BookReward.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.BookReward> bookRewards_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.BookReward>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.BookReward> BookRewards {
        get { return bookRewards_; }
      }

      /// <summary>Field number for the "abandon_match_time_s" field.</summary>
      public const int AbandonMatchTimeSFieldNumber = 23;
      private readonly static uint AbandonMatchTimeSDefaultValue = 0;

      private uint abandonMatchTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint AbandonMatchTimeS {
        get { if ((_hasBits0 & 16384) != 0) { return abandonMatchTimeS_; } else { return AbandonMatchTimeSDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          abandonMatchTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "abandon_match_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAbandonMatchTimeS {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "abandon_match_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAbandonMatchTimeS() {
        _hasBits0 &= ~16384;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Players);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Players other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (AccountId != other.AccountId) return false;
        if (PlayerSlot != other.PlayerSlot) return false;
        if(!deathDetails_.Equals(other.deathDetails_)) return false;
        if(!items_.Equals(other.items_)) return false;
        if(!stats_.Equals(other.stats_)) return false;
        if (Team != other.Team) return false;
        if (Kills != other.Kills) return false;
        if (Deaths != other.Deaths) return false;
        if (Assists != other.Assists) return false;
        if (NetWorth != other.NetWorth) return false;
        if (HeroId != other.HeroId) return false;
        if (LastHits != other.LastHits) return false;
        if (Denies != other.Denies) return false;
        if (AbilityPoints != other.AbilityPoints) return false;
        if (Party != other.Party) return false;
        if (AssignedLane != other.AssignedLane) return false;
        if (Level != other.Level) return false;
        if(!pings_.Equals(other.pings_)) return false;
        if(!abilityStats_.Equals(other.abilityStats_)) return false;
        if(!statsTypeStat_.Equals(other.statsTypeStat_)) return false;
        if(!bookRewards_.Equals(other.bookRewards_)) return false;
        if (AbandonMatchTimeS != other.AbandonMatchTimeS) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasAccountId) hash ^= AccountId.GetHashCode();
        if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
        hash ^= deathDetails_.GetHashCode();
        hash ^= items_.GetHashCode();
        hash ^= stats_.GetHashCode();
        if (HasTeam) hash ^= Team.GetHashCode();
        if (HasKills) hash ^= Kills.GetHashCode();
        if (HasDeaths) hash ^= Deaths.GetHashCode();
        if (HasAssists) hash ^= Assists.GetHashCode();
        if (HasNetWorth) hash ^= NetWorth.GetHashCode();
        if (HasHeroId) hash ^= HeroId.GetHashCode();
        if (HasLastHits) hash ^= LastHits.GetHashCode();
        if (HasDenies) hash ^= Denies.GetHashCode();
        if (HasAbilityPoints) hash ^= AbilityPoints.GetHashCode();
        if (HasParty) hash ^= Party.GetHashCode();
        if (HasAssignedLane) hash ^= AssignedLane.GetHashCode();
        if (HasLevel) hash ^= Level.GetHashCode();
        hash ^= pings_.GetHashCode();
        hash ^= abilityStats_.GetHashCode();
        hash ^= statsTypeStat_.GetHashCode();
        hash ^= bookRewards_.GetHashCode();
        if (HasAbandonMatchTimeS) hash ^= AbandonMatchTimeS.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(16);
          output.WriteUInt32(PlayerSlot);
        }
        deathDetails_.WriteTo(output, _repeated_deathDetails_codec);
        items_.WriteTo(output, _repeated_items_codec);
        stats_.WriteTo(output, _repeated_stats_codec);
        if (HasTeam) {
          output.WriteRawTag(48);
          output.WriteEnum((int) Team);
        }
        if (HasKills) {
          output.WriteRawTag(64);
          output.WriteUInt32(Kills);
        }
        if (HasDeaths) {
          output.WriteRawTag(72);
          output.WriteUInt32(Deaths);
        }
        if (HasAssists) {
          output.WriteRawTag(80);
          output.WriteUInt32(Assists);
        }
        if (HasNetWorth) {
          output.WriteRawTag(88);
          output.WriteUInt32(NetWorth);
        }
        if (HasHeroId) {
          output.WriteRawTag(96);
          output.WriteUInt32(HeroId);
        }
        if (HasLastHits) {
          output.WriteRawTag(104);
          output.WriteUInt32(LastHits);
        }
        if (HasDenies) {
          output.WriteRawTag(112);
          output.WriteUInt32(Denies);
        }
        if (HasAbilityPoints) {
          output.WriteRawTag(120);
          output.WriteUInt32(AbilityPoints);
        }
        if (HasParty) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(Party);
        }
        if (HasAssignedLane) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(AssignedLane);
        }
        if (HasLevel) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(Level);
        }
        pings_.WriteTo(output, _repeated_pings_codec);
        abilityStats_.WriteTo(output, _repeated_abilityStats_codec);
        statsTypeStat_.WriteTo(output, _repeated_statsTypeStat_codec);
        bookRewards_.WriteTo(output, _repeated_bookRewards_codec);
        if (HasAbandonMatchTimeS) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(AbandonMatchTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasAccountId) {
          output.WriteRawTag(8);
          output.WriteUInt32(AccountId);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(16);
          output.WriteUInt32(PlayerSlot);
        }
        deathDetails_.WriteTo(ref output, _repeated_deathDetails_codec);
        items_.WriteTo(ref output, _repeated_items_codec);
        stats_.WriteTo(ref output, _repeated_stats_codec);
        if (HasTeam) {
          output.WriteRawTag(48);
          output.WriteEnum((int) Team);
        }
        if (HasKills) {
          output.WriteRawTag(64);
          output.WriteUInt32(Kills);
        }
        if (HasDeaths) {
          output.WriteRawTag(72);
          output.WriteUInt32(Deaths);
        }
        if (HasAssists) {
          output.WriteRawTag(80);
          output.WriteUInt32(Assists);
        }
        if (HasNetWorth) {
          output.WriteRawTag(88);
          output.WriteUInt32(NetWorth);
        }
        if (HasHeroId) {
          output.WriteRawTag(96);
          output.WriteUInt32(HeroId);
        }
        if (HasLastHits) {
          output.WriteRawTag(104);
          output.WriteUInt32(LastHits);
        }
        if (HasDenies) {
          output.WriteRawTag(112);
          output.WriteUInt32(Denies);
        }
        if (HasAbilityPoints) {
          output.WriteRawTag(120);
          output.WriteUInt32(AbilityPoints);
        }
        if (HasParty) {
          output.WriteRawTag(128, 1);
          output.WriteUInt32(Party);
        }
        if (HasAssignedLane) {
          output.WriteRawTag(136, 1);
          output.WriteUInt32(AssignedLane);
        }
        if (HasLevel) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(Level);
        }
        pings_.WriteTo(ref output, _repeated_pings_codec);
        abilityStats_.WriteTo(ref output, _repeated_abilityStats_codec);
        statsTypeStat_.WriteTo(ref output, _repeated_statsTypeStat_codec);
        bookRewards_.WriteTo(ref output, _repeated_bookRewards_codec);
        if (HasAbandonMatchTimeS) {
          output.WriteRawTag(184, 1);
          output.WriteUInt32(AbandonMatchTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasAccountId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
        }
        if (HasPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerSlot);
        }
        size += deathDetails_.CalculateSize(_repeated_deathDetails_codec);
        size += items_.CalculateSize(_repeated_items_codec);
        size += stats_.CalculateSize(_repeated_stats_codec);
        if (HasTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
        }
        if (HasKills) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Kills);
        }
        if (HasDeaths) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deaths);
        }
        if (HasAssists) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Assists);
        }
        if (HasNetWorth) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NetWorth);
        }
        if (HasHeroId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeroId);
        }
        if (HasLastHits) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastHits);
        }
        if (HasDenies) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Denies);
        }
        if (HasAbilityPoints) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityPoints);
        }
        if (HasParty) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Party);
        }
        if (HasAssignedLane) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AssignedLane);
        }
        if (HasLevel) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Level);
        }
        size += pings_.CalculateSize(_repeated_pings_codec);
        size += abilityStats_.CalculateSize(_repeated_abilityStats_codec);
        size += statsTypeStat_.CalculateSize(_repeated_statsTypeStat_codec);
        size += bookRewards_.CalculateSize(_repeated_bookRewards_codec);
        if (HasAbandonMatchTimeS) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(AbandonMatchTimeS);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Players other) {
        if (other == null) {
          return;
        }
        if (other.HasAccountId) {
          AccountId = other.AccountId;
        }
        if (other.HasPlayerSlot) {
          PlayerSlot = other.PlayerSlot;
        }
        deathDetails_.Add(other.deathDetails_);
        items_.Add(other.items_);
        stats_.Add(other.stats_);
        if (other.HasTeam) {
          Team = other.Team;
        }
        if (other.HasKills) {
          Kills = other.Kills;
        }
        if (other.HasDeaths) {
          Deaths = other.Deaths;
        }
        if (other.HasAssists) {
          Assists = other.Assists;
        }
        if (other.HasNetWorth) {
          NetWorth = other.NetWorth;
        }
        if (other.HasHeroId) {
          HeroId = other.HeroId;
        }
        if (other.HasLastHits) {
          LastHits = other.LastHits;
        }
        if (other.HasDenies) {
          Denies = other.Denies;
        }
        if (other.HasAbilityPoints) {
          AbilityPoints = other.AbilityPoints;
        }
        if (other.HasParty) {
          Party = other.Party;
        }
        if (other.HasAssignedLane) {
          AssignedLane = other.AssignedLane;
        }
        if (other.HasLevel) {
          Level = other.Level;
        }
        pings_.Add(other.pings_);
        abilityStats_.Add(other.abilityStats_);
        statsTypeStat_.Add(other.statsTypeStat_);
        bookRewards_.Add(other.bookRewards_);
        if (other.HasAbandonMatchTimeS) {
          AbandonMatchTimeS = other.AbandonMatchTimeS;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
            case 26: {
              deathDetails_.AddEntriesFrom(input, _repeated_deathDetails_codec);
              break;
            }
            case 34: {
              items_.AddEntriesFrom(input, _repeated_items_codec);
              break;
            }
            case 42: {
              stats_.AddEntriesFrom(input, _repeated_stats_codec);
              break;
            }
            case 48: {
              Team = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 64: {
              Kills = input.ReadUInt32();
              break;
            }
            case 72: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 80: {
              Assists = input.ReadUInt32();
              break;
            }
            case 88: {
              NetWorth = input.ReadUInt32();
              break;
            }
            case 96: {
              HeroId = input.ReadUInt32();
              break;
            }
            case 104: {
              LastHits = input.ReadUInt32();
              break;
            }
            case 112: {
              Denies = input.ReadUInt32();
              break;
            }
            case 120: {
              AbilityPoints = input.ReadUInt32();
              break;
            }
            case 128: {
              Party = input.ReadUInt32();
              break;
            }
            case 136: {
              AssignedLane = input.ReadUInt32();
              break;
            }
            case 144: {
              Level = input.ReadUInt32();
              break;
            }
            case 154: {
              pings_.AddEntriesFrom(input, _repeated_pings_codec);
              break;
            }
            case 162: {
              abilityStats_.AddEntriesFrom(input, _repeated_abilityStats_codec);
              break;
            }
            case 170:
            case 173: {
              statsTypeStat_.AddEntriesFrom(input, _repeated_statsTypeStat_codec);
              break;
            }
            case 178: {
              bookRewards_.AddEntriesFrom(input, _repeated_bookRewards_codec);
              break;
            }
            case 184: {
              AbandonMatchTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              AccountId = input.ReadUInt32();
              break;
            }
            case 16: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
            case 26: {
              deathDetails_.AddEntriesFrom(ref input, _repeated_deathDetails_codec);
              break;
            }
            case 34: {
              items_.AddEntriesFrom(ref input, _repeated_items_codec);
              break;
            }
            case 42: {
              stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
              break;
            }
            case 48: {
              Team = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 64: {
              Kills = input.ReadUInt32();
              break;
            }
            case 72: {
              Deaths = input.ReadUInt32();
              break;
            }
            case 80: {
              Assists = input.ReadUInt32();
              break;
            }
            case 88: {
              NetWorth = input.ReadUInt32();
              break;
            }
            case 96: {
              HeroId = input.ReadUInt32();
              break;
            }
            case 104: {
              LastHits = input.ReadUInt32();
              break;
            }
            case 112: {
              Denies = input.ReadUInt32();
              break;
            }
            case 120: {
              AbilityPoints = input.ReadUInt32();
              break;
            }
            case 128: {
              Party = input.ReadUInt32();
              break;
            }
            case 136: {
              AssignedLane = input.ReadUInt32();
              break;
            }
            case 144: {
              Level = input.ReadUInt32();
              break;
            }
            case 154: {
              pings_.AddEntriesFrom(ref input, _repeated_pings_codec);
              break;
            }
            case 162: {
              abilityStats_.AddEntriesFrom(ref input, _repeated_abilityStats_codec);
              break;
            }
            case 170:
            case 173: {
              statsTypeStat_.AddEntriesFrom(ref input, _repeated_statsTypeStat_codec);
              break;
            }
            case 178: {
              bookRewards_.AddEntriesFrom(ref input, _repeated_bookRewards_codec);
              break;
            }
            case 184: {
              AbandonMatchTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Objective : pb::IMessage<Objective>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Objective> _parser = new pb::MessageParser<Objective>(() => new Objective());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Objective> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[11]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Objective() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Objective(Objective other) : this() {
        _hasBits0 = other._hasBits0;
        legacyObjectiveId_ = other.legacyObjectiveId_;
        destroyedTimeS_ = other.destroyedTimeS_;
        creepDamage_ = other.creepDamage_;
        creepDamageMitigated_ = other.creepDamageMitigated_;
        playerDamage_ = other.playerDamage_;
        playerDamageMitigated_ = other.playerDamageMitigated_;
        firstDamageTimeS_ = other.firstDamageTimeS_;
        teamObjectiveId_ = other.teamObjectiveId_;
        team_ = other.team_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Objective Clone() {
        return new Objective(this);
      }

      /// <summary>Field number for the "legacy_objective_id" field.</summary>
      public const int LegacyObjectiveIdFieldNumber = 1;
      private readonly static global::ECitadelObjective LegacyObjectiveIdDefaultValue = global::ECitadelObjective.KECitadelObjectiveTeam0Core;

      private global::ECitadelObjective legacyObjectiveId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelObjective LegacyObjectiveId {
        get { if ((_hasBits0 & 1) != 0) { return legacyObjectiveId_; } else { return LegacyObjectiveIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          legacyObjectiveId_ = value;
        }
      }
      /// <summary>Gets whether the "legacy_objective_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLegacyObjectiveId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "legacy_objective_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLegacyObjectiveId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "destroyed_time_s" field.</summary>
      public const int DestroyedTimeSFieldNumber = 2;
      private readonly static uint DestroyedTimeSDefaultValue = 0;

      private uint destroyedTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DestroyedTimeS {
        get { if ((_hasBits0 & 2) != 0) { return destroyedTimeS_; } else { return DestroyedTimeSDefaultValue; } }
        set {
          _hasBits0 |= 2;
          destroyedTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "destroyed_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDestroyedTimeS {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "destroyed_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDestroyedTimeS() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "creep_damage" field.</summary>
      public const int CreepDamageFieldNumber = 4;
      private readonly static uint CreepDamageDefaultValue = 0;

      private uint creepDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CreepDamage {
        get { if ((_hasBits0 & 4) != 0) { return creepDamage_; } else { return CreepDamageDefaultValue; } }
        set {
          _hasBits0 |= 4;
          creepDamage_ = value;
        }
      }
      /// <summary>Gets whether the "creep_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCreepDamage {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "creep_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCreepDamage() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "creep_damage_mitigated" field.</summary>
      public const int CreepDamageMitigatedFieldNumber = 5;
      private readonly static uint CreepDamageMitigatedDefaultValue = 0;

      private uint creepDamageMitigated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint CreepDamageMitigated {
        get { if ((_hasBits0 & 8) != 0) { return creepDamageMitigated_; } else { return CreepDamageMitigatedDefaultValue; } }
        set {
          _hasBits0 |= 8;
          creepDamageMitigated_ = value;
        }
      }
      /// <summary>Gets whether the "creep_damage_mitigated" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasCreepDamageMitigated {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "creep_damage_mitigated" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearCreepDamageMitigated() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "player_damage" field.</summary>
      public const int PlayerDamageFieldNumber = 6;
      private readonly static uint PlayerDamageDefaultValue = 0;

      private uint playerDamage_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerDamage {
        get { if ((_hasBits0 & 16) != 0) { return playerDamage_; } else { return PlayerDamageDefaultValue; } }
        set {
          _hasBits0 |= 16;
          playerDamage_ = value;
        }
      }
      /// <summary>Gets whether the "player_damage" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerDamage {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "player_damage" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerDamage() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "player_damage_mitigated" field.</summary>
      public const int PlayerDamageMitigatedFieldNumber = 7;
      private readonly static uint PlayerDamageMitigatedDefaultValue = 0;

      private uint playerDamageMitigated_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerDamageMitigated {
        get { if ((_hasBits0 & 32) != 0) { return playerDamageMitigated_; } else { return PlayerDamageMitigatedDefaultValue; } }
        set {
          _hasBits0 |= 32;
          playerDamageMitigated_ = value;
        }
      }
      /// <summary>Gets whether the "player_damage_mitigated" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerDamageMitigated {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "player_damage_mitigated" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerDamageMitigated() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "first_damage_time_s" field.</summary>
      public const int FirstDamageTimeSFieldNumber = 8;
      private readonly static uint FirstDamageTimeSDefaultValue = 0;

      private uint firstDamageTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint FirstDamageTimeS {
        get { if ((_hasBits0 & 64) != 0) { return firstDamageTimeS_; } else { return FirstDamageTimeSDefaultValue; } }
        set {
          _hasBits0 |= 64;
          firstDamageTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "first_damage_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFirstDamageTimeS {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "first_damage_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFirstDamageTimeS() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "team_objective_id" field.</summary>
      public const int TeamObjectiveIdFieldNumber = 9;
      private readonly static global::ECitadelTeamObjective TeamObjectiveIdDefaultValue = global::ECitadelTeamObjective.KECitadelTeamObjectiveCore;

      private global::ECitadelTeamObjective teamObjectiveId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelTeamObjective TeamObjectiveId {
        get { if ((_hasBits0 & 128) != 0) { return teamObjectiveId_; } else { return TeamObjectiveIdDefaultValue; } }
        set {
          _hasBits0 |= 128;
          teamObjectiveId_ = value;
        }
      }
      /// <summary>Gets whether the "team_objective_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeamObjectiveId {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "team_objective_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeamObjectiveId() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "team" field.</summary>
      public const int TeamFieldNumber = 10;
      private readonly static global::ECitadelLobbyTeam TeamDefaultValue = global::ECitadelLobbyTeam.KEcitadelLobbyTeamTeam0;

      private global::ECitadelLobbyTeam team_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelLobbyTeam Team {
        get { if ((_hasBits0 & 256) != 0) { return team_; } else { return TeamDefaultValue; } }
        set {
          _hasBits0 |= 256;
          team_ = value;
        }
      }
      /// <summary>Gets whether the "team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeam {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeam() {
        _hasBits0 &= ~256;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Objective);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Objective other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (LegacyObjectiveId != other.LegacyObjectiveId) return false;
        if (DestroyedTimeS != other.DestroyedTimeS) return false;
        if (CreepDamage != other.CreepDamage) return false;
        if (CreepDamageMitigated != other.CreepDamageMitigated) return false;
        if (PlayerDamage != other.PlayerDamage) return false;
        if (PlayerDamageMitigated != other.PlayerDamageMitigated) return false;
        if (FirstDamageTimeS != other.FirstDamageTimeS) return false;
        if (TeamObjectiveId != other.TeamObjectiveId) return false;
        if (Team != other.Team) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasLegacyObjectiveId) hash ^= LegacyObjectiveId.GetHashCode();
        if (HasDestroyedTimeS) hash ^= DestroyedTimeS.GetHashCode();
        if (HasCreepDamage) hash ^= CreepDamage.GetHashCode();
        if (HasCreepDamageMitigated) hash ^= CreepDamageMitigated.GetHashCode();
        if (HasPlayerDamage) hash ^= PlayerDamage.GetHashCode();
        if (HasPlayerDamageMitigated) hash ^= PlayerDamageMitigated.GetHashCode();
        if (HasFirstDamageTimeS) hash ^= FirstDamageTimeS.GetHashCode();
        if (HasTeamObjectiveId) hash ^= TeamObjectiveId.GetHashCode();
        if (HasTeam) hash ^= Team.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasLegacyObjectiveId) {
          output.WriteRawTag(8);
          output.WriteEnum((int) LegacyObjectiveId);
        }
        if (HasDestroyedTimeS) {
          output.WriteRawTag(16);
          output.WriteUInt32(DestroyedTimeS);
        }
        if (HasCreepDamage) {
          output.WriteRawTag(32);
          output.WriteUInt32(CreepDamage);
        }
        if (HasCreepDamageMitigated) {
          output.WriteRawTag(40);
          output.WriteUInt32(CreepDamageMitigated);
        }
        if (HasPlayerDamage) {
          output.WriteRawTag(48);
          output.WriteUInt32(PlayerDamage);
        }
        if (HasPlayerDamageMitigated) {
          output.WriteRawTag(56);
          output.WriteUInt32(PlayerDamageMitigated);
        }
        if (HasFirstDamageTimeS) {
          output.WriteRawTag(64);
          output.WriteUInt32(FirstDamageTimeS);
        }
        if (HasTeamObjectiveId) {
          output.WriteRawTag(72);
          output.WriteEnum((int) TeamObjectiveId);
        }
        if (HasTeam) {
          output.WriteRawTag(80);
          output.WriteEnum((int) Team);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasLegacyObjectiveId) {
          output.WriteRawTag(8);
          output.WriteEnum((int) LegacyObjectiveId);
        }
        if (HasDestroyedTimeS) {
          output.WriteRawTag(16);
          output.WriteUInt32(DestroyedTimeS);
        }
        if (HasCreepDamage) {
          output.WriteRawTag(32);
          output.WriteUInt32(CreepDamage);
        }
        if (HasCreepDamageMitigated) {
          output.WriteRawTag(40);
          output.WriteUInt32(CreepDamageMitigated);
        }
        if (HasPlayerDamage) {
          output.WriteRawTag(48);
          output.WriteUInt32(PlayerDamage);
        }
        if (HasPlayerDamageMitigated) {
          output.WriteRawTag(56);
          output.WriteUInt32(PlayerDamageMitigated);
        }
        if (HasFirstDamageTimeS) {
          output.WriteRawTag(64);
          output.WriteUInt32(FirstDamageTimeS);
        }
        if (HasTeamObjectiveId) {
          output.WriteRawTag(72);
          output.WriteEnum((int) TeamObjectiveId);
        }
        if (HasTeam) {
          output.WriteRawTag(80);
          output.WriteEnum((int) Team);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasLegacyObjectiveId) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LegacyObjectiveId);
        }
        if (HasDestroyedTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DestroyedTimeS);
        }
        if (HasCreepDamage) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreepDamage);
        }
        if (HasCreepDamageMitigated) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreepDamageMitigated);
        }
        if (HasPlayerDamage) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDamage);
        }
        if (HasPlayerDamageMitigated) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerDamageMitigated);
        }
        if (HasFirstDamageTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirstDamageTimeS);
        }
        if (HasTeamObjectiveId) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamObjectiveId);
        }
        if (HasTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Objective other) {
        if (other == null) {
          return;
        }
        if (other.HasLegacyObjectiveId) {
          LegacyObjectiveId = other.LegacyObjectiveId;
        }
        if (other.HasDestroyedTimeS) {
          DestroyedTimeS = other.DestroyedTimeS;
        }
        if (other.HasCreepDamage) {
          CreepDamage = other.CreepDamage;
        }
        if (other.HasCreepDamageMitigated) {
          CreepDamageMitigated = other.CreepDamageMitigated;
        }
        if (other.HasPlayerDamage) {
          PlayerDamage = other.PlayerDamage;
        }
        if (other.HasPlayerDamageMitigated) {
          PlayerDamageMitigated = other.PlayerDamageMitigated;
        }
        if (other.HasFirstDamageTimeS) {
          FirstDamageTimeS = other.FirstDamageTimeS;
        }
        if (other.HasTeamObjectiveId) {
          TeamObjectiveId = other.TeamObjectiveId;
        }
        if (other.HasTeam) {
          Team = other.Team;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              LegacyObjectiveId = (global::ECitadelObjective) input.ReadEnum();
              break;
            }
            case 16: {
              DestroyedTimeS = input.ReadUInt32();
              break;
            }
            case 32: {
              CreepDamage = input.ReadUInt32();
              break;
            }
            case 40: {
              CreepDamageMitigated = input.ReadUInt32();
              break;
            }
            case 48: {
              PlayerDamage = input.ReadUInt32();
              break;
            }
            case 56: {
              PlayerDamageMitigated = input.ReadUInt32();
              break;
            }
            case 64: {
              FirstDamageTimeS = input.ReadUInt32();
              break;
            }
            case 72: {
              TeamObjectiveId = (global::ECitadelTeamObjective) input.ReadEnum();
              break;
            }
            case 80: {
              Team = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              LegacyObjectiveId = (global::ECitadelObjective) input.ReadEnum();
              break;
            }
            case 16: {
              DestroyedTimeS = input.ReadUInt32();
              break;
            }
            case 32: {
              CreepDamage = input.ReadUInt32();
              break;
            }
            case 40: {
              CreepDamageMitigated = input.ReadUInt32();
              break;
            }
            case 48: {
              PlayerDamage = input.ReadUInt32();
              break;
            }
            case 56: {
              PlayerDamageMitigated = input.ReadUInt32();
              break;
            }
            case 64: {
              FirstDamageTimeS = input.ReadUInt32();
              break;
            }
            case 72: {
              TeamObjectiveId = (global::ECitadelTeamObjective) input.ReadEnum();
              break;
            }
            case 80: {
              Team = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class MidBoss : pb::IMessage<MidBoss>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MidBoss> _parser = new pb::MessageParser<MidBoss>(() => new MidBoss());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MidBoss> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[12]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MidBoss() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MidBoss(MidBoss other) : this() {
        _hasBits0 = other._hasBits0;
        teamKilled_ = other.teamKilled_;
        teamClaimed_ = other.teamClaimed_;
        destroyedTimeS_ = other.destroyedTimeS_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MidBoss Clone() {
        return new MidBoss(this);
      }

      /// <summary>Field number for the "team_killed" field.</summary>
      public const int TeamKilledFieldNumber = 1;
      private readonly static global::ECitadelLobbyTeam TeamKilledDefaultValue = global::ECitadelLobbyTeam.KEcitadelLobbyTeamTeam0;

      private global::ECitadelLobbyTeam teamKilled_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelLobbyTeam TeamKilled {
        get { if ((_hasBits0 & 1) != 0) { return teamKilled_; } else { return TeamKilledDefaultValue; } }
        set {
          _hasBits0 |= 1;
          teamKilled_ = value;
        }
      }
      /// <summary>Gets whether the "team_killed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeamKilled {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "team_killed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeamKilled() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "team_claimed" field.</summary>
      public const int TeamClaimedFieldNumber = 2;
      private readonly static global::ECitadelLobbyTeam TeamClaimedDefaultValue = global::ECitadelLobbyTeam.KEcitadelLobbyTeamTeam0;

      private global::ECitadelLobbyTeam teamClaimed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelLobbyTeam TeamClaimed {
        get { if ((_hasBits0 & 2) != 0) { return teamClaimed_; } else { return TeamClaimedDefaultValue; } }
        set {
          _hasBits0 |= 2;
          teamClaimed_ = value;
        }
      }
      /// <summary>Gets whether the "team_claimed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTeamClaimed {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "team_claimed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTeamClaimed() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "destroyed_time_s" field.</summary>
      public const int DestroyedTimeSFieldNumber = 3;
      private readonly static uint DestroyedTimeSDefaultValue = 0;

      private uint destroyedTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DestroyedTimeS {
        get { if ((_hasBits0 & 4) != 0) { return destroyedTimeS_; } else { return DestroyedTimeSDefaultValue; } }
        set {
          _hasBits0 |= 4;
          destroyedTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "destroyed_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDestroyedTimeS {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "destroyed_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDestroyedTimeS() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MidBoss);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MidBoss other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TeamKilled != other.TeamKilled) return false;
        if (TeamClaimed != other.TeamClaimed) return false;
        if (DestroyedTimeS != other.DestroyedTimeS) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTeamKilled) hash ^= TeamKilled.GetHashCode();
        if (HasTeamClaimed) hash ^= TeamClaimed.GetHashCode();
        if (HasDestroyedTimeS) hash ^= DestroyedTimeS.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTeamKilled) {
          output.WriteRawTag(8);
          output.WriteEnum((int) TeamKilled);
        }
        if (HasTeamClaimed) {
          output.WriteRawTag(16);
          output.WriteEnum((int) TeamClaimed);
        }
        if (HasDestroyedTimeS) {
          output.WriteRawTag(24);
          output.WriteUInt32(DestroyedTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTeamKilled) {
          output.WriteRawTag(8);
          output.WriteEnum((int) TeamKilled);
        }
        if (HasTeamClaimed) {
          output.WriteRawTag(16);
          output.WriteEnum((int) TeamClaimed);
        }
        if (HasDestroyedTimeS) {
          output.WriteRawTag(24);
          output.WriteUInt32(DestroyedTimeS);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTeamKilled) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamKilled);
        }
        if (HasTeamClaimed) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeamClaimed);
        }
        if (HasDestroyedTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DestroyedTimeS);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MidBoss other) {
        if (other == null) {
          return;
        }
        if (other.HasTeamKilled) {
          TeamKilled = other.TeamKilled;
        }
        if (other.HasTeamClaimed) {
          TeamClaimed = other.TeamClaimed;
        }
        if (other.HasDestroyedTimeS) {
          DestroyedTimeS = other.DestroyedTimeS;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              TeamKilled = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 16: {
              TeamClaimed = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 24: {
              DestroyedTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              TeamKilled = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 16: {
              TeamClaimed = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 24: {
              DestroyedTimeS = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Pause : pb::IMessage<Pause>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Pause> _parser = new pb::MessageParser<Pause>(() => new Pause());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Pause> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[13]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pause() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pause(Pause other) : this() {
        _hasBits0 = other._hasBits0;
        gameTimeS_ = other.gameTimeS_;
        pauseDurationS_ = other.pauseDurationS_;
        playerSlot_ = other.playerSlot_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Pause Clone() {
        return new Pause(this);
      }

      /// <summary>Field number for the "game_time_s" field.</summary>
      public const int GameTimeSFieldNumber = 1;
      private readonly static uint GameTimeSDefaultValue = 0;

      private uint gameTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameTimeS {
        get { if ((_hasBits0 & 1) != 0) { return gameTimeS_; } else { return GameTimeSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          gameTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "game_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameTimeS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "game_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameTimeS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "pause_duration_s" field.</summary>
      public const int PauseDurationSFieldNumber = 2;
      private readonly static uint PauseDurationSDefaultValue = 0;

      private uint pauseDurationS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PauseDurationS {
        get { if ((_hasBits0 & 2) != 0) { return pauseDurationS_; } else { return PauseDurationSDefaultValue; } }
        set {
          _hasBits0 |= 2;
          pauseDurationS_ = value;
        }
      }
      /// <summary>Gets whether the "pause_duration_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPauseDurationS {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "pause_duration_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPauseDurationS() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "player_slot" field.</summary>
      public const int PlayerSlotFieldNumber = 3;
      private readonly static uint PlayerSlotDefaultValue = 0;

      private uint playerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerSlot {
        get { if ((_hasBits0 & 4) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 4;
          playerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerSlot {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerSlot() {
        _hasBits0 &= ~4;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Pause);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Pause other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (GameTimeS != other.GameTimeS) return false;
        if (PauseDurationS != other.PauseDurationS) return false;
        if (PlayerSlot != other.PlayerSlot) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasGameTimeS) hash ^= GameTimeS.GetHashCode();
        if (HasPauseDurationS) hash ^= PauseDurationS.GetHashCode();
        if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasPauseDurationS) {
          output.WriteRawTag(16);
          output.WriteUInt32(PauseDurationS);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(24);
          output.WriteUInt32(PlayerSlot);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasPauseDurationS) {
          output.WriteRawTag(16);
          output.WriteUInt32(PauseDurationS);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(24);
          output.WriteUInt32(PlayerSlot);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasGameTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameTimeS);
        }
        if (HasPauseDurationS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PauseDurationS);
        }
        if (HasPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerSlot);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Pause other) {
        if (other == null) {
          return;
        }
        if (other.HasGameTimeS) {
          GameTimeS = other.GameTimeS;
        }
        if (other.HasPauseDurationS) {
          PauseDurationS = other.PauseDurationS;
        }
        if (other.HasPlayerSlot) {
          PlayerSlot = other.PlayerSlot;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              PauseDurationS = input.ReadUInt32();
              break;
            }
            case 24: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              PauseDurationS = input.ReadUInt32();
              break;
            }
            case 24: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class WatchedDeathReplay : pb::IMessage<WatchedDeathReplay>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<WatchedDeathReplay> _parser = new pb::MessageParser<WatchedDeathReplay>(() => new WatchedDeathReplay());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<WatchedDeathReplay> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[14]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public WatchedDeathReplay() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public WatchedDeathReplay(WatchedDeathReplay other) : this() {
        _hasBits0 = other._hasBits0;
        gameTimeS_ = other.gameTimeS_;
        playerSlot_ = other.playerSlot_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public WatchedDeathReplay Clone() {
        return new WatchedDeathReplay(this);
      }

      /// <summary>Field number for the "game_time_s" field.</summary>
      public const int GameTimeSFieldNumber = 1;
      private readonly static uint GameTimeSDefaultValue = 0;

      private uint gameTimeS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint GameTimeS {
        get { if ((_hasBits0 & 1) != 0) { return gameTimeS_; } else { return GameTimeSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          gameTimeS_ = value;
        }
      }
      /// <summary>Gets whether the "game_time_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameTimeS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "game_time_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameTimeS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "player_slot" field.</summary>
      public const int PlayerSlotFieldNumber = 2;
      private readonly static uint PlayerSlotDefaultValue = 0;

      private uint playerSlot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint PlayerSlot {
        get { if ((_hasBits0 & 2) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
        set {
          _hasBits0 |= 2;
          playerSlot_ = value;
        }
      }
      /// <summary>Gets whether the "player_slot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPlayerSlot {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "player_slot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPlayerSlot() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as WatchedDeathReplay);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(WatchedDeathReplay other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (GameTimeS != other.GameTimeS) return false;
        if (PlayerSlot != other.PlayerSlot) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasGameTimeS) hash ^= GameTimeS.GetHashCode();
        if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(16);
          output.WriteUInt32(PlayerSlot);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasGameTimeS) {
          output.WriteRawTag(8);
          output.WriteUInt32(GameTimeS);
        }
        if (HasPlayerSlot) {
          output.WriteRawTag(16);
          output.WriteUInt32(PlayerSlot);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasGameTimeS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameTimeS);
        }
        if (HasPlayerSlot) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlayerSlot);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(WatchedDeathReplay other) {
        if (other == null) {
          return;
        }
        if (other.HasGameTimeS) {
          GameTimeS = other.GameTimeS;
        }
        if (other.HasPlayerSlot) {
          PlayerSlot = other.PlayerSlot;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              GameTimeS = input.ReadUInt32();
              break;
            }
            case 16: {
              PlayerSlot = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class MatchInfo : pb::IMessage<MatchInfo>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<MatchInfo> _parser = new pb::MessageParser<MatchInfo>(() => new MatchInfo());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<MatchInfo> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgMatchMetaDataContents.Descriptor.NestedTypes[15]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MatchInfo() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MatchInfo(MatchInfo other) : this() {
        _hasBits0 = other._hasBits0;
        durationS_ = other.durationS_;
        matchOutcome_ = other.matchOutcome_;
        winningTeam_ = other.winningTeam_;
        players_ = other.players_.Clone();
        startTime_ = other.startTime_;
        matchId_ = other.matchId_;
        legacyObjectivesMask_ = other.legacyObjectivesMask_;
        gameMode_ = other.gameMode_;
        matchMode_ = other.matchMode_;
        objectives_ = other.objectives_.Clone();
        matchPaths_ = other.matchPaths_ != null ? other.matchPaths_.Clone() : null;
        damageMatrix_ = other.damageMatrix_ != null ? other.damageMatrix_.Clone() : null;
        matchPauses_ = other.matchPauses_.Clone();
        customUserStats_ = other.customUserStats_.Clone();
        watchedDeathReplays_ = other.watchedDeathReplays_.Clone();
        objectivesMaskTeam0_ = other.objectivesMaskTeam0_;
        objectivesMaskTeam1_ = other.objectivesMaskTeam1_;
        midBoss_ = other.midBoss_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public MatchInfo Clone() {
        return new MatchInfo(this);
      }

      /// <summary>Field number for the "duration_s" field.</summary>
      public const int DurationSFieldNumber = 1;
      private readonly static uint DurationSDefaultValue = 0;

      private uint durationS_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint DurationS {
        get { if ((_hasBits0 & 1) != 0) { return durationS_; } else { return DurationSDefaultValue; } }
        set {
          _hasBits0 |= 1;
          durationS_ = value;
        }
      }
      /// <summary>Gets whether the "duration_s" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDurationS {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "duration_s" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDurationS() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "match_outcome" field.</summary>
      public const int MatchOutcomeFieldNumber = 2;
      private readonly static global::CMsgMatchMetaDataContents.Types.EMatchOutcome MatchOutcomeDefaultValue = global::CMsgMatchMetaDataContents.Types.EMatchOutcome.KEOutcomeTeamWin;

      private global::CMsgMatchMetaDataContents.Types.EMatchOutcome matchOutcome_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchMetaDataContents.Types.EMatchOutcome MatchOutcome {
        get { if ((_hasBits0 & 2) != 0) { return matchOutcome_; } else { return MatchOutcomeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          matchOutcome_ = value;
        }
      }
      /// <summary>Gets whether the "match_outcome" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchOutcome {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "match_outcome" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchOutcome() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "winning_team" field.</summary>
      public const int WinningTeamFieldNumber = 3;
      private readonly static global::ECitadelLobbyTeam WinningTeamDefaultValue = global::ECitadelLobbyTeam.KEcitadelLobbyTeamTeam0;

      private global::ECitadelLobbyTeam winningTeam_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelLobbyTeam WinningTeam {
        get { if ((_hasBits0 & 4) != 0) { return winningTeam_; } else { return WinningTeamDefaultValue; } }
        set {
          _hasBits0 |= 4;
          winningTeam_ = value;
        }
      }
      /// <summary>Gets whether the "winning_team" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasWinningTeam {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "winning_team" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearWinningTeam() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "players" field.</summary>
      public const int PlayersFieldNumber = 4;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Players> _repeated_players_codec
          = pb::FieldCodec.ForMessage(34, global::CMsgMatchMetaDataContents.Types.Players.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Players> players_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Players>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Players> Players {
        get { return players_; }
      }

      /// <summary>Field number for the "start_time" field.</summary>
      public const int StartTimeFieldNumber = 5;
      private readonly static uint StartTimeDefaultValue = 0;

      private uint startTime_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint StartTime {
        get { if ((_hasBits0 & 8) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
        set {
          _hasBits0 |= 8;
          startTime_ = value;
        }
      }
      /// <summary>Gets whether the "start_time" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasStartTime {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "start_time" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearStartTime() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "match_id" field.</summary>
      public const int MatchIdFieldNumber = 6;
      private readonly static ulong MatchIdDefaultValue = 0UL;

      private ulong matchId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong MatchId {
        get { if ((_hasBits0 & 16) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
        set {
          _hasBits0 |= 16;
          matchId_ = value;
        }
      }
      /// <summary>Gets whether the "match_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchId {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "match_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchId() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "legacy_objectives_mask" field.</summary>
      public const int LegacyObjectivesMaskFieldNumber = 8;
      private readonly static uint LegacyObjectivesMaskDefaultValue = 0;

      private uint legacyObjectivesMask_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint LegacyObjectivesMask {
        get { if ((_hasBits0 & 32) != 0) { return legacyObjectivesMask_; } else { return LegacyObjectivesMaskDefaultValue; } }
        set {
          _hasBits0 |= 32;
          legacyObjectivesMask_ = value;
        }
      }
      /// <summary>Gets whether the "legacy_objectives_mask" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLegacyObjectivesMask {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "legacy_objectives_mask" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLegacyObjectivesMask() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "game_mode" field.</summary>
      public const int GameModeFieldNumber = 9;
      private readonly static global::ECitadelGameMode GameModeDefaultValue = global::ECitadelGameMode.KEcitadelGameModeInvalid;

      private global::ECitadelGameMode gameMode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelGameMode GameMode {
        get { if ((_hasBits0 & 64) != 0) { return gameMode_; } else { return GameModeDefaultValue; } }
        set {
          _hasBits0 |= 64;
          gameMode_ = value;
        }
      }
      /// <summary>Gets whether the "game_mode" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGameMode {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "game_mode" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGameMode() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "match_mode" field.</summary>
      public const int MatchModeFieldNumber = 10;
      private readonly static global::ECitadelMatchMode MatchModeDefaultValue = global::ECitadelMatchMode.KEcitadelMatchModeInvalid;

      private global::ECitadelMatchMode matchMode_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::ECitadelMatchMode MatchMode {
        get { if ((_hasBits0 & 128) != 0) { return matchMode_; } else { return MatchModeDefaultValue; } }
        set {
          _hasBits0 |= 128;
          matchMode_ = value;
        }
      }
      /// <summary>Gets whether the "match_mode" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasMatchMode {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "match_mode" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearMatchMode() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "objectives" field.</summary>
      public const int ObjectivesFieldNumber = 11;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Objective> _repeated_objectives_codec
          = pb::FieldCodec.ForMessage(90, global::CMsgMatchMetaDataContents.Types.Objective.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Objective> objectives_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Objective>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Objective> Objectives {
        get { return objectives_; }
      }

      /// <summary>Field number for the "match_paths" field.</summary>
      public const int MatchPathsFieldNumber = 12;
      private global::CMsgMatchPlayerPathsData matchPaths_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchPlayerPathsData MatchPaths {
        get { return matchPaths_; }
        set {
          matchPaths_ = value;
        }
      }

      /// <summary>Field number for the "damage_matrix" field.</summary>
      public const int DamageMatrixFieldNumber = 13;
      private global::CMsgMatchPlayerDamageMatrix damageMatrix_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgMatchPlayerDamageMatrix DamageMatrix {
        get { return damageMatrix_; }
        set {
          damageMatrix_ = value;
        }
      }

      /// <summary>Field number for the "match_pauses" field.</summary>
      public const int MatchPausesFieldNumber = 14;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.Pause> _repeated_matchPauses_codec
          = pb::FieldCodec.ForMessage(114, global::CMsgMatchMetaDataContents.Types.Pause.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Pause> matchPauses_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Pause>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.Pause> MatchPauses {
        get { return matchPauses_; }
      }

      /// <summary>Field number for the "custom_user_stats" field.</summary>
      public const int CustomUserStatsFieldNumber = 15;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo> _repeated_customUserStats_codec
          = pb::FieldCodec.ForMessage(122, global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo> customUserStats_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.CustomUserStatInfo> CustomUserStats {
        get { return customUserStats_; }
      }

      /// <summary>Field number for the "watched_death_replays" field.</summary>
      public const int WatchedDeathReplaysFieldNumber = 16;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay> _repeated_watchedDeathReplays_codec
          = pb::FieldCodec.ForMessage(130, global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay> watchedDeathReplays_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.WatchedDeathReplay> WatchedDeathReplays {
        get { return watchedDeathReplays_; }
      }

      /// <summary>Field number for the "objectives_mask_team0" field.</summary>
      public const int ObjectivesMaskTeam0FieldNumber = 17;
      private readonly static ulong ObjectivesMaskTeam0DefaultValue = 0UL;

      private ulong objectivesMaskTeam0_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ObjectivesMaskTeam0 {
        get { if ((_hasBits0 & 256) != 0) { return objectivesMaskTeam0_; } else { return ObjectivesMaskTeam0DefaultValue; } }
        set {
          _hasBits0 |= 256;
          objectivesMaskTeam0_ = value;
        }
      }
      /// <summary>Gets whether the "objectives_mask_team0" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasObjectivesMaskTeam0 {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "objectives_mask_team0" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearObjectivesMaskTeam0() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "objectives_mask_team1" field.</summary>
      public const int ObjectivesMaskTeam1FieldNumber = 18;
      private readonly static ulong ObjectivesMaskTeam1DefaultValue = 0UL;

      private ulong objectivesMaskTeam1_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ObjectivesMaskTeam1 {
        get { if ((_hasBits0 & 512) != 0) { return objectivesMaskTeam1_; } else { return ObjectivesMaskTeam1DefaultValue; } }
        set {
          _hasBits0 |= 512;
          objectivesMaskTeam1_ = value;
        }
      }
      /// <summary>Gets whether the "objectives_mask_team1" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasObjectivesMaskTeam1 {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "objectives_mask_team1" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearObjectivesMaskTeam1() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "mid_boss" field.</summary>
      public const int MidBossFieldNumber = 19;
      private static readonly pb::FieldCodec<global::CMsgMatchMetaDataContents.Types.MidBoss> _repeated_midBoss_codec
          = pb::FieldCodec.ForMessage(154, global::CMsgMatchMetaDataContents.Types.MidBoss.Parser);
      private readonly pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.MidBoss> midBoss_ = new pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.MidBoss>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CMsgMatchMetaDataContents.Types.MidBoss> MidBoss {
        get { return midBoss_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as MatchInfo);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(MatchInfo other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (DurationS != other.DurationS) return false;
        if (MatchOutcome != other.MatchOutcome) return false;
        if (WinningTeam != other.WinningTeam) return false;
        if(!players_.Equals(other.players_)) return false;
        if (StartTime != other.StartTime) return false;
        if (MatchId != other.MatchId) return false;
        if (LegacyObjectivesMask != other.LegacyObjectivesMask) return false;
        if (GameMode != other.GameMode) return false;
        if (MatchMode != other.MatchMode) return false;
        if(!objectives_.Equals(other.objectives_)) return false;
        if (!object.Equals(MatchPaths, other.MatchPaths)) return false;
        if (!object.Equals(DamageMatrix, other.DamageMatrix)) return false;
        if(!matchPauses_.Equals(other.matchPauses_)) return false;
        if(!customUserStats_.Equals(other.customUserStats_)) return false;
        if(!watchedDeathReplays_.Equals(other.watchedDeathReplays_)) return false;
        if (ObjectivesMaskTeam0 != other.ObjectivesMaskTeam0) return false;
        if (ObjectivesMaskTeam1 != other.ObjectivesMaskTeam1) return false;
        if(!midBoss_.Equals(other.midBoss_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasDurationS) hash ^= DurationS.GetHashCode();
        if (HasMatchOutcome) hash ^= MatchOutcome.GetHashCode();
        if (HasWinningTeam) hash ^= WinningTeam.GetHashCode();
        hash ^= players_.GetHashCode();
        if (HasStartTime) hash ^= StartTime.GetHashCode();
        if (HasMatchId) hash ^= MatchId.GetHashCode();
        if (HasLegacyObjectivesMask) hash ^= LegacyObjectivesMask.GetHashCode();
        if (HasGameMode) hash ^= GameMode.GetHashCode();
        if (HasMatchMode) hash ^= MatchMode.GetHashCode();
        hash ^= objectives_.GetHashCode();
        if (matchPaths_ != null) hash ^= MatchPaths.GetHashCode();
        if (damageMatrix_ != null) hash ^= DamageMatrix.GetHashCode();
        hash ^= matchPauses_.GetHashCode();
        hash ^= customUserStats_.GetHashCode();
        hash ^= watchedDeathReplays_.GetHashCode();
        if (HasObjectivesMaskTeam0) hash ^= ObjectivesMaskTeam0.GetHashCode();
        if (HasObjectivesMaskTeam1) hash ^= ObjectivesMaskTeam1.GetHashCode();
        hash ^= midBoss_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasDurationS) {
          output.WriteRawTag(8);
          output.WriteUInt32(DurationS);
        }
        if (HasMatchOutcome) {
          output.WriteRawTag(16);
          output.WriteEnum((int) MatchOutcome);
        }
        if (HasWinningTeam) {
          output.WriteRawTag(24);
          output.WriteEnum((int) WinningTeam);
        }
        players_.WriteTo(output, _repeated_players_codec);
        if (HasStartTime) {
          output.WriteRawTag(40);
          output.WriteUInt32(StartTime);
        }
        if (HasMatchId) {
          output.WriteRawTag(48);
          output.WriteUInt64(MatchId);
        }
        if (HasLegacyObjectivesMask) {
          output.WriteRawTag(64);
          output.WriteUInt32(LegacyObjectivesMask);
        }
        if (HasGameMode) {
          output.WriteRawTag(72);
          output.WriteEnum((int) GameMode);
        }
        if (HasMatchMode) {
          output.WriteRawTag(80);
          output.WriteEnum((int) MatchMode);
        }
        objectives_.WriteTo(output, _repeated_objectives_codec);
        if (matchPaths_ != null) {
          output.WriteRawTag(98);
          output.WriteMessage(MatchPaths);
        }
        if (damageMatrix_ != null) {
          output.WriteRawTag(106);
          output.WriteMessage(DamageMatrix);
        }
        matchPauses_.WriteTo(output, _repeated_matchPauses_codec);
        customUserStats_.WriteTo(output, _repeated_customUserStats_codec);
        watchedDeathReplays_.WriteTo(output, _repeated_watchedDeathReplays_codec);
        if (HasObjectivesMaskTeam0) {
          output.WriteRawTag(136, 1);
          output.WriteUInt64(ObjectivesMaskTeam0);
        }
        if (HasObjectivesMaskTeam1) {
          output.WriteRawTag(144, 1);
          output.WriteUInt64(ObjectivesMaskTeam1);
        }
        midBoss_.WriteTo(output, _repeated_midBoss_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasDurationS) {
          output.WriteRawTag(8);
          output.WriteUInt32(DurationS);
        }
        if (HasMatchOutcome) {
          output.WriteRawTag(16);
          output.WriteEnum((int) MatchOutcome);
        }
        if (HasWinningTeam) {
          output.WriteRawTag(24);
          output.WriteEnum((int) WinningTeam);
        }
        players_.WriteTo(ref output, _repeated_players_codec);
        if (HasStartTime) {
          output.WriteRawTag(40);
          output.WriteUInt32(StartTime);
        }
        if (HasMatchId) {
          output.WriteRawTag(48);
          output.WriteUInt64(MatchId);
        }
        if (HasLegacyObjectivesMask) {
          output.WriteRawTag(64);
          output.WriteUInt32(LegacyObjectivesMask);
        }
        if (HasGameMode) {
          output.WriteRawTag(72);
          output.WriteEnum((int) GameMode);
        }
        if (HasMatchMode) {
          output.WriteRawTag(80);
          output.WriteEnum((int) MatchMode);
        }
        objectives_.WriteTo(ref output, _repeated_objectives_codec);
        if (matchPaths_ != null) {
          output.WriteRawTag(98);
          output.WriteMessage(MatchPaths);
        }
        if (damageMatrix_ != null) {
          output.WriteRawTag(106);
          output.WriteMessage(DamageMatrix);
        }
        matchPauses_.WriteTo(ref output, _repeated_matchPauses_codec);
        customUserStats_.WriteTo(ref output, _repeated_customUserStats_codec);
        watchedDeathReplays_.WriteTo(ref output, _repeated_watchedDeathReplays_codec);
        if (HasObjectivesMaskTeam0) {
          output.WriteRawTag(136, 1);
          output.WriteUInt64(ObjectivesMaskTeam0);
        }
        if (HasObjectivesMaskTeam1) {
          output.WriteRawTag(144, 1);
          output.WriteUInt64(ObjectivesMaskTeam1);
        }
        midBoss_.WriteTo(ref output, _repeated_midBoss_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasDurationS) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DurationS);
        }
        if (HasMatchOutcome) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchOutcome);
        }
        if (HasWinningTeam) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WinningTeam);
        }
        size += players_.CalculateSize(_repeated_players_codec);
        if (HasStartTime) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartTime);
        }
        if (HasMatchId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
        }
        if (HasLegacyObjectivesMask) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LegacyObjectivesMask);
        }
        if (HasGameMode) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameMode);
        }
        if (HasMatchMode) {
          size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
        }
        size += objectives_.CalculateSize(_repeated_objectives_codec);
        if (matchPaths_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(MatchPaths);
        }
        if (damageMatrix_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(DamageMatrix);
        }
        size += matchPauses_.CalculateSize(_repeated_matchPauses_codec);
        size += customUserStats_.CalculateSize(_repeated_customUserStats_codec);
        size += watchedDeathReplays_.CalculateSize(_repeated_watchedDeathReplays_codec);
        if (HasObjectivesMaskTeam0) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ObjectivesMaskTeam0);
        }
        if (HasObjectivesMaskTeam1) {
          size += 2 + pb::CodedOutputStream.ComputeUInt64Size(ObjectivesMaskTeam1);
        }
        size += midBoss_.CalculateSize(_repeated_midBoss_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(MatchInfo other) {
        if (other == null) {
          return;
        }
        if (other.HasDurationS) {
          DurationS = other.DurationS;
        }
        if (other.HasMatchOutcome) {
          MatchOutcome = other.MatchOutcome;
        }
        if (other.HasWinningTeam) {
          WinningTeam = other.WinningTeam;
        }
        players_.Add(other.players_);
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasMatchId) {
          MatchId = other.MatchId;
        }
        if (other.HasLegacyObjectivesMask) {
          LegacyObjectivesMask = other.LegacyObjectivesMask;
        }
        if (other.HasGameMode) {
          GameMode = other.GameMode;
        }
        if (other.HasMatchMode) {
          MatchMode = other.MatchMode;
        }
        objectives_.Add(other.objectives_);
        if (other.matchPaths_ != null) {
          if (matchPaths_ == null) {
            MatchPaths = new global::CMsgMatchPlayerPathsData();
          }
          MatchPaths.MergeFrom(other.MatchPaths);
        }
        if (other.damageMatrix_ != null) {
          if (damageMatrix_ == null) {
            DamageMatrix = new global::CMsgMatchPlayerDamageMatrix();
          }
          DamageMatrix.MergeFrom(other.DamageMatrix);
        }
        matchPauses_.Add(other.matchPauses_);
        customUserStats_.Add(other.customUserStats_);
        watchedDeathReplays_.Add(other.watchedDeathReplays_);
        if (other.HasObjectivesMaskTeam0) {
          ObjectivesMaskTeam0 = other.ObjectivesMaskTeam0;
        }
        if (other.HasObjectivesMaskTeam1) {
          ObjectivesMaskTeam1 = other.ObjectivesMaskTeam1;
        }
        midBoss_.Add(other.midBoss_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              DurationS = input.ReadUInt32();
              break;
            }
            case 16: {
              MatchOutcome = (global::CMsgMatchMetaDataContents.Types.EMatchOutcome) input.ReadEnum();
              break;
            }
            case 24: {
              WinningTeam = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 34: {
              players_.AddEntriesFrom(input, _repeated_players_codec);
              break;
            }
            case 40: {
              StartTime = input.ReadUInt32();
              break;
            }
            case 48: {
              MatchId = input.ReadUInt64();
              break;
            }
            case 64: {
              LegacyObjectivesMask = input.ReadUInt32();
              break;
            }
            case 72: {
              GameMode = (global::ECitadelGameMode) input.ReadEnum();
              break;
            }
            case 80: {
              MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
              break;
            }
            case 90: {
              objectives_.AddEntriesFrom(input, _repeated_objectives_codec);
              break;
            }
            case 98: {
              if (matchPaths_ == null) {
                MatchPaths = new global::CMsgMatchPlayerPathsData();
              }
              input.ReadMessage(MatchPaths);
              break;
            }
            case 106: {
              if (damageMatrix_ == null) {
                DamageMatrix = new global::CMsgMatchPlayerDamageMatrix();
              }
              input.ReadMessage(DamageMatrix);
              break;
            }
            case 114: {
              matchPauses_.AddEntriesFrom(input, _repeated_matchPauses_codec);
              break;
            }
            case 122: {
              customUserStats_.AddEntriesFrom(input, _repeated_customUserStats_codec);
              break;
            }
            case 130: {
              watchedDeathReplays_.AddEntriesFrom(input, _repeated_watchedDeathReplays_codec);
              break;
            }
            case 136: {
              ObjectivesMaskTeam0 = input.ReadUInt64();
              break;
            }
            case 144: {
              ObjectivesMaskTeam1 = input.ReadUInt64();
              break;
            }
            case 154: {
              midBoss_.AddEntriesFrom(input, _repeated_midBoss_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              DurationS = input.ReadUInt32();
              break;
            }
            case 16: {
              MatchOutcome = (global::CMsgMatchMetaDataContents.Types.EMatchOutcome) input.ReadEnum();
              break;
            }
            case 24: {
              WinningTeam = (global::ECitadelLobbyTeam) input.ReadEnum();
              break;
            }
            case 34: {
              players_.AddEntriesFrom(ref input, _repeated_players_codec);
              break;
            }
            case 40: {
              StartTime = input.ReadUInt32();
              break;
            }
            case 48: {
              MatchId = input.ReadUInt64();
              break;
            }
            case 64: {
              LegacyObjectivesMask = input.ReadUInt32();
              break;
            }
            case 72: {
              GameMode = (global::ECitadelGameMode) input.ReadEnum();
              break;
            }
            case 80: {
              MatchMode = (global::ECitadelMatchMode) input.ReadEnum();
              break;
            }
            case 90: {
              objectives_.AddEntriesFrom(ref input, _repeated_objectives_codec);
              break;
            }
            case 98: {
              if (matchPaths_ == null) {
                MatchPaths = new global::CMsgMatchPlayerPathsData();
              }
              input.ReadMessage(MatchPaths);
              break;
            }
            case 106: {
              if (damageMatrix_ == null) {
                DamageMatrix = new global::CMsgMatchPlayerDamageMatrix();
              }
              input.ReadMessage(DamageMatrix);
              break;
            }
            case 114: {
              matchPauses_.AddEntriesFrom(ref input, _repeated_matchPauses_codec);
              break;
            }
            case 122: {
              customUserStats_.AddEntriesFrom(ref input, _repeated_customUserStats_codec);
              break;
            }
            case 130: {
              watchedDeathReplays_.AddEntriesFrom(ref input, _repeated_watchedDeathReplays_codec);
              break;
            }
            case 136: {
              ObjectivesMaskTeam0 = input.ReadUInt64();
              break;
            }
            case 144: {
              ObjectivesMaskTeam1 = input.ReadUInt64();
              break;
            }
            case 154: {
              midBoss_.AddEntriesFrom(ref input, _repeated_midBoss_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgMatchMetaData : pb::IMessage<CMsgMatchMetaData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMatchMetaData> _parser = new pb::MessageParser<CMsgMatchMetaData>(() => new CMsgMatchMetaData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMatchMetaData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaData(CMsgMatchMetaData other) : this() {
    _hasBits0 = other._hasBits0;
    version_ = other.version_;
    matchDetails_ = other.matchDetails_;
    matchId_ = other.matchId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMatchMetaData Clone() {
    return new CMsgMatchMetaData(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 1;
  private readonly static uint VersionDefaultValue = 0;

  private uint version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Version {
    get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 1;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "match_details" field.</summary>
  public const int MatchDetailsFieldNumber = 2;
  private readonly static pb::ByteString MatchDetailsDefaultValue = pb::ByteString.Empty;

  private pb::ByteString matchDetails_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MatchDetails {
    get { return matchDetails_ ?? MatchDetailsDefaultValue; }
    set {
      matchDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "match_details" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchDetails {
    get { return matchDetails_ != null; }
  }
  /// <summary>Clears the value of the "match_details" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchDetails() {
    matchDetails_ = null;
  }

  /// <summary>Field number for the "match_id" field.</summary>
  public const int MatchIdFieldNumber = 3;
  private readonly static ulong MatchIdDefaultValue = 0UL;

  private ulong matchId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong MatchId {
    get { if ((_hasBits0 & 2) != 0) { return matchId_; } else { return MatchIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      matchId_ = value;
    }
  }
  /// <summary>Gets whether the "match_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMatchId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "match_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMatchId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMatchMetaData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMatchMetaData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Version != other.Version) return false;
    if (MatchDetails != other.MatchDetails) return false;
    if (MatchId != other.MatchId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVersion) hash ^= Version.GetHashCode();
    if (HasMatchDetails) hash ^= MatchDetails.GetHashCode();
    if (HasMatchId) hash ^= MatchId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasMatchDetails) {
      output.WriteRawTag(18);
      output.WriteBytes(MatchDetails);
    }
    if (HasMatchId) {
      output.WriteRawTag(24);
      output.WriteUInt64(MatchId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVersion) {
      output.WriteRawTag(8);
      output.WriteUInt32(Version);
    }
    if (HasMatchDetails) {
      output.WriteRawTag(18);
      output.WriteBytes(MatchDetails);
    }
    if (HasMatchId) {
      output.WriteRawTag(24);
      output.WriteUInt64(MatchId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
    }
    if (HasMatchDetails) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(MatchDetails);
    }
    if (HasMatchId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MatchId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMatchMetaData other) {
    if (other == null) {
      return;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    if (other.HasMatchDetails) {
      MatchDetails = other.MatchDetails;
    }
    if (other.HasMatchId) {
      MatchId = other.MatchId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          MatchDetails = input.ReadBytes();
          break;
        }
        case 24: {
          MatchId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Version = input.ReadUInt32();
          break;
        }
        case 18: {
          MatchDetails = input.ReadBytes();
          break;
        }
        case 24: {
          MatchId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgMapLine : pb::IMessage<CMsgMapLine>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgMapLine> _parser = new pb::MessageParser<CMsgMapLine>(() => new CMsgMapLine());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgMapLine> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMapLine() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMapLine(CMsgMapLine other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    initial_ = other.initial_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgMapLine Clone() {
    return new CMsgMapLine(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static int XDefaultValue = 0;

  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static int YDefaultValue = 0;

  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "initial" field.</summary>
  public const int InitialFieldNumber = 3;
  private readonly static bool InitialDefaultValue = false;

  private bool initial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Initial {
    get { if ((_hasBits0 & 4) != 0) { return initial_; } else { return InitialDefaultValue; } }
    set {
      _hasBits0 |= 4;
      initial_ = value;
    }
  }
  /// <summary>Gets whether the "initial" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInitial {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "initial" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInitial() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgMapLine);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgMapLine other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Initial != other.Initial) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= X.GetHashCode();
    if (HasY) hash ^= Y.GetHashCode();
    if (HasInitial) hash ^= Initial.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (HasY) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (HasInitial) {
      output.WriteRawTag(24);
      output.WriteBool(Initial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (HasY) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (HasInitial) {
      output.WriteRawTag(24);
      output.WriteBool(Initial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (HasY) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (HasInitial) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgMapLine other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasInitial) {
      Initial = other.Initial;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          Initial = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          Initial = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgAccountHeroStats : pb::IMessage<CMsgAccountHeroStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAccountHeroStats> _parser = new pb::MessageParser<CMsgAccountHeroStats>(() => new CMsgAccountHeroStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAccountHeroStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountHeroStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountHeroStats(CMsgAccountHeroStats other) : this() {
    _hasBits0 = other._hasBits0;
    heroId_ = other.heroId_;
    statId_ = other.statId_.Clone();
    totalValue_ = other.totalValue_.Clone();
    medalsBronze_ = other.medalsBronze_.Clone();
    medalsSilver_ = other.medalsSilver_.Clone();
    medalsGold_ = other.medalsGold_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountHeroStats Clone() {
    return new CMsgAccountHeroStats(this);
  }

  /// <summary>Field number for the "hero_id" field.</summary>
  public const int HeroIdFieldNumber = 1;
  private readonly static uint HeroIdDefaultValue = 0;

  private uint heroId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HeroId {
    get { if ((_hasBits0 & 1) != 0) { return heroId_; } else { return HeroIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      heroId_ = value;
    }
  }
  /// <summary>Gets whether the "hero_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHeroId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "hero_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHeroId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "stat_id" field.</summary>
  public const int StatIdFieldNumber = 2;
  private static readonly pb::FieldCodec<uint> _repeated_statId_codec
      = pb::FieldCodec.ForUInt32(16);
  private readonly pbc::RepeatedField<uint> statId_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> StatId {
    get { return statId_; }
  }

  /// <summary>Field number for the "total_value" field.</summary>
  public const int TotalValueFieldNumber = 3;
  private static readonly pb::FieldCodec<ulong> _repeated_totalValue_codec
      = pb::FieldCodec.ForUInt64(24);
  private readonly pbc::RepeatedField<ulong> totalValue_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> TotalValue {
    get { return totalValue_; }
  }

  /// <summary>Field number for the "medals_bronze" field.</summary>
  public const int MedalsBronzeFieldNumber = 4;
  private static readonly pb::FieldCodec<uint> _repeated_medalsBronze_codec
      = pb::FieldCodec.ForUInt32(32);
  private readonly pbc::RepeatedField<uint> medalsBronze_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> MedalsBronze {
    get { return medalsBronze_; }
  }

  /// <summary>Field number for the "medals_silver" field.</summary>
  public const int MedalsSilverFieldNumber = 5;
  private static readonly pb::FieldCodec<uint> _repeated_medalsSilver_codec
      = pb::FieldCodec.ForUInt32(40);
  private readonly pbc::RepeatedField<uint> medalsSilver_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> MedalsSilver {
    get { return medalsSilver_; }
  }

  /// <summary>Field number for the "medals_gold" field.</summary>
  public const int MedalsGoldFieldNumber = 6;
  private static readonly pb::FieldCodec<uint> _repeated_medalsGold_codec
      = pb::FieldCodec.ForUInt32(48);
  private readonly pbc::RepeatedField<uint> medalsGold_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> MedalsGold {
    get { return medalsGold_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAccountHeroStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAccountHeroStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HeroId != other.HeroId) return false;
    if(!statId_.Equals(other.statId_)) return false;
    if(!totalValue_.Equals(other.totalValue_)) return false;
    if(!medalsBronze_.Equals(other.medalsBronze_)) return false;
    if(!medalsSilver_.Equals(other.medalsSilver_)) return false;
    if(!medalsGold_.Equals(other.medalsGold_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasHeroId) hash ^= HeroId.GetHashCode();
    hash ^= statId_.GetHashCode();
    hash ^= totalValue_.GetHashCode();
    hash ^= medalsBronze_.GetHashCode();
    hash ^= medalsSilver_.GetHashCode();
    hash ^= medalsGold_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasHeroId) {
      output.WriteRawTag(8);
      output.WriteUInt32(HeroId);
    }
    statId_.WriteTo(output, _repeated_statId_codec);
    totalValue_.WriteTo(output, _repeated_totalValue_codec);
    medalsBronze_.WriteTo(output, _repeated_medalsBronze_codec);
    medalsSilver_.WriteTo(output, _repeated_medalsSilver_codec);
    medalsGold_.WriteTo(output, _repeated_medalsGold_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasHeroId) {
      output.WriteRawTag(8);
      output.WriteUInt32(HeroId);
    }
    statId_.WriteTo(ref output, _repeated_statId_codec);
    totalValue_.WriteTo(ref output, _repeated_totalValue_codec);
    medalsBronze_.WriteTo(ref output, _repeated_medalsBronze_codec);
    medalsSilver_.WriteTo(ref output, _repeated_medalsSilver_codec);
    medalsGold_.WriteTo(ref output, _repeated_medalsGold_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasHeroId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HeroId);
    }
    size += statId_.CalculateSize(_repeated_statId_codec);
    size += totalValue_.CalculateSize(_repeated_totalValue_codec);
    size += medalsBronze_.CalculateSize(_repeated_medalsBronze_codec);
    size += medalsSilver_.CalculateSize(_repeated_medalsSilver_codec);
    size += medalsGold_.CalculateSize(_repeated_medalsGold_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAccountHeroStats other) {
    if (other == null) {
      return;
    }
    if (other.HasHeroId) {
      HeroId = other.HeroId;
    }
    statId_.Add(other.statId_);
    totalValue_.Add(other.totalValue_);
    medalsBronze_.Add(other.medalsBronze_);
    medalsSilver_.Add(other.medalsSilver_);
    medalsGold_.Add(other.medalsGold_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HeroId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          statId_.AddEntriesFrom(input, _repeated_statId_codec);
          break;
        }
        case 26:
        case 24: {
          totalValue_.AddEntriesFrom(input, _repeated_totalValue_codec);
          break;
        }
        case 34:
        case 32: {
          medalsBronze_.AddEntriesFrom(input, _repeated_medalsBronze_codec);
          break;
        }
        case 42:
        case 40: {
          medalsSilver_.AddEntriesFrom(input, _repeated_medalsSilver_codec);
          break;
        }
        case 50:
        case 48: {
          medalsGold_.AddEntriesFrom(input, _repeated_medalsGold_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          HeroId = input.ReadUInt32();
          break;
        }
        case 18:
        case 16: {
          statId_.AddEntriesFrom(ref input, _repeated_statId_codec);
          break;
        }
        case 26:
        case 24: {
          totalValue_.AddEntriesFrom(ref input, _repeated_totalValue_codec);
          break;
        }
        case 34:
        case 32: {
          medalsBronze_.AddEntriesFrom(ref input, _repeated_medalsBronze_codec);
          break;
        }
        case 42:
        case 40: {
          medalsSilver_.AddEntriesFrom(ref input, _repeated_medalsSilver_codec);
          break;
        }
        case 50:
        case 48: {
          medalsGold_.AddEntriesFrom(ref input, _repeated_medalsGold_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgAccountBookStats : pb::IMessage<CMsgAccountBookStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAccountBookStats> _parser = new pb::MessageParser<CMsgAccountBookStats>(() => new CMsgAccountBookStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAccountBookStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountBookStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountBookStats(CMsgAccountBookStats other) : this() {
    _hasBits0 = other._hasBits0;
    bookId_ = other.bookId_;
    bookXp_ = other.bookXp_;
    bookMaxXp_ = other.bookMaxXp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountBookStats Clone() {
    return new CMsgAccountBookStats(this);
  }

  /// <summary>Field number for the "book_id" field.</summary>
  public const int BookIdFieldNumber = 1;
  private readonly static uint BookIdDefaultValue = 0;

  private uint bookId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BookId {
    get { if ((_hasBits0 & 1) != 0) { return bookId_; } else { return BookIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      bookId_ = value;
    }
  }
  /// <summary>Gets whether the "book_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBookId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "book_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBookId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "book_xp" field.</summary>
  public const int BookXpFieldNumber = 2;
  private readonly static uint BookXpDefaultValue = 0;

  private uint bookXp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BookXp {
    get { if ((_hasBits0 & 2) != 0) { return bookXp_; } else { return BookXpDefaultValue; } }
    set {
      _hasBits0 |= 2;
      bookXp_ = value;
    }
  }
  /// <summary>Gets whether the "book_xp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBookXp {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "book_xp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBookXp() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "book_max_xp" field.</summary>
  public const int BookMaxXpFieldNumber = 3;
  private readonly static uint BookMaxXpDefaultValue = 0;

  private uint bookMaxXp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BookMaxXp {
    get { if ((_hasBits0 & 4) != 0) { return bookMaxXp_; } else { return BookMaxXpDefaultValue; } }
    set {
      _hasBits0 |= 4;
      bookMaxXp_ = value;
    }
  }
  /// <summary>Gets whether the "book_max_xp" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBookMaxXp {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "book_max_xp" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBookMaxXp() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAccountBookStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAccountBookStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BookId != other.BookId) return false;
    if (BookXp != other.BookXp) return false;
    if (BookMaxXp != other.BookMaxXp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasBookId) hash ^= BookId.GetHashCode();
    if (HasBookXp) hash ^= BookXp.GetHashCode();
    if (HasBookMaxXp) hash ^= BookMaxXp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasBookId) {
      output.WriteRawTag(8);
      output.WriteUInt32(BookId);
    }
    if (HasBookXp) {
      output.WriteRawTag(16);
      output.WriteUInt32(BookXp);
    }
    if (HasBookMaxXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(BookMaxXp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasBookId) {
      output.WriteRawTag(8);
      output.WriteUInt32(BookId);
    }
    if (HasBookXp) {
      output.WriteRawTag(16);
      output.WriteUInt32(BookXp);
    }
    if (HasBookMaxXp) {
      output.WriteRawTag(24);
      output.WriteUInt32(BookMaxXp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasBookId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BookId);
    }
    if (HasBookXp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BookXp);
    }
    if (HasBookMaxXp) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BookMaxXp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAccountBookStats other) {
    if (other == null) {
      return;
    }
    if (other.HasBookId) {
      BookId = other.BookId;
    }
    if (other.HasBookXp) {
      BookXp = other.BookXp;
    }
    if (other.HasBookMaxXp) {
      BookMaxXp = other.BookMaxXp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          BookId = input.ReadUInt32();
          break;
        }
        case 16: {
          BookXp = input.ReadUInt32();
          break;
        }
        case 24: {
          BookMaxXp = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          BookId = input.ReadUInt32();
          break;
        }
        case 16: {
          BookXp = input.ReadUInt32();
          break;
        }
        case 24: {
          BookMaxXp = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgAccountStats : pb::IMessage<CMsgAccountStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgAccountStats> _parser = new pb::MessageParser<CMsgAccountStats>(() => new CMsgAccountStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgAccountStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGcmessagesCommonReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountStats(CMsgAccountStats other) : this() {
    _hasBits0 = other._hasBits0;
    accountId_ = other.accountId_;
    stats_ = other.stats_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgAccountStats Clone() {
    return new CMsgAccountStats(this);
  }

  /// <summary>Field number for the "account_id" field.</summary>
  public const int AccountIdFieldNumber = 1;
  private readonly static uint AccountIdDefaultValue = 0;

  private uint accountId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AccountId {
    get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      accountId_ = value;
    }
  }
  /// <summary>Gets whether the "account_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAccountId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "account_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAccountId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "stats" field.</summary>
  public const int StatsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgAccountHeroStats> _repeated_stats_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgAccountHeroStats.Parser);
  private readonly pbc::RepeatedField<global::CMsgAccountHeroStats> stats_ = new pbc::RepeatedField<global::CMsgAccountHeroStats>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgAccountHeroStats> Stats {
    get { return stats_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgAccountStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgAccountStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (AccountId != other.AccountId) return false;
    if(!stats_.Equals(other.stats_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAccountId) hash ^= AccountId.GetHashCode();
    hash ^= stats_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    stats_.WriteTo(output, _repeated_stats_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAccountId) {
      output.WriteRawTag(8);
      output.WriteUInt32(AccountId);
    }
    stats_.WriteTo(ref output, _repeated_stats_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAccountId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
    }
    size += stats_.CalculateSize(_repeated_stats_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgAccountStats other) {
    if (other == null) {
      return;
    }
    if (other.HasAccountId) {
      AccountId = other.AccountId;
    }
    stats_.Add(other.stats_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          stats_.AddEntriesFrom(input, _repeated_stats_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          AccountId = input.ReadUInt32();
          break;
        }
        case 18: {
          stats_.AddEntriesFrom(ref input, _repeated_stats_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
