// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: netmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from netmessages.proto</summary>
public static partial class NetmessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for netmessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NetmessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFuZXRtZXNzYWdlcy5wcm90bxoWbmV0d29ya2Jhc2V0eXBlcy5wcm90byJ9",
          "ChJDQ0xDTXNnX0NsaWVudEluZm8SFgoOc2VuZF90YWJsZV9jcmMYASABKAcS",
          "FAoMc2VydmVyX2NvdW50GAIgASgNEg8KB2lzX2hsdHYYAyABKAgSEgoKZnJp",
          "ZW5kc19pZBgFIAEoDRIUCgxmcmllbmRzX25hbWUYBiABKAkiOQoMQ0NMQ01z",
          "Z19Nb3ZlEgwKBGRhdGEYAyABKAwSGwoTbGFzdF9jb21tYW5kX251bWJlchgE",
          "IAEoDSKPAgoOQ01zZ1ZvaWNlQXVkaW8SOgoGZm9ybWF0GAEgASgOMhIuVm9p",
          "Y2VEYXRhRm9ybWF0X3Q6FlZPSUNFREFUQV9GT1JNQVRfU1RFQU0SEgoKdm9p",
          "Y2VfZGF0YRgCIAEoDBIWCg5zZXF1ZW5jZV9ieXRlcxgDIAEoBRIWCg5zZWN0",
          "aW9uX251bWJlchgEIAEoDRITCgtzYW1wbGVfcmF0ZRgFIAEoDRIiChp1bmNv",
          "bXByZXNzZWRfc2FtcGxlX29mZnNldBgGIAEoDRITCgtudW1fcGFja2V0cxgH",
          "IAEoDRIaCg5wYWNrZXRfb2Zmc2V0cxgIIAMoDUICEAESEwoLdm9pY2VfbGV2",
          "ZWwYCSABKAIiTwoRQ0NMQ01zZ19Wb2ljZURhdGESHgoFYXVkaW8YASABKAsy",
          "Dy5DTXNnVm9pY2VBdWRpbxIMCgR4dWlkGAIgASgGEgwKBHRpY2sYAyABKA0i",
          "QQoTQ0NMQ01zZ19CYXNlbGluZUFjaxIVCg1iYXNlbGluZV90aWNrGAEgASgF",
          "EhMKC2Jhc2VsaW5lX25yGAIgASgFIioKFENDTENNc2dfTGlzdGVuRXZlbnRz",
          "EhIKCmV2ZW50X21hc2sYASADKAciXAoYQ0NMQ01zZ19SZXNwb25kQ3ZhclZh",
          "bHVlEg4KBmNvb2tpZRgBIAEoBRITCgtzdGF0dXNfY29kZRgCIAEoBRIMCgRu",
          "YW1lGAMgASgJEg0KBXZhbHVlGAQgASgJIm0KFENDTENNc2dfRmlsZUNSQ0No",
          "ZWNrEhEKCWNvZGVfcGF0aBgBIAEoBRIMCgRwYXRoGAIgASgJEhUKDWNvZGVf",
          "ZmlsZW5hbWUYAyABKAUSEAoIZmlsZW5hbWUYBCABKAkSCwoDY3JjGAUgASgH",
          "IisKF0NDTENNc2dfTG9hZGluZ1Byb2dyZXNzEhAKCHByb2dyZXNzGAEgASgF",
          "IjAKGkNDTENNc2dfU3BsaXRQbGF5ZXJDb25uZWN0EhIKCnBsYXllcm5hbWUY",
          "ASABKAkiLQodQ0NMQ01zZ19TcGxpdFBsYXllckRpc2Nvbm5lY3QSDAoEc2xv",
          "dBgBIAEoBSIqChRDQ0xDTXNnX1NlcnZlclN0YXR1cxISCgpzaW1wbGlmaWVk",
          "GAEgASgIIloKFENDTENNc2dfUmVxdWVzdFBhdXNlEi0KCnBhdXNlX3R5cGUY",
          "ASABKA4yDy5SZXF1ZXN0UGF1c2VfdDoIUlBfUEFVU0USEwoLcGF1c2VfZ3Jv",
          "dXAYAiABKAUiJAoUQ0NMQ01zZ19DbWRLZXlWYWx1ZXMSDAoEZGF0YRgBIAEo",
          "DCIqChlDQ0xDTXNnX1Jjb25TZXJ2ZXJEZXRhaWxzEg0KBXRva2VuGAEgASgM",
          "It0CChZDTXNnU291cmNlMlN5c3RlbVNwZWNzEg4KBmNwdV9pZBgBIAEoCRIR",
          "CgljcHVfYnJhbmQYAiABKAkSEQoJY3B1X21vZGVsGAMgASgNEhgKEGNwdV9u",
          "dW1fcGh5c2ljYWwYBCABKA0SHQoVcmFtX3BoeXNpY2FsX3RvdGFsX21iGBUg",
          "ASgNEiEKGWdwdV9yZW5kZXJzeXN0ZW1fZGxsX25hbWUYKSABKAkSFQoNZ3B1",
          "X3ZlbmRvcl9pZBgqIAEoDRIXCg9ncHVfZHJpdmVyX25hbWUYKyABKAkSHwoX",
          "Z3B1X2RyaXZlcl92ZXJzaW9uX2hpZ2gYLCABKA0SHgoWZ3B1X2RyaXZlcl92",
          "ZXJzaW9uX2xvdxgtIAEoDRIcChRncHVfZHhfc3VwcG9ydF9sZXZlbBguIAEo",
          "DRIiChpncHVfdGV4dHVyZV9tZW1vcnlfc2l6ZV9tYhgvIAEoDSLlAQoeQ01z",
          "Z1NvdXJjZTJWUHJvZkxpdGVSZXBvcnRJdGVtEgwKBG5hbWUYASABKAkSFgoO",
          "YWN0aXZlX3NhbXBsZXMYAiABKA0SEAoIdXNlY19tYXgYAyABKA0SFwoPdXNl",
          "Y19hdmdfYWN0aXZlGAsgASgNEhcKD3VzZWNfcDUwX2FjdGl2ZRgMIAEoDRIX",
          "Cg91c2VjX3A5OV9hY3RpdmUYDSABKA0SFAoMdXNlY19hdmdfYWxsGBUgASgN",
          "EhQKDHVzZWNfcDUwX2FsbBgWIAEoDRIUCgx1c2VjX3A5OV9hbGwYFyABKA0i",
          "lgEKGkNNc2dTb3VyY2UyVlByb2ZMaXRlUmVwb3J0Ei4KBXRvdGFsGAEgASgL",
          "Mh8uQ01zZ1NvdXJjZTJWUHJvZkxpdGVSZXBvcnRJdGVtEi4KBWl0ZW1zGAIg",
          "AygLMh8uQ01zZ1NvdXJjZTJWUHJvZkxpdGVSZXBvcnRJdGVtEhgKEGRpc2Nh",
          "cmRlZF9mcmFtZXMYAyABKA0idgoSQ0NMQ01zZ19EaWFnbm9zdGljEi0KDHN5",
          "c3RlbV9zcGVjcxgBIAEoCzIXLkNNc2dTb3VyY2UyU3lzdGVtU3BlY3MSMQoM",
          "dnByb2ZfcmVwb3J0GAIgASgLMhsuQ01zZ1NvdXJjZTJWUHJvZkxpdGVSZXBv",
          "cnQi/wIKLUNTb3VyY2UyTWV0cmljc19NYXRjaFBlcmZTdW1tYXJ5X05vdGlm",
          "aWNhdGlvbhINCgVhcHBpZBgBIAEoDRIRCglnYW1lX21vZGUYAiABKAkSFwoP",
          "c2VydmVyX2J1aWxkX2lkGAMgASgNEjMKDnNlcnZlcl9wcm9maWxlGAogASgL",
          "MhsuQ01zZ1NvdXJjZTJWUHJvZkxpdGVSZXBvcnQSRgoHY2xpZW50cxgLIAMo",
          "CzI1LkNTb3VyY2UyTWV0cmljc19NYXRjaFBlcmZTdW1tYXJ5X05vdGlmaWNh",
          "dGlvbi5DbGllbnQSCwoDbWFwGBQgASgJGogBCgZDbGllbnQSLQoMc3lzdGVt",
          "X3NwZWNzGAEgASgLMhcuQ01zZ1NvdXJjZTJTeXN0ZW1TcGVjcxIsCgdwcm9m",
          "aWxlGAIgASgLMhsuQ01zZ1NvdXJjZTJWUHJvZkxpdGVSZXBvcnQSEAoIYnVp",
          "bGRfaWQYAyABKA0SDwoHc3RlYW1pZBgKIAEoBiKHAwoSQ1NWQ01zZ19TZXJ2",
          "ZXJJbmZvEhAKCHByb3RvY29sGAEgASgFEhQKDHNlcnZlcl9jb3VudBgCIAEo",
          "BRIUCgxpc19kZWRpY2F0ZWQYAyABKAgSDwoHaXNfaGx0dhgEIAEoCBIMCgRj",
          "X29zGAYgASgFEhMKC21heF9jbGllbnRzGAogASgFEhMKC21heF9jbGFzc2Vz",
          "GAsgASgFEhcKC3BsYXllcl9zbG90GAwgASgFOgItMRIVCg10aWNrX2ludGVy",
          "dmFsGA0gASgCEhAKCGdhbWVfZGlyGA4gASgJEhAKCG1hcF9uYW1lGA8gASgJ",
          "EhAKCHNreV9uYW1lGBAgASgJEhEKCWhvc3RfbmFtZRgRIAEoCRISCgphZGRv",
          "bl9uYW1lGBIgASgJEj4KE2dhbWVfc2Vzc2lvbl9jb25maWcYEyABKAsyIS5D",
          "U1ZDTXNnX0dhbWVTZXNzaW9uQ29uZmlndXJhdGlvbhIdChVnYW1lX3Nlc3Np",
          "b25fbWFuaWZlc3QYFCABKAwiiwEKEUNTVkNNc2dfQ2xhc3NJbmZvEhgKEGNy",
          "ZWF0ZV9vbl9jbGllbnQYASABKAgSKwoHY2xhc3NlcxgCIAMoCzIaLkNTVkNN",
          "c2dfQ2xhc3NJbmZvLmNsYXNzX3QaLwoHY2xhc3NfdBIQCghjbGFzc19pZBgB",
          "IAEoBRISCgpjbGFzc19uYW1lGAMgASgJIiIKEENTVkNNc2dfU2V0UGF1c2US",
          "DgoGcGF1c2VkGAEgASgIIkcKEUNTVkNNc2dfVm9pY2VJbml0Eg8KB3F1YWxp",
          "dHkYASABKAUSDQoFY29kZWMYAiABKAkSEgoHdmVyc2lvbhgDIAEoBToBMCId",
          "Cg1DU1ZDTXNnX1ByaW50EgwKBHRleHQYASABKAki4wMKDkNTVkNNc2dfU291",
          "bmRzEhYKDnJlbGlhYmxlX3NvdW5kGAEgASgIEisKBnNvdW5kcxgCIAMoCzIb",
          "LkNTVkNNc2dfU291bmRzLnNvdW5kZGF0YV90GosDCgtzb3VuZGRhdGFfdBIQ",
          "CghvcmlnaW5feBgBIAEoERIQCghvcmlnaW5feRgCIAEoERIQCghvcmlnaW5f",
          "ehgDIAEoERIOCgZ2b2x1bWUYBCABKA0SEwoLZGVsYXlfdmFsdWUYBSABKAIS",
          "FwoPc2VxdWVuY2VfbnVtYmVyGAYgASgFEhgKDGVudGl0eV9pbmRleBgHIAEo",
          "BToCLTESDwoHY2hhbm5lbBgIIAEoBRINCgVwaXRjaBgJIAEoBRINCgVmbGFn",
          "cxgKIAEoBRIRCglzb3VuZF9udW0YCyABKA0SGAoQc291bmRfbnVtX2hhbmRs",
          "ZRgMIAEoBxIWCg5zcGVha2VyX2VudGl0eRgNIAEoBRITCgtyYW5kb21fc2Vl",
          "ZBgOIAEoBRITCgtzb3VuZF9sZXZlbBgPIAEoBRITCgtpc19zZW50ZW5jZRgQ",
          "IAEoCBISCgppc19hbWJpZW50GBEgASgIEgwKBGd1aWQYEiABKA0SGQoRc291",
          "bmRfcmVzb3VyY2VfaWQYEyABKAYiWAoQQ1NWQ01zZ19QcmVmZXRjaBITCgtz",
          "b3VuZF9pbmRleBgBIAEoBRIvCg1yZXNvdXJjZV90eXBlGAIgASgOMg0uUHJl",
          "ZmV0Y2hUeXBlOglQRlRfU09VTkQiPQoPQ1NWQ01zZ19TZXRWaWV3EhgKDGVu",
          "dGl0eV9pbmRleBgBIAEoBToCLTESEAoEc2xvdBgCIAEoBToCLTEiQAoQQ1NW",
          "Q01zZ19GaXhBbmdsZRIQCghyZWxhdGl2ZRgBIAEoCBIaCgVhbmdsZRgCIAEo",
          "CzILLkNNc2dRQW5nbGUiNAoWQ1NWQ01zZ19Dcm9zc2hhaXJBbmdsZRIaCgVh",
          "bmdsZRgBIAEoCzILLkNNc2dRQW5nbGUijgEKEENTVkNNc2dfQlNQRGVjYWwS",
          "GAoDcG9zGAEgASgLMgsuQ01zZ1ZlY3RvchIbChNkZWNhbF90ZXh0dXJlX2lu",
          "ZGV4GAIgASgFEhgKDGVudGl0eV9pbmRleBgDIAEoBToCLTESEwoLbW9kZWxf",
          "aW5kZXgYBCABKAUSFAoMbG93X3ByaW9yaXR5GAUgASgIIn4KE0NTVkNNc2df",
          "U3BsaXRTY3JlZW4SPwoEdHlwZRgBIAEoDjIYLkVTcGxpdFNjcmVlbk1lc3Nh",
          "Z2VUeXBlOhdNU0dfU1BMSVRTQ1JFRU5fQUREVVNFUhIMCgRzbG90GAIgASgF",
          "EhgKDHBsYXllcl9pbmRleBgDIAEoBToCLTEiOQoUQ1NWQ01zZ19HZXRDdmFy",
          "VmFsdWUSDgoGY29va2llGAEgASgFEhEKCWN2YXJfbmFtZRgCIAEoCSI8CgxD",
          "U1ZDTXNnX01lbnUSEwoLZGlhbG9nX3R5cGUYASABKAUSFwoPbWVudV9rZXlf",
          "dmFsdWVzGAIgASgMIk4KE0NTVkNNc2dfVXNlck1lc3NhZ2USEAoIbXNnX3R5",
          "cGUYASABKAUSEAoIbXNnX2RhdGEYAiABKAwSEwoLcGFzc3Rocm91Z2gYAyAB",
          "KAUisAIKEUNTVkNNc2dfU2VuZFRhYmxlEg4KBmlzX2VuZBgBIAEoCBIWCg5u",
          "ZXRfdGFibGVfbmFtZRgCIAEoCRIVCg1uZWVkc19kZWNvZGVyGAMgASgIEiwK",
          "BXByb3BzGAQgAygLMh0uQ1NWQ01zZ19TZW5kVGFibGUuc2VuZHByb3BfdBqt",
          "AQoKc2VuZHByb3BfdBIMCgR0eXBlGAEgASgFEhAKCHZhcl9uYW1lGAIgASgJ",
          "Eg0KBWZsYWdzGAMgASgFEhAKCHByaW9yaXR5GAQgASgFEg8KB2R0X25hbWUY",
          "BSABKAkSFAoMbnVtX2VsZW1lbnRzGAYgASgFEhEKCWxvd192YWx1ZRgHIAEo",
          "AhISCgpoaWdoX3ZhbHVlGAggASgCEhAKCG51bV9iaXRzGAkgASgFItEBChVD",
          "U1ZDTXNnX0dhbWVFdmVudExpc3QSOAoLZGVzY3JpcHRvcnMYASADKAsyIy5D",
          "U1ZDTXNnX0dhbWVFdmVudExpc3QuZGVzY3JpcHRvcl90GiMKBWtleV90EgwK",
          "BHR5cGUYASABKAUSDAoEbmFtZRgCIAEoCRpZCgxkZXNjcmlwdG9yX3QSDwoH",
          "ZXZlbnRpZBgBIAEoBRIMCgRuYW1lGAIgASgJEioKBGtleXMYAyADKAsyHC5D",
          "U1ZDTXNnX0dhbWVFdmVudExpc3Qua2V5X3QizgYKFkNTVkNNc2dfUGFja2V0",
          "RW50aXRpZXMSEwoLbWF4X2VudHJpZXMYASABKAUSFwoPdXBkYXRlZF9lbnRy",
          "aWVzGAIgASgFEhcKD2xlZ2FjeV9pc19kZWx0YRgDIAEoCBIXCg91cGRhdGVf",
          "YmFzZWxpbmUYBCABKAgSEAoIYmFzZWxpbmUYBSABKAUSEgoKZGVsdGFfZnJv",
          "bRgGIAEoBRITCgtlbnRpdHlfZGF0YRgHIAEoDBIaChJwZW5kaW5nX2Z1bGxf",
          "ZnJhbWUYCCABKAgSIAoYYWN0aXZlX3NwYXduZ3JvdXBfaGFuZGxlGAkgASgN",
          "EicKH21heF9zcGF3bmdyb3VwX2NyZWF0aW9uc2VxdWVuY2UYCiABKA0SIAoY",
          "bGFzdF9jbWRfbnVtYmVyX2V4ZWN1dGVkGAsgASgNEiIKGmxhc3RfY21kX251",
          "bWJlcl9yZWN2X2RlbHRhGBEgASgREhMKC3NlcnZlcl90aWNrGAwgASgNEhsK",
          "E3NlcmlhbGl6ZWRfZW50aXRpZXMYDSABKAwSSQoTYWx0ZXJuYXRlX2Jhc2Vs",
          "aW5lcxgPIAMoCzIsLkNTVkNNc2dfUGFja2V0RW50aXRpZXMuYWx0ZXJuYXRl",
          "X2Jhc2VsaW5lX3QSGAoQaGFzX3B2c192aXNfYml0cxgQIAEoDRIbCg9jbWRf",
          "cmVjdl9zdGF0dXMYFiADKBFCAhABElQKGG5vbl90cmFuc21pdHRlZF9lbnRp",
          "dGllcxgTIAEoCzIyLkNTVkNNc2dfUGFja2V0RW50aXRpZXMubm9uX3RyYW5z",
          "bWl0dGVkX2VudGl0aWVzX3QSIAoYY3Ffc3RhcnZlZF9jb21tYW5kX3RpY2tz",
          "GBQgASgNEiIKGmNxX2Rpc2NhcmRlZF9jb21tYW5kX3RpY2tzGBUgASgNEhQK",
          "C2Rldl9wYWRkaW5nGOcHIAEoDBpEChRhbHRlcm5hdGVfYmFzZWxpbmVfdBIU",
          "CgxlbnRpdHlfaW5kZXgYASABKAUSFgoOYmFzZWxpbmVfaW5kZXgYAiABKAUa",
          "QAoabm9uX3RyYW5zbWl0dGVkX2VudGl0aWVzX3QSFAoMaGVhZGVyX2NvdW50",
          "GAEgASgFEgwKBGRhdGEYAiABKAwiUgoUQ1NWQ01zZ19UZW1wRW50aXRpZXMS",
          "EAoIcmVsaWFibGUYASABKAgSEwoLbnVtX2VudHJpZXMYAiABKAUSEwoLZW50",
          "aXR5X2RhdGEYAyABKAwiiQIKGUNTVkNNc2dfQ3JlYXRlU3RyaW5nVGFibGUS",
          "DAoEbmFtZRgBIAEoCRITCgtudW1fZW50cmllcxgCIAEoBRIcChR1c2VyX2Rh",
          "dGFfZml4ZWRfc2l6ZRgDIAEoCBIWCg51c2VyX2RhdGFfc2l6ZRgEIAEoBRIb",
          "ChN1c2VyX2RhdGFfc2l6ZV9iaXRzGAUgASgFEg0KBWZsYWdzGAYgASgFEhMK",
          "C3N0cmluZ19kYXRhGAcgASgMEhkKEXVuY29tcHJlc3NlZF9zaXplGAggASgF",
          "EhcKD2RhdGFfY29tcHJlc3NlZBgJIAEoCBIeChZ1c2luZ192YXJpbnRfYml0",
          "Y291bnRzGAogASgIIl8KGUNTVkNNc2dfVXBkYXRlU3RyaW5nVGFibGUSEAoI",
          "dGFibGVfaWQYASABKAUSGwoTbnVtX2NoYW5nZWRfZW50cmllcxgCIAEoBRIT",
          "CgtzdHJpbmdfZGF0YRgDIAEoDCKhAQoRQ1NWQ01zZ19Wb2ljZURhdGESHgoF",
          "YXVkaW8YASABKAsyDy5DTXNnVm9pY2VBdWRpbxISCgZjbGllbnQYAiABKAU6",
          "Ai0xEhEKCXByb3hpbWl0eRgDIAEoCBIMCgR4dWlkGAQgASgGEhQKDGF1ZGli",
          "bGVfbWFzaxgFIAEoBRIMCgR0aWNrGAYgASgNEhMKC3Bhc3N0aHJvdWdoGAcg",
          "ASgFIksKFkNTVkNNc2dfUGFja2V0UmVsaWFibGUSDAoEdGljaxgBIAEoBRIU",
          "CgxtZXNzYWdlc3NpemUYAiABKAUSDQoFc3RhdGUYAyABKAgiVAoWQ1NWQ01z",
          "Z19GdWxsRnJhbWVTcGxpdBIMCgR0aWNrGAEgASgFEg8KB3NlY3Rpb24YAiAB",
          "KAUSDQoFdG90YWwYAyABKAUSDAoEZGF0YRgEIAEoDCJVChJDU1ZDTXNnX0hM",
          "VFZTdGF0dXMSDgoGbWFzdGVyGAEgASgJEg8KB2NsaWVudHMYAiABKAUSDQoF",
          "c2xvdHMYAyABKAUSDwoHcHJveGllcxgEIAEoBSIpChVDU1ZDTXNnX1NlcnZl",
          "clN0ZWFtSUQSEAoIc3RlYW1faWQYASABKAQiJAoUQ1NWQ01zZ19DbWRLZXlW",
          "YWx1ZXMSDAoEZGF0YRgBIAEoDCI7ChlDU1ZDTXNnX1Jjb25TZXJ2ZXJEZXRh",
          "aWxzEg0KBXRva2VuGAEgASgMEg8KB2RldGFpbHMYAiABKAkiOwoOQ01zZ0lQ",
          "Q0FkZHJlc3MSFQoNY29tcHV0ZXJfZ3VpZBgBIAEoBhISCgpwcm9jZXNzX2lk",
          "GAIgASgNIqQBCg5DTXNnU2VydmVyUGVlchIXCgtwbGF5ZXJfc2xvdBgBIAEo",
          "BToCLTESDwoHc3RlYW1pZBgCIAEoBhIcCgNpcGMYAyABKAsyDy5DTXNnSVBD",
          "QWRkcmVzcxIVCg10aGV5X2hlYXJfeW91GAQgASgIEhUKDXlvdV9oZWFyX3Ro",
          "ZW0YBSABKAgSHAoUaXNfbGlzdGVuc2VydmVyX2hvc3QYBiABKAgiMQoQQ1NW",
          "Q01zZ19QZWVyTGlzdBIdCgRwZWVyGAEgAygLMg8uQ01zZ1NlcnZlclBlZXIi",
          "TgocQ1NWQ01zZ19DbGVhckFsbFN0cmluZ1RhYmxlcxIPCgdtYXBuYW1lGAEg",
          "ASgJEh0KFWNyZWF0ZV90YWJsZXNfc2tpcHBlZBgDIAEoCCLzAwofUHJvdG9G",
          "bGF0dGVuZWRTZXJpYWxpemVyRmllbGRfdBIUCgx2YXJfdHlwZV9zeW0YASAB",
          "KAUSFAoMdmFyX25hbWVfc3ltGAIgASgFEhEKCWJpdF9jb3VudBgDIAEoBRIR",
          "Cglsb3dfdmFsdWUYBCABKAISEgoKaGlnaF92YWx1ZRgFIAEoAhIUCgxlbmNv",
          "ZGVfZmxhZ3MYBiABKAUSIQoZZmllbGRfc2VyaWFsaXplcl9uYW1lX3N5bRgH",
          "IAEoBRIgChhmaWVsZF9zZXJpYWxpemVyX3ZlcnNpb24YCCABKAUSFQoNc2Vu",
          "ZF9ub2RlX3N5bRgJIAEoBRIXCg92YXJfZW5jb2Rlcl9zeW0YCiABKAUSTwoR",
          "cG9seW1vcnBoaWNfdHlwZXMYCyADKAsyNC5Qcm90b0ZsYXR0ZW5lZFNlcmlh",
          "bGl6ZXJGaWVsZF90LnBvbHltb3JwaGljX2ZpZWxkX3QSGgoSdmFyX3Nlcmlh",
          "bGl6ZXJfc3ltGAwgASgFGnIKE3BvbHltb3JwaGljX2ZpZWxkX3QSLQolcG9s",
          "eW1vcnBoaWNfZmllbGRfc2VyaWFsaXplcl9uYW1lX3N5bRgBIAEoBRIsCiRw",
          "b2x5bW9ycGhpY19maWVsZF9zZXJpYWxpemVyX3ZlcnNpb24YAiABKAUiawoa",
          "UHJvdG9GbGF0dGVuZWRTZXJpYWxpemVyX3QSGwoTc2VyaWFsaXplcl9uYW1l",
          "X3N5bRgBIAEoBRIaChJzZXJpYWxpemVyX3ZlcnNpb24YAiABKAUSFAoMZmll",
          "bGRzX2luZGV4GAMgAygFIpIBChtDU1ZDTXNnX0ZsYXR0ZW5lZFNlcmlhbGl6",
          "ZXISMAoLc2VyaWFsaXplcnMYASADKAsyGy5Qcm90b0ZsYXR0ZW5lZFNlcmlh",
          "bGl6ZXJfdBIPCgdzeW1ib2xzGAIgAygJEjAKBmZpZWxkcxgDIAMoCzIgLlBy",
          "b3RvRmxhdHRlbmVkU2VyaWFsaXplckZpZWxkX3QiIQoRQ1NWQ01zZ19TdG9w",
          "U291bmQSDAoEZ3VpZBgBIAEoByJ5Ch5DQmlkaXJNc2dfUmVicm9hZGNhc3RH",
          "YW1lRXZlbnQSFAoMcG9zdHRvc2VydmVyGAEgASgIEg8KB2J1ZnR5cGUYAiAB",
          "KAUSFgoOY2xpZW50Yml0Y291bnQYAyABKA0SGAoQcmVjZWl2aW5nY2xpZW50",
          "cxgEIAEoBCIyChtDQmlkaXJNc2dfUmVicm9hZGNhc3RTb3VyY2USEwoLZXZl",
          "bnRzb3VyY2UYASABKAUixQYKFkNNc2dTZXJ2ZXJOZXR3b3JrU3RhdHMSEQoJ",
          "ZGVkaWNhdGVkGAEgASgIEhEKCWNwdV91c2FnZRgCIAEoBRIWCg5tZW1vcnlf",
          "dXNlZF9tYhgDIAEoBRIWCg5tZW1vcnlfZnJlZV9tYhgEIAEoBRIOCgZ1cHRp",
          "bWUYBSABKAUSEwoLc3Bhd25fY291bnQYBiABKAUSEwoLbnVtX2NsaWVudHMY",
          "CCABKAUSEAoIbnVtX2JvdHMYCSABKAUSFgoObnVtX3NwZWN0YXRvcnMYCiAB",
          "KAUSFQoNbnVtX3R2X3JlbGF5cxgLIAEoBRILCgNmcHMYDCABKAISKwoFcG9y",
          "dHMYESADKAsyHC5DTXNnU2VydmVyTmV0d29ya1N0YXRzLlBvcnQSEwoLYXZn",
          "X3BpbmdfbXMYEiABKAISHgoWYXZnX2VuZ2luZV9sYXRlbmN5X291dBgTIAEo",
          "AhIXCg9hdmdfcGFja2V0c19vdXQYFCABKAISFgoOYXZnX3BhY2tldHNfaW4Y",
          "FSABKAISFAoMYXZnX2xvc3Nfb3V0GBYgASgCEhMKC2F2Z19sb3NzX2luGBcg",
          "ASgCEhQKDGF2Z19kYXRhX291dBgYIAEoAhITCgthdmdfZGF0YV9pbhgZIAEo",
          "AhIVCg10b3RhbF9kYXRhX2luGBogASgEEhgKEHRvdGFsX3BhY2tldHNfaW4Y",
          "GyABKAQSFgoOdG90YWxfZGF0YV9vdXQYHCABKAQSGQoRdG90YWxfcGFja2V0",
          "c19vdXQYHSABKAQSLwoHcGxheWVycxgeIAMoCzIeLkNNc2dTZXJ2ZXJOZXR3",
          "b3JrU3RhdHMuUGxheWVyGiIKBFBvcnQSDAoEcG9ydBgBIAEoBRIMCgRuYW1l",
          "GAIgASgJGqoBCgZQbGF5ZXISDwoHc3RlYW1pZBgBIAEoBBITCgtyZW1vdGVf",
          "YWRkchgCIAEoCRITCgtwaW5nX2F2Z19tcxgEIAEoBRIXCg9wYWNrZXRfbG9z",
          "c19wY3QYBSABKAISDgoGaXNfYm90GAYgASgIEg8KB2xvc3NfaW4YByABKAIS",
          "EAoIbG9zc19vdXQYCCABKAISGQoRZW5naW5lX2xhdGVuY3lfbXMYCSABKAUi",
          "2gEKEkNTVkNNc2dfSGx0dlJlcGxheRINCgVkZWxheRgBIAEoBRIaCg5wcmlt",
          "YXJ5X3RhcmdldBgCIAEoBToCLTESFgoOcmVwbGF5X3N0b3BfYXQYAyABKAUS",
          "FwoPcmVwbGF5X3N0YXJ0X2F0GAQgASgFEh0KFXJlcGxheV9zbG93ZG93bl9i",
          "ZWdpbhgFIAEoBRIbChNyZXBsYXlfc2xvd2Rvd25fZW5kGAYgASgFEhwKFHJl",
          "cGxheV9zbG93ZG93bl9yYXRlGAcgASgCEg4KBnJlYXNvbhgIIAEoBSKFAQoS",
          "Q0NMQ01zZ19IbHR2UmVwbGF5Eg8KB3JlcXVlc3QYASABKAUSFwoPc2xvd2Rv",
          "d25fbGVuZ3RoGAIgASgCEhUKDXNsb3dkb3duX3JhdGUYAyABKAISGgoOcHJp",
          "bWFyeV90YXJnZXQYBCABKAU6Ai0xEhIKCmV2ZW50X3RpbWUYBSABKAIiKAoZ",
          "Q1NWQ01zZ19Ccm9hZGNhc3RfQ29tbWFuZBILCgNjbWQYASABKAki7wEKHUND",
          "TENNc2dfSGx0dkZpeHVwT3BlcmF0b3JUaWNrEgwKBHRpY2sYASABKAUSEgoK",
          "cHJvcHNfZGF0YRgCIAEoDBIbCgZvcmlnaW4YAyABKAsyCy5DTXNnVmVjdG9y",
          "Eh8KCmV5ZV9hbmdsZXMYBCABKAsyCy5DTXNnUUFuZ2xlEhUKDW9ic2VydmVy",
          "X21vZGUYBSABKAUSHAoUY2FtZXJhbWFuX3Njb3JlYm9hcmQYBiABKAgSFwoP",
          "b2JzZXJ2ZXJfdGFyZ2V0GAcgASgFEiAKC3ZpZXdfb2Zmc2V0GAggASgLMgsu",
          "Q01zZ1ZlY3RvciJPCh9DU1ZDTXNnX0hsdHZGaXh1cE9wZXJhdG9yU3RhdHVz",
          "EgwKBG1vZGUYASABKA0SHgoWb3ZlcnJpZGVfb3BlcmF0b3JfbmFtZRgCIAEo",
          "CSKBAQoRQ01zZ1NlcnZlclVzZXJDbWQSDAoEZGF0YRgBIAEoDBISCgpjbWRf",
          "bnVtYmVyGAIgASgFEhcKC3BsYXllcl9zbG90GAMgASgFOgItMRIcChRzZXJ2",
          "ZXJfdGlja19leGVjdXRlZBgEIAEoBRITCgtjbGllbnRfdGljaxgFIAEoBSI8",
          "ChRDU1ZDTXNnX1VzZXJDb21tYW5kcxIkCghjb21tYW5kcxgBIAMoCzISLkNN",
          "c2dTZXJ2ZXJVc2VyQ21kKuECCgxDTENfTWVzc2FnZXMSEgoOY2xjX0NsaWVu",
          "dEluZm8QFBIMCghjbGNfTW92ZRAVEhEKDWNsY19Wb2ljZURhdGEQFhITCg9j",
          "bGNfQmFzZWxpbmVBY2sQFxIYChRjbGNfUmVzcG9uZEN2YXJWYWx1ZRAZEhQK",
          "EGNsY19GaWxlQ1JDQ2hlY2sQGhIXChNjbGNfTG9hZGluZ1Byb2dyZXNzEBsS",
          "GgoWY2xjX1NwbGl0UGxheWVyQ29ubmVjdBAcEh0KGWNsY19TcGxpdFBsYXll",
          "ckRpc2Nvbm5lY3QQHhIUChBjbGNfU2VydmVyU3RhdHVzEB8SFAoQY2xjX1Jl",
          "cXVlc3RQYXVzZRAhEhQKEGNsY19DbWRLZXlWYWx1ZXMQIhIZChVjbGNfUmNv",
          "blNlcnZlckRldGFpbHMQIxISCg5jbGNfSGx0dlJlcGxheRAkEhIKDmNsY19E",
          "aWFnbm9zdGljECUqlwUKDFNWQ19NZXNzYWdlcxISCg5zdmNfU2VydmVySW5m",
          "bxAoEhsKF3N2Y19GbGF0dGVuZWRTZXJpYWxpemVyECkSEQoNc3ZjX0NsYXNz",
          "SW5mbxAqEhAKDHN2Y19TZXRQYXVzZRArEhkKFXN2Y19DcmVhdGVTdHJpbmdU",
          "YWJsZRAsEhkKFXN2Y19VcGRhdGVTdHJpbmdUYWJsZRAtEhEKDXN2Y19Wb2lj",
          "ZUluaXQQLhIRCg1zdmNfVm9pY2VEYXRhEC8SDQoJc3ZjX1ByaW50EDASDgoK",
          "c3ZjX1NvdW5kcxAxEg8KC3N2Y19TZXRWaWV3EDISHAoYc3ZjX0NsZWFyQWxs",
          "U3RyaW5nVGFibGVzEDMSFAoQc3ZjX0NtZEtleVZhbHVlcxA0EhAKDHN2Y19C",
          "U1BEZWNhbBA1EhMKD3N2Y19TcGxpdFNjcmVlbhA2EhYKEnN2Y19QYWNrZXRF",
          "bnRpdGllcxA3EhAKDHN2Y19QcmVmZXRjaBA4EgwKCHN2Y19NZW51EDkSFAoQ",
          "c3ZjX0dldEN2YXJWYWx1ZRA6EhEKDXN2Y19TdG9wU291bmQQOxIQCgxzdmNf",
          "UGVlckxpc3QQPBIWChJzdmNfUGFja2V0UmVsaWFibGUQPRISCg5zdmNfSExU",
          "VlN0YXR1cxA+EhUKEXN2Y19TZXJ2ZXJTdGVhbUlEED8SFgoSc3ZjX0Z1bGxG",
          "cmFtZVNwbGl0EEYSGQoVc3ZjX1Jjb25TZXJ2ZXJEZXRhaWxzEEcSEwoPc3Zj",
          "X1VzZXJNZXNzYWdlEEgSGQoVc3ZjX0Jyb2FkY2FzdF9Db21tYW5kEEoSHwob",
          "c3ZjX0hsdHZGaXh1cE9wZXJhdG9yU3RhdHVzEEsSEAoMc3ZjX1VzZXJDbWRz",
          "EEwqZwoRVm9pY2VEYXRhRm9ybWF0X3QSGgoWVk9JQ0VEQVRBX0ZPUk1BVF9T",
          "VEVBTRAAEhsKF1ZPSUNFREFUQV9GT1JNQVRfRU5HSU5FEAESGQoVVk9JQ0VE",
          "QVRBX0ZPUk1BVF9PUFVTEAIqQgoOUmVxdWVzdFBhdXNlX3QSDAoIUlBfUEFV",
          "U0UQABIOCgpSUF9VTlBBVVNFEAESEgoOUlBfVE9HR0xFUEFVU0UQAiodCgxQ",
          "cmVmZXRjaFR5cGUSDQoJUEZUX1NPVU5EEAAqVgoXRVNwbGl0U2NyZWVuTWVz",
          "c2FnZVR5cGUSGwoXTVNHX1NQTElUU0NSRUVOX0FERFVTRVIQABIeChpNU0df",
          "U1BMSVRTQ1JFRU5fUkVNT1ZFVVNFUhABKrMBChVFUXVlcnlDdmFyVmFsdWVT",
          "dGF0dXMSJQohZVF1ZXJ5Q3ZhclZhbHVlU3RhdHVzX1ZhbHVlSW50YWN0EAAS",
          "JgoiZVF1ZXJ5Q3ZhclZhbHVlU3RhdHVzX0N2YXJOb3RGb3VuZBABEiIKHmVR",
          "dWVyeUN2YXJWYWx1ZVN0YXR1c19Ob3RBQ3ZhchACEicKI2VRdWVyeUN2YXJW",
          "YWx1ZVN0YXR1c19DdmFyUHJvdGVjdGVkEAMqaAoLRElBTE9HX1RZUEUSDgoK",
          "RElBTE9HX01TRxAAEg8KC0RJQUxPR19NRU5VEAESDwoLRElBTE9HX1RFWFQQ",
          "AhIQCgxESUFMT0dfRU5UUlkQAxIVChFESUFMT0dfQVNLQ09OTkVDVBAEKisK",
          "GVNWQ19NZXNzYWdlc19Mb3dGcmVxdWVuY3kSDgoJc3ZjX2R1bW15ENgEKmEK",
          "FkJpZGlyZWN0aW9uYWxfTWVzc2FnZXMSGwoXYmlfUmVicm9hZGNhc3RHYW1l",
          "RXZlbnQQEBIYChRiaV9SZWJyb2FkY2FzdFNvdXJjZRAREhAKDGJpX0dhbWVF",
          "dmVudBASKk0KI0JpZGlyZWN0aW9uYWxfTWVzc2FnZXNfTG93RnJlcXVlbmN5",
          "EhEKDGJpX1JlbGF5SW5mbxC8BRITCg5iaV9SZWxheVBhY2tldBC9BSqhAQoR",
          "UmVwbGF5RXZlbnRUeXBlX3QSFwoTUkVQTEFZX0VWRU5UX0NBTkNFTBAAEhYK",
          "ElJFUExBWV9FVkVOVF9ERUFUSBABEhgKFFJFUExBWV9FVkVOVF9HRU5FUklD",
          "EAISJwojUkVQTEFZX0VWRU5UX1NUVUNLX05FRURfRlVMTF9VUERBVEUQAxIY",
          "ChRSRVBMQVlfRVZFTlRfVklDVE9SWRAE"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetworkbasetypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CLC_Messages), typeof(global::SVC_Messages), typeof(global::VoiceDataFormat_t), typeof(global::RequestPause_t), typeof(global::PrefetchType), typeof(global::ESplitScreenMessageType), typeof(global::EQueryCvarValueStatus), typeof(global::DIALOG_TYPE), typeof(global::SVC_Messages_LowFrequency), typeof(global::Bidirectional_Messages), typeof(global::Bidirectional_Messages_LowFrequency), typeof(global::ReplayEventType_t), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_ClientInfo), global::CCLCMsg_ClientInfo.Parser, new[]{ "SendTableCrc", "ServerCount", "IsHltv", "FriendsId", "FriendsName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_Move), global::CCLCMsg_Move.Parser, new[]{ "Data", "LastCommandNumber" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgVoiceAudio), global::CMsgVoiceAudio.Parser, new[]{ "Format", "VoiceData", "SequenceBytes", "SectionNumber", "SampleRate", "UncompressedSampleOffset", "NumPackets", "PacketOffsets", "VoiceLevel" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_VoiceData), global::CCLCMsg_VoiceData.Parser, new[]{ "Audio", "Xuid", "Tick" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_BaselineAck), global::CCLCMsg_BaselineAck.Parser, new[]{ "BaselineTick", "BaselineNr" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_ListenEvents), global::CCLCMsg_ListenEvents.Parser, new[]{ "EventMask" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_RespondCvarValue), global::CCLCMsg_RespondCvarValue.Parser, new[]{ "Cookie", "StatusCode", "Name", "Value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_FileCRCCheck), global::CCLCMsg_FileCRCCheck.Parser, new[]{ "CodePath", "Path", "CodeFilename", "Filename", "Crc" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_LoadingProgress), global::CCLCMsg_LoadingProgress.Parser, new[]{ "Progress" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_SplitPlayerConnect), global::CCLCMsg_SplitPlayerConnect.Parser, new[]{ "Playername" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_SplitPlayerDisconnect), global::CCLCMsg_SplitPlayerDisconnect.Parser, new[]{ "Slot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_ServerStatus), global::CCLCMsg_ServerStatus.Parser, new[]{ "Simplified" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_RequestPause), global::CCLCMsg_RequestPause.Parser, new[]{ "PauseType", "PauseGroup" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_CmdKeyValues), global::CCLCMsg_CmdKeyValues.Parser, new[]{ "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_RconServerDetails), global::CCLCMsg_RconServerDetails.Parser, new[]{ "Token" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSource2SystemSpecs), global::CMsgSource2SystemSpecs.Parser, new[]{ "CpuId", "CpuBrand", "CpuModel", "CpuNumPhysical", "RamPhysicalTotalMb", "GpuRendersystemDllName", "GpuVendorId", "GpuDriverName", "GpuDriverVersionHigh", "GpuDriverVersionLow", "GpuDxSupportLevel", "GpuTextureMemorySizeMb" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSource2VProfLiteReportItem), global::CMsgSource2VProfLiteReportItem.Parser, new[]{ "Name", "ActiveSamples", "UsecMax", "UsecAvgActive", "UsecP50Active", "UsecP99Active", "UsecAvgAll", "UsecP50All", "UsecP99All" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgSource2VProfLiteReport), global::CMsgSource2VProfLiteReport.Parser, new[]{ "Total", "Items", "DiscardedFrames" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_Diagnostic), global::CCLCMsg_Diagnostic.Parser, new[]{ "SystemSpecs", "VprofReport" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSource2Metrics_MatchPerfSummary_Notification), global::CSource2Metrics_MatchPerfSummary_Notification.Parser, new[]{ "Appid", "GameMode", "ServerBuildId", "ServerProfile", "Clients", "Map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client), global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client.Parser, new[]{ "SystemSpecs", "Profile", "BuildId", "Steamid" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_ServerInfo), global::CSVCMsg_ServerInfo.Parser, new[]{ "Protocol", "ServerCount", "IsDedicated", "IsHltv", "COs", "MaxClients", "MaxClasses", "PlayerSlot", "TickInterval", "GameDir", "MapName", "SkyName", "HostName", "AddonName", "GameSessionConfig", "GameSessionManifest" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_ClassInfo), global::CSVCMsg_ClassInfo.Parser, new[]{ "CreateOnClient", "Classes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_ClassInfo.Types.class_t), global::CSVCMsg_ClassInfo.Types.class_t.Parser, new[]{ "ClassId", "ClassName" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_SetPause), global::CSVCMsg_SetPause.Parser, new[]{ "Paused" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_VoiceInit), global::CSVCMsg_VoiceInit.Parser, new[]{ "Quality", "Codec", "Version" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Print), global::CSVCMsg_Print.Parser, new[]{ "Text" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Sounds), global::CSVCMsg_Sounds.Parser, new[]{ "ReliableSound", "Sounds" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Sounds.Types.sounddata_t), global::CSVCMsg_Sounds.Types.sounddata_t.Parser, new[]{ "OriginX", "OriginY", "OriginZ", "Volume", "DelayValue", "SequenceNumber", "EntityIndex", "Channel", "Pitch", "Flags", "SoundNum", "SoundNumHandle", "SpeakerEntity", "RandomSeed", "SoundLevel", "IsSentence", "IsAmbient", "Guid", "SoundResourceId" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Prefetch), global::CSVCMsg_Prefetch.Parser, new[]{ "SoundIndex", "ResourceType" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_SetView), global::CSVCMsg_SetView.Parser, new[]{ "EntityIndex", "Slot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_FixAngle), global::CSVCMsg_FixAngle.Parser, new[]{ "Relative", "Angle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_CrosshairAngle), global::CSVCMsg_CrosshairAngle.Parser, new[]{ "Angle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_BSPDecal), global::CSVCMsg_BSPDecal.Parser, new[]{ "Pos", "DecalTextureIndex", "EntityIndex", "ModelIndex", "LowPriority" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_SplitScreen), global::CSVCMsg_SplitScreen.Parser, new[]{ "Type", "Slot", "PlayerIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GetCvarValue), global::CSVCMsg_GetCvarValue.Parser, new[]{ "Cookie", "CvarName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Menu), global::CSVCMsg_Menu.Parser, new[]{ "DialogType", "MenuKeyValues" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_UserMessage), global::CSVCMsg_UserMessage.Parser, new[]{ "MsgType", "MsgData", "Passthrough" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_SendTable), global::CSVCMsg_SendTable.Parser, new[]{ "IsEnd", "NetTableName", "NeedsDecoder", "Props" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_SendTable.Types.sendprop_t), global::CSVCMsg_SendTable.Types.sendprop_t.Parser, new[]{ "Type", "VarName", "Flags", "Priority", "DtName", "NumElements", "LowValue", "HighValue", "NumBits" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameEventList), global::CSVCMsg_GameEventList.Parser, new[]{ "Descriptors" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameEventList.Types.key_t), global::CSVCMsg_GameEventList.Types.key_t.Parser, new[]{ "Type", "Name" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameEventList.Types.descriptor_t), global::CSVCMsg_GameEventList.Types.descriptor_t.Parser, new[]{ "Eventid", "Name", "Keys" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_PacketEntities), global::CSVCMsg_PacketEntities.Parser, new[]{ "MaxEntries", "UpdatedEntries", "LegacyIsDelta", "UpdateBaseline", "Baseline", "DeltaFrom", "EntityData", "PendingFullFrame", "ActiveSpawngroupHandle", "MaxSpawngroupCreationsequence", "LastCmdNumberExecuted", "LastCmdNumberRecvDelta", "ServerTick", "SerializedEntities", "AlternateBaselines", "HasPvsVisBits", "CmdRecvStatus", "NonTransmittedEntities", "CqStarvedCommandTicks", "CqDiscardedCommandTicks", "DevPadding" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_PacketEntities.Types.alternate_baseline_t), global::CSVCMsg_PacketEntities.Types.alternate_baseline_t.Parser, new[]{ "EntityIndex", "BaselineIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t), global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t.Parser, new[]{ "HeaderCount", "Data" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_TempEntities), global::CSVCMsg_TempEntities.Parser, new[]{ "Reliable", "NumEntries", "EntityData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_CreateStringTable), global::CSVCMsg_CreateStringTable.Parser, new[]{ "Name", "NumEntries", "UserDataFixedSize", "UserDataSize", "UserDataSizeBits", "Flags", "StringData", "UncompressedSize", "DataCompressed", "UsingVarintBitcounts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_UpdateStringTable), global::CSVCMsg_UpdateStringTable.Parser, new[]{ "TableId", "NumChangedEntries", "StringData" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_VoiceData), global::CSVCMsg_VoiceData.Parser, new[]{ "Audio", "Client", "Proximity", "Xuid", "AudibleMask", "Tick", "Passthrough" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_PacketReliable), global::CSVCMsg_PacketReliable.Parser, new[]{ "Tick", "Messagessize", "State" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_FullFrameSplit), global::CSVCMsg_FullFrameSplit.Parser, new[]{ "Tick", "Section", "Total", "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_HLTVStatus), global::CSVCMsg_HLTVStatus.Parser, new[]{ "Master", "Clients", "Slots", "Proxies" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_ServerSteamID), global::CSVCMsg_ServerSteamID.Parser, new[]{ "SteamId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_CmdKeyValues), global::CSVCMsg_CmdKeyValues.Parser, new[]{ "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_RconServerDetails), global::CSVCMsg_RconServerDetails.Parser, new[]{ "Token", "Details" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgIPCAddress), global::CMsgIPCAddress.Parser, new[]{ "ComputerGuid", "ProcessId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerPeer), global::CMsgServerPeer.Parser, new[]{ "PlayerSlot", "Steamid", "Ipc", "TheyHearYou", "YouHearThem", "IsListenserverHost" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_PeerList), global::CSVCMsg_PeerList.Parser, new[]{ "Peer" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_ClearAllStringTables), global::CSVCMsg_ClearAllStringTables.Parser, new[]{ "Mapname", "CreateTablesSkipped" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProtoFlattenedSerializerField_t), global::ProtoFlattenedSerializerField_t.Parser, new[]{ "VarTypeSym", "VarNameSym", "BitCount", "LowValue", "HighValue", "EncodeFlags", "FieldSerializerNameSym", "FieldSerializerVersion", "SendNodeSym", "VarEncoderSym", "PolymorphicTypes", "VarSerializerSym" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t), global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t.Parser, new[]{ "PolymorphicFieldSerializerNameSym", "PolymorphicFieldSerializerVersion" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProtoFlattenedSerializer_t), global::ProtoFlattenedSerializer_t.Parser, new[]{ "SerializerNameSym", "SerializerVersion", "FieldsIndex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_FlattenedSerializer), global::CSVCMsg_FlattenedSerializer.Parser, new[]{ "Serializers", "Symbols", "Fields" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_StopSound), global::CSVCMsg_StopSound.Parser, new[]{ "Guid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CBidirMsg_RebroadcastGameEvent), global::CBidirMsg_RebroadcastGameEvent.Parser, new[]{ "Posttoserver", "Buftype", "Clientbitcount", "Receivingclients" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CBidirMsg_RebroadcastSource), global::CBidirMsg_RebroadcastSource.Parser, new[]{ "Eventsource" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerNetworkStats), global::CMsgServerNetworkStats.Parser, new[]{ "Dedicated", "CpuUsage", "MemoryUsedMb", "MemoryFreeMb", "Uptime", "SpawnCount", "NumClients", "NumBots", "NumSpectators", "NumTvRelays", "Fps", "Ports", "AvgPingMs", "AvgEngineLatencyOut", "AvgPacketsOut", "AvgPacketsIn", "AvgLossOut", "AvgLossIn", "AvgDataOut", "AvgDataIn", "TotalDataIn", "TotalPacketsIn", "TotalDataOut", "TotalPacketsOut", "Players" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerNetworkStats.Types.Port), global::CMsgServerNetworkStats.Types.Port.Parser, new[]{ "Port_", "Name" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerNetworkStats.Types.Player), global::CMsgServerNetworkStats.Types.Player.Parser, new[]{ "Steamid", "RemoteAddr", "PingAvgMs", "PacketLossPct", "IsBot", "LossIn", "LossOut", "EngineLatencyMs" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_HltvReplay), global::CSVCMsg_HltvReplay.Parser, new[]{ "Delay", "PrimaryTarget", "ReplayStopAt", "ReplayStartAt", "ReplaySlowdownBegin", "ReplaySlowdownEnd", "ReplaySlowdownRate", "Reason" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_HltvReplay), global::CCLCMsg_HltvReplay.Parser, new[]{ "Request", "SlowdownLength", "SlowdownRate", "PrimaryTarget", "EventTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_Broadcast_Command), global::CSVCMsg_Broadcast_Command.Parser, new[]{ "Cmd" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CCLCMsg_HltvFixupOperatorTick), global::CCLCMsg_HltvFixupOperatorTick.Parser, new[]{ "Tick", "PropsData", "Origin", "EyeAngles", "ObserverMode", "CameramanScoreboard", "ObserverTarget", "ViewOffset" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_HltvFixupOperatorStatus), global::CSVCMsg_HltvFixupOperatorStatus.Parser, new[]{ "Mode", "OverrideOperatorName" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerUserCmd), global::CMsgServerUserCmd.Parser, new[]{ "Data", "CmdNumber", "PlayerSlot", "ServerTickExecuted", "ClientTick" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_UserCommands), global::CSVCMsg_UserCommands.Parser, new[]{ "Commands" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum CLC_Messages {
  [pbr::OriginalName("clc_ClientInfo")] ClcClientInfo = 20,
  [pbr::OriginalName("clc_Move")] ClcMove = 21,
  [pbr::OriginalName("clc_VoiceData")] ClcVoiceData = 22,
  [pbr::OriginalName("clc_BaselineAck")] ClcBaselineAck = 23,
  [pbr::OriginalName("clc_RespondCvarValue")] ClcRespondCvarValue = 25,
  [pbr::OriginalName("clc_FileCRCCheck")] ClcFileCrccheck = 26,
  [pbr::OriginalName("clc_LoadingProgress")] ClcLoadingProgress = 27,
  [pbr::OriginalName("clc_SplitPlayerConnect")] ClcSplitPlayerConnect = 28,
  [pbr::OriginalName("clc_SplitPlayerDisconnect")] ClcSplitPlayerDisconnect = 30,
  [pbr::OriginalName("clc_ServerStatus")] ClcServerStatus = 31,
  [pbr::OriginalName("clc_RequestPause")] ClcRequestPause = 33,
  [pbr::OriginalName("clc_CmdKeyValues")] ClcCmdKeyValues = 34,
  [pbr::OriginalName("clc_RconServerDetails")] ClcRconServerDetails = 35,
  [pbr::OriginalName("clc_HltvReplay")] ClcHltvReplay = 36,
  [pbr::OriginalName("clc_Diagnostic")] ClcDiagnostic = 37,
}

public enum SVC_Messages {
  [pbr::OriginalName("svc_ServerInfo")] SvcServerInfo = 40,
  [pbr::OriginalName("svc_FlattenedSerializer")] SvcFlattenedSerializer = 41,
  [pbr::OriginalName("svc_ClassInfo")] SvcClassInfo = 42,
  [pbr::OriginalName("svc_SetPause")] SvcSetPause = 43,
  [pbr::OriginalName("svc_CreateStringTable")] SvcCreateStringTable = 44,
  [pbr::OriginalName("svc_UpdateStringTable")] SvcUpdateStringTable = 45,
  [pbr::OriginalName("svc_VoiceInit")] SvcVoiceInit = 46,
  [pbr::OriginalName("svc_VoiceData")] SvcVoiceData = 47,
  [pbr::OriginalName("svc_Print")] SvcPrint = 48,
  [pbr::OriginalName("svc_Sounds")] SvcSounds = 49,
  [pbr::OriginalName("svc_SetView")] SvcSetView = 50,
  [pbr::OriginalName("svc_ClearAllStringTables")] SvcClearAllStringTables = 51,
  [pbr::OriginalName("svc_CmdKeyValues")] SvcCmdKeyValues = 52,
  [pbr::OriginalName("svc_BSPDecal")] SvcBspdecal = 53,
  [pbr::OriginalName("svc_SplitScreen")] SvcSplitScreen = 54,
  [pbr::OriginalName("svc_PacketEntities")] SvcPacketEntities = 55,
  [pbr::OriginalName("svc_Prefetch")] SvcPrefetch = 56,
  [pbr::OriginalName("svc_Menu")] SvcMenu = 57,
  [pbr::OriginalName("svc_GetCvarValue")] SvcGetCvarValue = 58,
  [pbr::OriginalName("svc_StopSound")] SvcStopSound = 59,
  [pbr::OriginalName("svc_PeerList")] SvcPeerList = 60,
  [pbr::OriginalName("svc_PacketReliable")] SvcPacketReliable = 61,
  [pbr::OriginalName("svc_HLTVStatus")] SvcHltvstatus = 62,
  [pbr::OriginalName("svc_ServerSteamID")] SvcServerSteamId = 63,
  [pbr::OriginalName("svc_FullFrameSplit")] SvcFullFrameSplit = 70,
  [pbr::OriginalName("svc_RconServerDetails")] SvcRconServerDetails = 71,
  [pbr::OriginalName("svc_UserMessage")] SvcUserMessage = 72,
  [pbr::OriginalName("svc_Broadcast_Command")] SvcBroadcastCommand = 74,
  [pbr::OriginalName("svc_HltvFixupOperatorStatus")] SvcHltvFixupOperatorStatus = 75,
  [pbr::OriginalName("svc_UserCmds")] SvcUserCmds = 76,
}

public enum VoiceDataFormat_t {
  [pbr::OriginalName("VOICEDATA_FORMAT_STEAM")] VoicedataFormatSteam = 0,
  [pbr::OriginalName("VOICEDATA_FORMAT_ENGINE")] VoicedataFormatEngine = 1,
  [pbr::OriginalName("VOICEDATA_FORMAT_OPUS")] VoicedataFormatOpus = 2,
}

public enum RequestPause_t {
  [pbr::OriginalName("RP_PAUSE")] RpPause = 0,
  [pbr::OriginalName("RP_UNPAUSE")] RpUnpause = 1,
  [pbr::OriginalName("RP_TOGGLEPAUSE")] RpTogglepause = 2,
}

public enum PrefetchType {
  [pbr::OriginalName("PFT_SOUND")] PftSound = 0,
}

public enum ESplitScreenMessageType {
  [pbr::OriginalName("MSG_SPLITSCREEN_ADDUSER")] MsgSplitscreenAdduser = 0,
  [pbr::OriginalName("MSG_SPLITSCREEN_REMOVEUSER")] MsgSplitscreenRemoveuser = 1,
}

public enum EQueryCvarValueStatus {
  [pbr::OriginalName("eQueryCvarValueStatus_ValueIntact")] ValueIntact = 0,
  [pbr::OriginalName("eQueryCvarValueStatus_CvarNotFound")] CvarNotFound = 1,
  [pbr::OriginalName("eQueryCvarValueStatus_NotACvar")] NotAcvar = 2,
  [pbr::OriginalName("eQueryCvarValueStatus_CvarProtected")] CvarProtected = 3,
}

public enum DIALOG_TYPE {
  [pbr::OriginalName("DIALOG_MSG")] DialogMsg = 0,
  [pbr::OriginalName("DIALOG_MENU")] DialogMenu = 1,
  [pbr::OriginalName("DIALOG_TEXT")] DialogText = 2,
  [pbr::OriginalName("DIALOG_ENTRY")] DialogEntry = 3,
  [pbr::OriginalName("DIALOG_ASKCONNECT")] DialogAskconnect = 4,
}

public enum SVC_Messages_LowFrequency {
  [pbr::OriginalName("svc_dummy")] SvcDummy = 600,
}

public enum Bidirectional_Messages {
  [pbr::OriginalName("bi_RebroadcastGameEvent")] BiRebroadcastGameEvent = 16,
  [pbr::OriginalName("bi_RebroadcastSource")] BiRebroadcastSource = 17,
  [pbr::OriginalName("bi_GameEvent")] BiGameEvent = 18,
}

public enum Bidirectional_Messages_LowFrequency {
  [pbr::OriginalName("bi_RelayInfo")] BiRelayInfo = 700,
  [pbr::OriginalName("bi_RelayPacket")] BiRelayPacket = 701,
}

public enum ReplayEventType_t {
  [pbr::OriginalName("REPLAY_EVENT_CANCEL")] ReplayEventCancel = 0,
  [pbr::OriginalName("REPLAY_EVENT_DEATH")] ReplayEventDeath = 1,
  [pbr::OriginalName("REPLAY_EVENT_GENERIC")] ReplayEventGeneric = 2,
  [pbr::OriginalName("REPLAY_EVENT_STUCK_NEED_FULL_UPDATE")] ReplayEventStuckNeedFullUpdate = 3,
  [pbr::OriginalName("REPLAY_EVENT_VICTORY")] ReplayEventVictory = 4,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_ClientInfo : pb::IMessage<CCLCMsg_ClientInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_ClientInfo> _parser = new pb::MessageParser<CCLCMsg_ClientInfo>(() => new CCLCMsg_ClientInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_ClientInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ClientInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ClientInfo(CCLCMsg_ClientInfo other) : this() {
    _hasBits0 = other._hasBits0;
    sendTableCrc_ = other.sendTableCrc_;
    serverCount_ = other.serverCount_;
    isHltv_ = other.isHltv_;
    friendsId_ = other.friendsId_;
    friendsName_ = other.friendsName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ClientInfo Clone() {
    return new CCLCMsg_ClientInfo(this);
  }

  /// <summary>Field number for the "send_table_crc" field.</summary>
  public const int SendTableCrcFieldNumber = 1;
  private readonly static uint SendTableCrcDefaultValue = 0;

  private uint sendTableCrc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SendTableCrc {
    get { if ((_hasBits0 & 1) != 0) { return sendTableCrc_; } else { return SendTableCrcDefaultValue; } }
    set {
      _hasBits0 |= 1;
      sendTableCrc_ = value;
    }
  }
  /// <summary>Gets whether the "send_table_crc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSendTableCrc {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "send_table_crc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSendTableCrc() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "server_count" field.</summary>
  public const int ServerCountFieldNumber = 2;
  private readonly static uint ServerCountDefaultValue = 0;

  private uint serverCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerCount {
    get { if ((_hasBits0 & 2) != 0) { return serverCount_; } else { return ServerCountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverCount_ = value;
    }
  }
  /// <summary>Gets whether the "server_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerCount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "server_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerCount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "is_hltv" field.</summary>
  public const int IsHltvFieldNumber = 3;
  private readonly static bool IsHltvDefaultValue = false;

  private bool isHltv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsHltv {
    get { if ((_hasBits0 & 4) != 0) { return isHltv_; } else { return IsHltvDefaultValue; } }
    set {
      _hasBits0 |= 4;
      isHltv_ = value;
    }
  }
  /// <summary>Gets whether the "is_hltv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsHltv {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "is_hltv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsHltv() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "friends_id" field.</summary>
  public const int FriendsIdFieldNumber = 5;
  private readonly static uint FriendsIdDefaultValue = 0;

  private uint friendsId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint FriendsId {
    get { if ((_hasBits0 & 8) != 0) { return friendsId_; } else { return FriendsIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      friendsId_ = value;
    }
  }
  /// <summary>Gets whether the "friends_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFriendsId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "friends_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFriendsId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "friends_name" field.</summary>
  public const int FriendsNameFieldNumber = 6;
  private readonly static string FriendsNameDefaultValue = "";

  private string friendsName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FriendsName {
    get { return friendsName_ ?? FriendsNameDefaultValue; }
    set {
      friendsName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "friends_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFriendsName {
    get { return friendsName_ != null; }
  }
  /// <summary>Clears the value of the "friends_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFriendsName() {
    friendsName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_ClientInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_ClientInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SendTableCrc != other.SendTableCrc) return false;
    if (ServerCount != other.ServerCount) return false;
    if (IsHltv != other.IsHltv) return false;
    if (FriendsId != other.FriendsId) return false;
    if (FriendsName != other.FriendsName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSendTableCrc) hash ^= SendTableCrc.GetHashCode();
    if (HasServerCount) hash ^= ServerCount.GetHashCode();
    if (HasIsHltv) hash ^= IsHltv.GetHashCode();
    if (HasFriendsId) hash ^= FriendsId.GetHashCode();
    if (HasFriendsName) hash ^= FriendsName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSendTableCrc) {
      output.WriteRawTag(13);
      output.WriteFixed32(SendTableCrc);
    }
    if (HasServerCount) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServerCount);
    }
    if (HasIsHltv) {
      output.WriteRawTag(24);
      output.WriteBool(IsHltv);
    }
    if (HasFriendsId) {
      output.WriteRawTag(40);
      output.WriteUInt32(FriendsId);
    }
    if (HasFriendsName) {
      output.WriteRawTag(50);
      output.WriteString(FriendsName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSendTableCrc) {
      output.WriteRawTag(13);
      output.WriteFixed32(SendTableCrc);
    }
    if (HasServerCount) {
      output.WriteRawTag(16);
      output.WriteUInt32(ServerCount);
    }
    if (HasIsHltv) {
      output.WriteRawTag(24);
      output.WriteBool(IsHltv);
    }
    if (HasFriendsId) {
      output.WriteRawTag(40);
      output.WriteUInt32(FriendsId);
    }
    if (HasFriendsName) {
      output.WriteRawTag(50);
      output.WriteString(FriendsName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSendTableCrc) {
      size += 1 + 4;
    }
    if (HasServerCount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerCount);
    }
    if (HasIsHltv) {
      size += 1 + 1;
    }
    if (HasFriendsId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendsId);
    }
    if (HasFriendsName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendsName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_ClientInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasSendTableCrc) {
      SendTableCrc = other.SendTableCrc;
    }
    if (other.HasServerCount) {
      ServerCount = other.ServerCount;
    }
    if (other.HasIsHltv) {
      IsHltv = other.IsHltv;
    }
    if (other.HasFriendsId) {
      FriendsId = other.FriendsId;
    }
    if (other.HasFriendsName) {
      FriendsName = other.FriendsName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          SendTableCrc = input.ReadFixed32();
          break;
        }
        case 16: {
          ServerCount = input.ReadUInt32();
          break;
        }
        case 24: {
          IsHltv = input.ReadBool();
          break;
        }
        case 40: {
          FriendsId = input.ReadUInt32();
          break;
        }
        case 50: {
          FriendsName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          SendTableCrc = input.ReadFixed32();
          break;
        }
        case 16: {
          ServerCount = input.ReadUInt32();
          break;
        }
        case 24: {
          IsHltv = input.ReadBool();
          break;
        }
        case 40: {
          FriendsId = input.ReadUInt32();
          break;
        }
        case 50: {
          FriendsName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_Move : pb::IMessage<CCLCMsg_Move>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_Move> _parser = new pb::MessageParser<CCLCMsg_Move>(() => new CCLCMsg_Move());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_Move> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Move() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Move(CCLCMsg_Move other) : this() {
    _hasBits0 = other._hasBits0;
    data_ = other.data_;
    lastCommandNumber_ = other.lastCommandNumber_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Move Clone() {
    return new CCLCMsg_Move(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  /// <summary>Field number for the "last_command_number" field.</summary>
  public const int LastCommandNumberFieldNumber = 4;
  private readonly static uint LastCommandNumberDefaultValue = 0;

  private uint lastCommandNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastCommandNumber {
    get { if ((_hasBits0 & 1) != 0) { return lastCommandNumber_; } else { return LastCommandNumberDefaultValue; } }
    set {
      _hasBits0 |= 1;
      lastCommandNumber_ = value;
    }
  }
  /// <summary>Gets whether the "last_command_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastCommandNumber {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "last_command_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastCommandNumber() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_Move);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_Move other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Data != other.Data) return false;
    if (LastCommandNumber != other.LastCommandNumber) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasData) hash ^= Data.GetHashCode();
    if (HasLastCommandNumber) hash ^= LastCommandNumber.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasData) {
      output.WriteRawTag(26);
      output.WriteBytes(Data);
    }
    if (HasLastCommandNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(LastCommandNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasData) {
      output.WriteRawTag(26);
      output.WriteBytes(Data);
    }
    if (HasLastCommandNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(LastCommandNumber);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (HasLastCommandNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastCommandNumber);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_Move other) {
    if (other == null) {
      return;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    if (other.HasLastCommandNumber) {
      LastCommandNumber = other.LastCommandNumber;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 26: {
          Data = input.ReadBytes();
          break;
        }
        case 32: {
          LastCommandNumber = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 26: {
          Data = input.ReadBytes();
          break;
        }
        case 32: {
          LastCommandNumber = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgVoiceAudio : pb::IMessage<CMsgVoiceAudio>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgVoiceAudio> _parser = new pb::MessageParser<CMsgVoiceAudio>(() => new CMsgVoiceAudio());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgVoiceAudio> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVoiceAudio() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVoiceAudio(CMsgVoiceAudio other) : this() {
    _hasBits0 = other._hasBits0;
    format_ = other.format_;
    voiceData_ = other.voiceData_;
    sequenceBytes_ = other.sequenceBytes_;
    sectionNumber_ = other.sectionNumber_;
    sampleRate_ = other.sampleRate_;
    uncompressedSampleOffset_ = other.uncompressedSampleOffset_;
    numPackets_ = other.numPackets_;
    packetOffsets_ = other.packetOffsets_.Clone();
    voiceLevel_ = other.voiceLevel_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVoiceAudio Clone() {
    return new CMsgVoiceAudio(this);
  }

  /// <summary>Field number for the "format" field.</summary>
  public const int FormatFieldNumber = 1;
  private readonly static global::VoiceDataFormat_t FormatDefaultValue = global::VoiceDataFormat_t.VoicedataFormatSteam;

  private global::VoiceDataFormat_t format_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::VoiceDataFormat_t Format {
    get { if ((_hasBits0 & 1) != 0) { return format_; } else { return FormatDefaultValue; } }
    set {
      _hasBits0 |= 1;
      format_ = value;
    }
  }
  /// <summary>Gets whether the "format" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFormat {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "format" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFormat() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "voice_data" field.</summary>
  public const int VoiceDataFieldNumber = 2;
  private readonly static pb::ByteString VoiceDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString voiceData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString VoiceData {
    get { return voiceData_ ?? VoiceDataDefaultValue; }
    set {
      voiceData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "voice_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVoiceData {
    get { return voiceData_ != null; }
  }
  /// <summary>Clears the value of the "voice_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVoiceData() {
    voiceData_ = null;
  }

  /// <summary>Field number for the "sequence_bytes" field.</summary>
  public const int SequenceBytesFieldNumber = 3;
  private readonly static int SequenceBytesDefaultValue = 0;

  private int sequenceBytes_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SequenceBytes {
    get { if ((_hasBits0 & 2) != 0) { return sequenceBytes_; } else { return SequenceBytesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      sequenceBytes_ = value;
    }
  }
  /// <summary>Gets whether the "sequence_bytes" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSequenceBytes {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "sequence_bytes" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSequenceBytes() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "section_number" field.</summary>
  public const int SectionNumberFieldNumber = 4;
  private readonly static uint SectionNumberDefaultValue = 0;

  private uint sectionNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SectionNumber {
    get { if ((_hasBits0 & 4) != 0) { return sectionNumber_; } else { return SectionNumberDefaultValue; } }
    set {
      _hasBits0 |= 4;
      sectionNumber_ = value;
    }
  }
  /// <summary>Gets whether the "section_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSectionNumber {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "section_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSectionNumber() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "sample_rate" field.</summary>
  public const int SampleRateFieldNumber = 5;
  private readonly static uint SampleRateDefaultValue = 0;

  private uint sampleRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SampleRate {
    get { if ((_hasBits0 & 8) != 0) { return sampleRate_; } else { return SampleRateDefaultValue; } }
    set {
      _hasBits0 |= 8;
      sampleRate_ = value;
    }
  }
  /// <summary>Gets whether the "sample_rate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSampleRate {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "sample_rate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSampleRate() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "uncompressed_sample_offset" field.</summary>
  public const int UncompressedSampleOffsetFieldNumber = 6;
  private readonly static uint UncompressedSampleOffsetDefaultValue = 0;

  private uint uncompressedSampleOffset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UncompressedSampleOffset {
    get { if ((_hasBits0 & 16) != 0) { return uncompressedSampleOffset_; } else { return UncompressedSampleOffsetDefaultValue; } }
    set {
      _hasBits0 |= 16;
      uncompressedSampleOffset_ = value;
    }
  }
  /// <summary>Gets whether the "uncompressed_sample_offset" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUncompressedSampleOffset {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "uncompressed_sample_offset" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUncompressedSampleOffset() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "num_packets" field.</summary>
  public const int NumPacketsFieldNumber = 7;
  private readonly static uint NumPacketsDefaultValue = 0;

  private uint numPackets_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NumPackets {
    get { if ((_hasBits0 & 32) != 0) { return numPackets_; } else { return NumPacketsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      numPackets_ = value;
    }
  }
  /// <summary>Gets whether the "num_packets" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumPackets {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "num_packets" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumPackets() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "packet_offsets" field.</summary>
  public const int PacketOffsetsFieldNumber = 8;
  private static readonly pb::FieldCodec<uint> _repeated_packetOffsets_codec
      = pb::FieldCodec.ForUInt32(66);
  private readonly pbc::RepeatedField<uint> packetOffsets_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> PacketOffsets {
    get { return packetOffsets_; }
  }

  /// <summary>Field number for the "voice_level" field.</summary>
  public const int VoiceLevelFieldNumber = 9;
  private readonly static float VoiceLevelDefaultValue = 0F;

  private float voiceLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float VoiceLevel {
    get { if ((_hasBits0 & 64) != 0) { return voiceLevel_; } else { return VoiceLevelDefaultValue; } }
    set {
      _hasBits0 |= 64;
      voiceLevel_ = value;
    }
  }
  /// <summary>Gets whether the "voice_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVoiceLevel {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "voice_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVoiceLevel() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgVoiceAudio);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgVoiceAudio other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Format != other.Format) return false;
    if (VoiceData != other.VoiceData) return false;
    if (SequenceBytes != other.SequenceBytes) return false;
    if (SectionNumber != other.SectionNumber) return false;
    if (SampleRate != other.SampleRate) return false;
    if (UncompressedSampleOffset != other.UncompressedSampleOffset) return false;
    if (NumPackets != other.NumPackets) return false;
    if(!packetOffsets_.Equals(other.packetOffsets_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VoiceLevel, other.VoiceLevel)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasFormat) hash ^= Format.GetHashCode();
    if (HasVoiceData) hash ^= VoiceData.GetHashCode();
    if (HasSequenceBytes) hash ^= SequenceBytes.GetHashCode();
    if (HasSectionNumber) hash ^= SectionNumber.GetHashCode();
    if (HasSampleRate) hash ^= SampleRate.GetHashCode();
    if (HasUncompressedSampleOffset) hash ^= UncompressedSampleOffset.GetHashCode();
    if (HasNumPackets) hash ^= NumPackets.GetHashCode();
    hash ^= packetOffsets_.GetHashCode();
    if (HasVoiceLevel) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VoiceLevel);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasFormat) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Format);
    }
    if (HasVoiceData) {
      output.WriteRawTag(18);
      output.WriteBytes(VoiceData);
    }
    if (HasSequenceBytes) {
      output.WriteRawTag(24);
      output.WriteInt32(SequenceBytes);
    }
    if (HasSectionNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(SectionNumber);
    }
    if (HasSampleRate) {
      output.WriteRawTag(40);
      output.WriteUInt32(SampleRate);
    }
    if (HasUncompressedSampleOffset) {
      output.WriteRawTag(48);
      output.WriteUInt32(UncompressedSampleOffset);
    }
    if (HasNumPackets) {
      output.WriteRawTag(56);
      output.WriteUInt32(NumPackets);
    }
    packetOffsets_.WriteTo(output, _repeated_packetOffsets_codec);
    if (HasVoiceLevel) {
      output.WriteRawTag(77);
      output.WriteFloat(VoiceLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasFormat) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Format);
    }
    if (HasVoiceData) {
      output.WriteRawTag(18);
      output.WriteBytes(VoiceData);
    }
    if (HasSequenceBytes) {
      output.WriteRawTag(24);
      output.WriteInt32(SequenceBytes);
    }
    if (HasSectionNumber) {
      output.WriteRawTag(32);
      output.WriteUInt32(SectionNumber);
    }
    if (HasSampleRate) {
      output.WriteRawTag(40);
      output.WriteUInt32(SampleRate);
    }
    if (HasUncompressedSampleOffset) {
      output.WriteRawTag(48);
      output.WriteUInt32(UncompressedSampleOffset);
    }
    if (HasNumPackets) {
      output.WriteRawTag(56);
      output.WriteUInt32(NumPackets);
    }
    packetOffsets_.WriteTo(ref output, _repeated_packetOffsets_codec);
    if (HasVoiceLevel) {
      output.WriteRawTag(77);
      output.WriteFloat(VoiceLevel);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasFormat) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
    }
    if (HasVoiceData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(VoiceData);
    }
    if (HasSequenceBytes) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceBytes);
    }
    if (HasSectionNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SectionNumber);
    }
    if (HasSampleRate) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SampleRate);
    }
    if (HasUncompressedSampleOffset) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UncompressedSampleOffset);
    }
    if (HasNumPackets) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumPackets);
    }
    size += packetOffsets_.CalculateSize(_repeated_packetOffsets_codec);
    if (HasVoiceLevel) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgVoiceAudio other) {
    if (other == null) {
      return;
    }
    if (other.HasFormat) {
      Format = other.Format;
    }
    if (other.HasVoiceData) {
      VoiceData = other.VoiceData;
    }
    if (other.HasSequenceBytes) {
      SequenceBytes = other.SequenceBytes;
    }
    if (other.HasSectionNumber) {
      SectionNumber = other.SectionNumber;
    }
    if (other.HasSampleRate) {
      SampleRate = other.SampleRate;
    }
    if (other.HasUncompressedSampleOffset) {
      UncompressedSampleOffset = other.UncompressedSampleOffset;
    }
    if (other.HasNumPackets) {
      NumPackets = other.NumPackets;
    }
    packetOffsets_.Add(other.packetOffsets_);
    if (other.HasVoiceLevel) {
      VoiceLevel = other.VoiceLevel;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Format = (global::VoiceDataFormat_t) input.ReadEnum();
          break;
        }
        case 18: {
          VoiceData = input.ReadBytes();
          break;
        }
        case 24: {
          SequenceBytes = input.ReadInt32();
          break;
        }
        case 32: {
          SectionNumber = input.ReadUInt32();
          break;
        }
        case 40: {
          SampleRate = input.ReadUInt32();
          break;
        }
        case 48: {
          UncompressedSampleOffset = input.ReadUInt32();
          break;
        }
        case 56: {
          NumPackets = input.ReadUInt32();
          break;
        }
        case 66:
        case 64: {
          packetOffsets_.AddEntriesFrom(input, _repeated_packetOffsets_codec);
          break;
        }
        case 77: {
          VoiceLevel = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Format = (global::VoiceDataFormat_t) input.ReadEnum();
          break;
        }
        case 18: {
          VoiceData = input.ReadBytes();
          break;
        }
        case 24: {
          SequenceBytes = input.ReadInt32();
          break;
        }
        case 32: {
          SectionNumber = input.ReadUInt32();
          break;
        }
        case 40: {
          SampleRate = input.ReadUInt32();
          break;
        }
        case 48: {
          UncompressedSampleOffset = input.ReadUInt32();
          break;
        }
        case 56: {
          NumPackets = input.ReadUInt32();
          break;
        }
        case 66:
        case 64: {
          packetOffsets_.AddEntriesFrom(ref input, _repeated_packetOffsets_codec);
          break;
        }
        case 77: {
          VoiceLevel = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_VoiceData : pb::IMessage<CCLCMsg_VoiceData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_VoiceData> _parser = new pb::MessageParser<CCLCMsg_VoiceData>(() => new CCLCMsg_VoiceData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_VoiceData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_VoiceData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_VoiceData(CCLCMsg_VoiceData other) : this() {
    _hasBits0 = other._hasBits0;
    audio_ = other.audio_ != null ? other.audio_.Clone() : null;
    xuid_ = other.xuid_;
    tick_ = other.tick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_VoiceData Clone() {
    return new CCLCMsg_VoiceData(this);
  }

  /// <summary>Field number for the "audio" field.</summary>
  public const int AudioFieldNumber = 1;
  private global::CMsgVoiceAudio audio_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVoiceAudio Audio {
    get { return audio_; }
    set {
      audio_ = value;
    }
  }

  /// <summary>Field number for the "xuid" field.</summary>
  public const int XuidFieldNumber = 2;
  private readonly static ulong XuidDefaultValue = 0UL;

  private ulong xuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Xuid {
    get { if ((_hasBits0 & 1) != 0) { return xuid_; } else { return XuidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      xuid_ = value;
    }
  }
  /// <summary>Gets whether the "xuid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXuid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "xuid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXuid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 3;
  private readonly static uint TickDefaultValue = 0;

  private uint tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Tick {
    get { if ((_hasBits0 & 2) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_VoiceData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_VoiceData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Audio, other.Audio)) return false;
    if (Xuid != other.Xuid) return false;
    if (Tick != other.Tick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (audio_ != null) hash ^= Audio.GetHashCode();
    if (HasXuid) hash ^= Xuid.GetHashCode();
    if (HasTick) hash ^= Tick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (audio_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Audio);
    }
    if (HasXuid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Xuid);
    }
    if (HasTick) {
      output.WriteRawTag(24);
      output.WriteUInt32(Tick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (audio_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Audio);
    }
    if (HasXuid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Xuid);
    }
    if (HasTick) {
      output.WriteRawTag(24);
      output.WriteUInt32(Tick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (audio_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
    }
    if (HasXuid) {
      size += 1 + 8;
    }
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tick);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_VoiceData other) {
    if (other == null) {
      return;
    }
    if (other.audio_ != null) {
      if (audio_ == null) {
        Audio = new global::CMsgVoiceAudio();
      }
      Audio.MergeFrom(other.Audio);
    }
    if (other.HasXuid) {
      Xuid = other.Xuid;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (audio_ == null) {
            Audio = new global::CMsgVoiceAudio();
          }
          input.ReadMessage(Audio);
          break;
        }
        case 17: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 24: {
          Tick = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (audio_ == null) {
            Audio = new global::CMsgVoiceAudio();
          }
          input.ReadMessage(Audio);
          break;
        }
        case 17: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 24: {
          Tick = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_BaselineAck : pb::IMessage<CCLCMsg_BaselineAck>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_BaselineAck> _parser = new pb::MessageParser<CCLCMsg_BaselineAck>(() => new CCLCMsg_BaselineAck());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_BaselineAck> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_BaselineAck() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_BaselineAck(CCLCMsg_BaselineAck other) : this() {
    _hasBits0 = other._hasBits0;
    baselineTick_ = other.baselineTick_;
    baselineNr_ = other.baselineNr_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_BaselineAck Clone() {
    return new CCLCMsg_BaselineAck(this);
  }

  /// <summary>Field number for the "baseline_tick" field.</summary>
  public const int BaselineTickFieldNumber = 1;
  private readonly static int BaselineTickDefaultValue = 0;

  private int baselineTick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BaselineTick {
    get { if ((_hasBits0 & 1) != 0) { return baselineTick_; } else { return BaselineTickDefaultValue; } }
    set {
      _hasBits0 |= 1;
      baselineTick_ = value;
    }
  }
  /// <summary>Gets whether the "baseline_tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBaselineTick {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "baseline_tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBaselineTick() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "baseline_nr" field.</summary>
  public const int BaselineNrFieldNumber = 2;
  private readonly static int BaselineNrDefaultValue = 0;

  private int baselineNr_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BaselineNr {
    get { if ((_hasBits0 & 2) != 0) { return baselineNr_; } else { return BaselineNrDefaultValue; } }
    set {
      _hasBits0 |= 2;
      baselineNr_ = value;
    }
  }
  /// <summary>Gets whether the "baseline_nr" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBaselineNr {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "baseline_nr" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBaselineNr() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_BaselineAck);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_BaselineAck other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (BaselineTick != other.BaselineTick) return false;
    if (BaselineNr != other.BaselineNr) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasBaselineTick) hash ^= BaselineTick.GetHashCode();
    if (HasBaselineNr) hash ^= BaselineNr.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasBaselineTick) {
      output.WriteRawTag(8);
      output.WriteInt32(BaselineTick);
    }
    if (HasBaselineNr) {
      output.WriteRawTag(16);
      output.WriteInt32(BaselineNr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasBaselineTick) {
      output.WriteRawTag(8);
      output.WriteInt32(BaselineTick);
    }
    if (HasBaselineNr) {
      output.WriteRawTag(16);
      output.WriteInt32(BaselineNr);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasBaselineTick) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaselineTick);
    }
    if (HasBaselineNr) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaselineNr);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_BaselineAck other) {
    if (other == null) {
      return;
    }
    if (other.HasBaselineTick) {
      BaselineTick = other.BaselineTick;
    }
    if (other.HasBaselineNr) {
      BaselineNr = other.BaselineNr;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          BaselineTick = input.ReadInt32();
          break;
        }
        case 16: {
          BaselineNr = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          BaselineTick = input.ReadInt32();
          break;
        }
        case 16: {
          BaselineNr = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_ListenEvents : pb::IMessage<CCLCMsg_ListenEvents>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_ListenEvents> _parser = new pb::MessageParser<CCLCMsg_ListenEvents>(() => new CCLCMsg_ListenEvents());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_ListenEvents> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ListenEvents() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ListenEvents(CCLCMsg_ListenEvents other) : this() {
    eventMask_ = other.eventMask_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ListenEvents Clone() {
    return new CCLCMsg_ListenEvents(this);
  }

  /// <summary>Field number for the "event_mask" field.</summary>
  public const int EventMaskFieldNumber = 1;
  private static readonly pb::FieldCodec<uint> _repeated_eventMask_codec
      = pb::FieldCodec.ForFixed32(13);
  private readonly pbc::RepeatedField<uint> eventMask_ = new pbc::RepeatedField<uint>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<uint> EventMask {
    get { return eventMask_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_ListenEvents);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_ListenEvents other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!eventMask_.Equals(other.eventMask_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= eventMask_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    eventMask_.WriteTo(output, _repeated_eventMask_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    eventMask_.WriteTo(ref output, _repeated_eventMask_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += eventMask_.CalculateSize(_repeated_eventMask_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_ListenEvents other) {
    if (other == null) {
      return;
    }
    eventMask_.Add(other.eventMask_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          eventMask_.AddEntriesFrom(input, _repeated_eventMask_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 13: {
          eventMask_.AddEntriesFrom(ref input, _repeated_eventMask_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_RespondCvarValue : pb::IMessage<CCLCMsg_RespondCvarValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_RespondCvarValue> _parser = new pb::MessageParser<CCLCMsg_RespondCvarValue>(() => new CCLCMsg_RespondCvarValue());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_RespondCvarValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RespondCvarValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RespondCvarValue(CCLCMsg_RespondCvarValue other) : this() {
    _hasBits0 = other._hasBits0;
    cookie_ = other.cookie_;
    statusCode_ = other.statusCode_;
    name_ = other.name_;
    value_ = other.value_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RespondCvarValue Clone() {
    return new CCLCMsg_RespondCvarValue(this);
  }

  /// <summary>Field number for the "cookie" field.</summary>
  public const int CookieFieldNumber = 1;
  private readonly static int CookieDefaultValue = 0;

  private int cookie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Cookie {
    get { if ((_hasBits0 & 1) != 0) { return cookie_; } else { return CookieDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cookie_ = value;
    }
  }
  /// <summary>Gets whether the "cookie" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCookie {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cookie" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCookie() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "status_code" field.</summary>
  public const int StatusCodeFieldNumber = 2;
  private readonly static int StatusCodeDefaultValue = 0;

  private int statusCode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int StatusCode {
    get { if ((_hasBits0 & 2) != 0) { return statusCode_; } else { return StatusCodeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      statusCode_ = value;
    }
  }
  /// <summary>Gets whether the "status_code" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStatusCode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "status_code" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStatusCode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 3;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int ValueFieldNumber = 4;
  private readonly static string ValueDefaultValue = "";

  private string value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Value {
    get { return value_ ?? ValueDefaultValue; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasValue {
    get { return value_ != null; }
  }
  /// <summary>Clears the value of the "value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearValue() {
    value_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_RespondCvarValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_RespondCvarValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cookie != other.Cookie) return false;
    if (StatusCode != other.StatusCode) return false;
    if (Name != other.Name) return false;
    if (Value != other.Value) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCookie) hash ^= Cookie.GetHashCode();
    if (HasStatusCode) hash ^= StatusCode.GetHashCode();
    if (HasName) hash ^= Name.GetHashCode();
    if (HasValue) hash ^= Value.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCookie) {
      output.WriteRawTag(8);
      output.WriteInt32(Cookie);
    }
    if (HasStatusCode) {
      output.WriteRawTag(16);
      output.WriteInt32(StatusCode);
    }
    if (HasName) {
      output.WriteRawTag(26);
      output.WriteString(Name);
    }
    if (HasValue) {
      output.WriteRawTag(34);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCookie) {
      output.WriteRawTag(8);
      output.WriteInt32(Cookie);
    }
    if (HasStatusCode) {
      output.WriteRawTag(16);
      output.WriteInt32(StatusCode);
    }
    if (HasName) {
      output.WriteRawTag(26);
      output.WriteString(Name);
    }
    if (HasValue) {
      output.WriteRawTag(34);
      output.WriteString(Value);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCookie) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cookie);
    }
    if (HasStatusCode) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
    }
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_RespondCvarValue other) {
    if (other == null) {
      return;
    }
    if (other.HasCookie) {
      Cookie = other.Cookie;
    }
    if (other.HasStatusCode) {
      StatusCode = other.StatusCode;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasValue) {
      Value = other.Value;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Cookie = input.ReadInt32();
          break;
        }
        case 16: {
          StatusCode = input.ReadInt32();
          break;
        }
        case 26: {
          Name = input.ReadString();
          break;
        }
        case 34: {
          Value = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Cookie = input.ReadInt32();
          break;
        }
        case 16: {
          StatusCode = input.ReadInt32();
          break;
        }
        case 26: {
          Name = input.ReadString();
          break;
        }
        case 34: {
          Value = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_FileCRCCheck : pb::IMessage<CCLCMsg_FileCRCCheck>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_FileCRCCheck> _parser = new pb::MessageParser<CCLCMsg_FileCRCCheck>(() => new CCLCMsg_FileCRCCheck());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_FileCRCCheck> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_FileCRCCheck() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_FileCRCCheck(CCLCMsg_FileCRCCheck other) : this() {
    _hasBits0 = other._hasBits0;
    codePath_ = other.codePath_;
    path_ = other.path_;
    codeFilename_ = other.codeFilename_;
    filename_ = other.filename_;
    crc_ = other.crc_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_FileCRCCheck Clone() {
    return new CCLCMsg_FileCRCCheck(this);
  }

  /// <summary>Field number for the "code_path" field.</summary>
  public const int CodePathFieldNumber = 1;
  private readonly static int CodePathDefaultValue = 0;

  private int codePath_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CodePath {
    get { if ((_hasBits0 & 1) != 0) { return codePath_; } else { return CodePathDefaultValue; } }
    set {
      _hasBits0 |= 1;
      codePath_ = value;
    }
  }
  /// <summary>Gets whether the "code_path" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCodePath {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "code_path" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCodePath() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "path" field.</summary>
  public const int PathFieldNumber = 2;
  private readonly static string PathDefaultValue = "";

  private string path_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Path {
    get { return path_ ?? PathDefaultValue; }
    set {
      path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "path" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPath {
    get { return path_ != null; }
  }
  /// <summary>Clears the value of the "path" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPath() {
    path_ = null;
  }

  /// <summary>Field number for the "code_filename" field.</summary>
  public const int CodeFilenameFieldNumber = 3;
  private readonly static int CodeFilenameDefaultValue = 0;

  private int codeFilename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CodeFilename {
    get { if ((_hasBits0 & 2) != 0) { return codeFilename_; } else { return CodeFilenameDefaultValue; } }
    set {
      _hasBits0 |= 2;
      codeFilename_ = value;
    }
  }
  /// <summary>Gets whether the "code_filename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCodeFilename {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "code_filename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCodeFilename() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "filename" field.</summary>
  public const int FilenameFieldNumber = 4;
  private readonly static string FilenameDefaultValue = "";

  private string filename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Filename {
    get { return filename_ ?? FilenameDefaultValue; }
    set {
      filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "filename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFilename {
    get { return filename_ != null; }
  }
  /// <summary>Clears the value of the "filename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFilename() {
    filename_ = null;
  }

  /// <summary>Field number for the "crc" field.</summary>
  public const int CrcFieldNumber = 5;
  private readonly static uint CrcDefaultValue = 0;

  private uint crc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Crc {
    get { if ((_hasBits0 & 4) != 0) { return crc_; } else { return CrcDefaultValue; } }
    set {
      _hasBits0 |= 4;
      crc_ = value;
    }
  }
  /// <summary>Gets whether the "crc" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCrc {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "crc" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCrc() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_FileCRCCheck);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_FileCRCCheck other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CodePath != other.CodePath) return false;
    if (Path != other.Path) return false;
    if (CodeFilename != other.CodeFilename) return false;
    if (Filename != other.Filename) return false;
    if (Crc != other.Crc) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCodePath) hash ^= CodePath.GetHashCode();
    if (HasPath) hash ^= Path.GetHashCode();
    if (HasCodeFilename) hash ^= CodeFilename.GetHashCode();
    if (HasFilename) hash ^= Filename.GetHashCode();
    if (HasCrc) hash ^= Crc.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCodePath) {
      output.WriteRawTag(8);
      output.WriteInt32(CodePath);
    }
    if (HasPath) {
      output.WriteRawTag(18);
      output.WriteString(Path);
    }
    if (HasCodeFilename) {
      output.WriteRawTag(24);
      output.WriteInt32(CodeFilename);
    }
    if (HasFilename) {
      output.WriteRawTag(34);
      output.WriteString(Filename);
    }
    if (HasCrc) {
      output.WriteRawTag(45);
      output.WriteFixed32(Crc);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCodePath) {
      output.WriteRawTag(8);
      output.WriteInt32(CodePath);
    }
    if (HasPath) {
      output.WriteRawTag(18);
      output.WriteString(Path);
    }
    if (HasCodeFilename) {
      output.WriteRawTag(24);
      output.WriteInt32(CodeFilename);
    }
    if (HasFilename) {
      output.WriteRawTag(34);
      output.WriteString(Filename);
    }
    if (HasCrc) {
      output.WriteRawTag(45);
      output.WriteFixed32(Crc);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCodePath) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodePath);
    }
    if (HasPath) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
    }
    if (HasCodeFilename) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CodeFilename);
    }
    if (HasFilename) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
    }
    if (HasCrc) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_FileCRCCheck other) {
    if (other == null) {
      return;
    }
    if (other.HasCodePath) {
      CodePath = other.CodePath;
    }
    if (other.HasPath) {
      Path = other.Path;
    }
    if (other.HasCodeFilename) {
      CodeFilename = other.CodeFilename;
    }
    if (other.HasFilename) {
      Filename = other.Filename;
    }
    if (other.HasCrc) {
      Crc = other.Crc;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CodePath = input.ReadInt32();
          break;
        }
        case 18: {
          Path = input.ReadString();
          break;
        }
        case 24: {
          CodeFilename = input.ReadInt32();
          break;
        }
        case 34: {
          Filename = input.ReadString();
          break;
        }
        case 45: {
          Crc = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CodePath = input.ReadInt32();
          break;
        }
        case 18: {
          Path = input.ReadString();
          break;
        }
        case 24: {
          CodeFilename = input.ReadInt32();
          break;
        }
        case 34: {
          Filename = input.ReadString();
          break;
        }
        case 45: {
          Crc = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_LoadingProgress : pb::IMessage<CCLCMsg_LoadingProgress>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_LoadingProgress> _parser = new pb::MessageParser<CCLCMsg_LoadingProgress>(() => new CCLCMsg_LoadingProgress());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_LoadingProgress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_LoadingProgress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_LoadingProgress(CCLCMsg_LoadingProgress other) : this() {
    _hasBits0 = other._hasBits0;
    progress_ = other.progress_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_LoadingProgress Clone() {
    return new CCLCMsg_LoadingProgress(this);
  }

  /// <summary>Field number for the "progress" field.</summary>
  public const int ProgressFieldNumber = 1;
  private readonly static int ProgressDefaultValue = 0;

  private int progress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Progress {
    get { if ((_hasBits0 & 1) != 0) { return progress_; } else { return ProgressDefaultValue; } }
    set {
      _hasBits0 |= 1;
      progress_ = value;
    }
  }
  /// <summary>Gets whether the "progress" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProgress {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "progress" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProgress() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_LoadingProgress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_LoadingProgress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Progress != other.Progress) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProgress) hash ^= Progress.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProgress) {
      output.WriteRawTag(8);
      output.WriteInt32(Progress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProgress) {
      output.WriteRawTag(8);
      output.WriteInt32(Progress);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProgress) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_LoadingProgress other) {
    if (other == null) {
      return;
    }
    if (other.HasProgress) {
      Progress = other.Progress;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Progress = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Progress = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_SplitPlayerConnect : pb::IMessage<CCLCMsg_SplitPlayerConnect>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_SplitPlayerConnect> _parser = new pb::MessageParser<CCLCMsg_SplitPlayerConnect>(() => new CCLCMsg_SplitPlayerConnect());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_SplitPlayerConnect> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerConnect() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerConnect(CCLCMsg_SplitPlayerConnect other) : this() {
    playername_ = other.playername_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerConnect Clone() {
    return new CCLCMsg_SplitPlayerConnect(this);
  }

  /// <summary>Field number for the "playername" field.</summary>
  public const int PlayernameFieldNumber = 1;
  private readonly static string PlayernameDefaultValue = "";

  private string playername_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Playername {
    get { return playername_ ?? PlayernameDefaultValue; }
    set {
      playername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "playername" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayername {
    get { return playername_ != null; }
  }
  /// <summary>Clears the value of the "playername" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayername() {
    playername_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_SplitPlayerConnect);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_SplitPlayerConnect other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Playername != other.Playername) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayername) hash ^= Playername.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayername) {
      output.WriteRawTag(10);
      output.WriteString(Playername);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayername) {
      output.WriteRawTag(10);
      output.WriteString(Playername);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayername) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Playername);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_SplitPlayerConnect other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayername) {
      Playername = other.Playername;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Playername = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Playername = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_SplitPlayerDisconnect : pb::IMessage<CCLCMsg_SplitPlayerDisconnect>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_SplitPlayerDisconnect> _parser = new pb::MessageParser<CCLCMsg_SplitPlayerDisconnect>(() => new CCLCMsg_SplitPlayerDisconnect());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_SplitPlayerDisconnect> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerDisconnect() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerDisconnect(CCLCMsg_SplitPlayerDisconnect other) : this() {
    _hasBits0 = other._hasBits0;
    slot_ = other.slot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_SplitPlayerDisconnect Clone() {
    return new CCLCMsg_SplitPlayerDisconnect(this);
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 1;
  private readonly static int SlotDefaultValue = 0;

  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Slot {
    get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return SlotDefaultValue; } }
    set {
      _hasBits0 |= 1;
      slot_ = value;
    }
  }
  /// <summary>Gets whether the "slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlot {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlot() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_SplitPlayerDisconnect);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_SplitPlayerDisconnect other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Slot != other.Slot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSlot) hash ^= Slot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_SplitPlayerDisconnect other) {
    if (other == null) {
      return;
    }
    if (other.HasSlot) {
      Slot = other.Slot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_ServerStatus : pb::IMessage<CCLCMsg_ServerStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_ServerStatus> _parser = new pb::MessageParser<CCLCMsg_ServerStatus>(() => new CCLCMsg_ServerStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_ServerStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ServerStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ServerStatus(CCLCMsg_ServerStatus other) : this() {
    _hasBits0 = other._hasBits0;
    simplified_ = other.simplified_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_ServerStatus Clone() {
    return new CCLCMsg_ServerStatus(this);
  }

  /// <summary>Field number for the "simplified" field.</summary>
  public const int SimplifiedFieldNumber = 1;
  private readonly static bool SimplifiedDefaultValue = false;

  private bool simplified_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Simplified {
    get { if ((_hasBits0 & 1) != 0) { return simplified_; } else { return SimplifiedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      simplified_ = value;
    }
  }
  /// <summary>Gets whether the "simplified" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSimplified {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "simplified" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSimplified() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_ServerStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_ServerStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Simplified != other.Simplified) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSimplified) hash ^= Simplified.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSimplified) {
      output.WriteRawTag(8);
      output.WriteBool(Simplified);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSimplified) {
      output.WriteRawTag(8);
      output.WriteBool(Simplified);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSimplified) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_ServerStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasSimplified) {
      Simplified = other.Simplified;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Simplified = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Simplified = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_RequestPause : pb::IMessage<CCLCMsg_RequestPause>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_RequestPause> _parser = new pb::MessageParser<CCLCMsg_RequestPause>(() => new CCLCMsg_RequestPause());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_RequestPause> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RequestPause() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RequestPause(CCLCMsg_RequestPause other) : this() {
    _hasBits0 = other._hasBits0;
    pauseType_ = other.pauseType_;
    pauseGroup_ = other.pauseGroup_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RequestPause Clone() {
    return new CCLCMsg_RequestPause(this);
  }

  /// <summary>Field number for the "pause_type" field.</summary>
  public const int PauseTypeFieldNumber = 1;
  private readonly static global::RequestPause_t PauseTypeDefaultValue = global::RequestPause_t.RpPause;

  private global::RequestPause_t pauseType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::RequestPause_t PauseType {
    get { if ((_hasBits0 & 1) != 0) { return pauseType_; } else { return PauseTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      pauseType_ = value;
    }
  }
  /// <summary>Gets whether the "pause_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPauseType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "pause_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPauseType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "pause_group" field.</summary>
  public const int PauseGroupFieldNumber = 2;
  private readonly static int PauseGroupDefaultValue = 0;

  private int pauseGroup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PauseGroup {
    get { if ((_hasBits0 & 2) != 0) { return pauseGroup_; } else { return PauseGroupDefaultValue; } }
    set {
      _hasBits0 |= 2;
      pauseGroup_ = value;
    }
  }
  /// <summary>Gets whether the "pause_group" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPauseGroup {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "pause_group" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPauseGroup() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_RequestPause);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_RequestPause other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PauseType != other.PauseType) return false;
    if (PauseGroup != other.PauseGroup) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPauseType) hash ^= PauseType.GetHashCode();
    if (HasPauseGroup) hash ^= PauseGroup.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPauseType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) PauseType);
    }
    if (HasPauseGroup) {
      output.WriteRawTag(16);
      output.WriteInt32(PauseGroup);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPauseType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) PauseType);
    }
    if (HasPauseGroup) {
      output.WriteRawTag(16);
      output.WriteInt32(PauseGroup);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPauseType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PauseType);
    }
    if (HasPauseGroup) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PauseGroup);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_RequestPause other) {
    if (other == null) {
      return;
    }
    if (other.HasPauseType) {
      PauseType = other.PauseType;
    }
    if (other.HasPauseGroup) {
      PauseGroup = other.PauseGroup;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PauseType = (global::RequestPause_t) input.ReadEnum();
          break;
        }
        case 16: {
          PauseGroup = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PauseType = (global::RequestPause_t) input.ReadEnum();
          break;
        }
        case 16: {
          PauseGroup = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_CmdKeyValues : pb::IMessage<CCLCMsg_CmdKeyValues>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_CmdKeyValues> _parser = new pb::MessageParser<CCLCMsg_CmdKeyValues>(() => new CCLCMsg_CmdKeyValues());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_CmdKeyValues> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_CmdKeyValues() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_CmdKeyValues(CCLCMsg_CmdKeyValues other) : this() {
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_CmdKeyValues Clone() {
    return new CCLCMsg_CmdKeyValues(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_CmdKeyValues);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_CmdKeyValues other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_CmdKeyValues other) {
    if (other == null) {
      return;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_RconServerDetails : pb::IMessage<CCLCMsg_RconServerDetails>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_RconServerDetails> _parser = new pb::MessageParser<CCLCMsg_RconServerDetails>(() => new CCLCMsg_RconServerDetails());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_RconServerDetails> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RconServerDetails() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RconServerDetails(CCLCMsg_RconServerDetails other) : this() {
    token_ = other.token_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_RconServerDetails Clone() {
    return new CCLCMsg_RconServerDetails(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

  private pb::ByteString token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Token {
    get { return token_ ?? TokenDefaultValue; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return token_ != null; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    token_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_RconServerDetails);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_RconServerDetails other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteBytes(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteBytes(Token);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_RconServerDetails other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Token = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Token = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgSource2SystemSpecs : pb::IMessage<CMsgSource2SystemSpecs>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSource2SystemSpecs> _parser = new pb::MessageParser<CMsgSource2SystemSpecs>(() => new CMsgSource2SystemSpecs());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSource2SystemSpecs> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2SystemSpecs() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2SystemSpecs(CMsgSource2SystemSpecs other) : this() {
    _hasBits0 = other._hasBits0;
    cpuId_ = other.cpuId_;
    cpuBrand_ = other.cpuBrand_;
    cpuModel_ = other.cpuModel_;
    cpuNumPhysical_ = other.cpuNumPhysical_;
    ramPhysicalTotalMb_ = other.ramPhysicalTotalMb_;
    gpuRendersystemDllName_ = other.gpuRendersystemDllName_;
    gpuVendorId_ = other.gpuVendorId_;
    gpuDriverName_ = other.gpuDriverName_;
    gpuDriverVersionHigh_ = other.gpuDriverVersionHigh_;
    gpuDriverVersionLow_ = other.gpuDriverVersionLow_;
    gpuDxSupportLevel_ = other.gpuDxSupportLevel_;
    gpuTextureMemorySizeMb_ = other.gpuTextureMemorySizeMb_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2SystemSpecs Clone() {
    return new CMsgSource2SystemSpecs(this);
  }

  /// <summary>Field number for the "cpu_id" field.</summary>
  public const int CpuIdFieldNumber = 1;
  private readonly static string CpuIdDefaultValue = "";

  private string cpuId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CpuId {
    get { return cpuId_ ?? CpuIdDefaultValue; }
    set {
      cpuId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cpu_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpuId {
    get { return cpuId_ != null; }
  }
  /// <summary>Clears the value of the "cpu_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpuId() {
    cpuId_ = null;
  }

  /// <summary>Field number for the "cpu_brand" field.</summary>
  public const int CpuBrandFieldNumber = 2;
  private readonly static string CpuBrandDefaultValue = "";

  private string cpuBrand_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CpuBrand {
    get { return cpuBrand_ ?? CpuBrandDefaultValue; }
    set {
      cpuBrand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cpu_brand" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpuBrand {
    get { return cpuBrand_ != null; }
  }
  /// <summary>Clears the value of the "cpu_brand" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpuBrand() {
    cpuBrand_ = null;
  }

  /// <summary>Field number for the "cpu_model" field.</summary>
  public const int CpuModelFieldNumber = 3;
  private readonly static uint CpuModelDefaultValue = 0;

  private uint cpuModel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CpuModel {
    get { if ((_hasBits0 & 1) != 0) { return cpuModel_; } else { return CpuModelDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cpuModel_ = value;
    }
  }
  /// <summary>Gets whether the "cpu_model" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpuModel {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cpu_model" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpuModel() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cpu_num_physical" field.</summary>
  public const int CpuNumPhysicalFieldNumber = 4;
  private readonly static uint CpuNumPhysicalDefaultValue = 0;

  private uint cpuNumPhysical_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CpuNumPhysical {
    get { if ((_hasBits0 & 2) != 0) { return cpuNumPhysical_; } else { return CpuNumPhysicalDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cpuNumPhysical_ = value;
    }
  }
  /// <summary>Gets whether the "cpu_num_physical" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpuNumPhysical {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cpu_num_physical" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpuNumPhysical() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ram_physical_total_mb" field.</summary>
  public const int RamPhysicalTotalMbFieldNumber = 21;
  private readonly static uint RamPhysicalTotalMbDefaultValue = 0;

  private uint ramPhysicalTotalMb_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint RamPhysicalTotalMb {
    get { if ((_hasBits0 & 4) != 0) { return ramPhysicalTotalMb_; } else { return RamPhysicalTotalMbDefaultValue; } }
    set {
      _hasBits0 |= 4;
      ramPhysicalTotalMb_ = value;
    }
  }
  /// <summary>Gets whether the "ram_physical_total_mb" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRamPhysicalTotalMb {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ram_physical_total_mb" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRamPhysicalTotalMb() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "gpu_rendersystem_dll_name" field.</summary>
  public const int GpuRendersystemDllNameFieldNumber = 41;
  private readonly static string GpuRendersystemDllNameDefaultValue = "";

  private string gpuRendersystemDllName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GpuRendersystemDllName {
    get { return gpuRendersystemDllName_ ?? GpuRendersystemDllNameDefaultValue; }
    set {
      gpuRendersystemDllName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gpu_rendersystem_dll_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuRendersystemDllName {
    get { return gpuRendersystemDllName_ != null; }
  }
  /// <summary>Clears the value of the "gpu_rendersystem_dll_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuRendersystemDllName() {
    gpuRendersystemDllName_ = null;
  }

  /// <summary>Field number for the "gpu_vendor_id" field.</summary>
  public const int GpuVendorIdFieldNumber = 42;
  private readonly static uint GpuVendorIdDefaultValue = 0;

  private uint gpuVendorId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GpuVendorId {
    get { if ((_hasBits0 & 8) != 0) { return gpuVendorId_; } else { return GpuVendorIdDefaultValue; } }
    set {
      _hasBits0 |= 8;
      gpuVendorId_ = value;
    }
  }
  /// <summary>Gets whether the "gpu_vendor_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuVendorId {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "gpu_vendor_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuVendorId() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "gpu_driver_name" field.</summary>
  public const int GpuDriverNameFieldNumber = 43;
  private readonly static string GpuDriverNameDefaultValue = "";

  private string gpuDriverName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GpuDriverName {
    get { return gpuDriverName_ ?? GpuDriverNameDefaultValue; }
    set {
      gpuDriverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gpu_driver_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuDriverName {
    get { return gpuDriverName_ != null; }
  }
  /// <summary>Clears the value of the "gpu_driver_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuDriverName() {
    gpuDriverName_ = null;
  }

  /// <summary>Field number for the "gpu_driver_version_high" field.</summary>
  public const int GpuDriverVersionHighFieldNumber = 44;
  private readonly static uint GpuDriverVersionHighDefaultValue = 0;

  private uint gpuDriverVersionHigh_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GpuDriverVersionHigh {
    get { if ((_hasBits0 & 16) != 0) { return gpuDriverVersionHigh_; } else { return GpuDriverVersionHighDefaultValue; } }
    set {
      _hasBits0 |= 16;
      gpuDriverVersionHigh_ = value;
    }
  }
  /// <summary>Gets whether the "gpu_driver_version_high" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuDriverVersionHigh {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "gpu_driver_version_high" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuDriverVersionHigh() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "gpu_driver_version_low" field.</summary>
  public const int GpuDriverVersionLowFieldNumber = 45;
  private readonly static uint GpuDriverVersionLowDefaultValue = 0;

  private uint gpuDriverVersionLow_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GpuDriverVersionLow {
    get { if ((_hasBits0 & 32) != 0) { return gpuDriverVersionLow_; } else { return GpuDriverVersionLowDefaultValue; } }
    set {
      _hasBits0 |= 32;
      gpuDriverVersionLow_ = value;
    }
  }
  /// <summary>Gets whether the "gpu_driver_version_low" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuDriverVersionLow {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "gpu_driver_version_low" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuDriverVersionLow() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "gpu_dx_support_level" field.</summary>
  public const int GpuDxSupportLevelFieldNumber = 46;
  private readonly static uint GpuDxSupportLevelDefaultValue = 0;

  private uint gpuDxSupportLevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GpuDxSupportLevel {
    get { if ((_hasBits0 & 64) != 0) { return gpuDxSupportLevel_; } else { return GpuDxSupportLevelDefaultValue; } }
    set {
      _hasBits0 |= 64;
      gpuDxSupportLevel_ = value;
    }
  }
  /// <summary>Gets whether the "gpu_dx_support_level" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuDxSupportLevel {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "gpu_dx_support_level" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuDxSupportLevel() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "gpu_texture_memory_size_mb" field.</summary>
  public const int GpuTextureMemorySizeMbFieldNumber = 47;
  private readonly static uint GpuTextureMemorySizeMbDefaultValue = 0;

  private uint gpuTextureMemorySizeMb_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint GpuTextureMemorySizeMb {
    get { if ((_hasBits0 & 128) != 0) { return gpuTextureMemorySizeMb_; } else { return GpuTextureMemorySizeMbDefaultValue; } }
    set {
      _hasBits0 |= 128;
      gpuTextureMemorySizeMb_ = value;
    }
  }
  /// <summary>Gets whether the "gpu_texture_memory_size_mb" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGpuTextureMemorySizeMb {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "gpu_texture_memory_size_mb" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGpuTextureMemorySizeMb() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSource2SystemSpecs);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSource2SystemSpecs other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CpuId != other.CpuId) return false;
    if (CpuBrand != other.CpuBrand) return false;
    if (CpuModel != other.CpuModel) return false;
    if (CpuNumPhysical != other.CpuNumPhysical) return false;
    if (RamPhysicalTotalMb != other.RamPhysicalTotalMb) return false;
    if (GpuRendersystemDllName != other.GpuRendersystemDllName) return false;
    if (GpuVendorId != other.GpuVendorId) return false;
    if (GpuDriverName != other.GpuDriverName) return false;
    if (GpuDriverVersionHigh != other.GpuDriverVersionHigh) return false;
    if (GpuDriverVersionLow != other.GpuDriverVersionLow) return false;
    if (GpuDxSupportLevel != other.GpuDxSupportLevel) return false;
    if (GpuTextureMemorySizeMb != other.GpuTextureMemorySizeMb) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCpuId) hash ^= CpuId.GetHashCode();
    if (HasCpuBrand) hash ^= CpuBrand.GetHashCode();
    if (HasCpuModel) hash ^= CpuModel.GetHashCode();
    if (HasCpuNumPhysical) hash ^= CpuNumPhysical.GetHashCode();
    if (HasRamPhysicalTotalMb) hash ^= RamPhysicalTotalMb.GetHashCode();
    if (HasGpuRendersystemDllName) hash ^= GpuRendersystemDllName.GetHashCode();
    if (HasGpuVendorId) hash ^= GpuVendorId.GetHashCode();
    if (HasGpuDriverName) hash ^= GpuDriverName.GetHashCode();
    if (HasGpuDriverVersionHigh) hash ^= GpuDriverVersionHigh.GetHashCode();
    if (HasGpuDriverVersionLow) hash ^= GpuDriverVersionLow.GetHashCode();
    if (HasGpuDxSupportLevel) hash ^= GpuDxSupportLevel.GetHashCode();
    if (HasGpuTextureMemorySizeMb) hash ^= GpuTextureMemorySizeMb.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCpuId) {
      output.WriteRawTag(10);
      output.WriteString(CpuId);
    }
    if (HasCpuBrand) {
      output.WriteRawTag(18);
      output.WriteString(CpuBrand);
    }
    if (HasCpuModel) {
      output.WriteRawTag(24);
      output.WriteUInt32(CpuModel);
    }
    if (HasCpuNumPhysical) {
      output.WriteRawTag(32);
      output.WriteUInt32(CpuNumPhysical);
    }
    if (HasRamPhysicalTotalMb) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(RamPhysicalTotalMb);
    }
    if (HasGpuRendersystemDllName) {
      output.WriteRawTag(202, 2);
      output.WriteString(GpuRendersystemDllName);
    }
    if (HasGpuVendorId) {
      output.WriteRawTag(208, 2);
      output.WriteUInt32(GpuVendorId);
    }
    if (HasGpuDriverName) {
      output.WriteRawTag(218, 2);
      output.WriteString(GpuDriverName);
    }
    if (HasGpuDriverVersionHigh) {
      output.WriteRawTag(224, 2);
      output.WriteUInt32(GpuDriverVersionHigh);
    }
    if (HasGpuDriverVersionLow) {
      output.WriteRawTag(232, 2);
      output.WriteUInt32(GpuDriverVersionLow);
    }
    if (HasGpuDxSupportLevel) {
      output.WriteRawTag(240, 2);
      output.WriteUInt32(GpuDxSupportLevel);
    }
    if (HasGpuTextureMemorySizeMb) {
      output.WriteRawTag(248, 2);
      output.WriteUInt32(GpuTextureMemorySizeMb);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCpuId) {
      output.WriteRawTag(10);
      output.WriteString(CpuId);
    }
    if (HasCpuBrand) {
      output.WriteRawTag(18);
      output.WriteString(CpuBrand);
    }
    if (HasCpuModel) {
      output.WriteRawTag(24);
      output.WriteUInt32(CpuModel);
    }
    if (HasCpuNumPhysical) {
      output.WriteRawTag(32);
      output.WriteUInt32(CpuNumPhysical);
    }
    if (HasRamPhysicalTotalMb) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(RamPhysicalTotalMb);
    }
    if (HasGpuRendersystemDllName) {
      output.WriteRawTag(202, 2);
      output.WriteString(GpuRendersystemDllName);
    }
    if (HasGpuVendorId) {
      output.WriteRawTag(208, 2);
      output.WriteUInt32(GpuVendorId);
    }
    if (HasGpuDriverName) {
      output.WriteRawTag(218, 2);
      output.WriteString(GpuDriverName);
    }
    if (HasGpuDriverVersionHigh) {
      output.WriteRawTag(224, 2);
      output.WriteUInt32(GpuDriverVersionHigh);
    }
    if (HasGpuDriverVersionLow) {
      output.WriteRawTag(232, 2);
      output.WriteUInt32(GpuDriverVersionLow);
    }
    if (HasGpuDxSupportLevel) {
      output.WriteRawTag(240, 2);
      output.WriteUInt32(GpuDxSupportLevel);
    }
    if (HasGpuTextureMemorySizeMb) {
      output.WriteRawTag(248, 2);
      output.WriteUInt32(GpuTextureMemorySizeMb);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCpuId) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CpuId);
    }
    if (HasCpuBrand) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CpuBrand);
    }
    if (HasCpuModel) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuModel);
    }
    if (HasCpuNumPhysical) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CpuNumPhysical);
    }
    if (HasRamPhysicalTotalMb) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(RamPhysicalTotalMb);
    }
    if (HasGpuRendersystemDllName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GpuRendersystemDllName);
    }
    if (HasGpuVendorId) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuVendorId);
    }
    if (HasGpuDriverName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(GpuDriverName);
    }
    if (HasGpuDriverVersionHigh) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuDriverVersionHigh);
    }
    if (HasGpuDriverVersionLow) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuDriverVersionLow);
    }
    if (HasGpuDxSupportLevel) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuDxSupportLevel);
    }
    if (HasGpuTextureMemorySizeMb) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(GpuTextureMemorySizeMb);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSource2SystemSpecs other) {
    if (other == null) {
      return;
    }
    if (other.HasCpuId) {
      CpuId = other.CpuId;
    }
    if (other.HasCpuBrand) {
      CpuBrand = other.CpuBrand;
    }
    if (other.HasCpuModel) {
      CpuModel = other.CpuModel;
    }
    if (other.HasCpuNumPhysical) {
      CpuNumPhysical = other.CpuNumPhysical;
    }
    if (other.HasRamPhysicalTotalMb) {
      RamPhysicalTotalMb = other.RamPhysicalTotalMb;
    }
    if (other.HasGpuRendersystemDllName) {
      GpuRendersystemDllName = other.GpuRendersystemDllName;
    }
    if (other.HasGpuVendorId) {
      GpuVendorId = other.GpuVendorId;
    }
    if (other.HasGpuDriverName) {
      GpuDriverName = other.GpuDriverName;
    }
    if (other.HasGpuDriverVersionHigh) {
      GpuDriverVersionHigh = other.GpuDriverVersionHigh;
    }
    if (other.HasGpuDriverVersionLow) {
      GpuDriverVersionLow = other.GpuDriverVersionLow;
    }
    if (other.HasGpuDxSupportLevel) {
      GpuDxSupportLevel = other.GpuDxSupportLevel;
    }
    if (other.HasGpuTextureMemorySizeMb) {
      GpuTextureMemorySizeMb = other.GpuTextureMemorySizeMb;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          CpuId = input.ReadString();
          break;
        }
        case 18: {
          CpuBrand = input.ReadString();
          break;
        }
        case 24: {
          CpuModel = input.ReadUInt32();
          break;
        }
        case 32: {
          CpuNumPhysical = input.ReadUInt32();
          break;
        }
        case 168: {
          RamPhysicalTotalMb = input.ReadUInt32();
          break;
        }
        case 330: {
          GpuRendersystemDllName = input.ReadString();
          break;
        }
        case 336: {
          GpuVendorId = input.ReadUInt32();
          break;
        }
        case 346: {
          GpuDriverName = input.ReadString();
          break;
        }
        case 352: {
          GpuDriverVersionHigh = input.ReadUInt32();
          break;
        }
        case 360: {
          GpuDriverVersionLow = input.ReadUInt32();
          break;
        }
        case 368: {
          GpuDxSupportLevel = input.ReadUInt32();
          break;
        }
        case 376: {
          GpuTextureMemorySizeMb = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          CpuId = input.ReadString();
          break;
        }
        case 18: {
          CpuBrand = input.ReadString();
          break;
        }
        case 24: {
          CpuModel = input.ReadUInt32();
          break;
        }
        case 32: {
          CpuNumPhysical = input.ReadUInt32();
          break;
        }
        case 168: {
          RamPhysicalTotalMb = input.ReadUInt32();
          break;
        }
        case 330: {
          GpuRendersystemDllName = input.ReadString();
          break;
        }
        case 336: {
          GpuVendorId = input.ReadUInt32();
          break;
        }
        case 346: {
          GpuDriverName = input.ReadString();
          break;
        }
        case 352: {
          GpuDriverVersionHigh = input.ReadUInt32();
          break;
        }
        case 360: {
          GpuDriverVersionLow = input.ReadUInt32();
          break;
        }
        case 368: {
          GpuDxSupportLevel = input.ReadUInt32();
          break;
        }
        case 376: {
          GpuTextureMemorySizeMb = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgSource2VProfLiteReportItem : pb::IMessage<CMsgSource2VProfLiteReportItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSource2VProfLiteReportItem> _parser = new pb::MessageParser<CMsgSource2VProfLiteReportItem>(() => new CMsgSource2VProfLiteReportItem());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSource2VProfLiteReportItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReportItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReportItem(CMsgSource2VProfLiteReportItem other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    activeSamples_ = other.activeSamples_;
    usecMax_ = other.usecMax_;
    usecAvgActive_ = other.usecAvgActive_;
    usecP50Active_ = other.usecP50Active_;
    usecP99Active_ = other.usecP99Active_;
    usecAvgAll_ = other.usecAvgAll_;
    usecP50All_ = other.usecP50All_;
    usecP99All_ = other.usecP99All_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReportItem Clone() {
    return new CMsgSource2VProfLiteReportItem(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "active_samples" field.</summary>
  public const int ActiveSamplesFieldNumber = 2;
  private readonly static uint ActiveSamplesDefaultValue = 0;

  private uint activeSamples_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveSamples {
    get { if ((_hasBits0 & 1) != 0) { return activeSamples_; } else { return ActiveSamplesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      activeSamples_ = value;
    }
  }
  /// <summary>Gets whether the "active_samples" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveSamples {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "active_samples" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveSamples() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "usec_max" field.</summary>
  public const int UsecMaxFieldNumber = 3;
  private readonly static uint UsecMaxDefaultValue = 0;

  private uint usecMax_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecMax {
    get { if ((_hasBits0 & 2) != 0) { return usecMax_; } else { return UsecMaxDefaultValue; } }
    set {
      _hasBits0 |= 2;
      usecMax_ = value;
    }
  }
  /// <summary>Gets whether the "usec_max" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecMax {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "usec_max" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecMax() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "usec_avg_active" field.</summary>
  public const int UsecAvgActiveFieldNumber = 11;
  private readonly static uint UsecAvgActiveDefaultValue = 0;

  private uint usecAvgActive_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecAvgActive {
    get { if ((_hasBits0 & 4) != 0) { return usecAvgActive_; } else { return UsecAvgActiveDefaultValue; } }
    set {
      _hasBits0 |= 4;
      usecAvgActive_ = value;
    }
  }
  /// <summary>Gets whether the "usec_avg_active" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecAvgActive {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "usec_avg_active" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecAvgActive() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "usec_p50_active" field.</summary>
  public const int UsecP50ActiveFieldNumber = 12;
  private readonly static uint UsecP50ActiveDefaultValue = 0;

  private uint usecP50Active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecP50Active {
    get { if ((_hasBits0 & 8) != 0) { return usecP50Active_; } else { return UsecP50ActiveDefaultValue; } }
    set {
      _hasBits0 |= 8;
      usecP50Active_ = value;
    }
  }
  /// <summary>Gets whether the "usec_p50_active" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecP50Active {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "usec_p50_active" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecP50Active() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "usec_p99_active" field.</summary>
  public const int UsecP99ActiveFieldNumber = 13;
  private readonly static uint UsecP99ActiveDefaultValue = 0;

  private uint usecP99Active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecP99Active {
    get { if ((_hasBits0 & 16) != 0) { return usecP99Active_; } else { return UsecP99ActiveDefaultValue; } }
    set {
      _hasBits0 |= 16;
      usecP99Active_ = value;
    }
  }
  /// <summary>Gets whether the "usec_p99_active" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecP99Active {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "usec_p99_active" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecP99Active() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "usec_avg_all" field.</summary>
  public const int UsecAvgAllFieldNumber = 21;
  private readonly static uint UsecAvgAllDefaultValue = 0;

  private uint usecAvgAll_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecAvgAll {
    get { if ((_hasBits0 & 32) != 0) { return usecAvgAll_; } else { return UsecAvgAllDefaultValue; } }
    set {
      _hasBits0 |= 32;
      usecAvgAll_ = value;
    }
  }
  /// <summary>Gets whether the "usec_avg_all" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecAvgAll {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "usec_avg_all" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecAvgAll() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "usec_p50_all" field.</summary>
  public const int UsecP50AllFieldNumber = 22;
  private readonly static uint UsecP50AllDefaultValue = 0;

  private uint usecP50All_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecP50All {
    get { if ((_hasBits0 & 64) != 0) { return usecP50All_; } else { return UsecP50AllDefaultValue; } }
    set {
      _hasBits0 |= 64;
      usecP50All_ = value;
    }
  }
  /// <summary>Gets whether the "usec_p50_all" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecP50All {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "usec_p50_all" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecP50All() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "usec_p99_all" field.</summary>
  public const int UsecP99AllFieldNumber = 23;
  private readonly static uint UsecP99AllDefaultValue = 0;

  private uint usecP99All_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint UsecP99All {
    get { if ((_hasBits0 & 128) != 0) { return usecP99All_; } else { return UsecP99AllDefaultValue; } }
    set {
      _hasBits0 |= 128;
      usecP99All_ = value;
    }
  }
  /// <summary>Gets whether the "usec_p99_all" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsecP99All {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "usec_p99_all" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsecP99All() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSource2VProfLiteReportItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSource2VProfLiteReportItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (ActiveSamples != other.ActiveSamples) return false;
    if (UsecMax != other.UsecMax) return false;
    if (UsecAvgActive != other.UsecAvgActive) return false;
    if (UsecP50Active != other.UsecP50Active) return false;
    if (UsecP99Active != other.UsecP99Active) return false;
    if (UsecAvgAll != other.UsecAvgAll) return false;
    if (UsecP50All != other.UsecP50All) return false;
    if (UsecP99All != other.UsecP99All) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasActiveSamples) hash ^= ActiveSamples.GetHashCode();
    if (HasUsecMax) hash ^= UsecMax.GetHashCode();
    if (HasUsecAvgActive) hash ^= UsecAvgActive.GetHashCode();
    if (HasUsecP50Active) hash ^= UsecP50Active.GetHashCode();
    if (HasUsecP99Active) hash ^= UsecP99Active.GetHashCode();
    if (HasUsecAvgAll) hash ^= UsecAvgAll.GetHashCode();
    if (HasUsecP50All) hash ^= UsecP50All.GetHashCode();
    if (HasUsecP99All) hash ^= UsecP99All.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasActiveSamples) {
      output.WriteRawTag(16);
      output.WriteUInt32(ActiveSamples);
    }
    if (HasUsecMax) {
      output.WriteRawTag(24);
      output.WriteUInt32(UsecMax);
    }
    if (HasUsecAvgActive) {
      output.WriteRawTag(88);
      output.WriteUInt32(UsecAvgActive);
    }
    if (HasUsecP50Active) {
      output.WriteRawTag(96);
      output.WriteUInt32(UsecP50Active);
    }
    if (HasUsecP99Active) {
      output.WriteRawTag(104);
      output.WriteUInt32(UsecP99Active);
    }
    if (HasUsecAvgAll) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(UsecAvgAll);
    }
    if (HasUsecP50All) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(UsecP50All);
    }
    if (HasUsecP99All) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(UsecP99All);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasActiveSamples) {
      output.WriteRawTag(16);
      output.WriteUInt32(ActiveSamples);
    }
    if (HasUsecMax) {
      output.WriteRawTag(24);
      output.WriteUInt32(UsecMax);
    }
    if (HasUsecAvgActive) {
      output.WriteRawTag(88);
      output.WriteUInt32(UsecAvgActive);
    }
    if (HasUsecP50Active) {
      output.WriteRawTag(96);
      output.WriteUInt32(UsecP50Active);
    }
    if (HasUsecP99Active) {
      output.WriteRawTag(104);
      output.WriteUInt32(UsecP99Active);
    }
    if (HasUsecAvgAll) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(UsecAvgAll);
    }
    if (HasUsecP50All) {
      output.WriteRawTag(176, 1);
      output.WriteUInt32(UsecP50All);
    }
    if (HasUsecP99All) {
      output.WriteRawTag(184, 1);
      output.WriteUInt32(UsecP99All);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasActiveSamples) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveSamples);
    }
    if (HasUsecMax) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsecMax);
    }
    if (HasUsecAvgActive) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsecAvgActive);
    }
    if (HasUsecP50Active) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsecP50Active);
    }
    if (HasUsecP99Active) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UsecP99Active);
    }
    if (HasUsecAvgAll) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UsecAvgAll);
    }
    if (HasUsecP50All) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UsecP50All);
    }
    if (HasUsecP99All) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(UsecP99All);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSource2VProfLiteReportItem other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasActiveSamples) {
      ActiveSamples = other.ActiveSamples;
    }
    if (other.HasUsecMax) {
      UsecMax = other.UsecMax;
    }
    if (other.HasUsecAvgActive) {
      UsecAvgActive = other.UsecAvgActive;
    }
    if (other.HasUsecP50Active) {
      UsecP50Active = other.UsecP50Active;
    }
    if (other.HasUsecP99Active) {
      UsecP99Active = other.UsecP99Active;
    }
    if (other.HasUsecAvgAll) {
      UsecAvgAll = other.UsecAvgAll;
    }
    if (other.HasUsecP50All) {
      UsecP50All = other.UsecP50All;
    }
    if (other.HasUsecP99All) {
      UsecP99All = other.UsecP99All;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          ActiveSamples = input.ReadUInt32();
          break;
        }
        case 24: {
          UsecMax = input.ReadUInt32();
          break;
        }
        case 88: {
          UsecAvgActive = input.ReadUInt32();
          break;
        }
        case 96: {
          UsecP50Active = input.ReadUInt32();
          break;
        }
        case 104: {
          UsecP99Active = input.ReadUInt32();
          break;
        }
        case 168: {
          UsecAvgAll = input.ReadUInt32();
          break;
        }
        case 176: {
          UsecP50All = input.ReadUInt32();
          break;
        }
        case 184: {
          UsecP99All = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          ActiveSamples = input.ReadUInt32();
          break;
        }
        case 24: {
          UsecMax = input.ReadUInt32();
          break;
        }
        case 88: {
          UsecAvgActive = input.ReadUInt32();
          break;
        }
        case 96: {
          UsecP50Active = input.ReadUInt32();
          break;
        }
        case 104: {
          UsecP99Active = input.ReadUInt32();
          break;
        }
        case 168: {
          UsecAvgAll = input.ReadUInt32();
          break;
        }
        case 176: {
          UsecP50All = input.ReadUInt32();
          break;
        }
        case 184: {
          UsecP99All = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgSource2VProfLiteReport : pb::IMessage<CMsgSource2VProfLiteReport>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgSource2VProfLiteReport> _parser = new pb::MessageParser<CMsgSource2VProfLiteReport>(() => new CMsgSource2VProfLiteReport());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgSource2VProfLiteReport> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReport() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReport(CMsgSource2VProfLiteReport other) : this() {
    _hasBits0 = other._hasBits0;
    total_ = other.total_ != null ? other.total_.Clone() : null;
    items_ = other.items_.Clone();
    discardedFrames_ = other.discardedFrames_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgSource2VProfLiteReport Clone() {
    return new CMsgSource2VProfLiteReport(this);
  }

  /// <summary>Field number for the "total" field.</summary>
  public const int TotalFieldNumber = 1;
  private global::CMsgSource2VProfLiteReportItem total_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSource2VProfLiteReportItem Total {
    get { return total_; }
    set {
      total_ = value;
    }
  }

  /// <summary>Field number for the "items" field.</summary>
  public const int ItemsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgSource2VProfLiteReportItem> _repeated_items_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgSource2VProfLiteReportItem.Parser);
  private readonly pbc::RepeatedField<global::CMsgSource2VProfLiteReportItem> items_ = new pbc::RepeatedField<global::CMsgSource2VProfLiteReportItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgSource2VProfLiteReportItem> Items {
    get { return items_; }
  }

  /// <summary>Field number for the "discarded_frames" field.</summary>
  public const int DiscardedFramesFieldNumber = 3;
  private readonly static uint DiscardedFramesDefaultValue = 0;

  private uint discardedFrames_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DiscardedFrames {
    get { if ((_hasBits0 & 1) != 0) { return discardedFrames_; } else { return DiscardedFramesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      discardedFrames_ = value;
    }
  }
  /// <summary>Gets whether the "discarded_frames" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDiscardedFrames {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "discarded_frames" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDiscardedFrames() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgSource2VProfLiteReport);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgSource2VProfLiteReport other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Total, other.Total)) return false;
    if(!items_.Equals(other.items_)) return false;
    if (DiscardedFrames != other.DiscardedFrames) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (total_ != null) hash ^= Total.GetHashCode();
    hash ^= items_.GetHashCode();
    if (HasDiscardedFrames) hash ^= DiscardedFrames.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (total_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Total);
    }
    items_.WriteTo(output, _repeated_items_codec);
    if (HasDiscardedFrames) {
      output.WriteRawTag(24);
      output.WriteUInt32(DiscardedFrames);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (total_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Total);
    }
    items_.WriteTo(ref output, _repeated_items_codec);
    if (HasDiscardedFrames) {
      output.WriteRawTag(24);
      output.WriteUInt32(DiscardedFrames);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (total_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Total);
    }
    size += items_.CalculateSize(_repeated_items_codec);
    if (HasDiscardedFrames) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DiscardedFrames);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgSource2VProfLiteReport other) {
    if (other == null) {
      return;
    }
    if (other.total_ != null) {
      if (total_ == null) {
        Total = new global::CMsgSource2VProfLiteReportItem();
      }
      Total.MergeFrom(other.Total);
    }
    items_.Add(other.items_);
    if (other.HasDiscardedFrames) {
      DiscardedFrames = other.DiscardedFrames;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (total_ == null) {
            Total = new global::CMsgSource2VProfLiteReportItem();
          }
          input.ReadMessage(Total);
          break;
        }
        case 18: {
          items_.AddEntriesFrom(input, _repeated_items_codec);
          break;
        }
        case 24: {
          DiscardedFrames = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (total_ == null) {
            Total = new global::CMsgSource2VProfLiteReportItem();
          }
          input.ReadMessage(Total);
          break;
        }
        case 18: {
          items_.AddEntriesFrom(ref input, _repeated_items_codec);
          break;
        }
        case 24: {
          DiscardedFrames = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_Diagnostic : pb::IMessage<CCLCMsg_Diagnostic>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_Diagnostic> _parser = new pb::MessageParser<CCLCMsg_Diagnostic>(() => new CCLCMsg_Diagnostic());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_Diagnostic> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Diagnostic() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Diagnostic(CCLCMsg_Diagnostic other) : this() {
    systemSpecs_ = other.systemSpecs_ != null ? other.systemSpecs_.Clone() : null;
    vprofReport_ = other.vprofReport_ != null ? other.vprofReport_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_Diagnostic Clone() {
    return new CCLCMsg_Diagnostic(this);
  }

  /// <summary>Field number for the "system_specs" field.</summary>
  public const int SystemSpecsFieldNumber = 1;
  private global::CMsgSource2SystemSpecs systemSpecs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSource2SystemSpecs SystemSpecs {
    get { return systemSpecs_; }
    set {
      systemSpecs_ = value;
    }
  }

  /// <summary>Field number for the "vprof_report" field.</summary>
  public const int VprofReportFieldNumber = 2;
  private global::CMsgSource2VProfLiteReport vprofReport_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSource2VProfLiteReport VprofReport {
    get { return vprofReport_; }
    set {
      vprofReport_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_Diagnostic);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_Diagnostic other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SystemSpecs, other.SystemSpecs)) return false;
    if (!object.Equals(VprofReport, other.VprofReport)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (systemSpecs_ != null) hash ^= SystemSpecs.GetHashCode();
    if (vprofReport_ != null) hash ^= VprofReport.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (systemSpecs_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SystemSpecs);
    }
    if (vprofReport_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(VprofReport);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (systemSpecs_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(SystemSpecs);
    }
    if (vprofReport_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(VprofReport);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (systemSpecs_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemSpecs);
    }
    if (vprofReport_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(VprofReport);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_Diagnostic other) {
    if (other == null) {
      return;
    }
    if (other.systemSpecs_ != null) {
      if (systemSpecs_ == null) {
        SystemSpecs = new global::CMsgSource2SystemSpecs();
      }
      SystemSpecs.MergeFrom(other.SystemSpecs);
    }
    if (other.vprofReport_ != null) {
      if (vprofReport_ == null) {
        VprofReport = new global::CMsgSource2VProfLiteReport();
      }
      VprofReport.MergeFrom(other.VprofReport);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (systemSpecs_ == null) {
            SystemSpecs = new global::CMsgSource2SystemSpecs();
          }
          input.ReadMessage(SystemSpecs);
          break;
        }
        case 18: {
          if (vprofReport_ == null) {
            VprofReport = new global::CMsgSource2VProfLiteReport();
          }
          input.ReadMessage(VprofReport);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (systemSpecs_ == null) {
            SystemSpecs = new global::CMsgSource2SystemSpecs();
          }
          input.ReadMessage(SystemSpecs);
          break;
        }
        case 18: {
          if (vprofReport_ == null) {
            VprofReport = new global::CMsgSource2VProfLiteReport();
          }
          input.ReadMessage(VprofReport);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSource2Metrics_MatchPerfSummary_Notification : pb::IMessage<CSource2Metrics_MatchPerfSummary_Notification>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSource2Metrics_MatchPerfSummary_Notification> _parser = new pb::MessageParser<CSource2Metrics_MatchPerfSummary_Notification>(() => new CSource2Metrics_MatchPerfSummary_Notification());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSource2Metrics_MatchPerfSummary_Notification> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSource2Metrics_MatchPerfSummary_Notification() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSource2Metrics_MatchPerfSummary_Notification(CSource2Metrics_MatchPerfSummary_Notification other) : this() {
    _hasBits0 = other._hasBits0;
    appid_ = other.appid_;
    gameMode_ = other.gameMode_;
    serverBuildId_ = other.serverBuildId_;
    serverProfile_ = other.serverProfile_ != null ? other.serverProfile_.Clone() : null;
    clients_ = other.clients_.Clone();
    map_ = other.map_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSource2Metrics_MatchPerfSummary_Notification Clone() {
    return new CSource2Metrics_MatchPerfSummary_Notification(this);
  }

  /// <summary>Field number for the "appid" field.</summary>
  public const int AppidFieldNumber = 1;
  private readonly static uint AppidDefaultValue = 0;

  private uint appid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Appid {
    get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      appid_ = value;
    }
  }
  /// <summary>Gets whether the "appid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAppid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "appid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAppid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "game_mode" field.</summary>
  public const int GameModeFieldNumber = 2;
  private readonly static string GameModeDefaultValue = "";

  private string gameMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameMode {
    get { return gameMode_ ?? GameModeDefaultValue; }
    set {
      gameMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameMode {
    get { return gameMode_ != null; }
  }
  /// <summary>Clears the value of the "game_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameMode() {
    gameMode_ = null;
  }

  /// <summary>Field number for the "server_build_id" field.</summary>
  public const int ServerBuildIdFieldNumber = 3;
  private readonly static uint ServerBuildIdDefaultValue = 0;

  private uint serverBuildId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerBuildId {
    get { if ((_hasBits0 & 2) != 0) { return serverBuildId_; } else { return ServerBuildIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverBuildId_ = value;
    }
  }
  /// <summary>Gets whether the "server_build_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerBuildId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "server_build_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerBuildId() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_profile" field.</summary>
  public const int ServerProfileFieldNumber = 10;
  private global::CMsgSource2VProfLiteReport serverProfile_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgSource2VProfLiteReport ServerProfile {
    get { return serverProfile_; }
    set {
      serverProfile_ = value;
    }
  }

  /// <summary>Field number for the "clients" field.</summary>
  public const int ClientsFieldNumber = 11;
  private static readonly pb::FieldCodec<global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client> _repeated_clients_codec
      = pb::FieldCodec.ForMessage(90, global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client.Parser);
  private readonly pbc::RepeatedField<global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client> clients_ = new pbc::RepeatedField<global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSource2Metrics_MatchPerfSummary_Notification.Types.Client> Clients {
    get { return clients_; }
  }

  /// <summary>Field number for the "map" field.</summary>
  public const int MapFieldNumber = 20;
  private readonly static string MapDefaultValue = "";

  private string map_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Map {
    get { return map_ ?? MapDefaultValue; }
    set {
      map_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMap {
    get { return map_ != null; }
  }
  /// <summary>Clears the value of the "map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMap() {
    map_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSource2Metrics_MatchPerfSummary_Notification);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSource2Metrics_MatchPerfSummary_Notification other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Appid != other.Appid) return false;
    if (GameMode != other.GameMode) return false;
    if (ServerBuildId != other.ServerBuildId) return false;
    if (!object.Equals(ServerProfile, other.ServerProfile)) return false;
    if(!clients_.Equals(other.clients_)) return false;
    if (Map != other.Map) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasAppid) hash ^= Appid.GetHashCode();
    if (HasGameMode) hash ^= GameMode.GetHashCode();
    if (HasServerBuildId) hash ^= ServerBuildId.GetHashCode();
    if (serverProfile_ != null) hash ^= ServerProfile.GetHashCode();
    hash ^= clients_.GetHashCode();
    if (HasMap) hash ^= Map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasGameMode) {
      output.WriteRawTag(18);
      output.WriteString(GameMode);
    }
    if (HasServerBuildId) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerBuildId);
    }
    if (serverProfile_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(ServerProfile);
    }
    clients_.WriteTo(output, _repeated_clients_codec);
    if (HasMap) {
      output.WriteRawTag(162, 1);
      output.WriteString(Map);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasAppid) {
      output.WriteRawTag(8);
      output.WriteUInt32(Appid);
    }
    if (HasGameMode) {
      output.WriteRawTag(18);
      output.WriteString(GameMode);
    }
    if (HasServerBuildId) {
      output.WriteRawTag(24);
      output.WriteUInt32(ServerBuildId);
    }
    if (serverProfile_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(ServerProfile);
    }
    clients_.WriteTo(ref output, _repeated_clients_codec);
    if (HasMap) {
      output.WriteRawTag(162, 1);
      output.WriteString(Map);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasAppid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
    }
    if (HasGameMode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameMode);
    }
    if (HasServerBuildId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerBuildId);
    }
    if (serverProfile_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerProfile);
    }
    size += clients_.CalculateSize(_repeated_clients_codec);
    if (HasMap) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Map);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSource2Metrics_MatchPerfSummary_Notification other) {
    if (other == null) {
      return;
    }
    if (other.HasAppid) {
      Appid = other.Appid;
    }
    if (other.HasGameMode) {
      GameMode = other.GameMode;
    }
    if (other.HasServerBuildId) {
      ServerBuildId = other.ServerBuildId;
    }
    if (other.serverProfile_ != null) {
      if (serverProfile_ == null) {
        ServerProfile = new global::CMsgSource2VProfLiteReport();
      }
      ServerProfile.MergeFrom(other.ServerProfile);
    }
    clients_.Add(other.clients_);
    if (other.HasMap) {
      Map = other.Map;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 18: {
          GameMode = input.ReadString();
          break;
        }
        case 24: {
          ServerBuildId = input.ReadUInt32();
          break;
        }
        case 82: {
          if (serverProfile_ == null) {
            ServerProfile = new global::CMsgSource2VProfLiteReport();
          }
          input.ReadMessage(ServerProfile);
          break;
        }
        case 90: {
          clients_.AddEntriesFrom(input, _repeated_clients_codec);
          break;
        }
        case 162: {
          Map = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Appid = input.ReadUInt32();
          break;
        }
        case 18: {
          GameMode = input.ReadString();
          break;
        }
        case 24: {
          ServerBuildId = input.ReadUInt32();
          break;
        }
        case 82: {
          if (serverProfile_ == null) {
            ServerProfile = new global::CMsgSource2VProfLiteReport();
          }
          input.ReadMessage(ServerProfile);
          break;
        }
        case 90: {
          clients_.AddEntriesFrom(ref input, _repeated_clients_codec);
          break;
        }
        case 162: {
          Map = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSource2Metrics_MatchPerfSummary_Notification message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Client : pb::IMessage<Client>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Client> _parser = new pb::MessageParser<Client>(() => new Client());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Client> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSource2Metrics_MatchPerfSummary_Notification.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Client() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Client(Client other) : this() {
        _hasBits0 = other._hasBits0;
        systemSpecs_ = other.systemSpecs_ != null ? other.systemSpecs_.Clone() : null;
        profile_ = other.profile_ != null ? other.profile_.Clone() : null;
        buildId_ = other.buildId_;
        steamid_ = other.steamid_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Client Clone() {
        return new Client(this);
      }

      /// <summary>Field number for the "system_specs" field.</summary>
      public const int SystemSpecsFieldNumber = 1;
      private global::CMsgSource2SystemSpecs systemSpecs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSource2SystemSpecs SystemSpecs {
        get { return systemSpecs_; }
        set {
          systemSpecs_ = value;
        }
      }

      /// <summary>Field number for the "profile" field.</summary>
      public const int ProfileFieldNumber = 2;
      private global::CMsgSource2VProfLiteReport profile_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgSource2VProfLiteReport Profile {
        get { return profile_; }
        set {
          profile_ = value;
        }
      }

      /// <summary>Field number for the "build_id" field.</summary>
      public const int BuildIdFieldNumber = 3;
      private readonly static uint BuildIdDefaultValue = 0;

      private uint buildId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BuildId {
        get { if ((_hasBits0 & 1) != 0) { return buildId_; } else { return BuildIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          buildId_ = value;
        }
      }
      /// <summary>Gets whether the "build_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBuildId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "build_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBuildId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 10;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 2;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Client);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Client other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (!object.Equals(SystemSpecs, other.SystemSpecs)) return false;
        if (!object.Equals(Profile, other.Profile)) return false;
        if (BuildId != other.BuildId) return false;
        if (Steamid != other.Steamid) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (systemSpecs_ != null) hash ^= SystemSpecs.GetHashCode();
        if (profile_ != null) hash ^= Profile.GetHashCode();
        if (HasBuildId) hash ^= BuildId.GetHashCode();
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (systemSpecs_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(SystemSpecs);
        }
        if (profile_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Profile);
        }
        if (HasBuildId) {
          output.WriteRawTag(24);
          output.WriteUInt32(BuildId);
        }
        if (HasSteamid) {
          output.WriteRawTag(81);
          output.WriteFixed64(Steamid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (systemSpecs_ != null) {
          output.WriteRawTag(10);
          output.WriteMessage(SystemSpecs);
        }
        if (profile_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Profile);
        }
        if (HasBuildId) {
          output.WriteRawTag(24);
          output.WriteUInt32(BuildId);
        }
        if (HasSteamid) {
          output.WriteRawTag(81);
          output.WriteFixed64(Steamid);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (systemSpecs_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemSpecs);
        }
        if (profile_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
        }
        if (HasBuildId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BuildId);
        }
        if (HasSteamid) {
          size += 1 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Client other) {
        if (other == null) {
          return;
        }
        if (other.systemSpecs_ != null) {
          if (systemSpecs_ == null) {
            SystemSpecs = new global::CMsgSource2SystemSpecs();
          }
          SystemSpecs.MergeFrom(other.SystemSpecs);
        }
        if (other.profile_ != null) {
          if (profile_ == null) {
            Profile = new global::CMsgSource2VProfLiteReport();
          }
          Profile.MergeFrom(other.Profile);
        }
        if (other.HasBuildId) {
          BuildId = other.BuildId;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              if (systemSpecs_ == null) {
                SystemSpecs = new global::CMsgSource2SystemSpecs();
              }
              input.ReadMessage(SystemSpecs);
              break;
            }
            case 18: {
              if (profile_ == null) {
                Profile = new global::CMsgSource2VProfLiteReport();
              }
              input.ReadMessage(Profile);
              break;
            }
            case 24: {
              BuildId = input.ReadUInt32();
              break;
            }
            case 81: {
              Steamid = input.ReadFixed64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              if (systemSpecs_ == null) {
                SystemSpecs = new global::CMsgSource2SystemSpecs();
              }
              input.ReadMessage(SystemSpecs);
              break;
            }
            case 18: {
              if (profile_ == null) {
                Profile = new global::CMsgSource2VProfLiteReport();
              }
              input.ReadMessage(Profile);
              break;
            }
            case 24: {
              BuildId = input.ReadUInt32();
              break;
            }
            case 81: {
              Steamid = input.ReadFixed64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_ServerInfo : pb::IMessage<CSVCMsg_ServerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_ServerInfo> _parser = new pb::MessageParser<CSVCMsg_ServerInfo>(() => new CSVCMsg_ServerInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_ServerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerInfo(CSVCMsg_ServerInfo other) : this() {
    _hasBits0 = other._hasBits0;
    protocol_ = other.protocol_;
    serverCount_ = other.serverCount_;
    isDedicated_ = other.isDedicated_;
    isHltv_ = other.isHltv_;
    cOs_ = other.cOs_;
    maxClients_ = other.maxClients_;
    maxClasses_ = other.maxClasses_;
    playerSlot_ = other.playerSlot_;
    tickInterval_ = other.tickInterval_;
    gameDir_ = other.gameDir_;
    mapName_ = other.mapName_;
    skyName_ = other.skyName_;
    hostName_ = other.hostName_;
    addonName_ = other.addonName_;
    gameSessionConfig_ = other.gameSessionConfig_ != null ? other.gameSessionConfig_.Clone() : null;
    gameSessionManifest_ = other.gameSessionManifest_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerInfo Clone() {
    return new CSVCMsg_ServerInfo(this);
  }

  /// <summary>Field number for the "protocol" field.</summary>
  public const int ProtocolFieldNumber = 1;
  private readonly static int ProtocolDefaultValue = 0;

  private int protocol_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Protocol {
    get { if ((_hasBits0 & 1) != 0) { return protocol_; } else { return ProtocolDefaultValue; } }
    set {
      _hasBits0 |= 1;
      protocol_ = value;
    }
  }
  /// <summary>Gets whether the "protocol" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProtocol {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "protocol" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProtocol() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "server_count" field.</summary>
  public const int ServerCountFieldNumber = 2;
  private readonly static int ServerCountDefaultValue = 0;

  private int serverCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ServerCount {
    get { if ((_hasBits0 & 2) != 0) { return serverCount_; } else { return ServerCountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serverCount_ = value;
    }
  }
  /// <summary>Gets whether the "server_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerCount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "server_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerCount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "is_dedicated" field.</summary>
  public const int IsDedicatedFieldNumber = 3;
  private readonly static bool IsDedicatedDefaultValue = false;

  private bool isDedicated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsDedicated {
    get { if ((_hasBits0 & 4) != 0) { return isDedicated_; } else { return IsDedicatedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      isDedicated_ = value;
    }
  }
  /// <summary>Gets whether the "is_dedicated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsDedicated {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "is_dedicated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsDedicated() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "is_hltv" field.</summary>
  public const int IsHltvFieldNumber = 4;
  private readonly static bool IsHltvDefaultValue = false;

  private bool isHltv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsHltv {
    get { if ((_hasBits0 & 8) != 0) { return isHltv_; } else { return IsHltvDefaultValue; } }
    set {
      _hasBits0 |= 8;
      isHltv_ = value;
    }
  }
  /// <summary>Gets whether the "is_hltv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsHltv {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "is_hltv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsHltv() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "c_os" field.</summary>
  public const int COsFieldNumber = 6;
  private readonly static int COsDefaultValue = 0;

  private int cOs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int COs {
    get { if ((_hasBits0 & 16) != 0) { return cOs_; } else { return COsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      cOs_ = value;
    }
  }
  /// <summary>Gets whether the "c_os" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCOs {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "c_os" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCOs() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "max_clients" field.</summary>
  public const int MaxClientsFieldNumber = 10;
  private readonly static int MaxClientsDefaultValue = 0;

  private int maxClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MaxClients {
    get { if ((_hasBits0 & 32) != 0) { return maxClients_; } else { return MaxClientsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      maxClients_ = value;
    }
  }
  /// <summary>Gets whether the "max_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxClients {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "max_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxClients() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "max_classes" field.</summary>
  public const int MaxClassesFieldNumber = 11;
  private readonly static int MaxClassesDefaultValue = 0;

  private int maxClasses_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MaxClasses {
    get { if ((_hasBits0 & 64) != 0) { return maxClasses_; } else { return MaxClassesDefaultValue; } }
    set {
      _hasBits0 |= 64;
      maxClasses_ = value;
    }
  }
  /// <summary>Gets whether the "max_classes" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxClasses {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "max_classes" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxClasses() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "player_slot" field.</summary>
  public const int PlayerSlotFieldNumber = 12;
  private readonly static int PlayerSlotDefaultValue = -1;

  private int playerSlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerSlot {
    get { if ((_hasBits0 & 128) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
    set {
      _hasBits0 |= 128;
      playerSlot_ = value;
    }
  }
  /// <summary>Gets whether the "player_slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerSlot {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "player_slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerSlot() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "tick_interval" field.</summary>
  public const int TickIntervalFieldNumber = 13;
  private readonly static float TickIntervalDefaultValue = 0F;

  private float tickInterval_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float TickInterval {
    get { if ((_hasBits0 & 256) != 0) { return tickInterval_; } else { return TickIntervalDefaultValue; } }
    set {
      _hasBits0 |= 256;
      tickInterval_ = value;
    }
  }
  /// <summary>Gets whether the "tick_interval" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTickInterval {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "tick_interval" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTickInterval() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "game_dir" field.</summary>
  public const int GameDirFieldNumber = 14;
  private readonly static string GameDirDefaultValue = "";

  private string gameDir_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string GameDir {
    get { return gameDir_ ?? GameDirDefaultValue; }
    set {
      gameDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_dir" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameDir {
    get { return gameDir_ != null; }
  }
  /// <summary>Clears the value of the "game_dir" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameDir() {
    gameDir_ = null;
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 15;
  private readonly static string MapNameDefaultValue = "";

  private string mapName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MapName {
    get { return mapName_ ?? MapNameDefaultValue; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapName {
    get { return mapName_ != null; }
  }
  /// <summary>Clears the value of the "map_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapName() {
    mapName_ = null;
  }

  /// <summary>Field number for the "sky_name" field.</summary>
  public const int SkyNameFieldNumber = 16;
  private readonly static string SkyNameDefaultValue = "";

  private string skyName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SkyName {
    get { return skyName_ ?? SkyNameDefaultValue; }
    set {
      skyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "sky_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSkyName {
    get { return skyName_ != null; }
  }
  /// <summary>Clears the value of the "sky_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSkyName() {
    skyName_ = null;
  }

  /// <summary>Field number for the "host_name" field.</summary>
  public const int HostNameFieldNumber = 17;
  private readonly static string HostNameDefaultValue = "";

  private string hostName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HostName {
    get { return hostName_ ?? HostNameDefaultValue; }
    set {
      hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "host_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostName {
    get { return hostName_ != null; }
  }
  /// <summary>Clears the value of the "host_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostName() {
    hostName_ = null;
  }

  /// <summary>Field number for the "addon_name" field.</summary>
  public const int AddonNameFieldNumber = 18;
  private readonly static string AddonNameDefaultValue = "";

  private string addonName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AddonName {
    get { return addonName_ ?? AddonNameDefaultValue; }
    set {
      addonName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "addon_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddonName {
    get { return addonName_ != null; }
  }
  /// <summary>Clears the value of the "addon_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddonName() {
    addonName_ = null;
  }

  /// <summary>Field number for the "game_session_config" field.</summary>
  public const int GameSessionConfigFieldNumber = 19;
  private global::CSVCMsg_GameSessionConfiguration gameSessionConfig_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CSVCMsg_GameSessionConfiguration GameSessionConfig {
    get { return gameSessionConfig_; }
    set {
      gameSessionConfig_ = value;
    }
  }

  /// <summary>Field number for the "game_session_manifest" field.</summary>
  public const int GameSessionManifestFieldNumber = 20;
  private readonly static pb::ByteString GameSessionManifestDefaultValue = pb::ByteString.Empty;

  private pb::ByteString gameSessionManifest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString GameSessionManifest {
    get { return gameSessionManifest_ ?? GameSessionManifestDefaultValue; }
    set {
      gameSessionManifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "game_session_manifest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGameSessionManifest {
    get { return gameSessionManifest_ != null; }
  }
  /// <summary>Clears the value of the "game_session_manifest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGameSessionManifest() {
    gameSessionManifest_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_ServerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_ServerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Protocol != other.Protocol) return false;
    if (ServerCount != other.ServerCount) return false;
    if (IsDedicated != other.IsDedicated) return false;
    if (IsHltv != other.IsHltv) return false;
    if (COs != other.COs) return false;
    if (MaxClients != other.MaxClients) return false;
    if (MaxClasses != other.MaxClasses) return false;
    if (PlayerSlot != other.PlayerSlot) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TickInterval, other.TickInterval)) return false;
    if (GameDir != other.GameDir) return false;
    if (MapName != other.MapName) return false;
    if (SkyName != other.SkyName) return false;
    if (HostName != other.HostName) return false;
    if (AddonName != other.AddonName) return false;
    if (!object.Equals(GameSessionConfig, other.GameSessionConfig)) return false;
    if (GameSessionManifest != other.GameSessionManifest) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasProtocol) hash ^= Protocol.GetHashCode();
    if (HasServerCount) hash ^= ServerCount.GetHashCode();
    if (HasIsDedicated) hash ^= IsDedicated.GetHashCode();
    if (HasIsHltv) hash ^= IsHltv.GetHashCode();
    if (HasCOs) hash ^= COs.GetHashCode();
    if (HasMaxClients) hash ^= MaxClients.GetHashCode();
    if (HasMaxClasses) hash ^= MaxClasses.GetHashCode();
    if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
    if (HasTickInterval) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TickInterval);
    if (HasGameDir) hash ^= GameDir.GetHashCode();
    if (HasMapName) hash ^= MapName.GetHashCode();
    if (HasSkyName) hash ^= SkyName.GetHashCode();
    if (HasHostName) hash ^= HostName.GetHashCode();
    if (HasAddonName) hash ^= AddonName.GetHashCode();
    if (gameSessionConfig_ != null) hash ^= GameSessionConfig.GetHashCode();
    if (HasGameSessionManifest) hash ^= GameSessionManifest.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasProtocol) {
      output.WriteRawTag(8);
      output.WriteInt32(Protocol);
    }
    if (HasServerCount) {
      output.WriteRawTag(16);
      output.WriteInt32(ServerCount);
    }
    if (HasIsDedicated) {
      output.WriteRawTag(24);
      output.WriteBool(IsDedicated);
    }
    if (HasIsHltv) {
      output.WriteRawTag(32);
      output.WriteBool(IsHltv);
    }
    if (HasCOs) {
      output.WriteRawTag(48);
      output.WriteInt32(COs);
    }
    if (HasMaxClients) {
      output.WriteRawTag(80);
      output.WriteInt32(MaxClients);
    }
    if (HasMaxClasses) {
      output.WriteRawTag(88);
      output.WriteInt32(MaxClasses);
    }
    if (HasPlayerSlot) {
      output.WriteRawTag(96);
      output.WriteInt32(PlayerSlot);
    }
    if (HasTickInterval) {
      output.WriteRawTag(109);
      output.WriteFloat(TickInterval);
    }
    if (HasGameDir) {
      output.WriteRawTag(114);
      output.WriteString(GameDir);
    }
    if (HasMapName) {
      output.WriteRawTag(122);
      output.WriteString(MapName);
    }
    if (HasSkyName) {
      output.WriteRawTag(130, 1);
      output.WriteString(SkyName);
    }
    if (HasHostName) {
      output.WriteRawTag(138, 1);
      output.WriteString(HostName);
    }
    if (HasAddonName) {
      output.WriteRawTag(146, 1);
      output.WriteString(AddonName);
    }
    if (gameSessionConfig_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(GameSessionConfig);
    }
    if (HasGameSessionManifest) {
      output.WriteRawTag(162, 1);
      output.WriteBytes(GameSessionManifest);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasProtocol) {
      output.WriteRawTag(8);
      output.WriteInt32(Protocol);
    }
    if (HasServerCount) {
      output.WriteRawTag(16);
      output.WriteInt32(ServerCount);
    }
    if (HasIsDedicated) {
      output.WriteRawTag(24);
      output.WriteBool(IsDedicated);
    }
    if (HasIsHltv) {
      output.WriteRawTag(32);
      output.WriteBool(IsHltv);
    }
    if (HasCOs) {
      output.WriteRawTag(48);
      output.WriteInt32(COs);
    }
    if (HasMaxClients) {
      output.WriteRawTag(80);
      output.WriteInt32(MaxClients);
    }
    if (HasMaxClasses) {
      output.WriteRawTag(88);
      output.WriteInt32(MaxClasses);
    }
    if (HasPlayerSlot) {
      output.WriteRawTag(96);
      output.WriteInt32(PlayerSlot);
    }
    if (HasTickInterval) {
      output.WriteRawTag(109);
      output.WriteFloat(TickInterval);
    }
    if (HasGameDir) {
      output.WriteRawTag(114);
      output.WriteString(GameDir);
    }
    if (HasMapName) {
      output.WriteRawTag(122);
      output.WriteString(MapName);
    }
    if (HasSkyName) {
      output.WriteRawTag(130, 1);
      output.WriteString(SkyName);
    }
    if (HasHostName) {
      output.WriteRawTag(138, 1);
      output.WriteString(HostName);
    }
    if (HasAddonName) {
      output.WriteRawTag(146, 1);
      output.WriteString(AddonName);
    }
    if (gameSessionConfig_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(GameSessionConfig);
    }
    if (HasGameSessionManifest) {
      output.WriteRawTag(162, 1);
      output.WriteBytes(GameSessionManifest);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasProtocol) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Protocol);
    }
    if (HasServerCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerCount);
    }
    if (HasIsDedicated) {
      size += 1 + 1;
    }
    if (HasIsHltv) {
      size += 1 + 1;
    }
    if (HasCOs) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(COs);
    }
    if (HasMaxClients) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxClients);
    }
    if (HasMaxClasses) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxClasses);
    }
    if (HasPlayerSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
    }
    if (HasTickInterval) {
      size += 1 + 4;
    }
    if (HasGameDir) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(GameDir);
    }
    if (HasMapName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (HasSkyName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(SkyName);
    }
    if (HasHostName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(HostName);
    }
    if (HasAddonName) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(AddonName);
    }
    if (gameSessionConfig_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(GameSessionConfig);
    }
    if (HasGameSessionManifest) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(GameSessionManifest);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_ServerInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasProtocol) {
      Protocol = other.Protocol;
    }
    if (other.HasServerCount) {
      ServerCount = other.ServerCount;
    }
    if (other.HasIsDedicated) {
      IsDedicated = other.IsDedicated;
    }
    if (other.HasIsHltv) {
      IsHltv = other.IsHltv;
    }
    if (other.HasCOs) {
      COs = other.COs;
    }
    if (other.HasMaxClients) {
      MaxClients = other.MaxClients;
    }
    if (other.HasMaxClasses) {
      MaxClasses = other.MaxClasses;
    }
    if (other.HasPlayerSlot) {
      PlayerSlot = other.PlayerSlot;
    }
    if (other.HasTickInterval) {
      TickInterval = other.TickInterval;
    }
    if (other.HasGameDir) {
      GameDir = other.GameDir;
    }
    if (other.HasMapName) {
      MapName = other.MapName;
    }
    if (other.HasSkyName) {
      SkyName = other.SkyName;
    }
    if (other.HasHostName) {
      HostName = other.HostName;
    }
    if (other.HasAddonName) {
      AddonName = other.AddonName;
    }
    if (other.gameSessionConfig_ != null) {
      if (gameSessionConfig_ == null) {
        GameSessionConfig = new global::CSVCMsg_GameSessionConfiguration();
      }
      GameSessionConfig.MergeFrom(other.GameSessionConfig);
    }
    if (other.HasGameSessionManifest) {
      GameSessionManifest = other.GameSessionManifest;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Protocol = input.ReadInt32();
          break;
        }
        case 16: {
          ServerCount = input.ReadInt32();
          break;
        }
        case 24: {
          IsDedicated = input.ReadBool();
          break;
        }
        case 32: {
          IsHltv = input.ReadBool();
          break;
        }
        case 48: {
          COs = input.ReadInt32();
          break;
        }
        case 80: {
          MaxClients = input.ReadInt32();
          break;
        }
        case 88: {
          MaxClasses = input.ReadInt32();
          break;
        }
        case 96: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 109: {
          TickInterval = input.ReadFloat();
          break;
        }
        case 114: {
          GameDir = input.ReadString();
          break;
        }
        case 122: {
          MapName = input.ReadString();
          break;
        }
        case 130: {
          SkyName = input.ReadString();
          break;
        }
        case 138: {
          HostName = input.ReadString();
          break;
        }
        case 146: {
          AddonName = input.ReadString();
          break;
        }
        case 154: {
          if (gameSessionConfig_ == null) {
            GameSessionConfig = new global::CSVCMsg_GameSessionConfiguration();
          }
          input.ReadMessage(GameSessionConfig);
          break;
        }
        case 162: {
          GameSessionManifest = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Protocol = input.ReadInt32();
          break;
        }
        case 16: {
          ServerCount = input.ReadInt32();
          break;
        }
        case 24: {
          IsDedicated = input.ReadBool();
          break;
        }
        case 32: {
          IsHltv = input.ReadBool();
          break;
        }
        case 48: {
          COs = input.ReadInt32();
          break;
        }
        case 80: {
          MaxClients = input.ReadInt32();
          break;
        }
        case 88: {
          MaxClasses = input.ReadInt32();
          break;
        }
        case 96: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 109: {
          TickInterval = input.ReadFloat();
          break;
        }
        case 114: {
          GameDir = input.ReadString();
          break;
        }
        case 122: {
          MapName = input.ReadString();
          break;
        }
        case 130: {
          SkyName = input.ReadString();
          break;
        }
        case 138: {
          HostName = input.ReadString();
          break;
        }
        case 146: {
          AddonName = input.ReadString();
          break;
        }
        case 154: {
          if (gameSessionConfig_ == null) {
            GameSessionConfig = new global::CSVCMsg_GameSessionConfiguration();
          }
          input.ReadMessage(GameSessionConfig);
          break;
        }
        case 162: {
          GameSessionManifest = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_ClassInfo : pb::IMessage<CSVCMsg_ClassInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_ClassInfo> _parser = new pb::MessageParser<CSVCMsg_ClassInfo>(() => new CSVCMsg_ClassInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_ClassInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClassInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClassInfo(CSVCMsg_ClassInfo other) : this() {
    _hasBits0 = other._hasBits0;
    createOnClient_ = other.createOnClient_;
    classes_ = other.classes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClassInfo Clone() {
    return new CSVCMsg_ClassInfo(this);
  }

  /// <summary>Field number for the "create_on_client" field.</summary>
  public const int CreateOnClientFieldNumber = 1;
  private readonly static bool CreateOnClientDefaultValue = false;

  private bool createOnClient_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CreateOnClient {
    get { if ((_hasBits0 & 1) != 0) { return createOnClient_; } else { return CreateOnClientDefaultValue; } }
    set {
      _hasBits0 |= 1;
      createOnClient_ = value;
    }
  }
  /// <summary>Gets whether the "create_on_client" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreateOnClient {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "create_on_client" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreateOnClient() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "classes" field.</summary>
  public const int ClassesFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CSVCMsg_ClassInfo.Types.class_t> _repeated_classes_codec
      = pb::FieldCodec.ForMessage(18, global::CSVCMsg_ClassInfo.Types.class_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_ClassInfo.Types.class_t> classes_ = new pbc::RepeatedField<global::CSVCMsg_ClassInfo.Types.class_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_ClassInfo.Types.class_t> Classes {
    get { return classes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_ClassInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_ClassInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (CreateOnClient != other.CreateOnClient) return false;
    if(!classes_.Equals(other.classes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCreateOnClient) hash ^= CreateOnClient.GetHashCode();
    hash ^= classes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCreateOnClient) {
      output.WriteRawTag(8);
      output.WriteBool(CreateOnClient);
    }
    classes_.WriteTo(output, _repeated_classes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCreateOnClient) {
      output.WriteRawTag(8);
      output.WriteBool(CreateOnClient);
    }
    classes_.WriteTo(ref output, _repeated_classes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCreateOnClient) {
      size += 1 + 1;
    }
    size += classes_.CalculateSize(_repeated_classes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_ClassInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasCreateOnClient) {
      CreateOnClient = other.CreateOnClient;
    }
    classes_.Add(other.classes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          CreateOnClient = input.ReadBool();
          break;
        }
        case 18: {
          classes_.AddEntriesFrom(input, _repeated_classes_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          CreateOnClient = input.ReadBool();
          break;
        }
        case 18: {
          classes_.AddEntriesFrom(ref input, _repeated_classes_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_ClassInfo message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class class_t : pb::IMessage<class_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<class_t> _parser = new pb::MessageParser<class_t>(() => new class_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<class_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_ClassInfo.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public class_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public class_t(class_t other) : this() {
        _hasBits0 = other._hasBits0;
        classId_ = other.classId_;
        className_ = other.className_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public class_t Clone() {
        return new class_t(this);
      }

      /// <summary>Field number for the "class_id" field.</summary>
      public const int ClassIdFieldNumber = 1;
      private readonly static int ClassIdDefaultValue = 0;

      private int classId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ClassId {
        get { if ((_hasBits0 & 1) != 0) { return classId_; } else { return ClassIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          classId_ = value;
        }
      }
      /// <summary>Gets whether the "class_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasClassId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "class_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearClassId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "class_name" field.</summary>
      public const int ClassNameFieldNumber = 3;
      private readonly static string ClassNameDefaultValue = "";

      private string className_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string ClassName {
        get { return className_ ?? ClassNameDefaultValue; }
        set {
          className_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "class_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasClassName {
        get { return className_ != null; }
      }
      /// <summary>Clears the value of the "class_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearClassName() {
        className_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as class_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(class_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ClassId != other.ClassId) return false;
        if (ClassName != other.ClassName) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasClassId) hash ^= ClassId.GetHashCode();
        if (HasClassName) hash ^= ClassName.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasClassId) {
          output.WriteRawTag(8);
          output.WriteInt32(ClassId);
        }
        if (HasClassName) {
          output.WriteRawTag(26);
          output.WriteString(ClassName);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasClassId) {
          output.WriteRawTag(8);
          output.WriteInt32(ClassId);
        }
        if (HasClassName) {
          output.WriteRawTag(26);
          output.WriteString(ClassName);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasClassId) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClassId);
        }
        if (HasClassName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(ClassName);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(class_t other) {
        if (other == null) {
          return;
        }
        if (other.HasClassId) {
          ClassId = other.ClassId;
        }
        if (other.HasClassName) {
          ClassName = other.ClassName;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ClassId = input.ReadInt32();
              break;
            }
            case 26: {
              ClassName = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ClassId = input.ReadInt32();
              break;
            }
            case 26: {
              ClassName = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_SetPause : pb::IMessage<CSVCMsg_SetPause>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_SetPause> _parser = new pb::MessageParser<CSVCMsg_SetPause>(() => new CSVCMsg_SetPause());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_SetPause> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetPause() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetPause(CSVCMsg_SetPause other) : this() {
    _hasBits0 = other._hasBits0;
    paused_ = other.paused_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetPause Clone() {
    return new CSVCMsg_SetPause(this);
  }

  /// <summary>Field number for the "paused" field.</summary>
  public const int PausedFieldNumber = 1;
  private readonly static bool PausedDefaultValue = false;

  private bool paused_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Paused {
    get { if ((_hasBits0 & 1) != 0) { return paused_; } else { return PausedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      paused_ = value;
    }
  }
  /// <summary>Gets whether the "paused" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPaused {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "paused" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPaused() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_SetPause);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_SetPause other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Paused != other.Paused) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPaused) hash ^= Paused.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPaused) {
      output.WriteRawTag(8);
      output.WriteBool(Paused);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPaused) {
      output.WriteRawTag(8);
      output.WriteBool(Paused);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPaused) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_SetPause other) {
    if (other == null) {
      return;
    }
    if (other.HasPaused) {
      Paused = other.Paused;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Paused = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Paused = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_VoiceInit : pb::IMessage<CSVCMsg_VoiceInit>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_VoiceInit> _parser = new pb::MessageParser<CSVCMsg_VoiceInit>(() => new CSVCMsg_VoiceInit());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_VoiceInit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceInit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceInit(CSVCMsg_VoiceInit other) : this() {
    _hasBits0 = other._hasBits0;
    quality_ = other.quality_;
    codec_ = other.codec_;
    version_ = other.version_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceInit Clone() {
    return new CSVCMsg_VoiceInit(this);
  }

  /// <summary>Field number for the "quality" field.</summary>
  public const int QualityFieldNumber = 1;
  private readonly static int QualityDefaultValue = 0;

  private int quality_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Quality {
    get { if ((_hasBits0 & 1) != 0) { return quality_; } else { return QualityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      quality_ = value;
    }
  }
  /// <summary>Gets whether the "quality" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasQuality {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "quality" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearQuality() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "codec" field.</summary>
  public const int CodecFieldNumber = 2;
  private readonly static string CodecDefaultValue = "";

  private string codec_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Codec {
    get { return codec_ ?? CodecDefaultValue; }
    set {
      codec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "codec" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCodec {
    get { return codec_ != null; }
  }
  /// <summary>Clears the value of the "codec" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCodec() {
    codec_ = null;
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int VersionFieldNumber = 3;
  private readonly static int VersionDefaultValue = 0;

  private int version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Version {
    get { if ((_hasBits0 & 2) != 0) { return version_; } else { return VersionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      version_ = value;
    }
  }
  /// <summary>Gets whether the "version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVersion {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVersion() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_VoiceInit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_VoiceInit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Quality != other.Quality) return false;
    if (Codec != other.Codec) return false;
    if (Version != other.Version) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasQuality) hash ^= Quality.GetHashCode();
    if (HasCodec) hash ^= Codec.GetHashCode();
    if (HasVersion) hash ^= Version.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasQuality) {
      output.WriteRawTag(8);
      output.WriteInt32(Quality);
    }
    if (HasCodec) {
      output.WriteRawTag(18);
      output.WriteString(Codec);
    }
    if (HasVersion) {
      output.WriteRawTag(24);
      output.WriteInt32(Version);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasQuality) {
      output.WriteRawTag(8);
      output.WriteInt32(Quality);
    }
    if (HasCodec) {
      output.WriteRawTag(18);
      output.WriteString(Codec);
    }
    if (HasVersion) {
      output.WriteRawTag(24);
      output.WriteInt32(Version);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasQuality) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
    }
    if (HasCodec) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Codec);
    }
    if (HasVersion) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_VoiceInit other) {
    if (other == null) {
      return;
    }
    if (other.HasQuality) {
      Quality = other.Quality;
    }
    if (other.HasCodec) {
      Codec = other.Codec;
    }
    if (other.HasVersion) {
      Version = other.Version;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Quality = input.ReadInt32();
          break;
        }
        case 18: {
          Codec = input.ReadString();
          break;
        }
        case 24: {
          Version = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Quality = input.ReadInt32();
          break;
        }
        case 18: {
          Codec = input.ReadString();
          break;
        }
        case 24: {
          Version = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_Print : pb::IMessage<CSVCMsg_Print>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_Print> _parser = new pb::MessageParser<CSVCMsg_Print>(() => new CSVCMsg_Print());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_Print> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Print() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Print(CSVCMsg_Print other) : this() {
    text_ = other.text_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Print Clone() {
    return new CSVCMsg_Print(this);
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 1;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_Print);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_Print other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Text != other.Text) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasText) hash ^= Text.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasText) {
      output.WriteRawTag(10);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasText) {
      output.WriteRawTag(10);
      output.WriteString(Text);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_Print other) {
    if (other == null) {
      return;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Text = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Text = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_Sounds : pb::IMessage<CSVCMsg_Sounds>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_Sounds> _parser = new pb::MessageParser<CSVCMsg_Sounds>(() => new CSVCMsg_Sounds());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_Sounds> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Sounds() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Sounds(CSVCMsg_Sounds other) : this() {
    _hasBits0 = other._hasBits0;
    reliableSound_ = other.reliableSound_;
    sounds_ = other.sounds_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Sounds Clone() {
    return new CSVCMsg_Sounds(this);
  }

  /// <summary>Field number for the "reliable_sound" field.</summary>
  public const int ReliableSoundFieldNumber = 1;
  private readonly static bool ReliableSoundDefaultValue = false;

  private bool reliableSound_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool ReliableSound {
    get { if ((_hasBits0 & 1) != 0) { return reliableSound_; } else { return ReliableSoundDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reliableSound_ = value;
    }
  }
  /// <summary>Gets whether the "reliable_sound" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReliableSound {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reliable_sound" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReliableSound() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "sounds" field.</summary>
  public const int SoundsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CSVCMsg_Sounds.Types.sounddata_t> _repeated_sounds_codec
      = pb::FieldCodec.ForMessage(18, global::CSVCMsg_Sounds.Types.sounddata_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_Sounds.Types.sounddata_t> sounds_ = new pbc::RepeatedField<global::CSVCMsg_Sounds.Types.sounddata_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_Sounds.Types.sounddata_t> Sounds {
    get { return sounds_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_Sounds);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_Sounds other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ReliableSound != other.ReliableSound) return false;
    if(!sounds_.Equals(other.sounds_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasReliableSound) hash ^= ReliableSound.GetHashCode();
    hash ^= sounds_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasReliableSound) {
      output.WriteRawTag(8);
      output.WriteBool(ReliableSound);
    }
    sounds_.WriteTo(output, _repeated_sounds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasReliableSound) {
      output.WriteRawTag(8);
      output.WriteBool(ReliableSound);
    }
    sounds_.WriteTo(ref output, _repeated_sounds_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasReliableSound) {
      size += 1 + 1;
    }
    size += sounds_.CalculateSize(_repeated_sounds_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_Sounds other) {
    if (other == null) {
      return;
    }
    if (other.HasReliableSound) {
      ReliableSound = other.ReliableSound;
    }
    sounds_.Add(other.sounds_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ReliableSound = input.ReadBool();
          break;
        }
        case 18: {
          sounds_.AddEntriesFrom(input, _repeated_sounds_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ReliableSound = input.ReadBool();
          break;
        }
        case 18: {
          sounds_.AddEntriesFrom(ref input, _repeated_sounds_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_Sounds message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class sounddata_t : pb::IMessage<sounddata_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<sounddata_t> _parser = new pb::MessageParser<sounddata_t>(() => new sounddata_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<sounddata_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_Sounds.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sounddata_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sounddata_t(sounddata_t other) : this() {
        _hasBits0 = other._hasBits0;
        originX_ = other.originX_;
        originY_ = other.originY_;
        originZ_ = other.originZ_;
        volume_ = other.volume_;
        delayValue_ = other.delayValue_;
        sequenceNumber_ = other.sequenceNumber_;
        entityIndex_ = other.entityIndex_;
        channel_ = other.channel_;
        pitch_ = other.pitch_;
        flags_ = other.flags_;
        soundNum_ = other.soundNum_;
        soundNumHandle_ = other.soundNumHandle_;
        speakerEntity_ = other.speakerEntity_;
        randomSeed_ = other.randomSeed_;
        soundLevel_ = other.soundLevel_;
        isSentence_ = other.isSentence_;
        isAmbient_ = other.isAmbient_;
        guid_ = other.guid_;
        soundResourceId_ = other.soundResourceId_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sounddata_t Clone() {
        return new sounddata_t(this);
      }

      /// <summary>Field number for the "origin_x" field.</summary>
      public const int OriginXFieldNumber = 1;
      private readonly static int OriginXDefaultValue = 0;

      private int originX_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OriginX {
        get { if ((_hasBits0 & 1) != 0) { return originX_; } else { return OriginXDefaultValue; } }
        set {
          _hasBits0 |= 1;
          originX_ = value;
        }
      }
      /// <summary>Gets whether the "origin_x" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOriginX {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "origin_x" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOriginX() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "origin_y" field.</summary>
      public const int OriginYFieldNumber = 2;
      private readonly static int OriginYDefaultValue = 0;

      private int originY_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OriginY {
        get { if ((_hasBits0 & 2) != 0) { return originY_; } else { return OriginYDefaultValue; } }
        set {
          _hasBits0 |= 2;
          originY_ = value;
        }
      }
      /// <summary>Gets whether the "origin_y" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOriginY {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "origin_y" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOriginY() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "origin_z" field.</summary>
      public const int OriginZFieldNumber = 3;
      private readonly static int OriginZDefaultValue = 0;

      private int originZ_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int OriginZ {
        get { if ((_hasBits0 & 4) != 0) { return originZ_; } else { return OriginZDefaultValue; } }
        set {
          _hasBits0 |= 4;
          originZ_ = value;
        }
      }
      /// <summary>Gets whether the "origin_z" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasOriginZ {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "origin_z" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearOriginZ() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "volume" field.</summary>
      public const int VolumeFieldNumber = 4;
      private readonly static uint VolumeDefaultValue = 0;

      private uint volume_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Volume {
        get { if ((_hasBits0 & 8) != 0) { return volume_; } else { return VolumeDefaultValue; } }
        set {
          _hasBits0 |= 8;
          volume_ = value;
        }
      }
      /// <summary>Gets whether the "volume" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVolume {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "volume" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVolume() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "delay_value" field.</summary>
      public const int DelayValueFieldNumber = 5;
      private readonly static float DelayValueDefaultValue = 0F;

      private float delayValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float DelayValue {
        get { if ((_hasBits0 & 16) != 0) { return delayValue_; } else { return DelayValueDefaultValue; } }
        set {
          _hasBits0 |= 16;
          delayValue_ = value;
        }
      }
      /// <summary>Gets whether the "delay_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDelayValue {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "delay_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDelayValue() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "sequence_number" field.</summary>
      public const int SequenceNumberFieldNumber = 6;
      private readonly static int SequenceNumberDefaultValue = 0;

      private int sequenceNumber_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int SequenceNumber {
        get { if ((_hasBits0 & 32) != 0) { return sequenceNumber_; } else { return SequenceNumberDefaultValue; } }
        set {
          _hasBits0 |= 32;
          sequenceNumber_ = value;
        }
      }
      /// <summary>Gets whether the "sequence_number" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSequenceNumber {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "sequence_number" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSequenceNumber() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "entity_index" field.</summary>
      public const int EntityIndexFieldNumber = 7;
      private readonly static int EntityIndexDefaultValue = -1;

      private int entityIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int EntityIndex {
        get { if ((_hasBits0 & 64) != 0) { return entityIndex_; } else { return EntityIndexDefaultValue; } }
        set {
          _hasBits0 |= 64;
          entityIndex_ = value;
        }
      }
      /// <summary>Gets whether the "entity_index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEntityIndex {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "entity_index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEntityIndex() {
        _hasBits0 &= ~64;
      }

      /// <summary>Field number for the "channel" field.</summary>
      public const int ChannelFieldNumber = 8;
      private readonly static int ChannelDefaultValue = 0;

      private int channel_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Channel {
        get { if ((_hasBits0 & 128) != 0) { return channel_; } else { return ChannelDefaultValue; } }
        set {
          _hasBits0 |= 128;
          channel_ = value;
        }
      }
      /// <summary>Gets whether the "channel" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasChannel {
        get { return (_hasBits0 & 128) != 0; }
      }
      /// <summary>Clears the value of the "channel" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearChannel() {
        _hasBits0 &= ~128;
      }

      /// <summary>Field number for the "pitch" field.</summary>
      public const int PitchFieldNumber = 9;
      private readonly static int PitchDefaultValue = 0;

      private int pitch_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Pitch {
        get { if ((_hasBits0 & 256) != 0) { return pitch_; } else { return PitchDefaultValue; } }
        set {
          _hasBits0 |= 256;
          pitch_ = value;
        }
      }
      /// <summary>Gets whether the "pitch" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPitch {
        get { return (_hasBits0 & 256) != 0; }
      }
      /// <summary>Clears the value of the "pitch" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPitch() {
        _hasBits0 &= ~256;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 10;
      private readonly static int FlagsDefaultValue = 0;

      private int flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Flags {
        get { if ((_hasBits0 & 512) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 512;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 512) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~512;
      }

      /// <summary>Field number for the "sound_num" field.</summary>
      public const int SoundNumFieldNumber = 11;
      private readonly static uint SoundNumDefaultValue = 0;

      private uint soundNum_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SoundNum {
        get { if ((_hasBits0 & 1024) != 0) { return soundNum_; } else { return SoundNumDefaultValue; } }
        set {
          _hasBits0 |= 1024;
          soundNum_ = value;
        }
      }
      /// <summary>Gets whether the "sound_num" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSoundNum {
        get { return (_hasBits0 & 1024) != 0; }
      }
      /// <summary>Clears the value of the "sound_num" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSoundNum() {
        _hasBits0 &= ~1024;
      }

      /// <summary>Field number for the "sound_num_handle" field.</summary>
      public const int SoundNumHandleFieldNumber = 12;
      private readonly static uint SoundNumHandleDefaultValue = 0;

      private uint soundNumHandle_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint SoundNumHandle {
        get { if ((_hasBits0 & 2048) != 0) { return soundNumHandle_; } else { return SoundNumHandleDefaultValue; } }
        set {
          _hasBits0 |= 2048;
          soundNumHandle_ = value;
        }
      }
      /// <summary>Gets whether the "sound_num_handle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSoundNumHandle {
        get { return (_hasBits0 & 2048) != 0; }
      }
      /// <summary>Clears the value of the "sound_num_handle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSoundNumHandle() {
        _hasBits0 &= ~2048;
      }

      /// <summary>Field number for the "speaker_entity" field.</summary>
      public const int SpeakerEntityFieldNumber = 13;
      private readonly static int SpeakerEntityDefaultValue = 0;

      private int speakerEntity_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int SpeakerEntity {
        get { if ((_hasBits0 & 4096) != 0) { return speakerEntity_; } else { return SpeakerEntityDefaultValue; } }
        set {
          _hasBits0 |= 4096;
          speakerEntity_ = value;
        }
      }
      /// <summary>Gets whether the "speaker_entity" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSpeakerEntity {
        get { return (_hasBits0 & 4096) != 0; }
      }
      /// <summary>Clears the value of the "speaker_entity" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSpeakerEntity() {
        _hasBits0 &= ~4096;
      }

      /// <summary>Field number for the "random_seed" field.</summary>
      public const int RandomSeedFieldNumber = 14;
      private readonly static int RandomSeedDefaultValue = 0;

      private int randomSeed_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int RandomSeed {
        get { if ((_hasBits0 & 8192) != 0) { return randomSeed_; } else { return RandomSeedDefaultValue; } }
        set {
          _hasBits0 |= 8192;
          randomSeed_ = value;
        }
      }
      /// <summary>Gets whether the "random_seed" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRandomSeed {
        get { return (_hasBits0 & 8192) != 0; }
      }
      /// <summary>Clears the value of the "random_seed" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRandomSeed() {
        _hasBits0 &= ~8192;
      }

      /// <summary>Field number for the "sound_level" field.</summary>
      public const int SoundLevelFieldNumber = 15;
      private readonly static int SoundLevelDefaultValue = 0;

      private int soundLevel_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int SoundLevel {
        get { if ((_hasBits0 & 16384) != 0) { return soundLevel_; } else { return SoundLevelDefaultValue; } }
        set {
          _hasBits0 |= 16384;
          soundLevel_ = value;
        }
      }
      /// <summary>Gets whether the "sound_level" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSoundLevel {
        get { return (_hasBits0 & 16384) != 0; }
      }
      /// <summary>Clears the value of the "sound_level" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSoundLevel() {
        _hasBits0 &= ~16384;
      }

      /// <summary>Field number for the "is_sentence" field.</summary>
      public const int IsSentenceFieldNumber = 16;
      private readonly static bool IsSentenceDefaultValue = false;

      private bool isSentence_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsSentence {
        get { if ((_hasBits0 & 32768) != 0) { return isSentence_; } else { return IsSentenceDefaultValue; } }
        set {
          _hasBits0 |= 32768;
          isSentence_ = value;
        }
      }
      /// <summary>Gets whether the "is_sentence" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsSentence {
        get { return (_hasBits0 & 32768) != 0; }
      }
      /// <summary>Clears the value of the "is_sentence" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsSentence() {
        _hasBits0 &= ~32768;
      }

      /// <summary>Field number for the "is_ambient" field.</summary>
      public const int IsAmbientFieldNumber = 17;
      private readonly static bool IsAmbientDefaultValue = false;

      private bool isAmbient_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsAmbient {
        get { if ((_hasBits0 & 65536) != 0) { return isAmbient_; } else { return IsAmbientDefaultValue; } }
        set {
          _hasBits0 |= 65536;
          isAmbient_ = value;
        }
      }
      /// <summary>Gets whether the "is_ambient" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsAmbient {
        get { return (_hasBits0 & 65536) != 0; }
      }
      /// <summary>Clears the value of the "is_ambient" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsAmbient() {
        _hasBits0 &= ~65536;
      }

      /// <summary>Field number for the "guid" field.</summary>
      public const int GuidFieldNumber = 18;
      private readonly static uint GuidDefaultValue = 0;

      private uint guid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint Guid {
        get { if ((_hasBits0 & 131072) != 0) { return guid_; } else { return GuidDefaultValue; } }
        set {
          _hasBits0 |= 131072;
          guid_ = value;
        }
      }
      /// <summary>Gets whether the "guid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasGuid {
        get { return (_hasBits0 & 131072) != 0; }
      }
      /// <summary>Clears the value of the "guid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearGuid() {
        _hasBits0 &= ~131072;
      }

      /// <summary>Field number for the "sound_resource_id" field.</summary>
      public const int SoundResourceIdFieldNumber = 19;
      private readonly static ulong SoundResourceIdDefaultValue = 0UL;

      private ulong soundResourceId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong SoundResourceId {
        get { if ((_hasBits0 & 262144) != 0) { return soundResourceId_; } else { return SoundResourceIdDefaultValue; } }
        set {
          _hasBits0 |= 262144;
          soundResourceId_ = value;
        }
      }
      /// <summary>Gets whether the "sound_resource_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSoundResourceId {
        get { return (_hasBits0 & 262144) != 0; }
      }
      /// <summary>Clears the value of the "sound_resource_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSoundResourceId() {
        _hasBits0 &= ~262144;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as sounddata_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(sounddata_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (OriginX != other.OriginX) return false;
        if (OriginY != other.OriginY) return false;
        if (OriginZ != other.OriginZ) return false;
        if (Volume != other.Volume) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DelayValue, other.DelayValue)) return false;
        if (SequenceNumber != other.SequenceNumber) return false;
        if (EntityIndex != other.EntityIndex) return false;
        if (Channel != other.Channel) return false;
        if (Pitch != other.Pitch) return false;
        if (Flags != other.Flags) return false;
        if (SoundNum != other.SoundNum) return false;
        if (SoundNumHandle != other.SoundNumHandle) return false;
        if (SpeakerEntity != other.SpeakerEntity) return false;
        if (RandomSeed != other.RandomSeed) return false;
        if (SoundLevel != other.SoundLevel) return false;
        if (IsSentence != other.IsSentence) return false;
        if (IsAmbient != other.IsAmbient) return false;
        if (Guid != other.Guid) return false;
        if (SoundResourceId != other.SoundResourceId) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasOriginX) hash ^= OriginX.GetHashCode();
        if (HasOriginY) hash ^= OriginY.GetHashCode();
        if (HasOriginZ) hash ^= OriginZ.GetHashCode();
        if (HasVolume) hash ^= Volume.GetHashCode();
        if (HasDelayValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DelayValue);
        if (HasSequenceNumber) hash ^= SequenceNumber.GetHashCode();
        if (HasEntityIndex) hash ^= EntityIndex.GetHashCode();
        if (HasChannel) hash ^= Channel.GetHashCode();
        if (HasPitch) hash ^= Pitch.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasSoundNum) hash ^= SoundNum.GetHashCode();
        if (HasSoundNumHandle) hash ^= SoundNumHandle.GetHashCode();
        if (HasSpeakerEntity) hash ^= SpeakerEntity.GetHashCode();
        if (HasRandomSeed) hash ^= RandomSeed.GetHashCode();
        if (HasSoundLevel) hash ^= SoundLevel.GetHashCode();
        if (HasIsSentence) hash ^= IsSentence.GetHashCode();
        if (HasIsAmbient) hash ^= IsAmbient.GetHashCode();
        if (HasGuid) hash ^= Guid.GetHashCode();
        if (HasSoundResourceId) hash ^= SoundResourceId.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasOriginX) {
          output.WriteRawTag(8);
          output.WriteSInt32(OriginX);
        }
        if (HasOriginY) {
          output.WriteRawTag(16);
          output.WriteSInt32(OriginY);
        }
        if (HasOriginZ) {
          output.WriteRawTag(24);
          output.WriteSInt32(OriginZ);
        }
        if (HasVolume) {
          output.WriteRawTag(32);
          output.WriteUInt32(Volume);
        }
        if (HasDelayValue) {
          output.WriteRawTag(45);
          output.WriteFloat(DelayValue);
        }
        if (HasSequenceNumber) {
          output.WriteRawTag(48);
          output.WriteInt32(SequenceNumber);
        }
        if (HasEntityIndex) {
          output.WriteRawTag(56);
          output.WriteInt32(EntityIndex);
        }
        if (HasChannel) {
          output.WriteRawTag(64);
          output.WriteInt32(Channel);
        }
        if (HasPitch) {
          output.WriteRawTag(72);
          output.WriteInt32(Pitch);
        }
        if (HasFlags) {
          output.WriteRawTag(80);
          output.WriteInt32(Flags);
        }
        if (HasSoundNum) {
          output.WriteRawTag(88);
          output.WriteUInt32(SoundNum);
        }
        if (HasSoundNumHandle) {
          output.WriteRawTag(101);
          output.WriteFixed32(SoundNumHandle);
        }
        if (HasSpeakerEntity) {
          output.WriteRawTag(104);
          output.WriteInt32(SpeakerEntity);
        }
        if (HasRandomSeed) {
          output.WriteRawTag(112);
          output.WriteInt32(RandomSeed);
        }
        if (HasSoundLevel) {
          output.WriteRawTag(120);
          output.WriteInt32(SoundLevel);
        }
        if (HasIsSentence) {
          output.WriteRawTag(128, 1);
          output.WriteBool(IsSentence);
        }
        if (HasIsAmbient) {
          output.WriteRawTag(136, 1);
          output.WriteBool(IsAmbient);
        }
        if (HasGuid) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(Guid);
        }
        if (HasSoundResourceId) {
          output.WriteRawTag(153, 1);
          output.WriteFixed64(SoundResourceId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasOriginX) {
          output.WriteRawTag(8);
          output.WriteSInt32(OriginX);
        }
        if (HasOriginY) {
          output.WriteRawTag(16);
          output.WriteSInt32(OriginY);
        }
        if (HasOriginZ) {
          output.WriteRawTag(24);
          output.WriteSInt32(OriginZ);
        }
        if (HasVolume) {
          output.WriteRawTag(32);
          output.WriteUInt32(Volume);
        }
        if (HasDelayValue) {
          output.WriteRawTag(45);
          output.WriteFloat(DelayValue);
        }
        if (HasSequenceNumber) {
          output.WriteRawTag(48);
          output.WriteInt32(SequenceNumber);
        }
        if (HasEntityIndex) {
          output.WriteRawTag(56);
          output.WriteInt32(EntityIndex);
        }
        if (HasChannel) {
          output.WriteRawTag(64);
          output.WriteInt32(Channel);
        }
        if (HasPitch) {
          output.WriteRawTag(72);
          output.WriteInt32(Pitch);
        }
        if (HasFlags) {
          output.WriteRawTag(80);
          output.WriteInt32(Flags);
        }
        if (HasSoundNum) {
          output.WriteRawTag(88);
          output.WriteUInt32(SoundNum);
        }
        if (HasSoundNumHandle) {
          output.WriteRawTag(101);
          output.WriteFixed32(SoundNumHandle);
        }
        if (HasSpeakerEntity) {
          output.WriteRawTag(104);
          output.WriteInt32(SpeakerEntity);
        }
        if (HasRandomSeed) {
          output.WriteRawTag(112);
          output.WriteInt32(RandomSeed);
        }
        if (HasSoundLevel) {
          output.WriteRawTag(120);
          output.WriteInt32(SoundLevel);
        }
        if (HasIsSentence) {
          output.WriteRawTag(128, 1);
          output.WriteBool(IsSentence);
        }
        if (HasIsAmbient) {
          output.WriteRawTag(136, 1);
          output.WriteBool(IsAmbient);
        }
        if (HasGuid) {
          output.WriteRawTag(144, 1);
          output.WriteUInt32(Guid);
        }
        if (HasSoundResourceId) {
          output.WriteRawTag(153, 1);
          output.WriteFixed64(SoundResourceId);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasOriginX) {
          size += 1 + pb::CodedOutputStream.ComputeSInt32Size(OriginX);
        }
        if (HasOriginY) {
          size += 1 + pb::CodedOutputStream.ComputeSInt32Size(OriginY);
        }
        if (HasOriginZ) {
          size += 1 + pb::CodedOutputStream.ComputeSInt32Size(OriginZ);
        }
        if (HasVolume) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Volume);
        }
        if (HasDelayValue) {
          size += 1 + 4;
        }
        if (HasSequenceNumber) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SequenceNumber);
        }
        if (HasEntityIndex) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityIndex);
        }
        if (HasChannel) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
        }
        if (HasPitch) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pitch);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
        }
        if (HasSoundNum) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SoundNum);
        }
        if (HasSoundNumHandle) {
          size += 1 + 4;
        }
        if (HasSpeakerEntity) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeakerEntity);
        }
        if (HasRandomSeed) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomSeed);
        }
        if (HasSoundLevel) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundLevel);
        }
        if (HasIsSentence) {
          size += 2 + 1;
        }
        if (HasIsAmbient) {
          size += 2 + 1;
        }
        if (HasGuid) {
          size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Guid);
        }
        if (HasSoundResourceId) {
          size += 2 + 8;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(sounddata_t other) {
        if (other == null) {
          return;
        }
        if (other.HasOriginX) {
          OriginX = other.OriginX;
        }
        if (other.HasOriginY) {
          OriginY = other.OriginY;
        }
        if (other.HasOriginZ) {
          OriginZ = other.OriginZ;
        }
        if (other.HasVolume) {
          Volume = other.Volume;
        }
        if (other.HasDelayValue) {
          DelayValue = other.DelayValue;
        }
        if (other.HasSequenceNumber) {
          SequenceNumber = other.SequenceNumber;
        }
        if (other.HasEntityIndex) {
          EntityIndex = other.EntityIndex;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasPitch) {
          Pitch = other.Pitch;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasSoundNum) {
          SoundNum = other.SoundNum;
        }
        if (other.HasSoundNumHandle) {
          SoundNumHandle = other.SoundNumHandle;
        }
        if (other.HasSpeakerEntity) {
          SpeakerEntity = other.SpeakerEntity;
        }
        if (other.HasRandomSeed) {
          RandomSeed = other.RandomSeed;
        }
        if (other.HasSoundLevel) {
          SoundLevel = other.SoundLevel;
        }
        if (other.HasIsSentence) {
          IsSentence = other.IsSentence;
        }
        if (other.HasIsAmbient) {
          IsAmbient = other.IsAmbient;
        }
        if (other.HasGuid) {
          Guid = other.Guid;
        }
        if (other.HasSoundResourceId) {
          SoundResourceId = other.SoundResourceId;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              OriginX = input.ReadSInt32();
              break;
            }
            case 16: {
              OriginY = input.ReadSInt32();
              break;
            }
            case 24: {
              OriginZ = input.ReadSInt32();
              break;
            }
            case 32: {
              Volume = input.ReadUInt32();
              break;
            }
            case 45: {
              DelayValue = input.ReadFloat();
              break;
            }
            case 48: {
              SequenceNumber = input.ReadInt32();
              break;
            }
            case 56: {
              EntityIndex = input.ReadInt32();
              break;
            }
            case 64: {
              Channel = input.ReadInt32();
              break;
            }
            case 72: {
              Pitch = input.ReadInt32();
              break;
            }
            case 80: {
              Flags = input.ReadInt32();
              break;
            }
            case 88: {
              SoundNum = input.ReadUInt32();
              break;
            }
            case 101: {
              SoundNumHandle = input.ReadFixed32();
              break;
            }
            case 104: {
              SpeakerEntity = input.ReadInt32();
              break;
            }
            case 112: {
              RandomSeed = input.ReadInt32();
              break;
            }
            case 120: {
              SoundLevel = input.ReadInt32();
              break;
            }
            case 128: {
              IsSentence = input.ReadBool();
              break;
            }
            case 136: {
              IsAmbient = input.ReadBool();
              break;
            }
            case 144: {
              Guid = input.ReadUInt32();
              break;
            }
            case 153: {
              SoundResourceId = input.ReadFixed64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              OriginX = input.ReadSInt32();
              break;
            }
            case 16: {
              OriginY = input.ReadSInt32();
              break;
            }
            case 24: {
              OriginZ = input.ReadSInt32();
              break;
            }
            case 32: {
              Volume = input.ReadUInt32();
              break;
            }
            case 45: {
              DelayValue = input.ReadFloat();
              break;
            }
            case 48: {
              SequenceNumber = input.ReadInt32();
              break;
            }
            case 56: {
              EntityIndex = input.ReadInt32();
              break;
            }
            case 64: {
              Channel = input.ReadInt32();
              break;
            }
            case 72: {
              Pitch = input.ReadInt32();
              break;
            }
            case 80: {
              Flags = input.ReadInt32();
              break;
            }
            case 88: {
              SoundNum = input.ReadUInt32();
              break;
            }
            case 101: {
              SoundNumHandle = input.ReadFixed32();
              break;
            }
            case 104: {
              SpeakerEntity = input.ReadInt32();
              break;
            }
            case 112: {
              RandomSeed = input.ReadInt32();
              break;
            }
            case 120: {
              SoundLevel = input.ReadInt32();
              break;
            }
            case 128: {
              IsSentence = input.ReadBool();
              break;
            }
            case 136: {
              IsAmbient = input.ReadBool();
              break;
            }
            case 144: {
              Guid = input.ReadUInt32();
              break;
            }
            case 153: {
              SoundResourceId = input.ReadFixed64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_Prefetch : pb::IMessage<CSVCMsg_Prefetch>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_Prefetch> _parser = new pb::MessageParser<CSVCMsg_Prefetch>(() => new CSVCMsg_Prefetch());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_Prefetch> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Prefetch() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Prefetch(CSVCMsg_Prefetch other) : this() {
    _hasBits0 = other._hasBits0;
    soundIndex_ = other.soundIndex_;
    resourceType_ = other.resourceType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Prefetch Clone() {
    return new CSVCMsg_Prefetch(this);
  }

  /// <summary>Field number for the "sound_index" field.</summary>
  public const int SoundIndexFieldNumber = 1;
  private readonly static int SoundIndexDefaultValue = 0;

  private int soundIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SoundIndex {
    get { if ((_hasBits0 & 1) != 0) { return soundIndex_; } else { return SoundIndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      soundIndex_ = value;
    }
  }
  /// <summary>Gets whether the "sound_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSoundIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "sound_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSoundIndex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "resource_type" field.</summary>
  public const int ResourceTypeFieldNumber = 2;
  private readonly static global::PrefetchType ResourceTypeDefaultValue = global::PrefetchType.PftSound;

  private global::PrefetchType resourceType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PrefetchType ResourceType {
    get { if ((_hasBits0 & 2) != 0) { return resourceType_; } else { return ResourceTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      resourceType_ = value;
    }
  }
  /// <summary>Gets whether the "resource_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasResourceType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "resource_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearResourceType() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_Prefetch);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_Prefetch other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SoundIndex != other.SoundIndex) return false;
    if (ResourceType != other.ResourceType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSoundIndex) hash ^= SoundIndex.GetHashCode();
    if (HasResourceType) hash ^= ResourceType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSoundIndex) {
      output.WriteRawTag(8);
      output.WriteInt32(SoundIndex);
    }
    if (HasResourceType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ResourceType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSoundIndex) {
      output.WriteRawTag(8);
      output.WriteInt32(SoundIndex);
    }
    if (HasResourceType) {
      output.WriteRawTag(16);
      output.WriteEnum((int) ResourceType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSoundIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SoundIndex);
    }
    if (HasResourceType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResourceType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_Prefetch other) {
    if (other == null) {
      return;
    }
    if (other.HasSoundIndex) {
      SoundIndex = other.SoundIndex;
    }
    if (other.HasResourceType) {
      ResourceType = other.ResourceType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SoundIndex = input.ReadInt32();
          break;
        }
        case 16: {
          ResourceType = (global::PrefetchType) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SoundIndex = input.ReadInt32();
          break;
        }
        case 16: {
          ResourceType = (global::PrefetchType) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_SetView : pb::IMessage<CSVCMsg_SetView>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_SetView> _parser = new pb::MessageParser<CSVCMsg_SetView>(() => new CSVCMsg_SetView());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_SetView> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetView() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetView(CSVCMsg_SetView other) : this() {
    _hasBits0 = other._hasBits0;
    entityIndex_ = other.entityIndex_;
    slot_ = other.slot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SetView Clone() {
    return new CSVCMsg_SetView(this);
  }

  /// <summary>Field number for the "entity_index" field.</summary>
  public const int EntityIndexFieldNumber = 1;
  private readonly static int EntityIndexDefaultValue = -1;

  private int entityIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EntityIndex {
    get { if ((_hasBits0 & 1) != 0) { return entityIndex_; } else { return EntityIndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entityIndex_ = value;
    }
  }
  /// <summary>Gets whether the "entity_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entity_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityIndex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 2;
  private readonly static int SlotDefaultValue = -1;

  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Slot {
    get { if ((_hasBits0 & 2) != 0) { return slot_; } else { return SlotDefaultValue; } }
    set {
      _hasBits0 |= 2;
      slot_ = value;
    }
  }
  /// <summary>Gets whether the "slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlot {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlot() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_SetView);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_SetView other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntityIndex != other.EntityIndex) return false;
    if (Slot != other.Slot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEntityIndex) hash ^= EntityIndex.GetHashCode();
    if (HasSlot) hash ^= Slot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEntityIndex) {
      output.WriteRawTag(8);
      output.WriteInt32(EntityIndex);
    }
    if (HasSlot) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEntityIndex) {
      output.WriteRawTag(8);
      output.WriteInt32(EntityIndex);
    }
    if (HasSlot) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEntityIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityIndex);
    }
    if (HasSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_SetView other) {
    if (other == null) {
      return;
    }
    if (other.HasEntityIndex) {
      EntityIndex = other.EntityIndex;
    }
    if (other.HasSlot) {
      Slot = other.Slot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EntityIndex = input.ReadInt32();
          break;
        }
        case 16: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EntityIndex = input.ReadInt32();
          break;
        }
        case 16: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_FixAngle : pb::IMessage<CSVCMsg_FixAngle>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_FixAngle> _parser = new pb::MessageParser<CSVCMsg_FixAngle>(() => new CSVCMsg_FixAngle());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_FixAngle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FixAngle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FixAngle(CSVCMsg_FixAngle other) : this() {
    _hasBits0 = other._hasBits0;
    relative_ = other.relative_;
    angle_ = other.angle_ != null ? other.angle_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FixAngle Clone() {
    return new CSVCMsg_FixAngle(this);
  }

  /// <summary>Field number for the "relative" field.</summary>
  public const int RelativeFieldNumber = 1;
  private readonly static bool RelativeDefaultValue = false;

  private bool relative_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Relative {
    get { if ((_hasBits0 & 1) != 0) { return relative_; } else { return RelativeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      relative_ = value;
    }
  }
  /// <summary>Gets whether the "relative" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRelative {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "relative" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRelative() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 2;
  private global::CMsgQAngle angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_FixAngle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_FixAngle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Relative != other.Relative) return false;
    if (!object.Equals(Angle, other.Angle)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRelative) hash ^= Relative.GetHashCode();
    if (angle_ != null) hash ^= Angle.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRelative) {
      output.WriteRawTag(8);
      output.WriteBool(Relative);
    }
    if (angle_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRelative) {
      output.WriteRawTag(8);
      output.WriteBool(Relative);
    }
    if (angle_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRelative) {
      size += 1 + 1;
    }
    if (angle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_FixAngle other) {
    if (other == null) {
      return;
    }
    if (other.HasRelative) {
      Relative = other.Relative;
    }
    if (other.angle_ != null) {
      if (angle_ == null) {
        Angle = new global::CMsgQAngle();
      }
      Angle.MergeFrom(other.Angle);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Relative = input.ReadBool();
          break;
        }
        case 18: {
          if (angle_ == null) {
            Angle = new global::CMsgQAngle();
          }
          input.ReadMessage(Angle);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Relative = input.ReadBool();
          break;
        }
        case 18: {
          if (angle_ == null) {
            Angle = new global::CMsgQAngle();
          }
          input.ReadMessage(Angle);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_CrosshairAngle : pb::IMessage<CSVCMsg_CrosshairAngle>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_CrosshairAngle> _parser = new pb::MessageParser<CSVCMsg_CrosshairAngle>(() => new CSVCMsg_CrosshairAngle());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_CrosshairAngle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CrosshairAngle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CrosshairAngle(CSVCMsg_CrosshairAngle other) : this() {
    angle_ = other.angle_ != null ? other.angle_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CrosshairAngle Clone() {
    return new CSVCMsg_CrosshairAngle(this);
  }

  /// <summary>Field number for the "angle" field.</summary>
  public const int AngleFieldNumber = 1;
  private global::CMsgQAngle angle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angle {
    get { return angle_; }
    set {
      angle_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_CrosshairAngle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_CrosshairAngle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Angle, other.Angle)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (angle_ != null) hash ^= Angle.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (angle_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Angle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (angle_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Angle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (angle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angle);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_CrosshairAngle other) {
    if (other == null) {
      return;
    }
    if (other.angle_ != null) {
      if (angle_ == null) {
        Angle = new global::CMsgQAngle();
      }
      Angle.MergeFrom(other.Angle);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (angle_ == null) {
            Angle = new global::CMsgQAngle();
          }
          input.ReadMessage(Angle);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (angle_ == null) {
            Angle = new global::CMsgQAngle();
          }
          input.ReadMessage(Angle);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_BSPDecal : pb::IMessage<CSVCMsg_BSPDecal>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_BSPDecal> _parser = new pb::MessageParser<CSVCMsg_BSPDecal>(() => new CSVCMsg_BSPDecal());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_BSPDecal> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_BSPDecal() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_BSPDecal(CSVCMsg_BSPDecal other) : this() {
    _hasBits0 = other._hasBits0;
    pos_ = other.pos_ != null ? other.pos_.Clone() : null;
    decalTextureIndex_ = other.decalTextureIndex_;
    entityIndex_ = other.entityIndex_;
    modelIndex_ = other.modelIndex_;
    lowPriority_ = other.lowPriority_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_BSPDecal Clone() {
    return new CSVCMsg_BSPDecal(this);
  }

  /// <summary>Field number for the "pos" field.</summary>
  public const int PosFieldNumber = 1;
  private global::CMsgVector pos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Pos {
    get { return pos_; }
    set {
      pos_ = value;
    }
  }

  /// <summary>Field number for the "decal_texture_index" field.</summary>
  public const int DecalTextureIndexFieldNumber = 2;
  private readonly static int DecalTextureIndexDefaultValue = 0;

  private int decalTextureIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DecalTextureIndex {
    get { if ((_hasBits0 & 1) != 0) { return decalTextureIndex_; } else { return DecalTextureIndexDefaultValue; } }
    set {
      _hasBits0 |= 1;
      decalTextureIndex_ = value;
    }
  }
  /// <summary>Gets whether the "decal_texture_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDecalTextureIndex {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "decal_texture_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDecalTextureIndex() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "entity_index" field.</summary>
  public const int EntityIndexFieldNumber = 3;
  private readonly static int EntityIndexDefaultValue = -1;

  private int entityIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EntityIndex {
    get { if ((_hasBits0 & 2) != 0) { return entityIndex_; } else { return EntityIndexDefaultValue; } }
    set {
      _hasBits0 |= 2;
      entityIndex_ = value;
    }
  }
  /// <summary>Gets whether the "entity_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityIndex {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "entity_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityIndex() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "model_index" field.</summary>
  public const int ModelIndexFieldNumber = 4;
  private readonly static int ModelIndexDefaultValue = 0;

  private int modelIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ModelIndex {
    get { if ((_hasBits0 & 4) != 0) { return modelIndex_; } else { return ModelIndexDefaultValue; } }
    set {
      _hasBits0 |= 4;
      modelIndex_ = value;
    }
  }
  /// <summary>Gets whether the "model_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasModelIndex {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "model_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearModelIndex() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "low_priority" field.</summary>
  public const int LowPriorityFieldNumber = 5;
  private readonly static bool LowPriorityDefaultValue = false;

  private bool lowPriority_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool LowPriority {
    get { if ((_hasBits0 & 8) != 0) { return lowPriority_; } else { return LowPriorityDefaultValue; } }
    set {
      _hasBits0 |= 8;
      lowPriority_ = value;
    }
  }
  /// <summary>Gets whether the "low_priority" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLowPriority {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "low_priority" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLowPriority() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_BSPDecal);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_BSPDecal other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Pos, other.Pos)) return false;
    if (DecalTextureIndex != other.DecalTextureIndex) return false;
    if (EntityIndex != other.EntityIndex) return false;
    if (ModelIndex != other.ModelIndex) return false;
    if (LowPriority != other.LowPriority) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (pos_ != null) hash ^= Pos.GetHashCode();
    if (HasDecalTextureIndex) hash ^= DecalTextureIndex.GetHashCode();
    if (HasEntityIndex) hash ^= EntityIndex.GetHashCode();
    if (HasModelIndex) hash ^= ModelIndex.GetHashCode();
    if (HasLowPriority) hash ^= LowPriority.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (HasDecalTextureIndex) {
      output.WriteRawTag(16);
      output.WriteInt32(DecalTextureIndex);
    }
    if (HasEntityIndex) {
      output.WriteRawTag(24);
      output.WriteInt32(EntityIndex);
    }
    if (HasModelIndex) {
      output.WriteRawTag(32);
      output.WriteInt32(ModelIndex);
    }
    if (HasLowPriority) {
      output.WriteRawTag(40);
      output.WriteBool(LowPriority);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (pos_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Pos);
    }
    if (HasDecalTextureIndex) {
      output.WriteRawTag(16);
      output.WriteInt32(DecalTextureIndex);
    }
    if (HasEntityIndex) {
      output.WriteRawTag(24);
      output.WriteInt32(EntityIndex);
    }
    if (HasModelIndex) {
      output.WriteRawTag(32);
      output.WriteInt32(ModelIndex);
    }
    if (HasLowPriority) {
      output.WriteRawTag(40);
      output.WriteBool(LowPriority);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (pos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
    }
    if (HasDecalTextureIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DecalTextureIndex);
    }
    if (HasEntityIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityIndex);
    }
    if (HasModelIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModelIndex);
    }
    if (HasLowPriority) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_BSPDecal other) {
    if (other == null) {
      return;
    }
    if (other.pos_ != null) {
      if (pos_ == null) {
        Pos = new global::CMsgVector();
      }
      Pos.MergeFrom(other.Pos);
    }
    if (other.HasDecalTextureIndex) {
      DecalTextureIndex = other.DecalTextureIndex;
    }
    if (other.HasEntityIndex) {
      EntityIndex = other.EntityIndex;
    }
    if (other.HasModelIndex) {
      ModelIndex = other.ModelIndex;
    }
    if (other.HasLowPriority) {
      LowPriority = other.LowPriority;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 16: {
          DecalTextureIndex = input.ReadInt32();
          break;
        }
        case 24: {
          EntityIndex = input.ReadInt32();
          break;
        }
        case 32: {
          ModelIndex = input.ReadInt32();
          break;
        }
        case 40: {
          LowPriority = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (pos_ == null) {
            Pos = new global::CMsgVector();
          }
          input.ReadMessage(Pos);
          break;
        }
        case 16: {
          DecalTextureIndex = input.ReadInt32();
          break;
        }
        case 24: {
          EntityIndex = input.ReadInt32();
          break;
        }
        case 32: {
          ModelIndex = input.ReadInt32();
          break;
        }
        case 40: {
          LowPriority = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_SplitScreen : pb::IMessage<CSVCMsg_SplitScreen>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_SplitScreen> _parser = new pb::MessageParser<CSVCMsg_SplitScreen>(() => new CSVCMsg_SplitScreen());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_SplitScreen> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SplitScreen() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SplitScreen(CSVCMsg_SplitScreen other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    slot_ = other.slot_;
    playerIndex_ = other.playerIndex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SplitScreen Clone() {
    return new CSVCMsg_SplitScreen(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static global::ESplitScreenMessageType TypeDefaultValue = global::ESplitScreenMessageType.MsgSplitscreenAdduser;

  private global::ESplitScreenMessageType type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::ESplitScreenMessageType Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 2;
  private readonly static int SlotDefaultValue = 0;

  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Slot {
    get { if ((_hasBits0 & 2) != 0) { return slot_; } else { return SlotDefaultValue; } }
    set {
      _hasBits0 |= 2;
      slot_ = value;
    }
  }
  /// <summary>Gets whether the "slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlot {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlot() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "player_index" field.</summary>
  public const int PlayerIndexFieldNumber = 3;
  private readonly static int PlayerIndexDefaultValue = -1;

  private int playerIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerIndex {
    get { if ((_hasBits0 & 4) != 0) { return playerIndex_; } else { return PlayerIndexDefaultValue; } }
    set {
      _hasBits0 |= 4;
      playerIndex_ = value;
    }
  }
  /// <summary>Gets whether the "player_index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerIndex {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "player_index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerIndex() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_SplitScreen);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_SplitScreen other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Slot != other.Slot) return false;
    if (PlayerIndex != other.PlayerIndex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasSlot) hash ^= Slot.GetHashCode();
    if (HasPlayerIndex) hash ^= PlayerIndex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasSlot) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot);
    }
    if (HasPlayerIndex) {
      output.WriteRawTag(24);
      output.WriteInt32(PlayerIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasSlot) {
      output.WriteRawTag(16);
      output.WriteInt32(Slot);
    }
    if (HasPlayerIndex) {
      output.WriteRawTag(24);
      output.WriteInt32(PlayerIndex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (HasSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (HasPlayerIndex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerIndex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_SplitScreen other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasSlot) {
      Slot = other.Slot;
    }
    if (other.HasPlayerIndex) {
      PlayerIndex = other.PlayerIndex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::ESplitScreenMessageType) input.ReadEnum();
          break;
        }
        case 16: {
          Slot = input.ReadInt32();
          break;
        }
        case 24: {
          PlayerIndex = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::ESplitScreenMessageType) input.ReadEnum();
          break;
        }
        case 16: {
          Slot = input.ReadInt32();
          break;
        }
        case 24: {
          PlayerIndex = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_GetCvarValue : pb::IMessage<CSVCMsg_GetCvarValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_GetCvarValue> _parser = new pb::MessageParser<CSVCMsg_GetCvarValue>(() => new CSVCMsg_GetCvarValue());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_GetCvarValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GetCvarValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GetCvarValue(CSVCMsg_GetCvarValue other) : this() {
    _hasBits0 = other._hasBits0;
    cookie_ = other.cookie_;
    cvarName_ = other.cvarName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GetCvarValue Clone() {
    return new CSVCMsg_GetCvarValue(this);
  }

  /// <summary>Field number for the "cookie" field.</summary>
  public const int CookieFieldNumber = 1;
  private readonly static int CookieDefaultValue = 0;

  private int cookie_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Cookie {
    get { if ((_hasBits0 & 1) != 0) { return cookie_; } else { return CookieDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cookie_ = value;
    }
  }
  /// <summary>Gets whether the "cookie" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCookie {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cookie" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCookie() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cvar_name" field.</summary>
  public const int CvarNameFieldNumber = 2;
  private readonly static string CvarNameDefaultValue = "";

  private string cvarName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string CvarName {
    get { return cvarName_ ?? CvarNameDefaultValue; }
    set {
      cvarName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cvar_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCvarName {
    get { return cvarName_ != null; }
  }
  /// <summary>Clears the value of the "cvar_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCvarName() {
    cvarName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_GetCvarValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_GetCvarValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cookie != other.Cookie) return false;
    if (CvarName != other.CvarName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCookie) hash ^= Cookie.GetHashCode();
    if (HasCvarName) hash ^= CvarName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCookie) {
      output.WriteRawTag(8);
      output.WriteInt32(Cookie);
    }
    if (HasCvarName) {
      output.WriteRawTag(18);
      output.WriteString(CvarName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCookie) {
      output.WriteRawTag(8);
      output.WriteInt32(Cookie);
    }
    if (HasCvarName) {
      output.WriteRawTag(18);
      output.WriteString(CvarName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCookie) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cookie);
    }
    if (HasCvarName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CvarName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_GetCvarValue other) {
    if (other == null) {
      return;
    }
    if (other.HasCookie) {
      Cookie = other.Cookie;
    }
    if (other.HasCvarName) {
      CvarName = other.CvarName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Cookie = input.ReadInt32();
          break;
        }
        case 18: {
          CvarName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Cookie = input.ReadInt32();
          break;
        }
        case 18: {
          CvarName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_Menu : pb::IMessage<CSVCMsg_Menu>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_Menu> _parser = new pb::MessageParser<CSVCMsg_Menu>(() => new CSVCMsg_Menu());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_Menu> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Menu() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Menu(CSVCMsg_Menu other) : this() {
    _hasBits0 = other._hasBits0;
    dialogType_ = other.dialogType_;
    menuKeyValues_ = other.menuKeyValues_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Menu Clone() {
    return new CSVCMsg_Menu(this);
  }

  /// <summary>Field number for the "dialog_type" field.</summary>
  public const int DialogTypeFieldNumber = 1;
  private readonly static int DialogTypeDefaultValue = 0;

  private int dialogType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DialogType {
    get { if ((_hasBits0 & 1) != 0) { return dialogType_; } else { return DialogTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      dialogType_ = value;
    }
  }
  /// <summary>Gets whether the "dialog_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDialogType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "dialog_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDialogType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "menu_key_values" field.</summary>
  public const int MenuKeyValuesFieldNumber = 2;
  private readonly static pb::ByteString MenuKeyValuesDefaultValue = pb::ByteString.Empty;

  private pb::ByteString menuKeyValues_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MenuKeyValues {
    get { return menuKeyValues_ ?? MenuKeyValuesDefaultValue; }
    set {
      menuKeyValues_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "menu_key_values" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMenuKeyValues {
    get { return menuKeyValues_ != null; }
  }
  /// <summary>Clears the value of the "menu_key_values" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMenuKeyValues() {
    menuKeyValues_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_Menu);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_Menu other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (DialogType != other.DialogType) return false;
    if (MenuKeyValues != other.MenuKeyValues) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDialogType) hash ^= DialogType.GetHashCode();
    if (HasMenuKeyValues) hash ^= MenuKeyValues.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDialogType) {
      output.WriteRawTag(8);
      output.WriteInt32(DialogType);
    }
    if (HasMenuKeyValues) {
      output.WriteRawTag(18);
      output.WriteBytes(MenuKeyValues);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDialogType) {
      output.WriteRawTag(8);
      output.WriteInt32(DialogType);
    }
    if (HasMenuKeyValues) {
      output.WriteRawTag(18);
      output.WriteBytes(MenuKeyValues);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDialogType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DialogType);
    }
    if (HasMenuKeyValues) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(MenuKeyValues);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_Menu other) {
    if (other == null) {
      return;
    }
    if (other.HasDialogType) {
      DialogType = other.DialogType;
    }
    if (other.HasMenuKeyValues) {
      MenuKeyValues = other.MenuKeyValues;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          DialogType = input.ReadInt32();
          break;
        }
        case 18: {
          MenuKeyValues = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          DialogType = input.ReadInt32();
          break;
        }
        case 18: {
          MenuKeyValues = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_UserMessage : pb::IMessage<CSVCMsg_UserMessage>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_UserMessage> _parser = new pb::MessageParser<CSVCMsg_UserMessage>(() => new CSVCMsg_UserMessage());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_UserMessage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserMessage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserMessage(CSVCMsg_UserMessage other) : this() {
    _hasBits0 = other._hasBits0;
    msgType_ = other.msgType_;
    msgData_ = other.msgData_;
    passthrough_ = other.passthrough_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserMessage Clone() {
    return new CSVCMsg_UserMessage(this);
  }

  /// <summary>Field number for the "msg_type" field.</summary>
  public const int MsgTypeFieldNumber = 1;
  private readonly static int MsgTypeDefaultValue = 0;

  private int msgType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MsgType {
    get { if ((_hasBits0 & 1) != 0) { return msgType_; } else { return MsgTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      msgType_ = value;
    }
  }
  /// <summary>Gets whether the "msg_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMsgType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "msg_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsgType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "msg_data" field.</summary>
  public const int MsgDataFieldNumber = 2;
  private readonly static pb::ByteString MsgDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString msgData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString MsgData {
    get { return msgData_ ?? MsgDataDefaultValue; }
    set {
      msgData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "msg_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMsgData {
    get { return msgData_ != null; }
  }
  /// <summary>Clears the value of the "msg_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMsgData() {
    msgData_ = null;
  }

  /// <summary>Field number for the "passthrough" field.</summary>
  public const int PassthroughFieldNumber = 3;
  private readonly static int PassthroughDefaultValue = 0;

  private int passthrough_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Passthrough {
    get { if ((_hasBits0 & 2) != 0) { return passthrough_; } else { return PassthroughDefaultValue; } }
    set {
      _hasBits0 |= 2;
      passthrough_ = value;
    }
  }
  /// <summary>Gets whether the "passthrough" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPassthrough {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "passthrough" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPassthrough() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_UserMessage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_UserMessage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MsgType != other.MsgType) return false;
    if (MsgData != other.MsgData) return false;
    if (Passthrough != other.Passthrough) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMsgType) hash ^= MsgType.GetHashCode();
    if (HasMsgData) hash ^= MsgData.GetHashCode();
    if (HasPassthrough) hash ^= Passthrough.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMsgType) {
      output.WriteRawTag(8);
      output.WriteInt32(MsgType);
    }
    if (HasMsgData) {
      output.WriteRawTag(18);
      output.WriteBytes(MsgData);
    }
    if (HasPassthrough) {
      output.WriteRawTag(24);
      output.WriteInt32(Passthrough);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMsgType) {
      output.WriteRawTag(8);
      output.WriteInt32(MsgType);
    }
    if (HasMsgData) {
      output.WriteRawTag(18);
      output.WriteBytes(MsgData);
    }
    if (HasPassthrough) {
      output.WriteRawTag(24);
      output.WriteInt32(Passthrough);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMsgType) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MsgType);
    }
    if (HasMsgData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(MsgData);
    }
    if (HasPassthrough) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Passthrough);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_UserMessage other) {
    if (other == null) {
      return;
    }
    if (other.HasMsgType) {
      MsgType = other.MsgType;
    }
    if (other.HasMsgData) {
      MsgData = other.MsgData;
    }
    if (other.HasPassthrough) {
      Passthrough = other.Passthrough;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MsgType = input.ReadInt32();
          break;
        }
        case 18: {
          MsgData = input.ReadBytes();
          break;
        }
        case 24: {
          Passthrough = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MsgType = input.ReadInt32();
          break;
        }
        case 18: {
          MsgData = input.ReadBytes();
          break;
        }
        case 24: {
          Passthrough = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_SendTable : pb::IMessage<CSVCMsg_SendTable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_SendTable> _parser = new pb::MessageParser<CSVCMsg_SendTable>(() => new CSVCMsg_SendTable());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_SendTable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SendTable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SendTable(CSVCMsg_SendTable other) : this() {
    _hasBits0 = other._hasBits0;
    isEnd_ = other.isEnd_;
    netTableName_ = other.netTableName_;
    needsDecoder_ = other.needsDecoder_;
    props_ = other.props_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_SendTable Clone() {
    return new CSVCMsg_SendTable(this);
  }

  /// <summary>Field number for the "is_end" field.</summary>
  public const int IsEndFieldNumber = 1;
  private readonly static bool IsEndDefaultValue = false;

  private bool isEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsEnd {
    get { if ((_hasBits0 & 1) != 0) { return isEnd_; } else { return IsEndDefaultValue; } }
    set {
      _hasBits0 |= 1;
      isEnd_ = value;
    }
  }
  /// <summary>Gets whether the "is_end" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsEnd {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "is_end" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsEnd() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "net_table_name" field.</summary>
  public const int NetTableNameFieldNumber = 2;
  private readonly static string NetTableNameDefaultValue = "";

  private string netTableName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string NetTableName {
    get { return netTableName_ ?? NetTableNameDefaultValue; }
    set {
      netTableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "net_table_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNetTableName {
    get { return netTableName_ != null; }
  }
  /// <summary>Clears the value of the "net_table_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNetTableName() {
    netTableName_ = null;
  }

  /// <summary>Field number for the "needs_decoder" field.</summary>
  public const int NeedsDecoderFieldNumber = 3;
  private readonly static bool NeedsDecoderDefaultValue = false;

  private bool needsDecoder_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool NeedsDecoder {
    get { if ((_hasBits0 & 2) != 0) { return needsDecoder_; } else { return NeedsDecoderDefaultValue; } }
    set {
      _hasBits0 |= 2;
      needsDecoder_ = value;
    }
  }
  /// <summary>Gets whether the "needs_decoder" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNeedsDecoder {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "needs_decoder" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNeedsDecoder() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "props" field.</summary>
  public const int PropsFieldNumber = 4;
  private static readonly pb::FieldCodec<global::CSVCMsg_SendTable.Types.sendprop_t> _repeated_props_codec
      = pb::FieldCodec.ForMessage(34, global::CSVCMsg_SendTable.Types.sendprop_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_SendTable.Types.sendprop_t> props_ = new pbc::RepeatedField<global::CSVCMsg_SendTable.Types.sendprop_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_SendTable.Types.sendprop_t> Props {
    get { return props_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_SendTable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_SendTable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsEnd != other.IsEnd) return false;
    if (NetTableName != other.NetTableName) return false;
    if (NeedsDecoder != other.NeedsDecoder) return false;
    if(!props_.Equals(other.props_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIsEnd) hash ^= IsEnd.GetHashCode();
    if (HasNetTableName) hash ^= NetTableName.GetHashCode();
    if (HasNeedsDecoder) hash ^= NeedsDecoder.GetHashCode();
    hash ^= props_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIsEnd) {
      output.WriteRawTag(8);
      output.WriteBool(IsEnd);
    }
    if (HasNetTableName) {
      output.WriteRawTag(18);
      output.WriteString(NetTableName);
    }
    if (HasNeedsDecoder) {
      output.WriteRawTag(24);
      output.WriteBool(NeedsDecoder);
    }
    props_.WriteTo(output, _repeated_props_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIsEnd) {
      output.WriteRawTag(8);
      output.WriteBool(IsEnd);
    }
    if (HasNetTableName) {
      output.WriteRawTag(18);
      output.WriteString(NetTableName);
    }
    if (HasNeedsDecoder) {
      output.WriteRawTag(24);
      output.WriteBool(NeedsDecoder);
    }
    props_.WriteTo(ref output, _repeated_props_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIsEnd) {
      size += 1 + 1;
    }
    if (HasNetTableName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(NetTableName);
    }
    if (HasNeedsDecoder) {
      size += 1 + 1;
    }
    size += props_.CalculateSize(_repeated_props_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_SendTable other) {
    if (other == null) {
      return;
    }
    if (other.HasIsEnd) {
      IsEnd = other.IsEnd;
    }
    if (other.HasNetTableName) {
      NetTableName = other.NetTableName;
    }
    if (other.HasNeedsDecoder) {
      NeedsDecoder = other.NeedsDecoder;
    }
    props_.Add(other.props_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsEnd = input.ReadBool();
          break;
        }
        case 18: {
          NetTableName = input.ReadString();
          break;
        }
        case 24: {
          NeedsDecoder = input.ReadBool();
          break;
        }
        case 34: {
          props_.AddEntriesFrom(input, _repeated_props_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsEnd = input.ReadBool();
          break;
        }
        case 18: {
          NetTableName = input.ReadString();
          break;
        }
        case 24: {
          NeedsDecoder = input.ReadBool();
          break;
        }
        case 34: {
          props_.AddEntriesFrom(ref input, _repeated_props_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_SendTable message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class sendprop_t : pb::IMessage<sendprop_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<sendprop_t> _parser = new pb::MessageParser<sendprop_t>(() => new sendprop_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<sendprop_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_SendTable.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sendprop_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sendprop_t(sendprop_t other) : this() {
        _hasBits0 = other._hasBits0;
        type_ = other.type_;
        varName_ = other.varName_;
        flags_ = other.flags_;
        priority_ = other.priority_;
        dtName_ = other.dtName_;
        numElements_ = other.numElements_;
        lowValue_ = other.lowValue_;
        highValue_ = other.highValue_;
        numBits_ = other.numBits_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public sendprop_t Clone() {
        return new sendprop_t(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private readonly static int TypeDefaultValue = 0;

      private int type_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Type {
        get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          type_ = value;
        }
      }
      /// <summary>Gets whether the "type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "var_name" field.</summary>
      public const int VarNameFieldNumber = 2;
      private readonly static string VarNameDefaultValue = "";

      private string varName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string VarName {
        get { return varName_ ?? VarNameDefaultValue; }
        set {
          varName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "var_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasVarName {
        get { return varName_ != null; }
      }
      /// <summary>Clears the value of the "var_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearVarName() {
        varName_ = null;
      }

      /// <summary>Field number for the "flags" field.</summary>
      public const int FlagsFieldNumber = 3;
      private readonly static int FlagsDefaultValue = 0;

      private int flags_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Flags {
        get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          flags_ = value;
        }
      }
      /// <summary>Gets whether the "flags" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasFlags {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "flags" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearFlags() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "priority" field.</summary>
      public const int PriorityFieldNumber = 4;
      private readonly static int PriorityDefaultValue = 0;

      private int priority_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Priority {
        get { if ((_hasBits0 & 4) != 0) { return priority_; } else { return PriorityDefaultValue; } }
        set {
          _hasBits0 |= 4;
          priority_ = value;
        }
      }
      /// <summary>Gets whether the "priority" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPriority {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "priority" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPriority() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "dt_name" field.</summary>
      public const int DtNameFieldNumber = 5;
      private readonly static string DtNameDefaultValue = "";

      private string dtName_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string DtName {
        get { return dtName_ ?? DtNameDefaultValue; }
        set {
          dtName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "dt_name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDtName {
        get { return dtName_ != null; }
      }
      /// <summary>Clears the value of the "dt_name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDtName() {
        dtName_ = null;
      }

      /// <summary>Field number for the "num_elements" field.</summary>
      public const int NumElementsFieldNumber = 6;
      private readonly static int NumElementsDefaultValue = 0;

      private int numElements_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int NumElements {
        get { if ((_hasBits0 & 8) != 0) { return numElements_; } else { return NumElementsDefaultValue; } }
        set {
          _hasBits0 |= 8;
          numElements_ = value;
        }
      }
      /// <summary>Gets whether the "num_elements" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNumElements {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "num_elements" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNumElements() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "low_value" field.</summary>
      public const int LowValueFieldNumber = 7;
      private readonly static float LowValueDefaultValue = 0F;

      private float lowValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float LowValue {
        get { if ((_hasBits0 & 16) != 0) { return lowValue_; } else { return LowValueDefaultValue; } }
        set {
          _hasBits0 |= 16;
          lowValue_ = value;
        }
      }
      /// <summary>Gets whether the "low_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLowValue {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "low_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLowValue() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "high_value" field.</summary>
      public const int HighValueFieldNumber = 8;
      private readonly static float HighValueDefaultValue = 0F;

      private float highValue_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float HighValue {
        get { if ((_hasBits0 & 32) != 0) { return highValue_; } else { return HighValueDefaultValue; } }
        set {
          _hasBits0 |= 32;
          highValue_ = value;
        }
      }
      /// <summary>Gets whether the "high_value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHighValue {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "high_value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHighValue() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "num_bits" field.</summary>
      public const int NumBitsFieldNumber = 9;
      private readonly static int NumBitsDefaultValue = 0;

      private int numBits_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int NumBits {
        get { if ((_hasBits0 & 64) != 0) { return numBits_; } else { return NumBitsDefaultValue; } }
        set {
          _hasBits0 |= 64;
          numBits_ = value;
        }
      }
      /// <summary>Gets whether the "num_bits" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasNumBits {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "num_bits" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearNumBits() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as sendprop_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(sendprop_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (VarName != other.VarName) return false;
        if (Flags != other.Flags) return false;
        if (Priority != other.Priority) return false;
        if (DtName != other.DtName) return false;
        if (NumElements != other.NumElements) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LowValue, other.LowValue)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HighValue, other.HighValue)) return false;
        if (NumBits != other.NumBits) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasType) hash ^= Type.GetHashCode();
        if (HasVarName) hash ^= VarName.GetHashCode();
        if (HasFlags) hash ^= Flags.GetHashCode();
        if (HasPriority) hash ^= Priority.GetHashCode();
        if (HasDtName) hash ^= DtName.GetHashCode();
        if (HasNumElements) hash ^= NumElements.GetHashCode();
        if (HasLowValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LowValue);
        if (HasHighValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HighValue);
        if (HasNumBits) hash ^= NumBits.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasVarName) {
          output.WriteRawTag(18);
          output.WriteString(VarName);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteInt32(Flags);
        }
        if (HasPriority) {
          output.WriteRawTag(32);
          output.WriteInt32(Priority);
        }
        if (HasDtName) {
          output.WriteRawTag(42);
          output.WriteString(DtName);
        }
        if (HasNumElements) {
          output.WriteRawTag(48);
          output.WriteInt32(NumElements);
        }
        if (HasLowValue) {
          output.WriteRawTag(61);
          output.WriteFloat(LowValue);
        }
        if (HasHighValue) {
          output.WriteRawTag(69);
          output.WriteFloat(HighValue);
        }
        if (HasNumBits) {
          output.WriteRawTag(72);
          output.WriteInt32(NumBits);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasVarName) {
          output.WriteRawTag(18);
          output.WriteString(VarName);
        }
        if (HasFlags) {
          output.WriteRawTag(24);
          output.WriteInt32(Flags);
        }
        if (HasPriority) {
          output.WriteRawTag(32);
          output.WriteInt32(Priority);
        }
        if (HasDtName) {
          output.WriteRawTag(42);
          output.WriteString(DtName);
        }
        if (HasNumElements) {
          output.WriteRawTag(48);
          output.WriteInt32(NumElements);
        }
        if (HasLowValue) {
          output.WriteRawTag(61);
          output.WriteFloat(LowValue);
        }
        if (HasHighValue) {
          output.WriteRawTag(69);
          output.WriteFloat(HighValue);
        }
        if (HasNumBits) {
          output.WriteRawTag(72);
          output.WriteInt32(NumBits);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (HasVarName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(VarName);
        }
        if (HasFlags) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
        }
        if (HasPriority) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
        }
        if (HasDtName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(DtName);
        }
        if (HasNumElements) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumElements);
        }
        if (HasLowValue) {
          size += 1 + 4;
        }
        if (HasHighValue) {
          size += 1 + 4;
        }
        if (HasNumBits) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumBits);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(sendprop_t other) {
        if (other == null) {
          return;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasVarName) {
          VarName = other.VarName;
        }
        if (other.HasFlags) {
          Flags = other.Flags;
        }
        if (other.HasPriority) {
          Priority = other.Priority;
        }
        if (other.HasDtName) {
          DtName = other.DtName;
        }
        if (other.HasNumElements) {
          NumElements = other.NumElements;
        }
        if (other.HasLowValue) {
          LowValue = other.LowValue;
        }
        if (other.HasHighValue) {
          HighValue = other.HighValue;
        }
        if (other.HasNumBits) {
          NumBits = other.NumBits;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              VarName = input.ReadString();
              break;
            }
            case 24: {
              Flags = input.ReadInt32();
              break;
            }
            case 32: {
              Priority = input.ReadInt32();
              break;
            }
            case 42: {
              DtName = input.ReadString();
              break;
            }
            case 48: {
              NumElements = input.ReadInt32();
              break;
            }
            case 61: {
              LowValue = input.ReadFloat();
              break;
            }
            case 69: {
              HighValue = input.ReadFloat();
              break;
            }
            case 72: {
              NumBits = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              VarName = input.ReadString();
              break;
            }
            case 24: {
              Flags = input.ReadInt32();
              break;
            }
            case 32: {
              Priority = input.ReadInt32();
              break;
            }
            case 42: {
              DtName = input.ReadString();
              break;
            }
            case 48: {
              NumElements = input.ReadInt32();
              break;
            }
            case 61: {
              LowValue = input.ReadFloat();
              break;
            }
            case 69: {
              HighValue = input.ReadFloat();
              break;
            }
            case 72: {
              NumBits = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_GameEventList : pb::IMessage<CSVCMsg_GameEventList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_GameEventList> _parser = new pb::MessageParser<CSVCMsg_GameEventList>(() => new CSVCMsg_GameEventList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_GameEventList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEventList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEventList(CSVCMsg_GameEventList other) : this() {
    descriptors_ = other.descriptors_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEventList Clone() {
    return new CSVCMsg_GameEventList(this);
  }

  /// <summary>Field number for the "descriptors" field.</summary>
  public const int DescriptorsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CSVCMsg_GameEventList.Types.descriptor_t> _repeated_descriptors_codec
      = pb::FieldCodec.ForMessage(10, global::CSVCMsg_GameEventList.Types.descriptor_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.descriptor_t> descriptors_ = new pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.descriptor_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.descriptor_t> Descriptors {
    get { return descriptors_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_GameEventList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_GameEventList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!descriptors_.Equals(other.descriptors_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= descriptors_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    descriptors_.WriteTo(output, _repeated_descriptors_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    descriptors_.WriteTo(ref output, _repeated_descriptors_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += descriptors_.CalculateSize(_repeated_descriptors_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_GameEventList other) {
    if (other == null) {
      return;
    }
    descriptors_.Add(other.descriptors_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          descriptors_.AddEntriesFrom(input, _repeated_descriptors_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          descriptors_.AddEntriesFrom(ref input, _repeated_descriptors_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_GameEventList message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class key_t : pb::IMessage<key_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<key_t> _parser = new pb::MessageParser<key_t>(() => new key_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<key_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_GameEventList.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t(key_t other) : this() {
        _hasBits0 = other._hasBits0;
        type_ = other.type_;
        name_ = other.name_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t Clone() {
        return new key_t(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private readonly static int TypeDefaultValue = 0;

      private int type_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Type {
        get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          type_ = value;
        }
      }
      /// <summary>Gets whether the "type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 2;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as key_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(key_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (Name != other.Name) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasType) hash ^= Type.GetHashCode();
        if (HasName) hash ^= Name.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(key_t other) {
        if (other == null) {
          return;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class descriptor_t : pb::IMessage<descriptor_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<descriptor_t> _parser = new pb::MessageParser<descriptor_t>(() => new descriptor_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<descriptor_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_GameEventList.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public descriptor_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public descriptor_t(descriptor_t other) : this() {
        _hasBits0 = other._hasBits0;
        eventid_ = other.eventid_;
        name_ = other.name_;
        keys_ = other.keys_.Clone();
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public descriptor_t Clone() {
        return new descriptor_t(this);
      }

      /// <summary>Field number for the "eventid" field.</summary>
      public const int EventidFieldNumber = 1;
      private readonly static int EventidDefaultValue = 0;

      private int eventid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Eventid {
        get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          eventid_ = value;
        }
      }
      /// <summary>Gets whether the "eventid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEventid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "eventid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEventid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 2;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "keys" field.</summary>
      public const int KeysFieldNumber = 3;
      private static readonly pb::FieldCodec<global::CSVCMsg_GameEventList.Types.key_t> _repeated_keys_codec
          = pb::FieldCodec.ForMessage(26, global::CSVCMsg_GameEventList.Types.key_t.Parser);
      private readonly pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.key_t> keys_ = new pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.key_t>();
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pbc::RepeatedField<global::CSVCMsg_GameEventList.Types.key_t> Keys {
        get { return keys_; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as descriptor_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(descriptor_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Eventid != other.Eventid) return false;
        if (Name != other.Name) return false;
        if(!keys_.Equals(other.keys_)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasEventid) hash ^= Eventid.GetHashCode();
        if (HasName) hash ^= Name.GetHashCode();
        hash ^= keys_.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasEventid) {
          output.WriteRawTag(8);
          output.WriteInt32(Eventid);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        keys_.WriteTo(output, _repeated_keys_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasEventid) {
          output.WriteRawTag(8);
          output.WriteInt32(Eventid);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        keys_.WriteTo(ref output, _repeated_keys_codec);
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasEventid) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
        }
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        size += keys_.CalculateSize(_repeated_keys_codec);
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(descriptor_t other) {
        if (other == null) {
          return;
        }
        if (other.HasEventid) {
          Eventid = other.Eventid;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        keys_.Add(other.keys_);
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Eventid = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
            case 26: {
              keys_.AddEntriesFrom(input, _repeated_keys_codec);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Eventid = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
            case 26: {
              keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_PacketEntities : pb::IMessage<CSVCMsg_PacketEntities>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_PacketEntities> _parser = new pb::MessageParser<CSVCMsg_PacketEntities>(() => new CSVCMsg_PacketEntities());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_PacketEntities> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketEntities() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketEntities(CSVCMsg_PacketEntities other) : this() {
    _hasBits0 = other._hasBits0;
    maxEntries_ = other.maxEntries_;
    updatedEntries_ = other.updatedEntries_;
    legacyIsDelta_ = other.legacyIsDelta_;
    updateBaseline_ = other.updateBaseline_;
    baseline_ = other.baseline_;
    deltaFrom_ = other.deltaFrom_;
    entityData_ = other.entityData_;
    pendingFullFrame_ = other.pendingFullFrame_;
    activeSpawngroupHandle_ = other.activeSpawngroupHandle_;
    maxSpawngroupCreationsequence_ = other.maxSpawngroupCreationsequence_;
    lastCmdNumberExecuted_ = other.lastCmdNumberExecuted_;
    lastCmdNumberRecvDelta_ = other.lastCmdNumberRecvDelta_;
    serverTick_ = other.serverTick_;
    serializedEntities_ = other.serializedEntities_;
    alternateBaselines_ = other.alternateBaselines_.Clone();
    hasPvsVisBits_ = other.hasPvsVisBits_;
    cmdRecvStatus_ = other.cmdRecvStatus_.Clone();
    nonTransmittedEntities_ = other.nonTransmittedEntities_ != null ? other.nonTransmittedEntities_.Clone() : null;
    cqStarvedCommandTicks_ = other.cqStarvedCommandTicks_;
    cqDiscardedCommandTicks_ = other.cqDiscardedCommandTicks_;
    devPadding_ = other.devPadding_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketEntities Clone() {
    return new CSVCMsg_PacketEntities(this);
  }

  /// <summary>Field number for the "max_entries" field.</summary>
  public const int MaxEntriesFieldNumber = 1;
  private readonly static int MaxEntriesDefaultValue = 0;

  private int maxEntries_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MaxEntries {
    get { if ((_hasBits0 & 1) != 0) { return maxEntries_; } else { return MaxEntriesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      maxEntries_ = value;
    }
  }
  /// <summary>Gets whether the "max_entries" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxEntries {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "max_entries" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxEntries() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "updated_entries" field.</summary>
  public const int UpdatedEntriesFieldNumber = 2;
  private readonly static int UpdatedEntriesDefaultValue = 0;

  private int updatedEntries_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UpdatedEntries {
    get { if ((_hasBits0 & 2) != 0) { return updatedEntries_; } else { return UpdatedEntriesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      updatedEntries_ = value;
    }
  }
  /// <summary>Gets whether the "updated_entries" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpdatedEntries {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "updated_entries" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpdatedEntries() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "legacy_is_delta" field.</summary>
  public const int LegacyIsDeltaFieldNumber = 3;
  private readonly static bool LegacyIsDeltaDefaultValue = false;

  private bool legacyIsDelta_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool LegacyIsDelta {
    get { if ((_hasBits0 & 4) != 0) { return legacyIsDelta_; } else { return LegacyIsDeltaDefaultValue; } }
    set {
      _hasBits0 |= 4;
      legacyIsDelta_ = value;
    }
  }
  /// <summary>Gets whether the "legacy_is_delta" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLegacyIsDelta {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "legacy_is_delta" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLegacyIsDelta() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "update_baseline" field.</summary>
  public const int UpdateBaselineFieldNumber = 4;
  private readonly static bool UpdateBaselineDefaultValue = false;

  private bool updateBaseline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UpdateBaseline {
    get { if ((_hasBits0 & 8) != 0) { return updateBaseline_; } else { return UpdateBaselineDefaultValue; } }
    set {
      _hasBits0 |= 8;
      updateBaseline_ = value;
    }
  }
  /// <summary>Gets whether the "update_baseline" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUpdateBaseline {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "update_baseline" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUpdateBaseline() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "baseline" field.</summary>
  public const int BaselineFieldNumber = 5;
  private readonly static int BaselineDefaultValue = 0;

  private int baseline_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Baseline {
    get { if ((_hasBits0 & 16) != 0) { return baseline_; } else { return BaselineDefaultValue; } }
    set {
      _hasBits0 |= 16;
      baseline_ = value;
    }
  }
  /// <summary>Gets whether the "baseline" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBaseline {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "baseline" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBaseline() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "delta_from" field.</summary>
  public const int DeltaFromFieldNumber = 6;
  private readonly static int DeltaFromDefaultValue = 0;

  private int deltaFrom_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int DeltaFrom {
    get { if ((_hasBits0 & 32) != 0) { return deltaFrom_; } else { return DeltaFromDefaultValue; } }
    set {
      _hasBits0 |= 32;
      deltaFrom_ = value;
    }
  }
  /// <summary>Gets whether the "delta_from" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDeltaFrom {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "delta_from" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDeltaFrom() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "entity_data" field.</summary>
  public const int EntityDataFieldNumber = 7;
  private readonly static pb::ByteString EntityDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString entityData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString EntityData {
    get { return entityData_ ?? EntityDataDefaultValue; }
    set {
      entityData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "entity_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityData {
    get { return entityData_ != null; }
  }
  /// <summary>Clears the value of the "entity_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityData() {
    entityData_ = null;
  }

  /// <summary>Field number for the "pending_full_frame" field.</summary>
  public const int PendingFullFrameFieldNumber = 8;
  private readonly static bool PendingFullFrameDefaultValue = false;

  private bool pendingFullFrame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool PendingFullFrame {
    get { if ((_hasBits0 & 64) != 0) { return pendingFullFrame_; } else { return PendingFullFrameDefaultValue; } }
    set {
      _hasBits0 |= 64;
      pendingFullFrame_ = value;
    }
  }
  /// <summary>Gets whether the "pending_full_frame" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPendingFullFrame {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "pending_full_frame" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPendingFullFrame() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "active_spawngroup_handle" field.</summary>
  public const int ActiveSpawngroupHandleFieldNumber = 9;
  private readonly static uint ActiveSpawngroupHandleDefaultValue = 0;

  private uint activeSpawngroupHandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ActiveSpawngroupHandle {
    get { if ((_hasBits0 & 128) != 0) { return activeSpawngroupHandle_; } else { return ActiveSpawngroupHandleDefaultValue; } }
    set {
      _hasBits0 |= 128;
      activeSpawngroupHandle_ = value;
    }
  }
  /// <summary>Gets whether the "active_spawngroup_handle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasActiveSpawngroupHandle {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "active_spawngroup_handle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearActiveSpawngroupHandle() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "max_spawngroup_creationsequence" field.</summary>
  public const int MaxSpawngroupCreationsequenceFieldNumber = 10;
  private readonly static uint MaxSpawngroupCreationsequenceDefaultValue = 0;

  private uint maxSpawngroupCreationsequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxSpawngroupCreationsequence {
    get { if ((_hasBits0 & 256) != 0) { return maxSpawngroupCreationsequence_; } else { return MaxSpawngroupCreationsequenceDefaultValue; } }
    set {
      _hasBits0 |= 256;
      maxSpawngroupCreationsequence_ = value;
    }
  }
  /// <summary>Gets whether the "max_spawngroup_creationsequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxSpawngroupCreationsequence {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "max_spawngroup_creationsequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxSpawngroupCreationsequence() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "last_cmd_number_executed" field.</summary>
  public const int LastCmdNumberExecutedFieldNumber = 11;
  private readonly static uint LastCmdNumberExecutedDefaultValue = 0;

  private uint lastCmdNumberExecuted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint LastCmdNumberExecuted {
    get { if ((_hasBits0 & 512) != 0) { return lastCmdNumberExecuted_; } else { return LastCmdNumberExecutedDefaultValue; } }
    set {
      _hasBits0 |= 512;
      lastCmdNumberExecuted_ = value;
    }
  }
  /// <summary>Gets whether the "last_cmd_number_executed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastCmdNumberExecuted {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "last_cmd_number_executed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastCmdNumberExecuted() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "last_cmd_number_recv_delta" field.</summary>
  public const int LastCmdNumberRecvDeltaFieldNumber = 17;
  private readonly static int LastCmdNumberRecvDeltaDefaultValue = 0;

  private int lastCmdNumberRecvDelta_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int LastCmdNumberRecvDelta {
    get { if ((_hasBits0 & 4096) != 0) { return lastCmdNumberRecvDelta_; } else { return LastCmdNumberRecvDeltaDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      lastCmdNumberRecvDelta_ = value;
    }
  }
  /// <summary>Gets whether the "last_cmd_number_recv_delta" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastCmdNumberRecvDelta {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "last_cmd_number_recv_delta" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastCmdNumberRecvDelta() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "server_tick" field.</summary>
  public const int ServerTickFieldNumber = 12;
  private readonly static uint ServerTickDefaultValue = 0;

  private uint serverTick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ServerTick {
    get { if ((_hasBits0 & 1024) != 0) { return serverTick_; } else { return ServerTickDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      serverTick_ = value;
    }
  }
  /// <summary>Gets whether the "server_tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerTick {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "server_tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerTick() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "serialized_entities" field.</summary>
  public const int SerializedEntitiesFieldNumber = 13;
  private readonly static pb::ByteString SerializedEntitiesDefaultValue = pb::ByteString.Empty;

  private pb::ByteString serializedEntities_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString SerializedEntities {
    get { return serializedEntities_ ?? SerializedEntitiesDefaultValue; }
    set {
      serializedEntities_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "serialized_entities" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerializedEntities {
    get { return serializedEntities_ != null; }
  }
  /// <summary>Clears the value of the "serialized_entities" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerializedEntities() {
    serializedEntities_ = null;
  }

  /// <summary>Field number for the "alternate_baselines" field.</summary>
  public const int AlternateBaselinesFieldNumber = 15;
  private static readonly pb::FieldCodec<global::CSVCMsg_PacketEntities.Types.alternate_baseline_t> _repeated_alternateBaselines_codec
      = pb::FieldCodec.ForMessage(122, global::CSVCMsg_PacketEntities.Types.alternate_baseline_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_PacketEntities.Types.alternate_baseline_t> alternateBaselines_ = new pbc::RepeatedField<global::CSVCMsg_PacketEntities.Types.alternate_baseline_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_PacketEntities.Types.alternate_baseline_t> AlternateBaselines {
    get { return alternateBaselines_; }
  }

  /// <summary>Field number for the "has_pvs_vis_bits" field.</summary>
  public const int HasPvsVisBitsFieldNumber = 16;
  private readonly static uint HasPvsVisBitsDefaultValue = 0;

  private uint hasPvsVisBits_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HasPvsVisBits {
    get { if ((_hasBits0 & 2048) != 0) { return hasPvsVisBits_; } else { return HasPvsVisBitsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      hasPvsVisBits_ = value;
    }
  }
  /// <summary>Gets whether the "has_pvs_vis_bits" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHasPvsVisBits {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "has_pvs_vis_bits" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHasPvsVisBits() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "cmd_recv_status" field.</summary>
  public const int CmdRecvStatusFieldNumber = 22;
  private static readonly pb::FieldCodec<int> _repeated_cmdRecvStatus_codec
      = pb::FieldCodec.ForSInt32(178);
  private readonly pbc::RepeatedField<int> cmdRecvStatus_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> CmdRecvStatus {
    get { return cmdRecvStatus_; }
  }

  /// <summary>Field number for the "non_transmitted_entities" field.</summary>
  public const int NonTransmittedEntitiesFieldNumber = 19;
  private global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t nonTransmittedEntities_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t NonTransmittedEntities {
    get { return nonTransmittedEntities_; }
    set {
      nonTransmittedEntities_ = value;
    }
  }

  /// <summary>Field number for the "cq_starved_command_ticks" field.</summary>
  public const int CqStarvedCommandTicksFieldNumber = 20;
  private readonly static uint CqStarvedCommandTicksDefaultValue = 0;

  private uint cqStarvedCommandTicks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CqStarvedCommandTicks {
    get { if ((_hasBits0 & 8192) != 0) { return cqStarvedCommandTicks_; } else { return CqStarvedCommandTicksDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      cqStarvedCommandTicks_ = value;
    }
  }
  /// <summary>Gets whether the "cq_starved_command_ticks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCqStarvedCommandTicks {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "cq_starved_command_ticks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCqStarvedCommandTicks() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "cq_discarded_command_ticks" field.</summary>
  public const int CqDiscardedCommandTicksFieldNumber = 21;
  private readonly static uint CqDiscardedCommandTicksDefaultValue = 0;

  private uint cqDiscardedCommandTicks_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint CqDiscardedCommandTicks {
    get { if ((_hasBits0 & 16384) != 0) { return cqDiscardedCommandTicks_; } else { return CqDiscardedCommandTicksDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      cqDiscardedCommandTicks_ = value;
    }
  }
  /// <summary>Gets whether the "cq_discarded_command_ticks" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCqDiscardedCommandTicks {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "cq_discarded_command_ticks" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCqDiscardedCommandTicks() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "dev_padding" field.</summary>
  public const int DevPaddingFieldNumber = 999;
  private readonly static pb::ByteString DevPaddingDefaultValue = pb::ByteString.Empty;

  private pb::ByteString devPadding_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString DevPadding {
    get { return devPadding_ ?? DevPaddingDefaultValue; }
    set {
      devPadding_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "dev_padding" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDevPadding {
    get { return devPadding_ != null; }
  }
  /// <summary>Clears the value of the "dev_padding" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDevPadding() {
    devPadding_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_PacketEntities);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_PacketEntities other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MaxEntries != other.MaxEntries) return false;
    if (UpdatedEntries != other.UpdatedEntries) return false;
    if (LegacyIsDelta != other.LegacyIsDelta) return false;
    if (UpdateBaseline != other.UpdateBaseline) return false;
    if (Baseline != other.Baseline) return false;
    if (DeltaFrom != other.DeltaFrom) return false;
    if (EntityData != other.EntityData) return false;
    if (PendingFullFrame != other.PendingFullFrame) return false;
    if (ActiveSpawngroupHandle != other.ActiveSpawngroupHandle) return false;
    if (MaxSpawngroupCreationsequence != other.MaxSpawngroupCreationsequence) return false;
    if (LastCmdNumberExecuted != other.LastCmdNumberExecuted) return false;
    if (LastCmdNumberRecvDelta != other.LastCmdNumberRecvDelta) return false;
    if (ServerTick != other.ServerTick) return false;
    if (SerializedEntities != other.SerializedEntities) return false;
    if(!alternateBaselines_.Equals(other.alternateBaselines_)) return false;
    if (HasPvsVisBits != other.HasPvsVisBits) return false;
    if(!cmdRecvStatus_.Equals(other.cmdRecvStatus_)) return false;
    if (!object.Equals(NonTransmittedEntities, other.NonTransmittedEntities)) return false;
    if (CqStarvedCommandTicks != other.CqStarvedCommandTicks) return false;
    if (CqDiscardedCommandTicks != other.CqDiscardedCommandTicks) return false;
    if (DevPadding != other.DevPadding) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMaxEntries) hash ^= MaxEntries.GetHashCode();
    if (HasUpdatedEntries) hash ^= UpdatedEntries.GetHashCode();
    if (HasLegacyIsDelta) hash ^= LegacyIsDelta.GetHashCode();
    if (HasUpdateBaseline) hash ^= UpdateBaseline.GetHashCode();
    if (HasBaseline) hash ^= Baseline.GetHashCode();
    if (HasDeltaFrom) hash ^= DeltaFrom.GetHashCode();
    if (HasEntityData) hash ^= EntityData.GetHashCode();
    if (HasPendingFullFrame) hash ^= PendingFullFrame.GetHashCode();
    if (HasActiveSpawngroupHandle) hash ^= ActiveSpawngroupHandle.GetHashCode();
    if (HasMaxSpawngroupCreationsequence) hash ^= MaxSpawngroupCreationsequence.GetHashCode();
    if (HasLastCmdNumberExecuted) hash ^= LastCmdNumberExecuted.GetHashCode();
    if (HasLastCmdNumberRecvDelta) hash ^= LastCmdNumberRecvDelta.GetHashCode();
    if (HasServerTick) hash ^= ServerTick.GetHashCode();
    if (HasSerializedEntities) hash ^= SerializedEntities.GetHashCode();
    hash ^= alternateBaselines_.GetHashCode();
    if (HasHasPvsVisBits) hash ^= HasPvsVisBits.GetHashCode();
    hash ^= cmdRecvStatus_.GetHashCode();
    if (nonTransmittedEntities_ != null) hash ^= NonTransmittedEntities.GetHashCode();
    if (HasCqStarvedCommandTicks) hash ^= CqStarvedCommandTicks.GetHashCode();
    if (HasCqDiscardedCommandTicks) hash ^= CqDiscardedCommandTicks.GetHashCode();
    if (HasDevPadding) hash ^= DevPadding.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMaxEntries) {
      output.WriteRawTag(8);
      output.WriteInt32(MaxEntries);
    }
    if (HasUpdatedEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(UpdatedEntries);
    }
    if (HasLegacyIsDelta) {
      output.WriteRawTag(24);
      output.WriteBool(LegacyIsDelta);
    }
    if (HasUpdateBaseline) {
      output.WriteRawTag(32);
      output.WriteBool(UpdateBaseline);
    }
    if (HasBaseline) {
      output.WriteRawTag(40);
      output.WriteInt32(Baseline);
    }
    if (HasDeltaFrom) {
      output.WriteRawTag(48);
      output.WriteInt32(DeltaFrom);
    }
    if (HasEntityData) {
      output.WriteRawTag(58);
      output.WriteBytes(EntityData);
    }
    if (HasPendingFullFrame) {
      output.WriteRawTag(64);
      output.WriteBool(PendingFullFrame);
    }
    if (HasActiveSpawngroupHandle) {
      output.WriteRawTag(72);
      output.WriteUInt32(ActiveSpawngroupHandle);
    }
    if (HasMaxSpawngroupCreationsequence) {
      output.WriteRawTag(80);
      output.WriteUInt32(MaxSpawngroupCreationsequence);
    }
    if (HasLastCmdNumberExecuted) {
      output.WriteRawTag(88);
      output.WriteUInt32(LastCmdNumberExecuted);
    }
    if (HasServerTick) {
      output.WriteRawTag(96);
      output.WriteUInt32(ServerTick);
    }
    if (HasSerializedEntities) {
      output.WriteRawTag(106);
      output.WriteBytes(SerializedEntities);
    }
    alternateBaselines_.WriteTo(output, _repeated_alternateBaselines_codec);
    if (HasHasPvsVisBits) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(HasPvsVisBits);
    }
    if (HasLastCmdNumberRecvDelta) {
      output.WriteRawTag(136, 1);
      output.WriteSInt32(LastCmdNumberRecvDelta);
    }
    if (nonTransmittedEntities_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(NonTransmittedEntities);
    }
    if (HasCqStarvedCommandTicks) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(CqStarvedCommandTicks);
    }
    if (HasCqDiscardedCommandTicks) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(CqDiscardedCommandTicks);
    }
    cmdRecvStatus_.WriteTo(output, _repeated_cmdRecvStatus_codec);
    if (HasDevPadding) {
      output.WriteRawTag(186, 62);
      output.WriteBytes(DevPadding);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMaxEntries) {
      output.WriteRawTag(8);
      output.WriteInt32(MaxEntries);
    }
    if (HasUpdatedEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(UpdatedEntries);
    }
    if (HasLegacyIsDelta) {
      output.WriteRawTag(24);
      output.WriteBool(LegacyIsDelta);
    }
    if (HasUpdateBaseline) {
      output.WriteRawTag(32);
      output.WriteBool(UpdateBaseline);
    }
    if (HasBaseline) {
      output.WriteRawTag(40);
      output.WriteInt32(Baseline);
    }
    if (HasDeltaFrom) {
      output.WriteRawTag(48);
      output.WriteInt32(DeltaFrom);
    }
    if (HasEntityData) {
      output.WriteRawTag(58);
      output.WriteBytes(EntityData);
    }
    if (HasPendingFullFrame) {
      output.WriteRawTag(64);
      output.WriteBool(PendingFullFrame);
    }
    if (HasActiveSpawngroupHandle) {
      output.WriteRawTag(72);
      output.WriteUInt32(ActiveSpawngroupHandle);
    }
    if (HasMaxSpawngroupCreationsequence) {
      output.WriteRawTag(80);
      output.WriteUInt32(MaxSpawngroupCreationsequence);
    }
    if (HasLastCmdNumberExecuted) {
      output.WriteRawTag(88);
      output.WriteUInt32(LastCmdNumberExecuted);
    }
    if (HasServerTick) {
      output.WriteRawTag(96);
      output.WriteUInt32(ServerTick);
    }
    if (HasSerializedEntities) {
      output.WriteRawTag(106);
      output.WriteBytes(SerializedEntities);
    }
    alternateBaselines_.WriteTo(ref output, _repeated_alternateBaselines_codec);
    if (HasHasPvsVisBits) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(HasPvsVisBits);
    }
    if (HasLastCmdNumberRecvDelta) {
      output.WriteRawTag(136, 1);
      output.WriteSInt32(LastCmdNumberRecvDelta);
    }
    if (nonTransmittedEntities_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(NonTransmittedEntities);
    }
    if (HasCqStarvedCommandTicks) {
      output.WriteRawTag(160, 1);
      output.WriteUInt32(CqStarvedCommandTicks);
    }
    if (HasCqDiscardedCommandTicks) {
      output.WriteRawTag(168, 1);
      output.WriteUInt32(CqDiscardedCommandTicks);
    }
    cmdRecvStatus_.WriteTo(ref output, _repeated_cmdRecvStatus_codec);
    if (HasDevPadding) {
      output.WriteRawTag(186, 62);
      output.WriteBytes(DevPadding);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMaxEntries) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxEntries);
    }
    if (HasUpdatedEntries) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpdatedEntries);
    }
    if (HasLegacyIsDelta) {
      size += 1 + 1;
    }
    if (HasUpdateBaseline) {
      size += 1 + 1;
    }
    if (HasBaseline) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Baseline);
    }
    if (HasDeltaFrom) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeltaFrom);
    }
    if (HasEntityData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(EntityData);
    }
    if (HasPendingFullFrame) {
      size += 1 + 1;
    }
    if (HasActiveSpawngroupHandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActiveSpawngroupHandle);
    }
    if (HasMaxSpawngroupCreationsequence) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxSpawngroupCreationsequence);
    }
    if (HasLastCmdNumberExecuted) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastCmdNumberExecuted);
    }
    if (HasLastCmdNumberRecvDelta) {
      size += 2 + pb::CodedOutputStream.ComputeSInt32Size(LastCmdNumberRecvDelta);
    }
    if (HasServerTick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerTick);
    }
    if (HasSerializedEntities) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(SerializedEntities);
    }
    size += alternateBaselines_.CalculateSize(_repeated_alternateBaselines_codec);
    if (HasHasPvsVisBits) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(HasPvsVisBits);
    }
    size += cmdRecvStatus_.CalculateSize(_repeated_cmdRecvStatus_codec);
    if (nonTransmittedEntities_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(NonTransmittedEntities);
    }
    if (HasCqStarvedCommandTicks) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CqStarvedCommandTicks);
    }
    if (HasCqDiscardedCommandTicks) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(CqDiscardedCommandTicks);
    }
    if (HasDevPadding) {
      size += 2 + pb::CodedOutputStream.ComputeBytesSize(DevPadding);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_PacketEntities other) {
    if (other == null) {
      return;
    }
    if (other.HasMaxEntries) {
      MaxEntries = other.MaxEntries;
    }
    if (other.HasUpdatedEntries) {
      UpdatedEntries = other.UpdatedEntries;
    }
    if (other.HasLegacyIsDelta) {
      LegacyIsDelta = other.LegacyIsDelta;
    }
    if (other.HasUpdateBaseline) {
      UpdateBaseline = other.UpdateBaseline;
    }
    if (other.HasBaseline) {
      Baseline = other.Baseline;
    }
    if (other.HasDeltaFrom) {
      DeltaFrom = other.DeltaFrom;
    }
    if (other.HasEntityData) {
      EntityData = other.EntityData;
    }
    if (other.HasPendingFullFrame) {
      PendingFullFrame = other.PendingFullFrame;
    }
    if (other.HasActiveSpawngroupHandle) {
      ActiveSpawngroupHandle = other.ActiveSpawngroupHandle;
    }
    if (other.HasMaxSpawngroupCreationsequence) {
      MaxSpawngroupCreationsequence = other.MaxSpawngroupCreationsequence;
    }
    if (other.HasLastCmdNumberExecuted) {
      LastCmdNumberExecuted = other.LastCmdNumberExecuted;
    }
    if (other.HasLastCmdNumberRecvDelta) {
      LastCmdNumberRecvDelta = other.LastCmdNumberRecvDelta;
    }
    if (other.HasServerTick) {
      ServerTick = other.ServerTick;
    }
    if (other.HasSerializedEntities) {
      SerializedEntities = other.SerializedEntities;
    }
    alternateBaselines_.Add(other.alternateBaselines_);
    if (other.HasHasPvsVisBits) {
      HasPvsVisBits = other.HasPvsVisBits;
    }
    cmdRecvStatus_.Add(other.cmdRecvStatus_);
    if (other.nonTransmittedEntities_ != null) {
      if (nonTransmittedEntities_ == null) {
        NonTransmittedEntities = new global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t();
      }
      NonTransmittedEntities.MergeFrom(other.NonTransmittedEntities);
    }
    if (other.HasCqStarvedCommandTicks) {
      CqStarvedCommandTicks = other.CqStarvedCommandTicks;
    }
    if (other.HasCqDiscardedCommandTicks) {
      CqDiscardedCommandTicks = other.CqDiscardedCommandTicks;
    }
    if (other.HasDevPadding) {
      DevPadding = other.DevPadding;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MaxEntries = input.ReadInt32();
          break;
        }
        case 16: {
          UpdatedEntries = input.ReadInt32();
          break;
        }
        case 24: {
          LegacyIsDelta = input.ReadBool();
          break;
        }
        case 32: {
          UpdateBaseline = input.ReadBool();
          break;
        }
        case 40: {
          Baseline = input.ReadInt32();
          break;
        }
        case 48: {
          DeltaFrom = input.ReadInt32();
          break;
        }
        case 58: {
          EntityData = input.ReadBytes();
          break;
        }
        case 64: {
          PendingFullFrame = input.ReadBool();
          break;
        }
        case 72: {
          ActiveSpawngroupHandle = input.ReadUInt32();
          break;
        }
        case 80: {
          MaxSpawngroupCreationsequence = input.ReadUInt32();
          break;
        }
        case 88: {
          LastCmdNumberExecuted = input.ReadUInt32();
          break;
        }
        case 96: {
          ServerTick = input.ReadUInt32();
          break;
        }
        case 106: {
          SerializedEntities = input.ReadBytes();
          break;
        }
        case 122: {
          alternateBaselines_.AddEntriesFrom(input, _repeated_alternateBaselines_codec);
          break;
        }
        case 128: {
          HasPvsVisBits = input.ReadUInt32();
          break;
        }
        case 136: {
          LastCmdNumberRecvDelta = input.ReadSInt32();
          break;
        }
        case 154: {
          if (nonTransmittedEntities_ == null) {
            NonTransmittedEntities = new global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t();
          }
          input.ReadMessage(NonTransmittedEntities);
          break;
        }
        case 160: {
          CqStarvedCommandTicks = input.ReadUInt32();
          break;
        }
        case 168: {
          CqDiscardedCommandTicks = input.ReadUInt32();
          break;
        }
        case 178:
        case 176: {
          cmdRecvStatus_.AddEntriesFrom(input, _repeated_cmdRecvStatus_codec);
          break;
        }
        case 7994: {
          DevPadding = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MaxEntries = input.ReadInt32();
          break;
        }
        case 16: {
          UpdatedEntries = input.ReadInt32();
          break;
        }
        case 24: {
          LegacyIsDelta = input.ReadBool();
          break;
        }
        case 32: {
          UpdateBaseline = input.ReadBool();
          break;
        }
        case 40: {
          Baseline = input.ReadInt32();
          break;
        }
        case 48: {
          DeltaFrom = input.ReadInt32();
          break;
        }
        case 58: {
          EntityData = input.ReadBytes();
          break;
        }
        case 64: {
          PendingFullFrame = input.ReadBool();
          break;
        }
        case 72: {
          ActiveSpawngroupHandle = input.ReadUInt32();
          break;
        }
        case 80: {
          MaxSpawngroupCreationsequence = input.ReadUInt32();
          break;
        }
        case 88: {
          LastCmdNumberExecuted = input.ReadUInt32();
          break;
        }
        case 96: {
          ServerTick = input.ReadUInt32();
          break;
        }
        case 106: {
          SerializedEntities = input.ReadBytes();
          break;
        }
        case 122: {
          alternateBaselines_.AddEntriesFrom(ref input, _repeated_alternateBaselines_codec);
          break;
        }
        case 128: {
          HasPvsVisBits = input.ReadUInt32();
          break;
        }
        case 136: {
          LastCmdNumberRecvDelta = input.ReadSInt32();
          break;
        }
        case 154: {
          if (nonTransmittedEntities_ == null) {
            NonTransmittedEntities = new global::CSVCMsg_PacketEntities.Types.non_transmitted_entities_t();
          }
          input.ReadMessage(NonTransmittedEntities);
          break;
        }
        case 160: {
          CqStarvedCommandTicks = input.ReadUInt32();
          break;
        }
        case 168: {
          CqDiscardedCommandTicks = input.ReadUInt32();
          break;
        }
        case 178:
        case 176: {
          cmdRecvStatus_.AddEntriesFrom(ref input, _repeated_cmdRecvStatus_codec);
          break;
        }
        case 7994: {
          DevPadding = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_PacketEntities message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class alternate_baseline_t : pb::IMessage<alternate_baseline_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<alternate_baseline_t> _parser = new pb::MessageParser<alternate_baseline_t>(() => new alternate_baseline_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<alternate_baseline_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_PacketEntities.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public alternate_baseline_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public alternate_baseline_t(alternate_baseline_t other) : this() {
        _hasBits0 = other._hasBits0;
        entityIndex_ = other.entityIndex_;
        baselineIndex_ = other.baselineIndex_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public alternate_baseline_t Clone() {
        return new alternate_baseline_t(this);
      }

      /// <summary>Field number for the "entity_index" field.</summary>
      public const int EntityIndexFieldNumber = 1;
      private readonly static int EntityIndexDefaultValue = 0;

      private int entityIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int EntityIndex {
        get { if ((_hasBits0 & 1) != 0) { return entityIndex_; } else { return EntityIndexDefaultValue; } }
        set {
          _hasBits0 |= 1;
          entityIndex_ = value;
        }
      }
      /// <summary>Gets whether the "entity_index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEntityIndex {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "entity_index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEntityIndex() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "baseline_index" field.</summary>
      public const int BaselineIndexFieldNumber = 2;
      private readonly static int BaselineIndexDefaultValue = 0;

      private int baselineIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int BaselineIndex {
        get { if ((_hasBits0 & 2) != 0) { return baselineIndex_; } else { return BaselineIndexDefaultValue; } }
        set {
          _hasBits0 |= 2;
          baselineIndex_ = value;
        }
      }
      /// <summary>Gets whether the "baseline_index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBaselineIndex {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "baseline_index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBaselineIndex() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as alternate_baseline_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(alternate_baseline_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (EntityIndex != other.EntityIndex) return false;
        if (BaselineIndex != other.BaselineIndex) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasEntityIndex) hash ^= EntityIndex.GetHashCode();
        if (HasBaselineIndex) hash ^= BaselineIndex.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasEntityIndex) {
          output.WriteRawTag(8);
          output.WriteInt32(EntityIndex);
        }
        if (HasBaselineIndex) {
          output.WriteRawTag(16);
          output.WriteInt32(BaselineIndex);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasEntityIndex) {
          output.WriteRawTag(8);
          output.WriteInt32(EntityIndex);
        }
        if (HasBaselineIndex) {
          output.WriteRawTag(16);
          output.WriteInt32(BaselineIndex);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasEntityIndex) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EntityIndex);
        }
        if (HasBaselineIndex) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaselineIndex);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(alternate_baseline_t other) {
        if (other == null) {
          return;
        }
        if (other.HasEntityIndex) {
          EntityIndex = other.EntityIndex;
        }
        if (other.HasBaselineIndex) {
          BaselineIndex = other.BaselineIndex;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              EntityIndex = input.ReadInt32();
              break;
            }
            case 16: {
              BaselineIndex = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              EntityIndex = input.ReadInt32();
              break;
            }
            case 16: {
              BaselineIndex = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class non_transmitted_entities_t : pb::IMessage<non_transmitted_entities_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<non_transmitted_entities_t> _parser = new pb::MessageParser<non_transmitted_entities_t>(() => new non_transmitted_entities_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<non_transmitted_entities_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_PacketEntities.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public non_transmitted_entities_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public non_transmitted_entities_t(non_transmitted_entities_t other) : this() {
        _hasBits0 = other._hasBits0;
        headerCount_ = other.headerCount_;
        data_ = other.data_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public non_transmitted_entities_t Clone() {
        return new non_transmitted_entities_t(this);
      }

      /// <summary>Field number for the "header_count" field.</summary>
      public const int HeaderCountFieldNumber = 1;
      private readonly static int HeaderCountDefaultValue = 0;

      private int headerCount_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int HeaderCount {
        get { if ((_hasBits0 & 1) != 0) { return headerCount_; } else { return HeaderCountDefaultValue; } }
        set {
          _hasBits0 |= 1;
          headerCount_ = value;
        }
      }
      /// <summary>Gets whether the "header_count" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasHeaderCount {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "header_count" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearHeaderCount() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "data" field.</summary>
      public const int DataFieldNumber = 2;
      private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

      private pb::ByteString data_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public pb::ByteString Data {
        get { return data_ ?? DataDefaultValue; }
        set {
          data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "data" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasData {
        get { return data_ != null; }
      }
      /// <summary>Clears the value of the "data" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearData() {
        data_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as non_transmitted_entities_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(non_transmitted_entities_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (HeaderCount != other.HeaderCount) return false;
        if (Data != other.Data) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasHeaderCount) hash ^= HeaderCount.GetHashCode();
        if (HasData) hash ^= Data.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasHeaderCount) {
          output.WriteRawTag(8);
          output.WriteInt32(HeaderCount);
        }
        if (HasData) {
          output.WriteRawTag(18);
          output.WriteBytes(Data);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasHeaderCount) {
          output.WriteRawTag(8);
          output.WriteInt32(HeaderCount);
        }
        if (HasData) {
          output.WriteRawTag(18);
          output.WriteBytes(Data);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasHeaderCount) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeaderCount);
        }
        if (HasData) {
          size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(non_transmitted_entities_t other) {
        if (other == null) {
          return;
        }
        if (other.HasHeaderCount) {
          HeaderCount = other.HeaderCount;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              HeaderCount = input.ReadInt32();
              break;
            }
            case 18: {
              Data = input.ReadBytes();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              HeaderCount = input.ReadInt32();
              break;
            }
            case 18: {
              Data = input.ReadBytes();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_TempEntities : pb::IMessage<CSVCMsg_TempEntities>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_TempEntities> _parser = new pb::MessageParser<CSVCMsg_TempEntities>(() => new CSVCMsg_TempEntities());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_TempEntities> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_TempEntities() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_TempEntities(CSVCMsg_TempEntities other) : this() {
    _hasBits0 = other._hasBits0;
    reliable_ = other.reliable_;
    numEntries_ = other.numEntries_;
    entityData_ = other.entityData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_TempEntities Clone() {
    return new CSVCMsg_TempEntities(this);
  }

  /// <summary>Field number for the "reliable" field.</summary>
  public const int ReliableFieldNumber = 1;
  private readonly static bool ReliableDefaultValue = false;

  private bool reliable_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Reliable {
    get { if ((_hasBits0 & 1) != 0) { return reliable_; } else { return ReliableDefaultValue; } }
    set {
      _hasBits0 |= 1;
      reliable_ = value;
    }
  }
  /// <summary>Gets whether the "reliable" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReliable {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "reliable" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReliable() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "num_entries" field.</summary>
  public const int NumEntriesFieldNumber = 2;
  private readonly static int NumEntriesDefaultValue = 0;

  private int numEntries_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumEntries {
    get { if ((_hasBits0 & 2) != 0) { return numEntries_; } else { return NumEntriesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      numEntries_ = value;
    }
  }
  /// <summary>Gets whether the "num_entries" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumEntries {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "num_entries" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumEntries() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "entity_data" field.</summary>
  public const int EntityDataFieldNumber = 3;
  private readonly static pb::ByteString EntityDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString entityData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString EntityData {
    get { return entityData_ ?? EntityDataDefaultValue; }
    set {
      entityData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "entity_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityData {
    get { return entityData_ != null; }
  }
  /// <summary>Clears the value of the "entity_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityData() {
    entityData_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_TempEntities);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_TempEntities other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Reliable != other.Reliable) return false;
    if (NumEntries != other.NumEntries) return false;
    if (EntityData != other.EntityData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasReliable) hash ^= Reliable.GetHashCode();
    if (HasNumEntries) hash ^= NumEntries.GetHashCode();
    if (HasEntityData) hash ^= EntityData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasReliable) {
      output.WriteRawTag(8);
      output.WriteBool(Reliable);
    }
    if (HasNumEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumEntries);
    }
    if (HasEntityData) {
      output.WriteRawTag(26);
      output.WriteBytes(EntityData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasReliable) {
      output.WriteRawTag(8);
      output.WriteBool(Reliable);
    }
    if (HasNumEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumEntries);
    }
    if (HasEntityData) {
      output.WriteRawTag(26);
      output.WriteBytes(EntityData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasReliable) {
      size += 1 + 1;
    }
    if (HasNumEntries) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEntries);
    }
    if (HasEntityData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(EntityData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_TempEntities other) {
    if (other == null) {
      return;
    }
    if (other.HasReliable) {
      Reliable = other.Reliable;
    }
    if (other.HasNumEntries) {
      NumEntries = other.NumEntries;
    }
    if (other.HasEntityData) {
      EntityData = other.EntityData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Reliable = input.ReadBool();
          break;
        }
        case 16: {
          NumEntries = input.ReadInt32();
          break;
        }
        case 26: {
          EntityData = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Reliable = input.ReadBool();
          break;
        }
        case 16: {
          NumEntries = input.ReadInt32();
          break;
        }
        case 26: {
          EntityData = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_CreateStringTable : pb::IMessage<CSVCMsg_CreateStringTable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_CreateStringTable> _parser = new pb::MessageParser<CSVCMsg_CreateStringTable>(() => new CSVCMsg_CreateStringTable());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_CreateStringTable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CreateStringTable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CreateStringTable(CSVCMsg_CreateStringTable other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    numEntries_ = other.numEntries_;
    userDataFixedSize_ = other.userDataFixedSize_;
    userDataSize_ = other.userDataSize_;
    userDataSizeBits_ = other.userDataSizeBits_;
    flags_ = other.flags_;
    stringData_ = other.stringData_;
    uncompressedSize_ = other.uncompressedSize_;
    dataCompressed_ = other.dataCompressed_;
    usingVarintBitcounts_ = other.usingVarintBitcounts_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CreateStringTable Clone() {
    return new CSVCMsg_CreateStringTable(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "num_entries" field.</summary>
  public const int NumEntriesFieldNumber = 2;
  private readonly static int NumEntriesDefaultValue = 0;

  private int numEntries_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumEntries {
    get { if ((_hasBits0 & 1) != 0) { return numEntries_; } else { return NumEntriesDefaultValue; } }
    set {
      _hasBits0 |= 1;
      numEntries_ = value;
    }
  }
  /// <summary>Gets whether the "num_entries" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumEntries {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "num_entries" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumEntries() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "user_data_fixed_size" field.</summary>
  public const int UserDataFixedSizeFieldNumber = 3;
  private readonly static bool UserDataFixedSizeDefaultValue = false;

  private bool userDataFixedSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UserDataFixedSize {
    get { if ((_hasBits0 & 2) != 0) { return userDataFixedSize_; } else { return UserDataFixedSizeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      userDataFixedSize_ = value;
    }
  }
  /// <summary>Gets whether the "user_data_fixed_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserDataFixedSize {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "user_data_fixed_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserDataFixedSize() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "user_data_size" field.</summary>
  public const int UserDataSizeFieldNumber = 4;
  private readonly static int UserDataSizeDefaultValue = 0;

  private int userDataSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UserDataSize {
    get { if ((_hasBits0 & 4) != 0) { return userDataSize_; } else { return UserDataSizeDefaultValue; } }
    set {
      _hasBits0 |= 4;
      userDataSize_ = value;
    }
  }
  /// <summary>Gets whether the "user_data_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserDataSize {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "user_data_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserDataSize() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "user_data_size_bits" field.</summary>
  public const int UserDataSizeBitsFieldNumber = 5;
  private readonly static int UserDataSizeBitsDefaultValue = 0;

  private int userDataSizeBits_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UserDataSizeBits {
    get { if ((_hasBits0 & 8) != 0) { return userDataSizeBits_; } else { return UserDataSizeBitsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      userDataSizeBits_ = value;
    }
  }
  /// <summary>Gets whether the "user_data_size_bits" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserDataSizeBits {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "user_data_size_bits" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserDataSizeBits() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 6;
  private readonly static int FlagsDefaultValue = 0;

  private int flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Flags {
    get { if ((_hasBits0 & 16) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 16;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "string_data" field.</summary>
  public const int StringDataFieldNumber = 7;
  private readonly static pb::ByteString StringDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString stringData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString StringData {
    get { return stringData_ ?? StringDataDefaultValue; }
    set {
      stringData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStringData {
    get { return stringData_ != null; }
  }
  /// <summary>Clears the value of the "string_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStringData() {
    stringData_ = null;
  }

  /// <summary>Field number for the "uncompressed_size" field.</summary>
  public const int UncompressedSizeFieldNumber = 8;
  private readonly static int UncompressedSizeDefaultValue = 0;

  private int uncompressedSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int UncompressedSize {
    get { if ((_hasBits0 & 32) != 0) { return uncompressedSize_; } else { return UncompressedSizeDefaultValue; } }
    set {
      _hasBits0 |= 32;
      uncompressedSize_ = value;
    }
  }
  /// <summary>Gets whether the "uncompressed_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUncompressedSize {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "uncompressed_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUncompressedSize() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "data_compressed" field.</summary>
  public const int DataCompressedFieldNumber = 9;
  private readonly static bool DataCompressedDefaultValue = false;

  private bool dataCompressed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool DataCompressed {
    get { if ((_hasBits0 & 64) != 0) { return dataCompressed_; } else { return DataCompressedDefaultValue; } }
    set {
      _hasBits0 |= 64;
      dataCompressed_ = value;
    }
  }
  /// <summary>Gets whether the "data_compressed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDataCompressed {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "data_compressed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDataCompressed() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "using_varint_bitcounts" field.</summary>
  public const int UsingVarintBitcountsFieldNumber = 10;
  private readonly static bool UsingVarintBitcountsDefaultValue = false;

  private bool usingVarintBitcounts_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool UsingVarintBitcounts {
    get { if ((_hasBits0 & 128) != 0) { return usingVarintBitcounts_; } else { return UsingVarintBitcountsDefaultValue; } }
    set {
      _hasBits0 |= 128;
      usingVarintBitcounts_ = value;
    }
  }
  /// <summary>Gets whether the "using_varint_bitcounts" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUsingVarintBitcounts {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "using_varint_bitcounts" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUsingVarintBitcounts() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_CreateStringTable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_CreateStringTable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (NumEntries != other.NumEntries) return false;
    if (UserDataFixedSize != other.UserDataFixedSize) return false;
    if (UserDataSize != other.UserDataSize) return false;
    if (UserDataSizeBits != other.UserDataSizeBits) return false;
    if (Flags != other.Flags) return false;
    if (StringData != other.StringData) return false;
    if (UncompressedSize != other.UncompressedSize) return false;
    if (DataCompressed != other.DataCompressed) return false;
    if (UsingVarintBitcounts != other.UsingVarintBitcounts) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasNumEntries) hash ^= NumEntries.GetHashCode();
    if (HasUserDataFixedSize) hash ^= UserDataFixedSize.GetHashCode();
    if (HasUserDataSize) hash ^= UserDataSize.GetHashCode();
    if (HasUserDataSizeBits) hash ^= UserDataSizeBits.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasStringData) hash ^= StringData.GetHashCode();
    if (HasUncompressedSize) hash ^= UncompressedSize.GetHashCode();
    if (HasDataCompressed) hash ^= DataCompressed.GetHashCode();
    if (HasUsingVarintBitcounts) hash ^= UsingVarintBitcounts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasNumEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumEntries);
    }
    if (HasUserDataFixedSize) {
      output.WriteRawTag(24);
      output.WriteBool(UserDataFixedSize);
    }
    if (HasUserDataSize) {
      output.WriteRawTag(32);
      output.WriteInt32(UserDataSize);
    }
    if (HasUserDataSizeBits) {
      output.WriteRawTag(40);
      output.WriteInt32(UserDataSizeBits);
    }
    if (HasFlags) {
      output.WriteRawTag(48);
      output.WriteInt32(Flags);
    }
    if (HasStringData) {
      output.WriteRawTag(58);
      output.WriteBytes(StringData);
    }
    if (HasUncompressedSize) {
      output.WriteRawTag(64);
      output.WriteInt32(UncompressedSize);
    }
    if (HasDataCompressed) {
      output.WriteRawTag(72);
      output.WriteBool(DataCompressed);
    }
    if (HasUsingVarintBitcounts) {
      output.WriteRawTag(80);
      output.WriteBool(UsingVarintBitcounts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasNumEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumEntries);
    }
    if (HasUserDataFixedSize) {
      output.WriteRawTag(24);
      output.WriteBool(UserDataFixedSize);
    }
    if (HasUserDataSize) {
      output.WriteRawTag(32);
      output.WriteInt32(UserDataSize);
    }
    if (HasUserDataSizeBits) {
      output.WriteRawTag(40);
      output.WriteInt32(UserDataSizeBits);
    }
    if (HasFlags) {
      output.WriteRawTag(48);
      output.WriteInt32(Flags);
    }
    if (HasStringData) {
      output.WriteRawTag(58);
      output.WriteBytes(StringData);
    }
    if (HasUncompressedSize) {
      output.WriteRawTag(64);
      output.WriteInt32(UncompressedSize);
    }
    if (HasDataCompressed) {
      output.WriteRawTag(72);
      output.WriteBool(DataCompressed);
    }
    if (HasUsingVarintBitcounts) {
      output.WriteRawTag(80);
      output.WriteBool(UsingVarintBitcounts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasNumEntries) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumEntries);
    }
    if (HasUserDataFixedSize) {
      size += 1 + 1;
    }
    if (HasUserDataSize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserDataSize);
    }
    if (HasUserDataSizeBits) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserDataSizeBits);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
    }
    if (HasStringData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(StringData);
    }
    if (HasUncompressedSize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UncompressedSize);
    }
    if (HasDataCompressed) {
      size += 1 + 1;
    }
    if (HasUsingVarintBitcounts) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_CreateStringTable other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasNumEntries) {
      NumEntries = other.NumEntries;
    }
    if (other.HasUserDataFixedSize) {
      UserDataFixedSize = other.UserDataFixedSize;
    }
    if (other.HasUserDataSize) {
      UserDataSize = other.UserDataSize;
    }
    if (other.HasUserDataSizeBits) {
      UserDataSizeBits = other.UserDataSizeBits;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasStringData) {
      StringData = other.StringData;
    }
    if (other.HasUncompressedSize) {
      UncompressedSize = other.UncompressedSize;
    }
    if (other.HasDataCompressed) {
      DataCompressed = other.DataCompressed;
    }
    if (other.HasUsingVarintBitcounts) {
      UsingVarintBitcounts = other.UsingVarintBitcounts;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          NumEntries = input.ReadInt32();
          break;
        }
        case 24: {
          UserDataFixedSize = input.ReadBool();
          break;
        }
        case 32: {
          UserDataSize = input.ReadInt32();
          break;
        }
        case 40: {
          UserDataSizeBits = input.ReadInt32();
          break;
        }
        case 48: {
          Flags = input.ReadInt32();
          break;
        }
        case 58: {
          StringData = input.ReadBytes();
          break;
        }
        case 64: {
          UncompressedSize = input.ReadInt32();
          break;
        }
        case 72: {
          DataCompressed = input.ReadBool();
          break;
        }
        case 80: {
          UsingVarintBitcounts = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 16: {
          NumEntries = input.ReadInt32();
          break;
        }
        case 24: {
          UserDataFixedSize = input.ReadBool();
          break;
        }
        case 32: {
          UserDataSize = input.ReadInt32();
          break;
        }
        case 40: {
          UserDataSizeBits = input.ReadInt32();
          break;
        }
        case 48: {
          Flags = input.ReadInt32();
          break;
        }
        case 58: {
          StringData = input.ReadBytes();
          break;
        }
        case 64: {
          UncompressedSize = input.ReadInt32();
          break;
        }
        case 72: {
          DataCompressed = input.ReadBool();
          break;
        }
        case 80: {
          UsingVarintBitcounts = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_UpdateStringTable : pb::IMessage<CSVCMsg_UpdateStringTable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_UpdateStringTable> _parser = new pb::MessageParser<CSVCMsg_UpdateStringTable>(() => new CSVCMsg_UpdateStringTable());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_UpdateStringTable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UpdateStringTable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UpdateStringTable(CSVCMsg_UpdateStringTable other) : this() {
    _hasBits0 = other._hasBits0;
    tableId_ = other.tableId_;
    numChangedEntries_ = other.numChangedEntries_;
    stringData_ = other.stringData_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UpdateStringTable Clone() {
    return new CSVCMsg_UpdateStringTable(this);
  }

  /// <summary>Field number for the "table_id" field.</summary>
  public const int TableIdFieldNumber = 1;
  private readonly static int TableIdDefaultValue = 0;

  private int tableId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int TableId {
    get { if ((_hasBits0 & 1) != 0) { return tableId_; } else { return TableIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tableId_ = value;
    }
  }
  /// <summary>Gets whether the "table_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTableId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "table_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTableId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "num_changed_entries" field.</summary>
  public const int NumChangedEntriesFieldNumber = 2;
  private readonly static int NumChangedEntriesDefaultValue = 0;

  private int numChangedEntries_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumChangedEntries {
    get { if ((_hasBits0 & 2) != 0) { return numChangedEntries_; } else { return NumChangedEntriesDefaultValue; } }
    set {
      _hasBits0 |= 2;
      numChangedEntries_ = value;
    }
  }
  /// <summary>Gets whether the "num_changed_entries" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumChangedEntries {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "num_changed_entries" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumChangedEntries() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "string_data" field.</summary>
  public const int StringDataFieldNumber = 3;
  private readonly static pb::ByteString StringDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString stringData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString StringData {
    get { return stringData_ ?? StringDataDefaultValue; }
    set {
      stringData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStringData {
    get { return stringData_ != null; }
  }
  /// <summary>Clears the value of the "string_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStringData() {
    stringData_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_UpdateStringTable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_UpdateStringTable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TableId != other.TableId) return false;
    if (NumChangedEntries != other.NumChangedEntries) return false;
    if (StringData != other.StringData) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTableId) hash ^= TableId.GetHashCode();
    if (HasNumChangedEntries) hash ^= NumChangedEntries.GetHashCode();
    if (HasStringData) hash ^= StringData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTableId) {
      output.WriteRawTag(8);
      output.WriteInt32(TableId);
    }
    if (HasNumChangedEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumChangedEntries);
    }
    if (HasStringData) {
      output.WriteRawTag(26);
      output.WriteBytes(StringData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTableId) {
      output.WriteRawTag(8);
      output.WriteInt32(TableId);
    }
    if (HasNumChangedEntries) {
      output.WriteRawTag(16);
      output.WriteInt32(NumChangedEntries);
    }
    if (HasStringData) {
      output.WriteRawTag(26);
      output.WriteBytes(StringData);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTableId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(TableId);
    }
    if (HasNumChangedEntries) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumChangedEntries);
    }
    if (HasStringData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(StringData);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_UpdateStringTable other) {
    if (other == null) {
      return;
    }
    if (other.HasTableId) {
      TableId = other.TableId;
    }
    if (other.HasNumChangedEntries) {
      NumChangedEntries = other.NumChangedEntries;
    }
    if (other.HasStringData) {
      StringData = other.StringData;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TableId = input.ReadInt32();
          break;
        }
        case 16: {
          NumChangedEntries = input.ReadInt32();
          break;
        }
        case 26: {
          StringData = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TableId = input.ReadInt32();
          break;
        }
        case 16: {
          NumChangedEntries = input.ReadInt32();
          break;
        }
        case 26: {
          StringData = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_VoiceData : pb::IMessage<CSVCMsg_VoiceData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_VoiceData> _parser = new pb::MessageParser<CSVCMsg_VoiceData>(() => new CSVCMsg_VoiceData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_VoiceData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceData(CSVCMsg_VoiceData other) : this() {
    _hasBits0 = other._hasBits0;
    audio_ = other.audio_ != null ? other.audio_.Clone() : null;
    client_ = other.client_;
    proximity_ = other.proximity_;
    xuid_ = other.xuid_;
    audibleMask_ = other.audibleMask_;
    tick_ = other.tick_;
    passthrough_ = other.passthrough_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_VoiceData Clone() {
    return new CSVCMsg_VoiceData(this);
  }

  /// <summary>Field number for the "audio" field.</summary>
  public const int AudioFieldNumber = 1;
  private global::CMsgVoiceAudio audio_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVoiceAudio Audio {
    get { return audio_; }
    set {
      audio_ = value;
    }
  }

  /// <summary>Field number for the "client" field.</summary>
  public const int ClientFieldNumber = 2;
  private readonly static int ClientDefaultValue = -1;

  private int client_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Client {
    get { if ((_hasBits0 & 1) != 0) { return client_; } else { return ClientDefaultValue; } }
    set {
      _hasBits0 |= 1;
      client_ = value;
    }
  }
  /// <summary>Gets whether the "client" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClient {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "client" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClient() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "proximity" field.</summary>
  public const int ProximityFieldNumber = 3;
  private readonly static bool ProximityDefaultValue = false;

  private bool proximity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Proximity {
    get { if ((_hasBits0 & 2) != 0) { return proximity_; } else { return ProximityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      proximity_ = value;
    }
  }
  /// <summary>Gets whether the "proximity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProximity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "proximity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProximity() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "xuid" field.</summary>
  public const int XuidFieldNumber = 4;
  private readonly static ulong XuidDefaultValue = 0UL;

  private ulong xuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Xuid {
    get { if ((_hasBits0 & 4) != 0) { return xuid_; } else { return XuidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      xuid_ = value;
    }
  }
  /// <summary>Gets whether the "xuid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXuid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "xuid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXuid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "audible_mask" field.</summary>
  public const int AudibleMaskFieldNumber = 5;
  private readonly static int AudibleMaskDefaultValue = 0;

  private int audibleMask_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AudibleMask {
    get { if ((_hasBits0 & 8) != 0) { return audibleMask_; } else { return AudibleMaskDefaultValue; } }
    set {
      _hasBits0 |= 8;
      audibleMask_ = value;
    }
  }
  /// <summary>Gets whether the "audible_mask" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAudibleMask {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "audible_mask" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAudibleMask() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 6;
  private readonly static uint TickDefaultValue = 0;

  private uint tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Tick {
    get { if ((_hasBits0 & 16) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 16;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "passthrough" field.</summary>
  public const int PassthroughFieldNumber = 7;
  private readonly static int PassthroughDefaultValue = 0;

  private int passthrough_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Passthrough {
    get { if ((_hasBits0 & 32) != 0) { return passthrough_; } else { return PassthroughDefaultValue; } }
    set {
      _hasBits0 |= 32;
      passthrough_ = value;
    }
  }
  /// <summary>Gets whether the "passthrough" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPassthrough {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "passthrough" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPassthrough() {
    _hasBits0 &= ~32;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_VoiceData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_VoiceData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Audio, other.Audio)) return false;
    if (Client != other.Client) return false;
    if (Proximity != other.Proximity) return false;
    if (Xuid != other.Xuid) return false;
    if (AudibleMask != other.AudibleMask) return false;
    if (Tick != other.Tick) return false;
    if (Passthrough != other.Passthrough) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (audio_ != null) hash ^= Audio.GetHashCode();
    if (HasClient) hash ^= Client.GetHashCode();
    if (HasProximity) hash ^= Proximity.GetHashCode();
    if (HasXuid) hash ^= Xuid.GetHashCode();
    if (HasAudibleMask) hash ^= AudibleMask.GetHashCode();
    if (HasTick) hash ^= Tick.GetHashCode();
    if (HasPassthrough) hash ^= Passthrough.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (audio_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Audio);
    }
    if (HasClient) {
      output.WriteRawTag(16);
      output.WriteInt32(Client);
    }
    if (HasProximity) {
      output.WriteRawTag(24);
      output.WriteBool(Proximity);
    }
    if (HasXuid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Xuid);
    }
    if (HasAudibleMask) {
      output.WriteRawTag(40);
      output.WriteInt32(AudibleMask);
    }
    if (HasTick) {
      output.WriteRawTag(48);
      output.WriteUInt32(Tick);
    }
    if (HasPassthrough) {
      output.WriteRawTag(56);
      output.WriteInt32(Passthrough);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (audio_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Audio);
    }
    if (HasClient) {
      output.WriteRawTag(16);
      output.WriteInt32(Client);
    }
    if (HasProximity) {
      output.WriteRawTag(24);
      output.WriteBool(Proximity);
    }
    if (HasXuid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Xuid);
    }
    if (HasAudibleMask) {
      output.WriteRawTag(40);
      output.WriteInt32(AudibleMask);
    }
    if (HasTick) {
      output.WriteRawTag(48);
      output.WriteUInt32(Tick);
    }
    if (HasPassthrough) {
      output.WriteRawTag(56);
      output.WriteInt32(Passthrough);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (audio_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
    }
    if (HasClient) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Client);
    }
    if (HasProximity) {
      size += 1 + 1;
    }
    if (HasXuid) {
      size += 1 + 8;
    }
    if (HasAudibleMask) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudibleMask);
    }
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tick);
    }
    if (HasPassthrough) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Passthrough);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_VoiceData other) {
    if (other == null) {
      return;
    }
    if (other.audio_ != null) {
      if (audio_ == null) {
        Audio = new global::CMsgVoiceAudio();
      }
      Audio.MergeFrom(other.Audio);
    }
    if (other.HasClient) {
      Client = other.Client;
    }
    if (other.HasProximity) {
      Proximity = other.Proximity;
    }
    if (other.HasXuid) {
      Xuid = other.Xuid;
    }
    if (other.HasAudibleMask) {
      AudibleMask = other.AudibleMask;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    if (other.HasPassthrough) {
      Passthrough = other.Passthrough;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (audio_ == null) {
            Audio = new global::CMsgVoiceAudio();
          }
          input.ReadMessage(Audio);
          break;
        }
        case 16: {
          Client = input.ReadInt32();
          break;
        }
        case 24: {
          Proximity = input.ReadBool();
          break;
        }
        case 33: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 40: {
          AudibleMask = input.ReadInt32();
          break;
        }
        case 48: {
          Tick = input.ReadUInt32();
          break;
        }
        case 56: {
          Passthrough = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (audio_ == null) {
            Audio = new global::CMsgVoiceAudio();
          }
          input.ReadMessage(Audio);
          break;
        }
        case 16: {
          Client = input.ReadInt32();
          break;
        }
        case 24: {
          Proximity = input.ReadBool();
          break;
        }
        case 33: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 40: {
          AudibleMask = input.ReadInt32();
          break;
        }
        case 48: {
          Tick = input.ReadUInt32();
          break;
        }
        case 56: {
          Passthrough = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_PacketReliable : pb::IMessage<CSVCMsg_PacketReliable>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_PacketReliable> _parser = new pb::MessageParser<CSVCMsg_PacketReliable>(() => new CSVCMsg_PacketReliable());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_PacketReliable> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketReliable() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketReliable(CSVCMsg_PacketReliable other) : this() {
    _hasBits0 = other._hasBits0;
    tick_ = other.tick_;
    messagessize_ = other.messagessize_;
    state_ = other.state_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PacketReliable Clone() {
    return new CSVCMsg_PacketReliable(this);
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 1;
  private readonly static int TickDefaultValue = 0;

  private int tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tick {
    get { if ((_hasBits0 & 1) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "messagessize" field.</summary>
  public const int MessagessizeFieldNumber = 2;
  private readonly static int MessagessizeDefaultValue = 0;

  private int messagessize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Messagessize {
    get { if ((_hasBits0 & 2) != 0) { return messagessize_; } else { return MessagessizeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      messagessize_ = value;
    }
  }
  /// <summary>Gets whether the "messagessize" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMessagessize {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "messagessize" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMessagessize() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "state" field.</summary>
  public const int StateFieldNumber = 3;
  private readonly static bool StateDefaultValue = false;

  private bool state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool State {
    get { if ((_hasBits0 & 4) != 0) { return state_; } else { return StateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      state_ = value;
    }
  }
  /// <summary>Gets whether the "state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasState {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearState() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_PacketReliable);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_PacketReliable other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Tick != other.Tick) return false;
    if (Messagessize != other.Messagessize) return false;
    if (State != other.State) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTick) hash ^= Tick.GetHashCode();
    if (HasMessagessize) hash ^= Messagessize.GetHashCode();
    if (HasState) hash ^= State.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasMessagessize) {
      output.WriteRawTag(16);
      output.WriteInt32(Messagessize);
    }
    if (HasState) {
      output.WriteRawTag(24);
      output.WriteBool(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasMessagessize) {
      output.WriteRawTag(16);
      output.WriteInt32(Messagessize);
    }
    if (HasState) {
      output.WriteRawTag(24);
      output.WriteBool(State);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
    }
    if (HasMessagessize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Messagessize);
    }
    if (HasState) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_PacketReliable other) {
    if (other == null) {
      return;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    if (other.HasMessagessize) {
      Messagessize = other.Messagessize;
    }
    if (other.HasState) {
      State = other.State;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 16: {
          Messagessize = input.ReadInt32();
          break;
        }
        case 24: {
          State = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 16: {
          Messagessize = input.ReadInt32();
          break;
        }
        case 24: {
          State = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_FullFrameSplit : pb::IMessage<CSVCMsg_FullFrameSplit>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_FullFrameSplit> _parser = new pb::MessageParser<CSVCMsg_FullFrameSplit>(() => new CSVCMsg_FullFrameSplit());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_FullFrameSplit> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FullFrameSplit() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FullFrameSplit(CSVCMsg_FullFrameSplit other) : this() {
    _hasBits0 = other._hasBits0;
    tick_ = other.tick_;
    section_ = other.section_;
    total_ = other.total_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FullFrameSplit Clone() {
    return new CSVCMsg_FullFrameSplit(this);
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 1;
  private readonly static int TickDefaultValue = 0;

  private int tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tick {
    get { if ((_hasBits0 & 1) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "section" field.</summary>
  public const int SectionFieldNumber = 2;
  private readonly static int SectionDefaultValue = 0;

  private int section_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Section {
    get { if ((_hasBits0 & 2) != 0) { return section_; } else { return SectionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      section_ = value;
    }
  }
  /// <summary>Gets whether the "section" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSection {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "section" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSection() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "total" field.</summary>
  public const int TotalFieldNumber = 3;
  private readonly static int TotalDefaultValue = 0;

  private int total_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Total {
    get { if ((_hasBits0 & 4) != 0) { return total_; } else { return TotalDefaultValue; } }
    set {
      _hasBits0 |= 4;
      total_ = value;
    }
  }
  /// <summary>Gets whether the "total" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotal {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "total" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotal() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 4;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_FullFrameSplit);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_FullFrameSplit other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Tick != other.Tick) return false;
    if (Section != other.Section) return false;
    if (Total != other.Total) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTick) hash ^= Tick.GetHashCode();
    if (HasSection) hash ^= Section.GetHashCode();
    if (HasTotal) hash ^= Total.GetHashCode();
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasSection) {
      output.WriteRawTag(16);
      output.WriteInt32(Section);
    }
    if (HasTotal) {
      output.WriteRawTag(24);
      output.WriteInt32(Total);
    }
    if (HasData) {
      output.WriteRawTag(34);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasSection) {
      output.WriteRawTag(16);
      output.WriteInt32(Section);
    }
    if (HasTotal) {
      output.WriteRawTag(24);
      output.WriteInt32(Total);
    }
    if (HasData) {
      output.WriteRawTag(34);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
    }
    if (HasSection) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Section);
    }
    if (HasTotal) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
    }
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_FullFrameSplit other) {
    if (other == null) {
      return;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    if (other.HasSection) {
      Section = other.Section;
    }
    if (other.HasTotal) {
      Total = other.Total;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 16: {
          Section = input.ReadInt32();
          break;
        }
        case 24: {
          Total = input.ReadInt32();
          break;
        }
        case 34: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 16: {
          Section = input.ReadInt32();
          break;
        }
        case 24: {
          Total = input.ReadInt32();
          break;
        }
        case 34: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_HLTVStatus : pb::IMessage<CSVCMsg_HLTVStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_HLTVStatus> _parser = new pb::MessageParser<CSVCMsg_HLTVStatus>(() => new CSVCMsg_HLTVStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_HLTVStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HLTVStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HLTVStatus(CSVCMsg_HLTVStatus other) : this() {
    _hasBits0 = other._hasBits0;
    master_ = other.master_;
    clients_ = other.clients_;
    slots_ = other.slots_;
    proxies_ = other.proxies_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HLTVStatus Clone() {
    return new CSVCMsg_HLTVStatus(this);
  }

  /// <summary>Field number for the "master" field.</summary>
  public const int MasterFieldNumber = 1;
  private readonly static string MasterDefaultValue = "";

  private string master_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Master {
    get { return master_ ?? MasterDefaultValue; }
    set {
      master_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "master" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaster {
    get { return master_ != null; }
  }
  /// <summary>Clears the value of the "master" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaster() {
    master_ = null;
  }

  /// <summary>Field number for the "clients" field.</summary>
  public const int ClientsFieldNumber = 2;
  private readonly static int ClientsDefaultValue = 0;

  private int clients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Clients {
    get { if ((_hasBits0 & 1) != 0) { return clients_; } else { return ClientsDefaultValue; } }
    set {
      _hasBits0 |= 1;
      clients_ = value;
    }
  }
  /// <summary>Gets whether the "clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClients {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClients() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "slots" field.</summary>
  public const int SlotsFieldNumber = 3;
  private readonly static int SlotsDefaultValue = 0;

  private int slots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Slots {
    get { if ((_hasBits0 & 2) != 0) { return slots_; } else { return SlotsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      slots_ = value;
    }
  }
  /// <summary>Gets whether the "slots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlots {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "slots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlots() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "proxies" field.</summary>
  public const int ProxiesFieldNumber = 4;
  private readonly static int ProxiesDefaultValue = 0;

  private int proxies_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Proxies {
    get { if ((_hasBits0 & 4) != 0) { return proxies_; } else { return ProxiesDefaultValue; } }
    set {
      _hasBits0 |= 4;
      proxies_ = value;
    }
  }
  /// <summary>Gets whether the "proxies" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProxies {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "proxies" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProxies() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_HLTVStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_HLTVStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Master != other.Master) return false;
    if (Clients != other.Clients) return false;
    if (Slots != other.Slots) return false;
    if (Proxies != other.Proxies) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMaster) hash ^= Master.GetHashCode();
    if (HasClients) hash ^= Clients.GetHashCode();
    if (HasSlots) hash ^= Slots.GetHashCode();
    if (HasProxies) hash ^= Proxies.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMaster) {
      output.WriteRawTag(10);
      output.WriteString(Master);
    }
    if (HasClients) {
      output.WriteRawTag(16);
      output.WriteInt32(Clients);
    }
    if (HasSlots) {
      output.WriteRawTag(24);
      output.WriteInt32(Slots);
    }
    if (HasProxies) {
      output.WriteRawTag(32);
      output.WriteInt32(Proxies);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMaster) {
      output.WriteRawTag(10);
      output.WriteString(Master);
    }
    if (HasClients) {
      output.WriteRawTag(16);
      output.WriteInt32(Clients);
    }
    if (HasSlots) {
      output.WriteRawTag(24);
      output.WriteInt32(Slots);
    }
    if (HasProxies) {
      output.WriteRawTag(32);
      output.WriteInt32(Proxies);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMaster) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Master);
    }
    if (HasClients) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Clients);
    }
    if (HasSlots) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slots);
    }
    if (HasProxies) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Proxies);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_HLTVStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasMaster) {
      Master = other.Master;
    }
    if (other.HasClients) {
      Clients = other.Clients;
    }
    if (other.HasSlots) {
      Slots = other.Slots;
    }
    if (other.HasProxies) {
      Proxies = other.Proxies;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Master = input.ReadString();
          break;
        }
        case 16: {
          Clients = input.ReadInt32();
          break;
        }
        case 24: {
          Slots = input.ReadInt32();
          break;
        }
        case 32: {
          Proxies = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Master = input.ReadString();
          break;
        }
        case 16: {
          Clients = input.ReadInt32();
          break;
        }
        case 24: {
          Slots = input.ReadInt32();
          break;
        }
        case 32: {
          Proxies = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_ServerSteamID : pb::IMessage<CSVCMsg_ServerSteamID>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_ServerSteamID> _parser = new pb::MessageParser<CSVCMsg_ServerSteamID>(() => new CSVCMsg_ServerSteamID());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_ServerSteamID> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerSteamID() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerSteamID(CSVCMsg_ServerSteamID other) : this() {
    _hasBits0 = other._hasBits0;
    steamId_ = other.steamId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ServerSteamID Clone() {
    return new CSVCMsg_ServerSteamID(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private readonly static ulong SteamIdDefaultValue = 0UL;

  private ulong steamId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong SteamId {
    get { if ((_hasBits0 & 1) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      steamId_ = value;
    }
  }
  /// <summary>Gets whether the "steam_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "steam_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_ServerSteamID);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_ServerSteamID other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSteamId) hash ^= SteamId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSteamId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSteamId) {
      output.WriteRawTag(8);
      output.WriteUInt64(SteamId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSteamId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SteamId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_ServerSteamID other) {
    if (other == null) {
      return;
    }
    if (other.HasSteamId) {
      SteamId = other.SteamId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SteamId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SteamId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_CmdKeyValues : pb::IMessage<CSVCMsg_CmdKeyValues>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_CmdKeyValues> _parser = new pb::MessageParser<CSVCMsg_CmdKeyValues>(() => new CSVCMsg_CmdKeyValues());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_CmdKeyValues> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CmdKeyValues() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CmdKeyValues(CSVCMsg_CmdKeyValues other) : this() {
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_CmdKeyValues Clone() {
    return new CSVCMsg_CmdKeyValues(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_CmdKeyValues);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_CmdKeyValues other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_CmdKeyValues other) {
    if (other == null) {
      return;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_RconServerDetails : pb::IMessage<CSVCMsg_RconServerDetails>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_RconServerDetails> _parser = new pb::MessageParser<CSVCMsg_RconServerDetails>(() => new CSVCMsg_RconServerDetails());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_RconServerDetails> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_RconServerDetails() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_RconServerDetails(CSVCMsg_RconServerDetails other) : this() {
    token_ = other.token_;
    details_ = other.details_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_RconServerDetails Clone() {
    return new CSVCMsg_RconServerDetails(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private readonly static pb::ByteString TokenDefaultValue = pb::ByteString.Empty;

  private pb::ByteString token_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Token {
    get { return token_ ?? TokenDefaultValue; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "token" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasToken {
    get { return token_ != null; }
  }
  /// <summary>Clears the value of the "token" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearToken() {
    token_ = null;
  }

  /// <summary>Field number for the "details" field.</summary>
  public const int DetailsFieldNumber = 2;
  private readonly static string DetailsDefaultValue = "";

  private string details_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Details {
    get { return details_ ?? DetailsDefaultValue; }
    set {
      details_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "details" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDetails {
    get { return details_ != null; }
  }
  /// <summary>Clears the value of the "details" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDetails() {
    details_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_RconServerDetails);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_RconServerDetails other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    if (Details != other.Details) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasToken) hash ^= Token.GetHashCode();
    if (HasDetails) hash ^= Details.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteBytes(Token);
    }
    if (HasDetails) {
      output.WriteRawTag(18);
      output.WriteString(Details);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasToken) {
      output.WriteRawTag(10);
      output.WriteBytes(Token);
    }
    if (HasDetails) {
      output.WriteRawTag(18);
      output.WriteString(Details);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasToken) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
    }
    if (HasDetails) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Details);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_RconServerDetails other) {
    if (other == null) {
      return;
    }
    if (other.HasToken) {
      Token = other.Token;
    }
    if (other.HasDetails) {
      Details = other.Details;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Token = input.ReadBytes();
          break;
        }
        case 18: {
          Details = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Token = input.ReadBytes();
          break;
        }
        case 18: {
          Details = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgIPCAddress : pb::IMessage<CMsgIPCAddress>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgIPCAddress> _parser = new pb::MessageParser<CMsgIPCAddress>(() => new CMsgIPCAddress());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgIPCAddress> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPCAddress() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPCAddress(CMsgIPCAddress other) : this() {
    _hasBits0 = other._hasBits0;
    computerGuid_ = other.computerGuid_;
    processId_ = other.processId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgIPCAddress Clone() {
    return new CMsgIPCAddress(this);
  }

  /// <summary>Field number for the "computer_guid" field.</summary>
  public const int ComputerGuidFieldNumber = 1;
  private readonly static ulong ComputerGuidDefaultValue = 0UL;

  private ulong computerGuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong ComputerGuid {
    get { if ((_hasBits0 & 1) != 0) { return computerGuid_; } else { return ComputerGuidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      computerGuid_ = value;
    }
  }
  /// <summary>Gets whether the "computer_guid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasComputerGuid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "computer_guid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearComputerGuid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "process_id" field.</summary>
  public const int ProcessIdFieldNumber = 2;
  private readonly static uint ProcessIdDefaultValue = 0;

  private uint processId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ProcessId {
    get { if ((_hasBits0 & 2) != 0) { return processId_; } else { return ProcessIdDefaultValue; } }
    set {
      _hasBits0 |= 2;
      processId_ = value;
    }
  }
  /// <summary>Gets whether the "process_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasProcessId {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "process_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearProcessId() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgIPCAddress);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgIPCAddress other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ComputerGuid != other.ComputerGuid) return false;
    if (ProcessId != other.ProcessId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasComputerGuid) hash ^= ComputerGuid.GetHashCode();
    if (HasProcessId) hash ^= ProcessId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasComputerGuid) {
      output.WriteRawTag(9);
      output.WriteFixed64(ComputerGuid);
    }
    if (HasProcessId) {
      output.WriteRawTag(16);
      output.WriteUInt32(ProcessId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasComputerGuid) {
      output.WriteRawTag(9);
      output.WriteFixed64(ComputerGuid);
    }
    if (HasProcessId) {
      output.WriteRawTag(16);
      output.WriteUInt32(ProcessId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasComputerGuid) {
      size += 1 + 8;
    }
    if (HasProcessId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProcessId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgIPCAddress other) {
    if (other == null) {
      return;
    }
    if (other.HasComputerGuid) {
      ComputerGuid = other.ComputerGuid;
    }
    if (other.HasProcessId) {
      ProcessId = other.ProcessId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 9: {
          ComputerGuid = input.ReadFixed64();
          break;
        }
        case 16: {
          ProcessId = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 9: {
          ComputerGuid = input.ReadFixed64();
          break;
        }
        case 16: {
          ProcessId = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgServerPeer : pb::IMessage<CMsgServerPeer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgServerPeer> _parser = new pb::MessageParser<CMsgServerPeer>(() => new CMsgServerPeer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgServerPeer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerPeer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerPeer(CMsgServerPeer other) : this() {
    _hasBits0 = other._hasBits0;
    playerSlot_ = other.playerSlot_;
    steamid_ = other.steamid_;
    ipc_ = other.ipc_ != null ? other.ipc_.Clone() : null;
    theyHearYou_ = other.theyHearYou_;
    youHearThem_ = other.youHearThem_;
    isListenserverHost_ = other.isListenserverHost_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerPeer Clone() {
    return new CMsgServerPeer(this);
  }

  /// <summary>Field number for the "player_slot" field.</summary>
  public const int PlayerSlotFieldNumber = 1;
  private readonly static int PlayerSlotDefaultValue = -1;

  private int playerSlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerSlot {
    get { if ((_hasBits0 & 1) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
    set {
      _hasBits0 |= 1;
      playerSlot_ = value;
    }
  }
  /// <summary>Gets whether the "player_slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerSlot {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player_slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerSlot() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 2;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 2) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 2;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ipc" field.</summary>
  public const int IpcFieldNumber = 3;
  private global::CMsgIPCAddress ipc_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgIPCAddress Ipc {
    get { return ipc_; }
    set {
      ipc_ = value;
    }
  }

  /// <summary>Field number for the "they_hear_you" field.</summary>
  public const int TheyHearYouFieldNumber = 4;
  private readonly static bool TheyHearYouDefaultValue = false;

  private bool theyHearYou_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool TheyHearYou {
    get { if ((_hasBits0 & 4) != 0) { return theyHearYou_; } else { return TheyHearYouDefaultValue; } }
    set {
      _hasBits0 |= 4;
      theyHearYou_ = value;
    }
  }
  /// <summary>Gets whether the "they_hear_you" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTheyHearYou {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "they_hear_you" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTheyHearYou() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "you_hear_them" field.</summary>
  public const int YouHearThemFieldNumber = 5;
  private readonly static bool YouHearThemDefaultValue = false;

  private bool youHearThem_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool YouHearThem {
    get { if ((_hasBits0 & 8) != 0) { return youHearThem_; } else { return YouHearThemDefaultValue; } }
    set {
      _hasBits0 |= 8;
      youHearThem_ = value;
    }
  }
  /// <summary>Gets whether the "you_hear_them" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYouHearThem {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "you_hear_them" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYouHearThem() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "is_listenserver_host" field.</summary>
  public const int IsListenserverHostFieldNumber = 6;
  private readonly static bool IsListenserverHostDefaultValue = false;

  private bool isListenserverHost_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsListenserverHost {
    get { if ((_hasBits0 & 16) != 0) { return isListenserverHost_; } else { return IsListenserverHostDefaultValue; } }
    set {
      _hasBits0 |= 16;
      isListenserverHost_ = value;
    }
  }
  /// <summary>Gets whether the "is_listenserver_host" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsListenserverHost {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "is_listenserver_host" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsListenserverHost() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgServerPeer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgServerPeer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (PlayerSlot != other.PlayerSlot) return false;
    if (Steamid != other.Steamid) return false;
    if (!object.Equals(Ipc, other.Ipc)) return false;
    if (TheyHearYou != other.TheyHearYou) return false;
    if (YouHearThem != other.YouHearThem) return false;
    if (IsListenserverHost != other.IsListenserverHost) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (ipc_ != null) hash ^= Ipc.GetHashCode();
    if (HasTheyHearYou) hash ^= TheyHearYou.GetHashCode();
    if (HasYouHearThem) hash ^= YouHearThem.GetHashCode();
    if (HasIsListenserverHost) hash ^= IsListenserverHost.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayerSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayerSlot);
    }
    if (HasSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Steamid);
    }
    if (ipc_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Ipc);
    }
    if (HasTheyHearYou) {
      output.WriteRawTag(32);
      output.WriteBool(TheyHearYou);
    }
    if (HasYouHearThem) {
      output.WriteRawTag(40);
      output.WriteBool(YouHearThem);
    }
    if (HasIsListenserverHost) {
      output.WriteRawTag(48);
      output.WriteBool(IsListenserverHost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayerSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(PlayerSlot);
    }
    if (HasSteamid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Steamid);
    }
    if (ipc_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Ipc);
    }
    if (HasTheyHearYou) {
      output.WriteRawTag(32);
      output.WriteBool(TheyHearYou);
    }
    if (HasYouHearThem) {
      output.WriteRawTag(40);
      output.WriteBool(YouHearThem);
    }
    if (HasIsListenserverHost) {
      output.WriteRawTag(48);
      output.WriteBool(IsListenserverHost);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayerSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
    }
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (ipc_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ipc);
    }
    if (HasTheyHearYou) {
      size += 1 + 1;
    }
    if (HasYouHearThem) {
      size += 1 + 1;
    }
    if (HasIsListenserverHost) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgServerPeer other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayerSlot) {
      PlayerSlot = other.PlayerSlot;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.ipc_ != null) {
      if (ipc_ == null) {
        Ipc = new global::CMsgIPCAddress();
      }
      Ipc.MergeFrom(other.Ipc);
    }
    if (other.HasTheyHearYou) {
      TheyHearYou = other.TheyHearYou;
    }
    if (other.HasYouHearThem) {
      YouHearThem = other.YouHearThem;
    }
    if (other.HasIsListenserverHost) {
      IsListenserverHost = other.IsListenserverHost;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 17: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 26: {
          if (ipc_ == null) {
            Ipc = new global::CMsgIPCAddress();
          }
          input.ReadMessage(Ipc);
          break;
        }
        case 32: {
          TheyHearYou = input.ReadBool();
          break;
        }
        case 40: {
          YouHearThem = input.ReadBool();
          break;
        }
        case 48: {
          IsListenserverHost = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 17: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 26: {
          if (ipc_ == null) {
            Ipc = new global::CMsgIPCAddress();
          }
          input.ReadMessage(Ipc);
          break;
        }
        case 32: {
          TheyHearYou = input.ReadBool();
          break;
        }
        case 40: {
          YouHearThem = input.ReadBool();
          break;
        }
        case 48: {
          IsListenserverHost = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_PeerList : pb::IMessage<CSVCMsg_PeerList>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_PeerList> _parser = new pb::MessageParser<CSVCMsg_PeerList>(() => new CSVCMsg_PeerList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_PeerList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PeerList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PeerList(CSVCMsg_PeerList other) : this() {
    peer_ = other.peer_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_PeerList Clone() {
    return new CSVCMsg_PeerList(this);
  }

  /// <summary>Field number for the "peer" field.</summary>
  public const int PeerFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgServerPeer> _repeated_peer_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgServerPeer.Parser);
  private readonly pbc::RepeatedField<global::CMsgServerPeer> peer_ = new pbc::RepeatedField<global::CMsgServerPeer>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgServerPeer> Peer {
    get { return peer_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_PeerList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_PeerList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!peer_.Equals(other.peer_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= peer_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    peer_.WriteTo(output, _repeated_peer_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    peer_.WriteTo(ref output, _repeated_peer_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += peer_.CalculateSize(_repeated_peer_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_PeerList other) {
    if (other == null) {
      return;
    }
    peer_.Add(other.peer_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          peer_.AddEntriesFrom(input, _repeated_peer_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          peer_.AddEntriesFrom(ref input, _repeated_peer_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_ClearAllStringTables : pb::IMessage<CSVCMsg_ClearAllStringTables>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_ClearAllStringTables> _parser = new pb::MessageParser<CSVCMsg_ClearAllStringTables>(() => new CSVCMsg_ClearAllStringTables());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_ClearAllStringTables> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClearAllStringTables() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClearAllStringTables(CSVCMsg_ClearAllStringTables other) : this() {
    _hasBits0 = other._hasBits0;
    mapname_ = other.mapname_;
    createTablesSkipped_ = other.createTablesSkipped_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_ClearAllStringTables Clone() {
    return new CSVCMsg_ClearAllStringTables(this);
  }

  /// <summary>Field number for the "mapname" field.</summary>
  public const int MapnameFieldNumber = 1;
  private readonly static string MapnameDefaultValue = "";

  private string mapname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Mapname {
    get { return mapname_ ?? MapnameDefaultValue; }
    set {
      mapname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "mapname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapname {
    get { return mapname_ != null; }
  }
  /// <summary>Clears the value of the "mapname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapname() {
    mapname_ = null;
  }

  /// <summary>Field number for the "create_tables_skipped" field.</summary>
  public const int CreateTablesSkippedFieldNumber = 3;
  private readonly static bool CreateTablesSkippedDefaultValue = false;

  private bool createTablesSkipped_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CreateTablesSkipped {
    get { if ((_hasBits0 & 1) != 0) { return createTablesSkipped_; } else { return CreateTablesSkippedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      createTablesSkipped_ = value;
    }
  }
  /// <summary>Gets whether the "create_tables_skipped" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreateTablesSkipped {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "create_tables_skipped" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreateTablesSkipped() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_ClearAllStringTables);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_ClearAllStringTables other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mapname != other.Mapname) return false;
    if (CreateTablesSkipped != other.CreateTablesSkipped) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMapname) hash ^= Mapname.GetHashCode();
    if (HasCreateTablesSkipped) hash ^= CreateTablesSkipped.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMapname) {
      output.WriteRawTag(10);
      output.WriteString(Mapname);
    }
    if (HasCreateTablesSkipped) {
      output.WriteRawTag(24);
      output.WriteBool(CreateTablesSkipped);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMapname) {
      output.WriteRawTag(10);
      output.WriteString(Mapname);
    }
    if (HasCreateTablesSkipped) {
      output.WriteRawTag(24);
      output.WriteBool(CreateTablesSkipped);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMapname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Mapname);
    }
    if (HasCreateTablesSkipped) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_ClearAllStringTables other) {
    if (other == null) {
      return;
    }
    if (other.HasMapname) {
      Mapname = other.Mapname;
    }
    if (other.HasCreateTablesSkipped) {
      CreateTablesSkipped = other.CreateTablesSkipped;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Mapname = input.ReadString();
          break;
        }
        case 24: {
          CreateTablesSkipped = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Mapname = input.ReadString();
          break;
        }
        case 24: {
          CreateTablesSkipped = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class ProtoFlattenedSerializerField_t : pb::IMessage<ProtoFlattenedSerializerField_t>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ProtoFlattenedSerializerField_t> _parser = new pb::MessageParser<ProtoFlattenedSerializerField_t>(() => new ProtoFlattenedSerializerField_t());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ProtoFlattenedSerializerField_t> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializerField_t() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializerField_t(ProtoFlattenedSerializerField_t other) : this() {
    _hasBits0 = other._hasBits0;
    varTypeSym_ = other.varTypeSym_;
    varNameSym_ = other.varNameSym_;
    bitCount_ = other.bitCount_;
    lowValue_ = other.lowValue_;
    highValue_ = other.highValue_;
    encodeFlags_ = other.encodeFlags_;
    fieldSerializerNameSym_ = other.fieldSerializerNameSym_;
    fieldSerializerVersion_ = other.fieldSerializerVersion_;
    sendNodeSym_ = other.sendNodeSym_;
    varEncoderSym_ = other.varEncoderSym_;
    polymorphicTypes_ = other.polymorphicTypes_.Clone();
    varSerializerSym_ = other.varSerializerSym_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializerField_t Clone() {
    return new ProtoFlattenedSerializerField_t(this);
  }

  /// <summary>Field number for the "var_type_sym" field.</summary>
  public const int VarTypeSymFieldNumber = 1;
  private readonly static int VarTypeSymDefaultValue = 0;

  private int varTypeSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VarTypeSym {
    get { if ((_hasBits0 & 1) != 0) { return varTypeSym_; } else { return VarTypeSymDefaultValue; } }
    set {
      _hasBits0 |= 1;
      varTypeSym_ = value;
    }
  }
  /// <summary>Gets whether the "var_type_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVarTypeSym {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "var_type_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVarTypeSym() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "var_name_sym" field.</summary>
  public const int VarNameSymFieldNumber = 2;
  private readonly static int VarNameSymDefaultValue = 0;

  private int varNameSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VarNameSym {
    get { if ((_hasBits0 & 2) != 0) { return varNameSym_; } else { return VarNameSymDefaultValue; } }
    set {
      _hasBits0 |= 2;
      varNameSym_ = value;
    }
  }
  /// <summary>Gets whether the "var_name_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVarNameSym {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "var_name_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVarNameSym() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "bit_count" field.</summary>
  public const int BitCountFieldNumber = 3;
  private readonly static int BitCountDefaultValue = 0;

  private int bitCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int BitCount {
    get { if ((_hasBits0 & 4) != 0) { return bitCount_; } else { return BitCountDefaultValue; } }
    set {
      _hasBits0 |= 4;
      bitCount_ = value;
    }
  }
  /// <summary>Gets whether the "bit_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBitCount {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "bit_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBitCount() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "low_value" field.</summary>
  public const int LowValueFieldNumber = 4;
  private readonly static float LowValueDefaultValue = 0F;

  private float lowValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float LowValue {
    get { if ((_hasBits0 & 8) != 0) { return lowValue_; } else { return LowValueDefaultValue; } }
    set {
      _hasBits0 |= 8;
      lowValue_ = value;
    }
  }
  /// <summary>Gets whether the "low_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLowValue {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "low_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLowValue() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "high_value" field.</summary>
  public const int HighValueFieldNumber = 5;
  private readonly static float HighValueDefaultValue = 0F;

  private float highValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float HighValue {
    get { if ((_hasBits0 & 16) != 0) { return highValue_; } else { return HighValueDefaultValue; } }
    set {
      _hasBits0 |= 16;
      highValue_ = value;
    }
  }
  /// <summary>Gets whether the "high_value" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHighValue {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "high_value" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHighValue() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "encode_flags" field.</summary>
  public const int EncodeFlagsFieldNumber = 6;
  private readonly static int EncodeFlagsDefaultValue = 0;

  private int encodeFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int EncodeFlags {
    get { if ((_hasBits0 & 32) != 0) { return encodeFlags_; } else { return EncodeFlagsDefaultValue; } }
    set {
      _hasBits0 |= 32;
      encodeFlags_ = value;
    }
  }
  /// <summary>Gets whether the "encode_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEncodeFlags {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "encode_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEncodeFlags() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "field_serializer_name_sym" field.</summary>
  public const int FieldSerializerNameSymFieldNumber = 7;
  private readonly static int FieldSerializerNameSymDefaultValue = 0;

  private int fieldSerializerNameSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FieldSerializerNameSym {
    get { if ((_hasBits0 & 64) != 0) { return fieldSerializerNameSym_; } else { return FieldSerializerNameSymDefaultValue; } }
    set {
      _hasBits0 |= 64;
      fieldSerializerNameSym_ = value;
    }
  }
  /// <summary>Gets whether the "field_serializer_name_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFieldSerializerNameSym {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "field_serializer_name_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFieldSerializerNameSym() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "field_serializer_version" field.</summary>
  public const int FieldSerializerVersionFieldNumber = 8;
  private readonly static int FieldSerializerVersionDefaultValue = 0;

  private int fieldSerializerVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FieldSerializerVersion {
    get { if ((_hasBits0 & 128) != 0) { return fieldSerializerVersion_; } else { return FieldSerializerVersionDefaultValue; } }
    set {
      _hasBits0 |= 128;
      fieldSerializerVersion_ = value;
    }
  }
  /// <summary>Gets whether the "field_serializer_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFieldSerializerVersion {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "field_serializer_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFieldSerializerVersion() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "send_node_sym" field.</summary>
  public const int SendNodeSymFieldNumber = 9;
  private readonly static int SendNodeSymDefaultValue = 0;

  private int sendNodeSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SendNodeSym {
    get { if ((_hasBits0 & 256) != 0) { return sendNodeSym_; } else { return SendNodeSymDefaultValue; } }
    set {
      _hasBits0 |= 256;
      sendNodeSym_ = value;
    }
  }
  /// <summary>Gets whether the "send_node_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSendNodeSym {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "send_node_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSendNodeSym() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "var_encoder_sym" field.</summary>
  public const int VarEncoderSymFieldNumber = 10;
  private readonly static int VarEncoderSymDefaultValue = 0;

  private int varEncoderSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VarEncoderSym {
    get { if ((_hasBits0 & 512) != 0) { return varEncoderSym_; } else { return VarEncoderSymDefaultValue; } }
    set {
      _hasBits0 |= 512;
      varEncoderSym_ = value;
    }
  }
  /// <summary>Gets whether the "var_encoder_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVarEncoderSym {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "var_encoder_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVarEncoderSym() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "polymorphic_types" field.</summary>
  public const int PolymorphicTypesFieldNumber = 11;
  private static readonly pb::FieldCodec<global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t> _repeated_polymorphicTypes_codec
      = pb::FieldCodec.ForMessage(90, global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t.Parser);
  private readonly pbc::RepeatedField<global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t> polymorphicTypes_ = new pbc::RepeatedField<global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ProtoFlattenedSerializerField_t.Types.polymorphic_field_t> PolymorphicTypes {
    get { return polymorphicTypes_; }
  }

  /// <summary>Field number for the "var_serializer_sym" field.</summary>
  public const int VarSerializerSymFieldNumber = 12;
  private readonly static int VarSerializerSymDefaultValue = 0;

  private int varSerializerSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VarSerializerSym {
    get { if ((_hasBits0 & 1024) != 0) { return varSerializerSym_; } else { return VarSerializerSymDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      varSerializerSym_ = value;
    }
  }
  /// <summary>Gets whether the "var_serializer_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVarSerializerSym {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "var_serializer_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVarSerializerSym() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ProtoFlattenedSerializerField_t);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ProtoFlattenedSerializerField_t other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VarTypeSym != other.VarTypeSym) return false;
    if (VarNameSym != other.VarNameSym) return false;
    if (BitCount != other.BitCount) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LowValue, other.LowValue)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(HighValue, other.HighValue)) return false;
    if (EncodeFlags != other.EncodeFlags) return false;
    if (FieldSerializerNameSym != other.FieldSerializerNameSym) return false;
    if (FieldSerializerVersion != other.FieldSerializerVersion) return false;
    if (SendNodeSym != other.SendNodeSym) return false;
    if (VarEncoderSym != other.VarEncoderSym) return false;
    if(!polymorphicTypes_.Equals(other.polymorphicTypes_)) return false;
    if (VarSerializerSym != other.VarSerializerSym) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVarTypeSym) hash ^= VarTypeSym.GetHashCode();
    if (HasVarNameSym) hash ^= VarNameSym.GetHashCode();
    if (HasBitCount) hash ^= BitCount.GetHashCode();
    if (HasLowValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LowValue);
    if (HasHighValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(HighValue);
    if (HasEncodeFlags) hash ^= EncodeFlags.GetHashCode();
    if (HasFieldSerializerNameSym) hash ^= FieldSerializerNameSym.GetHashCode();
    if (HasFieldSerializerVersion) hash ^= FieldSerializerVersion.GetHashCode();
    if (HasSendNodeSym) hash ^= SendNodeSym.GetHashCode();
    if (HasVarEncoderSym) hash ^= VarEncoderSym.GetHashCode();
    hash ^= polymorphicTypes_.GetHashCode();
    if (HasVarSerializerSym) hash ^= VarSerializerSym.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVarTypeSym) {
      output.WriteRawTag(8);
      output.WriteInt32(VarTypeSym);
    }
    if (HasVarNameSym) {
      output.WriteRawTag(16);
      output.WriteInt32(VarNameSym);
    }
    if (HasBitCount) {
      output.WriteRawTag(24);
      output.WriteInt32(BitCount);
    }
    if (HasLowValue) {
      output.WriteRawTag(37);
      output.WriteFloat(LowValue);
    }
    if (HasHighValue) {
      output.WriteRawTag(45);
      output.WriteFloat(HighValue);
    }
    if (HasEncodeFlags) {
      output.WriteRawTag(48);
      output.WriteInt32(EncodeFlags);
    }
    if (HasFieldSerializerNameSym) {
      output.WriteRawTag(56);
      output.WriteInt32(FieldSerializerNameSym);
    }
    if (HasFieldSerializerVersion) {
      output.WriteRawTag(64);
      output.WriteInt32(FieldSerializerVersion);
    }
    if (HasSendNodeSym) {
      output.WriteRawTag(72);
      output.WriteInt32(SendNodeSym);
    }
    if (HasVarEncoderSym) {
      output.WriteRawTag(80);
      output.WriteInt32(VarEncoderSym);
    }
    polymorphicTypes_.WriteTo(output, _repeated_polymorphicTypes_codec);
    if (HasVarSerializerSym) {
      output.WriteRawTag(96);
      output.WriteInt32(VarSerializerSym);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVarTypeSym) {
      output.WriteRawTag(8);
      output.WriteInt32(VarTypeSym);
    }
    if (HasVarNameSym) {
      output.WriteRawTag(16);
      output.WriteInt32(VarNameSym);
    }
    if (HasBitCount) {
      output.WriteRawTag(24);
      output.WriteInt32(BitCount);
    }
    if (HasLowValue) {
      output.WriteRawTag(37);
      output.WriteFloat(LowValue);
    }
    if (HasHighValue) {
      output.WriteRawTag(45);
      output.WriteFloat(HighValue);
    }
    if (HasEncodeFlags) {
      output.WriteRawTag(48);
      output.WriteInt32(EncodeFlags);
    }
    if (HasFieldSerializerNameSym) {
      output.WriteRawTag(56);
      output.WriteInt32(FieldSerializerNameSym);
    }
    if (HasFieldSerializerVersion) {
      output.WriteRawTag(64);
      output.WriteInt32(FieldSerializerVersion);
    }
    if (HasSendNodeSym) {
      output.WriteRawTag(72);
      output.WriteInt32(SendNodeSym);
    }
    if (HasVarEncoderSym) {
      output.WriteRawTag(80);
      output.WriteInt32(VarEncoderSym);
    }
    polymorphicTypes_.WriteTo(ref output, _repeated_polymorphicTypes_codec);
    if (HasVarSerializerSym) {
      output.WriteRawTag(96);
      output.WriteInt32(VarSerializerSym);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVarTypeSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VarTypeSym);
    }
    if (HasVarNameSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VarNameSym);
    }
    if (HasBitCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(BitCount);
    }
    if (HasLowValue) {
      size += 1 + 4;
    }
    if (HasHighValue) {
      size += 1 + 4;
    }
    if (HasEncodeFlags) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(EncodeFlags);
    }
    if (HasFieldSerializerNameSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldSerializerNameSym);
    }
    if (HasFieldSerializerVersion) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldSerializerVersion);
    }
    if (HasSendNodeSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendNodeSym);
    }
    if (HasVarEncoderSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VarEncoderSym);
    }
    size += polymorphicTypes_.CalculateSize(_repeated_polymorphicTypes_codec);
    if (HasVarSerializerSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VarSerializerSym);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ProtoFlattenedSerializerField_t other) {
    if (other == null) {
      return;
    }
    if (other.HasVarTypeSym) {
      VarTypeSym = other.VarTypeSym;
    }
    if (other.HasVarNameSym) {
      VarNameSym = other.VarNameSym;
    }
    if (other.HasBitCount) {
      BitCount = other.BitCount;
    }
    if (other.HasLowValue) {
      LowValue = other.LowValue;
    }
    if (other.HasHighValue) {
      HighValue = other.HighValue;
    }
    if (other.HasEncodeFlags) {
      EncodeFlags = other.EncodeFlags;
    }
    if (other.HasFieldSerializerNameSym) {
      FieldSerializerNameSym = other.FieldSerializerNameSym;
    }
    if (other.HasFieldSerializerVersion) {
      FieldSerializerVersion = other.FieldSerializerVersion;
    }
    if (other.HasSendNodeSym) {
      SendNodeSym = other.SendNodeSym;
    }
    if (other.HasVarEncoderSym) {
      VarEncoderSym = other.VarEncoderSym;
    }
    polymorphicTypes_.Add(other.polymorphicTypes_);
    if (other.HasVarSerializerSym) {
      VarSerializerSym = other.VarSerializerSym;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          VarTypeSym = input.ReadInt32();
          break;
        }
        case 16: {
          VarNameSym = input.ReadInt32();
          break;
        }
        case 24: {
          BitCount = input.ReadInt32();
          break;
        }
        case 37: {
          LowValue = input.ReadFloat();
          break;
        }
        case 45: {
          HighValue = input.ReadFloat();
          break;
        }
        case 48: {
          EncodeFlags = input.ReadInt32();
          break;
        }
        case 56: {
          FieldSerializerNameSym = input.ReadInt32();
          break;
        }
        case 64: {
          FieldSerializerVersion = input.ReadInt32();
          break;
        }
        case 72: {
          SendNodeSym = input.ReadInt32();
          break;
        }
        case 80: {
          VarEncoderSym = input.ReadInt32();
          break;
        }
        case 90: {
          polymorphicTypes_.AddEntriesFrom(input, _repeated_polymorphicTypes_codec);
          break;
        }
        case 96: {
          VarSerializerSym = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          VarTypeSym = input.ReadInt32();
          break;
        }
        case 16: {
          VarNameSym = input.ReadInt32();
          break;
        }
        case 24: {
          BitCount = input.ReadInt32();
          break;
        }
        case 37: {
          LowValue = input.ReadFloat();
          break;
        }
        case 45: {
          HighValue = input.ReadFloat();
          break;
        }
        case 48: {
          EncodeFlags = input.ReadInt32();
          break;
        }
        case 56: {
          FieldSerializerNameSym = input.ReadInt32();
          break;
        }
        case 64: {
          FieldSerializerVersion = input.ReadInt32();
          break;
        }
        case 72: {
          SendNodeSym = input.ReadInt32();
          break;
        }
        case 80: {
          VarEncoderSym = input.ReadInt32();
          break;
        }
        case 90: {
          polymorphicTypes_.AddEntriesFrom(ref input, _repeated_polymorphicTypes_codec);
          break;
        }
        case 96: {
          VarSerializerSym = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the ProtoFlattenedSerializerField_t message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class polymorphic_field_t : pb::IMessage<polymorphic_field_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<polymorphic_field_t> _parser = new pb::MessageParser<polymorphic_field_t>(() => new polymorphic_field_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<polymorphic_field_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::ProtoFlattenedSerializerField_t.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public polymorphic_field_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public polymorphic_field_t(polymorphic_field_t other) : this() {
        _hasBits0 = other._hasBits0;
        polymorphicFieldSerializerNameSym_ = other.polymorphicFieldSerializerNameSym_;
        polymorphicFieldSerializerVersion_ = other.polymorphicFieldSerializerVersion_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public polymorphic_field_t Clone() {
        return new polymorphic_field_t(this);
      }

      /// <summary>Field number for the "polymorphic_field_serializer_name_sym" field.</summary>
      public const int PolymorphicFieldSerializerNameSymFieldNumber = 1;
      private readonly static int PolymorphicFieldSerializerNameSymDefaultValue = 0;

      private int polymorphicFieldSerializerNameSym_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int PolymorphicFieldSerializerNameSym {
        get { if ((_hasBits0 & 1) != 0) { return polymorphicFieldSerializerNameSym_; } else { return PolymorphicFieldSerializerNameSymDefaultValue; } }
        set {
          _hasBits0 |= 1;
          polymorphicFieldSerializerNameSym_ = value;
        }
      }
      /// <summary>Gets whether the "polymorphic_field_serializer_name_sym" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPolymorphicFieldSerializerNameSym {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "polymorphic_field_serializer_name_sym" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPolymorphicFieldSerializerNameSym() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "polymorphic_field_serializer_version" field.</summary>
      public const int PolymorphicFieldSerializerVersionFieldNumber = 2;
      private readonly static int PolymorphicFieldSerializerVersionDefaultValue = 0;

      private int polymorphicFieldSerializerVersion_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int PolymorphicFieldSerializerVersion {
        get { if ((_hasBits0 & 2) != 0) { return polymorphicFieldSerializerVersion_; } else { return PolymorphicFieldSerializerVersionDefaultValue; } }
        set {
          _hasBits0 |= 2;
          polymorphicFieldSerializerVersion_ = value;
        }
      }
      /// <summary>Gets whether the "polymorphic_field_serializer_version" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPolymorphicFieldSerializerVersion {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "polymorphic_field_serializer_version" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPolymorphicFieldSerializerVersion() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as polymorphic_field_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(polymorphic_field_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (PolymorphicFieldSerializerNameSym != other.PolymorphicFieldSerializerNameSym) return false;
        if (PolymorphicFieldSerializerVersion != other.PolymorphicFieldSerializerVersion) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPolymorphicFieldSerializerNameSym) hash ^= PolymorphicFieldSerializerNameSym.GetHashCode();
        if (HasPolymorphicFieldSerializerVersion) hash ^= PolymorphicFieldSerializerVersion.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPolymorphicFieldSerializerNameSym) {
          output.WriteRawTag(8);
          output.WriteInt32(PolymorphicFieldSerializerNameSym);
        }
        if (HasPolymorphicFieldSerializerVersion) {
          output.WriteRawTag(16);
          output.WriteInt32(PolymorphicFieldSerializerVersion);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPolymorphicFieldSerializerNameSym) {
          output.WriteRawTag(8);
          output.WriteInt32(PolymorphicFieldSerializerNameSym);
        }
        if (HasPolymorphicFieldSerializerVersion) {
          output.WriteRawTag(16);
          output.WriteInt32(PolymorphicFieldSerializerVersion);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPolymorphicFieldSerializerNameSym) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(PolymorphicFieldSerializerNameSym);
        }
        if (HasPolymorphicFieldSerializerVersion) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(PolymorphicFieldSerializerVersion);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(polymorphic_field_t other) {
        if (other == null) {
          return;
        }
        if (other.HasPolymorphicFieldSerializerNameSym) {
          PolymorphicFieldSerializerNameSym = other.PolymorphicFieldSerializerNameSym;
        }
        if (other.HasPolymorphicFieldSerializerVersion) {
          PolymorphicFieldSerializerVersion = other.PolymorphicFieldSerializerVersion;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              PolymorphicFieldSerializerNameSym = input.ReadInt32();
              break;
            }
            case 16: {
              PolymorphicFieldSerializerVersion = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              PolymorphicFieldSerializerNameSym = input.ReadInt32();
              break;
            }
            case 16: {
              PolymorphicFieldSerializerVersion = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class ProtoFlattenedSerializer_t : pb::IMessage<ProtoFlattenedSerializer_t>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ProtoFlattenedSerializer_t> _parser = new pb::MessageParser<ProtoFlattenedSerializer_t>(() => new ProtoFlattenedSerializer_t());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<ProtoFlattenedSerializer_t> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializer_t() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializer_t(ProtoFlattenedSerializer_t other) : this() {
    _hasBits0 = other._hasBits0;
    serializerNameSym_ = other.serializerNameSym_;
    serializerVersion_ = other.serializerVersion_;
    fieldsIndex_ = other.fieldsIndex_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ProtoFlattenedSerializer_t Clone() {
    return new ProtoFlattenedSerializer_t(this);
  }

  /// <summary>Field number for the "serializer_name_sym" field.</summary>
  public const int SerializerNameSymFieldNumber = 1;
  private readonly static int SerializerNameSymDefaultValue = 0;

  private int serializerNameSym_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SerializerNameSym {
    get { if ((_hasBits0 & 1) != 0) { return serializerNameSym_; } else { return SerializerNameSymDefaultValue; } }
    set {
      _hasBits0 |= 1;
      serializerNameSym_ = value;
    }
  }
  /// <summary>Gets whether the "serializer_name_sym" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerializerNameSym {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "serializer_name_sym" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerializerNameSym() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "serializer_version" field.</summary>
  public const int SerializerVersionFieldNumber = 2;
  private readonly static int SerializerVersionDefaultValue = 0;

  private int serializerVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SerializerVersion {
    get { if ((_hasBits0 & 2) != 0) { return serializerVersion_; } else { return SerializerVersionDefaultValue; } }
    set {
      _hasBits0 |= 2;
      serializerVersion_ = value;
    }
  }
  /// <summary>Gets whether the "serializer_version" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerializerVersion {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "serializer_version" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerializerVersion() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "fields_index" field.</summary>
  public const int FieldsIndexFieldNumber = 3;
  private static readonly pb::FieldCodec<int> _repeated_fieldsIndex_codec
      = pb::FieldCodec.ForInt32(24);
  private readonly pbc::RepeatedField<int> fieldsIndex_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<int> FieldsIndex {
    get { return fieldsIndex_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as ProtoFlattenedSerializer_t);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(ProtoFlattenedSerializer_t other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SerializerNameSym != other.SerializerNameSym) return false;
    if (SerializerVersion != other.SerializerVersion) return false;
    if(!fieldsIndex_.Equals(other.fieldsIndex_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSerializerNameSym) hash ^= SerializerNameSym.GetHashCode();
    if (HasSerializerVersion) hash ^= SerializerVersion.GetHashCode();
    hash ^= fieldsIndex_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSerializerNameSym) {
      output.WriteRawTag(8);
      output.WriteInt32(SerializerNameSym);
    }
    if (HasSerializerVersion) {
      output.WriteRawTag(16);
      output.WriteInt32(SerializerVersion);
    }
    fieldsIndex_.WriteTo(output, _repeated_fieldsIndex_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSerializerNameSym) {
      output.WriteRawTag(8);
      output.WriteInt32(SerializerNameSym);
    }
    if (HasSerializerVersion) {
      output.WriteRawTag(16);
      output.WriteInt32(SerializerVersion);
    }
    fieldsIndex_.WriteTo(ref output, _repeated_fieldsIndex_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSerializerNameSym) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SerializerNameSym);
    }
    if (HasSerializerVersion) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SerializerVersion);
    }
    size += fieldsIndex_.CalculateSize(_repeated_fieldsIndex_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(ProtoFlattenedSerializer_t other) {
    if (other == null) {
      return;
    }
    if (other.HasSerializerNameSym) {
      SerializerNameSym = other.SerializerNameSym;
    }
    if (other.HasSerializerVersion) {
      SerializerVersion = other.SerializerVersion;
    }
    fieldsIndex_.Add(other.fieldsIndex_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SerializerNameSym = input.ReadInt32();
          break;
        }
        case 16: {
          SerializerVersion = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fieldsIndex_.AddEntriesFrom(input, _repeated_fieldsIndex_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SerializerNameSym = input.ReadInt32();
          break;
        }
        case 16: {
          SerializerVersion = input.ReadInt32();
          break;
        }
        case 26:
        case 24: {
          fieldsIndex_.AddEntriesFrom(ref input, _repeated_fieldsIndex_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_FlattenedSerializer : pb::IMessage<CSVCMsg_FlattenedSerializer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_FlattenedSerializer> _parser = new pb::MessageParser<CSVCMsg_FlattenedSerializer>(() => new CSVCMsg_FlattenedSerializer());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_FlattenedSerializer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FlattenedSerializer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FlattenedSerializer(CSVCMsg_FlattenedSerializer other) : this() {
    serializers_ = other.serializers_.Clone();
    symbols_ = other.symbols_.Clone();
    fields_ = other.fields_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_FlattenedSerializer Clone() {
    return new CSVCMsg_FlattenedSerializer(this);
  }

  /// <summary>Field number for the "serializers" field.</summary>
  public const int SerializersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ProtoFlattenedSerializer_t> _repeated_serializers_codec
      = pb::FieldCodec.ForMessage(10, global::ProtoFlattenedSerializer_t.Parser);
  private readonly pbc::RepeatedField<global::ProtoFlattenedSerializer_t> serializers_ = new pbc::RepeatedField<global::ProtoFlattenedSerializer_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ProtoFlattenedSerializer_t> Serializers {
    get { return serializers_; }
  }

  /// <summary>Field number for the "symbols" field.</summary>
  public const int SymbolsFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_symbols_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> symbols_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Symbols {
    get { return symbols_; }
  }

  /// <summary>Field number for the "fields" field.</summary>
  public const int FieldsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ProtoFlattenedSerializerField_t> _repeated_fields_codec
      = pb::FieldCodec.ForMessage(26, global::ProtoFlattenedSerializerField_t.Parser);
  private readonly pbc::RepeatedField<global::ProtoFlattenedSerializerField_t> fields_ = new pbc::RepeatedField<global::ProtoFlattenedSerializerField_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::ProtoFlattenedSerializerField_t> Fields {
    get { return fields_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_FlattenedSerializer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_FlattenedSerializer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!serializers_.Equals(other.serializers_)) return false;
    if(!symbols_.Equals(other.symbols_)) return false;
    if(!fields_.Equals(other.fields_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= serializers_.GetHashCode();
    hash ^= symbols_.GetHashCode();
    hash ^= fields_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    serializers_.WriteTo(output, _repeated_serializers_codec);
    symbols_.WriteTo(output, _repeated_symbols_codec);
    fields_.WriteTo(output, _repeated_fields_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    serializers_.WriteTo(ref output, _repeated_serializers_codec);
    symbols_.WriteTo(ref output, _repeated_symbols_codec);
    fields_.WriteTo(ref output, _repeated_fields_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += serializers_.CalculateSize(_repeated_serializers_codec);
    size += symbols_.CalculateSize(_repeated_symbols_codec);
    size += fields_.CalculateSize(_repeated_fields_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_FlattenedSerializer other) {
    if (other == null) {
      return;
    }
    serializers_.Add(other.serializers_);
    symbols_.Add(other.symbols_);
    fields_.Add(other.fields_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          serializers_.AddEntriesFrom(input, _repeated_serializers_codec);
          break;
        }
        case 18: {
          symbols_.AddEntriesFrom(input, _repeated_symbols_codec);
          break;
        }
        case 26: {
          fields_.AddEntriesFrom(input, _repeated_fields_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          serializers_.AddEntriesFrom(ref input, _repeated_serializers_codec);
          break;
        }
        case 18: {
          symbols_.AddEntriesFrom(ref input, _repeated_symbols_codec);
          break;
        }
        case 26: {
          fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_StopSound : pb::IMessage<CSVCMsg_StopSound>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_StopSound> _parser = new pb::MessageParser<CSVCMsg_StopSound>(() => new CSVCMsg_StopSound());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_StopSound> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_StopSound() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_StopSound(CSVCMsg_StopSound other) : this() {
    _hasBits0 = other._hasBits0;
    guid_ = other.guid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_StopSound Clone() {
    return new CSVCMsg_StopSound(this);
  }

  /// <summary>Field number for the "guid" field.</summary>
  public const int GuidFieldNumber = 1;
  private readonly static uint GuidDefaultValue = 0;

  private uint guid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Guid {
    get { if ((_hasBits0 & 1) != 0) { return guid_; } else { return GuidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      guid_ = value;
    }
  }
  /// <summary>Gets whether the "guid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGuid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "guid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGuid() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_StopSound);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_StopSound other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Guid != other.Guid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasGuid) hash ^= Guid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasGuid) {
      output.WriteRawTag(13);
      output.WriteFixed32(Guid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasGuid) {
      output.WriteRawTag(13);
      output.WriteFixed32(Guid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasGuid) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_StopSound other) {
    if (other == null) {
      return;
    }
    if (other.HasGuid) {
      Guid = other.Guid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Guid = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Guid = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CBidirMsg_RebroadcastGameEvent : pb::IMessage<CBidirMsg_RebroadcastGameEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CBidirMsg_RebroadcastGameEvent> _parser = new pb::MessageParser<CBidirMsg_RebroadcastGameEvent>(() => new CBidirMsg_RebroadcastGameEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CBidirMsg_RebroadcastGameEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastGameEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastGameEvent(CBidirMsg_RebroadcastGameEvent other) : this() {
    _hasBits0 = other._hasBits0;
    posttoserver_ = other.posttoserver_;
    buftype_ = other.buftype_;
    clientbitcount_ = other.clientbitcount_;
    receivingclients_ = other.receivingclients_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastGameEvent Clone() {
    return new CBidirMsg_RebroadcastGameEvent(this);
  }

  /// <summary>Field number for the "posttoserver" field.</summary>
  public const int PosttoserverFieldNumber = 1;
  private readonly static bool PosttoserverDefaultValue = false;

  private bool posttoserver_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Posttoserver {
    get { if ((_hasBits0 & 1) != 0) { return posttoserver_; } else { return PosttoserverDefaultValue; } }
    set {
      _hasBits0 |= 1;
      posttoserver_ = value;
    }
  }
  /// <summary>Gets whether the "posttoserver" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPosttoserver {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "posttoserver" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPosttoserver() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "buftype" field.</summary>
  public const int BuftypeFieldNumber = 2;
  private readonly static int BuftypeDefaultValue = 0;

  private int buftype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Buftype {
    get { if ((_hasBits0 & 2) != 0) { return buftype_; } else { return BuftypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      buftype_ = value;
    }
  }
  /// <summary>Gets whether the "buftype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBuftype {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "buftype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBuftype() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "clientbitcount" field.</summary>
  public const int ClientbitcountFieldNumber = 3;
  private readonly static uint ClientbitcountDefaultValue = 0;

  private uint clientbitcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Clientbitcount {
    get { if ((_hasBits0 & 4) != 0) { return clientbitcount_; } else { return ClientbitcountDefaultValue; } }
    set {
      _hasBits0 |= 4;
      clientbitcount_ = value;
    }
  }
  /// <summary>Gets whether the "clientbitcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientbitcount {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "clientbitcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientbitcount() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "receivingclients" field.</summary>
  public const int ReceivingclientsFieldNumber = 4;
  private readonly static ulong ReceivingclientsDefaultValue = 0UL;

  private ulong receivingclients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Receivingclients {
    get { if ((_hasBits0 & 8) != 0) { return receivingclients_; } else { return ReceivingclientsDefaultValue; } }
    set {
      _hasBits0 |= 8;
      receivingclients_ = value;
    }
  }
  /// <summary>Gets whether the "receivingclients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReceivingclients {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "receivingclients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReceivingclients() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CBidirMsg_RebroadcastGameEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CBidirMsg_RebroadcastGameEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Posttoserver != other.Posttoserver) return false;
    if (Buftype != other.Buftype) return false;
    if (Clientbitcount != other.Clientbitcount) return false;
    if (Receivingclients != other.Receivingclients) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPosttoserver) hash ^= Posttoserver.GetHashCode();
    if (HasBuftype) hash ^= Buftype.GetHashCode();
    if (HasClientbitcount) hash ^= Clientbitcount.GetHashCode();
    if (HasReceivingclients) hash ^= Receivingclients.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPosttoserver) {
      output.WriteRawTag(8);
      output.WriteBool(Posttoserver);
    }
    if (HasBuftype) {
      output.WriteRawTag(16);
      output.WriteInt32(Buftype);
    }
    if (HasClientbitcount) {
      output.WriteRawTag(24);
      output.WriteUInt32(Clientbitcount);
    }
    if (HasReceivingclients) {
      output.WriteRawTag(32);
      output.WriteUInt64(Receivingclients);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPosttoserver) {
      output.WriteRawTag(8);
      output.WriteBool(Posttoserver);
    }
    if (HasBuftype) {
      output.WriteRawTag(16);
      output.WriteInt32(Buftype);
    }
    if (HasClientbitcount) {
      output.WriteRawTag(24);
      output.WriteUInt32(Clientbitcount);
    }
    if (HasReceivingclients) {
      output.WriteRawTag(32);
      output.WriteUInt64(Receivingclients);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPosttoserver) {
      size += 1 + 1;
    }
    if (HasBuftype) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Buftype);
    }
    if (HasClientbitcount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Clientbitcount);
    }
    if (HasReceivingclients) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Receivingclients);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CBidirMsg_RebroadcastGameEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasPosttoserver) {
      Posttoserver = other.Posttoserver;
    }
    if (other.HasBuftype) {
      Buftype = other.Buftype;
    }
    if (other.HasClientbitcount) {
      Clientbitcount = other.Clientbitcount;
    }
    if (other.HasReceivingclients) {
      Receivingclients = other.Receivingclients;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Posttoserver = input.ReadBool();
          break;
        }
        case 16: {
          Buftype = input.ReadInt32();
          break;
        }
        case 24: {
          Clientbitcount = input.ReadUInt32();
          break;
        }
        case 32: {
          Receivingclients = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Posttoserver = input.ReadBool();
          break;
        }
        case 16: {
          Buftype = input.ReadInt32();
          break;
        }
        case 24: {
          Clientbitcount = input.ReadUInt32();
          break;
        }
        case 32: {
          Receivingclients = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CBidirMsg_RebroadcastSource : pb::IMessage<CBidirMsg_RebroadcastSource>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CBidirMsg_RebroadcastSource> _parser = new pb::MessageParser<CBidirMsg_RebroadcastSource>(() => new CBidirMsg_RebroadcastSource());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CBidirMsg_RebroadcastSource> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastSource() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastSource(CBidirMsg_RebroadcastSource other) : this() {
    _hasBits0 = other._hasBits0;
    eventsource_ = other.eventsource_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CBidirMsg_RebroadcastSource Clone() {
    return new CBidirMsg_RebroadcastSource(this);
  }

  /// <summary>Field number for the "eventsource" field.</summary>
  public const int EventsourceFieldNumber = 1;
  private readonly static int EventsourceDefaultValue = 0;

  private int eventsource_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eventsource {
    get { if ((_hasBits0 & 1) != 0) { return eventsource_; } else { return EventsourceDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventsource_ = value;
    }
  }
  /// <summary>Gets whether the "eventsource" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventsource {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventsource" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventsource() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CBidirMsg_RebroadcastSource);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CBidirMsg_RebroadcastSource other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Eventsource != other.Eventsource) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventsource) hash ^= Eventsource.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventsource) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventsource);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventsource) {
      output.WriteRawTag(8);
      output.WriteInt32(Eventsource);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventsource) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventsource);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CBidirMsg_RebroadcastSource other) {
    if (other == null) {
      return;
    }
    if (other.HasEventsource) {
      Eventsource = other.Eventsource;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Eventsource = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Eventsource = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgServerNetworkStats : pb::IMessage<CMsgServerNetworkStats>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgServerNetworkStats> _parser = new pb::MessageParser<CMsgServerNetworkStats>(() => new CMsgServerNetworkStats());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgServerNetworkStats> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerNetworkStats() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerNetworkStats(CMsgServerNetworkStats other) : this() {
    _hasBits0 = other._hasBits0;
    dedicated_ = other.dedicated_;
    cpuUsage_ = other.cpuUsage_;
    memoryUsedMb_ = other.memoryUsedMb_;
    memoryFreeMb_ = other.memoryFreeMb_;
    uptime_ = other.uptime_;
    spawnCount_ = other.spawnCount_;
    numClients_ = other.numClients_;
    numBots_ = other.numBots_;
    numSpectators_ = other.numSpectators_;
    numTvRelays_ = other.numTvRelays_;
    fps_ = other.fps_;
    ports_ = other.ports_.Clone();
    avgPingMs_ = other.avgPingMs_;
    avgEngineLatencyOut_ = other.avgEngineLatencyOut_;
    avgPacketsOut_ = other.avgPacketsOut_;
    avgPacketsIn_ = other.avgPacketsIn_;
    avgLossOut_ = other.avgLossOut_;
    avgLossIn_ = other.avgLossIn_;
    avgDataOut_ = other.avgDataOut_;
    avgDataIn_ = other.avgDataIn_;
    totalDataIn_ = other.totalDataIn_;
    totalPacketsIn_ = other.totalPacketsIn_;
    totalDataOut_ = other.totalDataOut_;
    totalPacketsOut_ = other.totalPacketsOut_;
    players_ = other.players_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerNetworkStats Clone() {
    return new CMsgServerNetworkStats(this);
  }

  /// <summary>Field number for the "dedicated" field.</summary>
  public const int DedicatedFieldNumber = 1;
  private readonly static bool DedicatedDefaultValue = false;

  private bool dedicated_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Dedicated {
    get { if ((_hasBits0 & 1) != 0) { return dedicated_; } else { return DedicatedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      dedicated_ = value;
    }
  }
  /// <summary>Gets whether the "dedicated" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDedicated {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "dedicated" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDedicated() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "cpu_usage" field.</summary>
  public const int CpuUsageFieldNumber = 2;
  private readonly static int CpuUsageDefaultValue = 0;

  private int cpuUsage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CpuUsage {
    get { if ((_hasBits0 & 2) != 0) { return cpuUsage_; } else { return CpuUsageDefaultValue; } }
    set {
      _hasBits0 |= 2;
      cpuUsage_ = value;
    }
  }
  /// <summary>Gets whether the "cpu_usage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCpuUsage {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "cpu_usage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCpuUsage() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "memory_used_mb" field.</summary>
  public const int MemoryUsedMbFieldNumber = 3;
  private readonly static int MemoryUsedMbDefaultValue = 0;

  private int memoryUsedMb_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MemoryUsedMb {
    get { if ((_hasBits0 & 4) != 0) { return memoryUsedMb_; } else { return MemoryUsedMbDefaultValue; } }
    set {
      _hasBits0 |= 4;
      memoryUsedMb_ = value;
    }
  }
  /// <summary>Gets whether the "memory_used_mb" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMemoryUsedMb {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "memory_used_mb" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMemoryUsedMb() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "memory_free_mb" field.</summary>
  public const int MemoryFreeMbFieldNumber = 4;
  private readonly static int MemoryFreeMbDefaultValue = 0;

  private int memoryFreeMb_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MemoryFreeMb {
    get { if ((_hasBits0 & 8) != 0) { return memoryFreeMb_; } else { return MemoryFreeMbDefaultValue; } }
    set {
      _hasBits0 |= 8;
      memoryFreeMb_ = value;
    }
  }
  /// <summary>Gets whether the "memory_free_mb" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMemoryFreeMb {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "memory_free_mb" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMemoryFreeMb() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "uptime" field.</summary>
  public const int UptimeFieldNumber = 5;
  private readonly static int UptimeDefaultValue = 0;

  private int uptime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Uptime {
    get { if ((_hasBits0 & 16) != 0) { return uptime_; } else { return UptimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      uptime_ = value;
    }
  }
  /// <summary>Gets whether the "uptime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUptime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "uptime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUptime() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "spawn_count" field.</summary>
  public const int SpawnCountFieldNumber = 6;
  private readonly static int SpawnCountDefaultValue = 0;

  private int spawnCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int SpawnCount {
    get { if ((_hasBits0 & 32) != 0) { return spawnCount_; } else { return SpawnCountDefaultValue; } }
    set {
      _hasBits0 |= 32;
      spawnCount_ = value;
    }
  }
  /// <summary>Gets whether the "spawn_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawnCount {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "spawn_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawnCount() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "num_clients" field.</summary>
  public const int NumClientsFieldNumber = 8;
  private readonly static int NumClientsDefaultValue = 0;

  private int numClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumClients {
    get { if ((_hasBits0 & 64) != 0) { return numClients_; } else { return NumClientsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      numClients_ = value;
    }
  }
  /// <summary>Gets whether the "num_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumClients {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "num_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumClients() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "num_bots" field.</summary>
  public const int NumBotsFieldNumber = 9;
  private readonly static int NumBotsDefaultValue = 0;

  private int numBots_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumBots {
    get { if ((_hasBits0 & 128) != 0) { return numBots_; } else { return NumBotsDefaultValue; } }
    set {
      _hasBits0 |= 128;
      numBots_ = value;
    }
  }
  /// <summary>Gets whether the "num_bots" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumBots {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "num_bots" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumBots() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "num_spectators" field.</summary>
  public const int NumSpectatorsFieldNumber = 10;
  private readonly static int NumSpectatorsDefaultValue = 0;

  private int numSpectators_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumSpectators {
    get { if ((_hasBits0 & 256) != 0) { return numSpectators_; } else { return NumSpectatorsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      numSpectators_ = value;
    }
  }
  /// <summary>Gets whether the "num_spectators" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumSpectators {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "num_spectators" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumSpectators() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "num_tv_relays" field.</summary>
  public const int NumTvRelaysFieldNumber = 11;
  private readonly static int NumTvRelaysDefaultValue = 0;

  private int numTvRelays_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int NumTvRelays {
    get { if ((_hasBits0 & 512) != 0) { return numTvRelays_; } else { return NumTvRelaysDefaultValue; } }
    set {
      _hasBits0 |= 512;
      numTvRelays_ = value;
    }
  }
  /// <summary>Gets whether the "num_tv_relays" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumTvRelays {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "num_tv_relays" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumTvRelays() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "fps" field.</summary>
  public const int FpsFieldNumber = 12;
  private readonly static float FpsDefaultValue = 0F;

  private float fps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Fps {
    get { if ((_hasBits0 & 1024) != 0) { return fps_; } else { return FpsDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      fps_ = value;
    }
  }
  /// <summary>Gets whether the "fps" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFps {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "fps" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFps() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "ports" field.</summary>
  public const int PortsFieldNumber = 17;
  private static readonly pb::FieldCodec<global::CMsgServerNetworkStats.Types.Port> _repeated_ports_codec
      = pb::FieldCodec.ForMessage(138, global::CMsgServerNetworkStats.Types.Port.Parser);
  private readonly pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Port> ports_ = new pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Port>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Port> Ports {
    get { return ports_; }
  }

  /// <summary>Field number for the "avg_ping_ms" field.</summary>
  public const int AvgPingMsFieldNumber = 18;
  private readonly static float AvgPingMsDefaultValue = 0F;

  private float avgPingMs_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgPingMs {
    get { if ((_hasBits0 & 2048) != 0) { return avgPingMs_; } else { return AvgPingMsDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      avgPingMs_ = value;
    }
  }
  /// <summary>Gets whether the "avg_ping_ms" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgPingMs {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "avg_ping_ms" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgPingMs() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "avg_engine_latency_out" field.</summary>
  public const int AvgEngineLatencyOutFieldNumber = 19;
  private readonly static float AvgEngineLatencyOutDefaultValue = 0F;

  private float avgEngineLatencyOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgEngineLatencyOut {
    get { if ((_hasBits0 & 4096) != 0) { return avgEngineLatencyOut_; } else { return AvgEngineLatencyOutDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      avgEngineLatencyOut_ = value;
    }
  }
  /// <summary>Gets whether the "avg_engine_latency_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgEngineLatencyOut {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "avg_engine_latency_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgEngineLatencyOut() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "avg_packets_out" field.</summary>
  public const int AvgPacketsOutFieldNumber = 20;
  private readonly static float AvgPacketsOutDefaultValue = 0F;

  private float avgPacketsOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgPacketsOut {
    get { if ((_hasBits0 & 8192) != 0) { return avgPacketsOut_; } else { return AvgPacketsOutDefaultValue; } }
    set {
      _hasBits0 |= 8192;
      avgPacketsOut_ = value;
    }
  }
  /// <summary>Gets whether the "avg_packets_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgPacketsOut {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "avg_packets_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgPacketsOut() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "avg_packets_in" field.</summary>
  public const int AvgPacketsInFieldNumber = 21;
  private readonly static float AvgPacketsInDefaultValue = 0F;

  private float avgPacketsIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgPacketsIn {
    get { if ((_hasBits0 & 16384) != 0) { return avgPacketsIn_; } else { return AvgPacketsInDefaultValue; } }
    set {
      _hasBits0 |= 16384;
      avgPacketsIn_ = value;
    }
  }
  /// <summary>Gets whether the "avg_packets_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgPacketsIn {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "avg_packets_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgPacketsIn() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "avg_loss_out" field.</summary>
  public const int AvgLossOutFieldNumber = 22;
  private readonly static float AvgLossOutDefaultValue = 0F;

  private float avgLossOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgLossOut {
    get { if ((_hasBits0 & 32768) != 0) { return avgLossOut_; } else { return AvgLossOutDefaultValue; } }
    set {
      _hasBits0 |= 32768;
      avgLossOut_ = value;
    }
  }
  /// <summary>Gets whether the "avg_loss_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgLossOut {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "avg_loss_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgLossOut() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "avg_loss_in" field.</summary>
  public const int AvgLossInFieldNumber = 23;
  private readonly static float AvgLossInDefaultValue = 0F;

  private float avgLossIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgLossIn {
    get { if ((_hasBits0 & 65536) != 0) { return avgLossIn_; } else { return AvgLossInDefaultValue; } }
    set {
      _hasBits0 |= 65536;
      avgLossIn_ = value;
    }
  }
  /// <summary>Gets whether the "avg_loss_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgLossIn {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "avg_loss_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgLossIn() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "avg_data_out" field.</summary>
  public const int AvgDataOutFieldNumber = 24;
  private readonly static float AvgDataOutDefaultValue = 0F;

  private float avgDataOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgDataOut {
    get { if ((_hasBits0 & 131072) != 0) { return avgDataOut_; } else { return AvgDataOutDefaultValue; } }
    set {
      _hasBits0 |= 131072;
      avgDataOut_ = value;
    }
  }
  /// <summary>Gets whether the "avg_data_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgDataOut {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "avg_data_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgDataOut() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "avg_data_in" field.</summary>
  public const int AvgDataInFieldNumber = 25;
  private readonly static float AvgDataInDefaultValue = 0F;

  private float avgDataIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float AvgDataIn {
    get { if ((_hasBits0 & 262144) != 0) { return avgDataIn_; } else { return AvgDataInDefaultValue; } }
    set {
      _hasBits0 |= 262144;
      avgDataIn_ = value;
    }
  }
  /// <summary>Gets whether the "avg_data_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAvgDataIn {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "avg_data_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAvgDataIn() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "total_data_in" field.</summary>
  public const int TotalDataInFieldNumber = 26;
  private readonly static ulong TotalDataInDefaultValue = 0UL;

  private ulong totalDataIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TotalDataIn {
    get { if ((_hasBits0 & 524288) != 0) { return totalDataIn_; } else { return TotalDataInDefaultValue; } }
    set {
      _hasBits0 |= 524288;
      totalDataIn_ = value;
    }
  }
  /// <summary>Gets whether the "total_data_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalDataIn {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "total_data_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalDataIn() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "total_packets_in" field.</summary>
  public const int TotalPacketsInFieldNumber = 27;
  private readonly static ulong TotalPacketsInDefaultValue = 0UL;

  private ulong totalPacketsIn_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TotalPacketsIn {
    get { if ((_hasBits0 & 1048576) != 0) { return totalPacketsIn_; } else { return TotalPacketsInDefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      totalPacketsIn_ = value;
    }
  }
  /// <summary>Gets whether the "total_packets_in" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalPacketsIn {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "total_packets_in" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalPacketsIn() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "total_data_out" field.</summary>
  public const int TotalDataOutFieldNumber = 28;
  private readonly static ulong TotalDataOutDefaultValue = 0UL;

  private ulong totalDataOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TotalDataOut {
    get { if ((_hasBits0 & 2097152) != 0) { return totalDataOut_; } else { return TotalDataOutDefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      totalDataOut_ = value;
    }
  }
  /// <summary>Gets whether the "total_data_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalDataOut {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "total_data_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalDataOut() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "total_packets_out" field.</summary>
  public const int TotalPacketsOutFieldNumber = 29;
  private readonly static ulong TotalPacketsOutDefaultValue = 0UL;

  private ulong totalPacketsOut_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong TotalPacketsOut {
    get { if ((_hasBits0 & 4194304) != 0) { return totalPacketsOut_; } else { return TotalPacketsOutDefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      totalPacketsOut_ = value;
    }
  }
  /// <summary>Gets whether the "total_packets_out" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTotalPacketsOut {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "total_packets_out" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTotalPacketsOut() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 30;
  private static readonly pb::FieldCodec<global::CMsgServerNetworkStats.Types.Player> _repeated_players_codec
      = pb::FieldCodec.ForMessage(242, global::CMsgServerNetworkStats.Types.Player.Parser);
  private readonly pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Player> players_ = new pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Player>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgServerNetworkStats.Types.Player> Players {
    get { return players_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgServerNetworkStats);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgServerNetworkStats other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Dedicated != other.Dedicated) return false;
    if (CpuUsage != other.CpuUsage) return false;
    if (MemoryUsedMb != other.MemoryUsedMb) return false;
    if (MemoryFreeMb != other.MemoryFreeMb) return false;
    if (Uptime != other.Uptime) return false;
    if (SpawnCount != other.SpawnCount) return false;
    if (NumClients != other.NumClients) return false;
    if (NumBots != other.NumBots) return false;
    if (NumSpectators != other.NumSpectators) return false;
    if (NumTvRelays != other.NumTvRelays) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Fps, other.Fps)) return false;
    if(!ports_.Equals(other.ports_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgPingMs, other.AvgPingMs)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgEngineLatencyOut, other.AvgEngineLatencyOut)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgPacketsOut, other.AvgPacketsOut)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgPacketsIn, other.AvgPacketsIn)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgLossOut, other.AvgLossOut)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgLossIn, other.AvgLossIn)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgDataOut, other.AvgDataOut)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AvgDataIn, other.AvgDataIn)) return false;
    if (TotalDataIn != other.TotalDataIn) return false;
    if (TotalPacketsIn != other.TotalPacketsIn) return false;
    if (TotalDataOut != other.TotalDataOut) return false;
    if (TotalPacketsOut != other.TotalPacketsOut) return false;
    if(!players_.Equals(other.players_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDedicated) hash ^= Dedicated.GetHashCode();
    if (HasCpuUsage) hash ^= CpuUsage.GetHashCode();
    if (HasMemoryUsedMb) hash ^= MemoryUsedMb.GetHashCode();
    if (HasMemoryFreeMb) hash ^= MemoryFreeMb.GetHashCode();
    if (HasUptime) hash ^= Uptime.GetHashCode();
    if (HasSpawnCount) hash ^= SpawnCount.GetHashCode();
    if (HasNumClients) hash ^= NumClients.GetHashCode();
    if (HasNumBots) hash ^= NumBots.GetHashCode();
    if (HasNumSpectators) hash ^= NumSpectators.GetHashCode();
    if (HasNumTvRelays) hash ^= NumTvRelays.GetHashCode();
    if (HasFps) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Fps);
    hash ^= ports_.GetHashCode();
    if (HasAvgPingMs) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgPingMs);
    if (HasAvgEngineLatencyOut) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgEngineLatencyOut);
    if (HasAvgPacketsOut) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgPacketsOut);
    if (HasAvgPacketsIn) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgPacketsIn);
    if (HasAvgLossOut) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgLossOut);
    if (HasAvgLossIn) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgLossIn);
    if (HasAvgDataOut) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgDataOut);
    if (HasAvgDataIn) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AvgDataIn);
    if (HasTotalDataIn) hash ^= TotalDataIn.GetHashCode();
    if (HasTotalPacketsIn) hash ^= TotalPacketsIn.GetHashCode();
    if (HasTotalDataOut) hash ^= TotalDataOut.GetHashCode();
    if (HasTotalPacketsOut) hash ^= TotalPacketsOut.GetHashCode();
    hash ^= players_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDedicated) {
      output.WriteRawTag(8);
      output.WriteBool(Dedicated);
    }
    if (HasCpuUsage) {
      output.WriteRawTag(16);
      output.WriteInt32(CpuUsage);
    }
    if (HasMemoryUsedMb) {
      output.WriteRawTag(24);
      output.WriteInt32(MemoryUsedMb);
    }
    if (HasMemoryFreeMb) {
      output.WriteRawTag(32);
      output.WriteInt32(MemoryFreeMb);
    }
    if (HasUptime) {
      output.WriteRawTag(40);
      output.WriteInt32(Uptime);
    }
    if (HasSpawnCount) {
      output.WriteRawTag(48);
      output.WriteInt32(SpawnCount);
    }
    if (HasNumClients) {
      output.WriteRawTag(64);
      output.WriteInt32(NumClients);
    }
    if (HasNumBots) {
      output.WriteRawTag(72);
      output.WriteInt32(NumBots);
    }
    if (HasNumSpectators) {
      output.WriteRawTag(80);
      output.WriteInt32(NumSpectators);
    }
    if (HasNumTvRelays) {
      output.WriteRawTag(88);
      output.WriteInt32(NumTvRelays);
    }
    if (HasFps) {
      output.WriteRawTag(101);
      output.WriteFloat(Fps);
    }
    ports_.WriteTo(output, _repeated_ports_codec);
    if (HasAvgPingMs) {
      output.WriteRawTag(149, 1);
      output.WriteFloat(AvgPingMs);
    }
    if (HasAvgEngineLatencyOut) {
      output.WriteRawTag(157, 1);
      output.WriteFloat(AvgEngineLatencyOut);
    }
    if (HasAvgPacketsOut) {
      output.WriteRawTag(165, 1);
      output.WriteFloat(AvgPacketsOut);
    }
    if (HasAvgPacketsIn) {
      output.WriteRawTag(173, 1);
      output.WriteFloat(AvgPacketsIn);
    }
    if (HasAvgLossOut) {
      output.WriteRawTag(181, 1);
      output.WriteFloat(AvgLossOut);
    }
    if (HasAvgLossIn) {
      output.WriteRawTag(189, 1);
      output.WriteFloat(AvgLossIn);
    }
    if (HasAvgDataOut) {
      output.WriteRawTag(197, 1);
      output.WriteFloat(AvgDataOut);
    }
    if (HasAvgDataIn) {
      output.WriteRawTag(205, 1);
      output.WriteFloat(AvgDataIn);
    }
    if (HasTotalDataIn) {
      output.WriteRawTag(208, 1);
      output.WriteUInt64(TotalDataIn);
    }
    if (HasTotalPacketsIn) {
      output.WriteRawTag(216, 1);
      output.WriteUInt64(TotalPacketsIn);
    }
    if (HasTotalDataOut) {
      output.WriteRawTag(224, 1);
      output.WriteUInt64(TotalDataOut);
    }
    if (HasTotalPacketsOut) {
      output.WriteRawTag(232, 1);
      output.WriteUInt64(TotalPacketsOut);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDedicated) {
      output.WriteRawTag(8);
      output.WriteBool(Dedicated);
    }
    if (HasCpuUsage) {
      output.WriteRawTag(16);
      output.WriteInt32(CpuUsage);
    }
    if (HasMemoryUsedMb) {
      output.WriteRawTag(24);
      output.WriteInt32(MemoryUsedMb);
    }
    if (HasMemoryFreeMb) {
      output.WriteRawTag(32);
      output.WriteInt32(MemoryFreeMb);
    }
    if (HasUptime) {
      output.WriteRawTag(40);
      output.WriteInt32(Uptime);
    }
    if (HasSpawnCount) {
      output.WriteRawTag(48);
      output.WriteInt32(SpawnCount);
    }
    if (HasNumClients) {
      output.WriteRawTag(64);
      output.WriteInt32(NumClients);
    }
    if (HasNumBots) {
      output.WriteRawTag(72);
      output.WriteInt32(NumBots);
    }
    if (HasNumSpectators) {
      output.WriteRawTag(80);
      output.WriteInt32(NumSpectators);
    }
    if (HasNumTvRelays) {
      output.WriteRawTag(88);
      output.WriteInt32(NumTvRelays);
    }
    if (HasFps) {
      output.WriteRawTag(101);
      output.WriteFloat(Fps);
    }
    ports_.WriteTo(ref output, _repeated_ports_codec);
    if (HasAvgPingMs) {
      output.WriteRawTag(149, 1);
      output.WriteFloat(AvgPingMs);
    }
    if (HasAvgEngineLatencyOut) {
      output.WriteRawTag(157, 1);
      output.WriteFloat(AvgEngineLatencyOut);
    }
    if (HasAvgPacketsOut) {
      output.WriteRawTag(165, 1);
      output.WriteFloat(AvgPacketsOut);
    }
    if (HasAvgPacketsIn) {
      output.WriteRawTag(173, 1);
      output.WriteFloat(AvgPacketsIn);
    }
    if (HasAvgLossOut) {
      output.WriteRawTag(181, 1);
      output.WriteFloat(AvgLossOut);
    }
    if (HasAvgLossIn) {
      output.WriteRawTag(189, 1);
      output.WriteFloat(AvgLossIn);
    }
    if (HasAvgDataOut) {
      output.WriteRawTag(197, 1);
      output.WriteFloat(AvgDataOut);
    }
    if (HasAvgDataIn) {
      output.WriteRawTag(205, 1);
      output.WriteFloat(AvgDataIn);
    }
    if (HasTotalDataIn) {
      output.WriteRawTag(208, 1);
      output.WriteUInt64(TotalDataIn);
    }
    if (HasTotalPacketsIn) {
      output.WriteRawTag(216, 1);
      output.WriteUInt64(TotalPacketsIn);
    }
    if (HasTotalDataOut) {
      output.WriteRawTag(224, 1);
      output.WriteUInt64(TotalDataOut);
    }
    if (HasTotalPacketsOut) {
      output.WriteRawTag(232, 1);
      output.WriteUInt64(TotalPacketsOut);
    }
    players_.WriteTo(ref output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDedicated) {
      size += 1 + 1;
    }
    if (HasCpuUsage) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpuUsage);
    }
    if (HasMemoryUsedMb) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemoryUsedMb);
    }
    if (HasMemoryFreeMb) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemoryFreeMb);
    }
    if (HasUptime) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uptime);
    }
    if (HasSpawnCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnCount);
    }
    if (HasNumClients) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumClients);
    }
    if (HasNumBots) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumBots);
    }
    if (HasNumSpectators) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumSpectators);
    }
    if (HasNumTvRelays) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTvRelays);
    }
    if (HasFps) {
      size += 1 + 4;
    }
    size += ports_.CalculateSize(_repeated_ports_codec);
    if (HasAvgPingMs) {
      size += 2 + 4;
    }
    if (HasAvgEngineLatencyOut) {
      size += 2 + 4;
    }
    if (HasAvgPacketsOut) {
      size += 2 + 4;
    }
    if (HasAvgPacketsIn) {
      size += 2 + 4;
    }
    if (HasAvgLossOut) {
      size += 2 + 4;
    }
    if (HasAvgLossIn) {
      size += 2 + 4;
    }
    if (HasAvgDataOut) {
      size += 2 + 4;
    }
    if (HasAvgDataIn) {
      size += 2 + 4;
    }
    if (HasTotalDataIn) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TotalDataIn);
    }
    if (HasTotalPacketsIn) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TotalPacketsIn);
    }
    if (HasTotalDataOut) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TotalDataOut);
    }
    if (HasTotalPacketsOut) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(TotalPacketsOut);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgServerNetworkStats other) {
    if (other == null) {
      return;
    }
    if (other.HasDedicated) {
      Dedicated = other.Dedicated;
    }
    if (other.HasCpuUsage) {
      CpuUsage = other.CpuUsage;
    }
    if (other.HasMemoryUsedMb) {
      MemoryUsedMb = other.MemoryUsedMb;
    }
    if (other.HasMemoryFreeMb) {
      MemoryFreeMb = other.MemoryFreeMb;
    }
    if (other.HasUptime) {
      Uptime = other.Uptime;
    }
    if (other.HasSpawnCount) {
      SpawnCount = other.SpawnCount;
    }
    if (other.HasNumClients) {
      NumClients = other.NumClients;
    }
    if (other.HasNumBots) {
      NumBots = other.NumBots;
    }
    if (other.HasNumSpectators) {
      NumSpectators = other.NumSpectators;
    }
    if (other.HasNumTvRelays) {
      NumTvRelays = other.NumTvRelays;
    }
    if (other.HasFps) {
      Fps = other.Fps;
    }
    ports_.Add(other.ports_);
    if (other.HasAvgPingMs) {
      AvgPingMs = other.AvgPingMs;
    }
    if (other.HasAvgEngineLatencyOut) {
      AvgEngineLatencyOut = other.AvgEngineLatencyOut;
    }
    if (other.HasAvgPacketsOut) {
      AvgPacketsOut = other.AvgPacketsOut;
    }
    if (other.HasAvgPacketsIn) {
      AvgPacketsIn = other.AvgPacketsIn;
    }
    if (other.HasAvgLossOut) {
      AvgLossOut = other.AvgLossOut;
    }
    if (other.HasAvgLossIn) {
      AvgLossIn = other.AvgLossIn;
    }
    if (other.HasAvgDataOut) {
      AvgDataOut = other.AvgDataOut;
    }
    if (other.HasAvgDataIn) {
      AvgDataIn = other.AvgDataIn;
    }
    if (other.HasTotalDataIn) {
      TotalDataIn = other.TotalDataIn;
    }
    if (other.HasTotalPacketsIn) {
      TotalPacketsIn = other.TotalPacketsIn;
    }
    if (other.HasTotalDataOut) {
      TotalDataOut = other.TotalDataOut;
    }
    if (other.HasTotalPacketsOut) {
      TotalPacketsOut = other.TotalPacketsOut;
    }
    players_.Add(other.players_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Dedicated = input.ReadBool();
          break;
        }
        case 16: {
          CpuUsage = input.ReadInt32();
          break;
        }
        case 24: {
          MemoryUsedMb = input.ReadInt32();
          break;
        }
        case 32: {
          MemoryFreeMb = input.ReadInt32();
          break;
        }
        case 40: {
          Uptime = input.ReadInt32();
          break;
        }
        case 48: {
          SpawnCount = input.ReadInt32();
          break;
        }
        case 64: {
          NumClients = input.ReadInt32();
          break;
        }
        case 72: {
          NumBots = input.ReadInt32();
          break;
        }
        case 80: {
          NumSpectators = input.ReadInt32();
          break;
        }
        case 88: {
          NumTvRelays = input.ReadInt32();
          break;
        }
        case 101: {
          Fps = input.ReadFloat();
          break;
        }
        case 138: {
          ports_.AddEntriesFrom(input, _repeated_ports_codec);
          break;
        }
        case 149: {
          AvgPingMs = input.ReadFloat();
          break;
        }
        case 157: {
          AvgEngineLatencyOut = input.ReadFloat();
          break;
        }
        case 165: {
          AvgPacketsOut = input.ReadFloat();
          break;
        }
        case 173: {
          AvgPacketsIn = input.ReadFloat();
          break;
        }
        case 181: {
          AvgLossOut = input.ReadFloat();
          break;
        }
        case 189: {
          AvgLossIn = input.ReadFloat();
          break;
        }
        case 197: {
          AvgDataOut = input.ReadFloat();
          break;
        }
        case 205: {
          AvgDataIn = input.ReadFloat();
          break;
        }
        case 208: {
          TotalDataIn = input.ReadUInt64();
          break;
        }
        case 216: {
          TotalPacketsIn = input.ReadUInt64();
          break;
        }
        case 224: {
          TotalDataOut = input.ReadUInt64();
          break;
        }
        case 232: {
          TotalPacketsOut = input.ReadUInt64();
          break;
        }
        case 242: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Dedicated = input.ReadBool();
          break;
        }
        case 16: {
          CpuUsage = input.ReadInt32();
          break;
        }
        case 24: {
          MemoryUsedMb = input.ReadInt32();
          break;
        }
        case 32: {
          MemoryFreeMb = input.ReadInt32();
          break;
        }
        case 40: {
          Uptime = input.ReadInt32();
          break;
        }
        case 48: {
          SpawnCount = input.ReadInt32();
          break;
        }
        case 64: {
          NumClients = input.ReadInt32();
          break;
        }
        case 72: {
          NumBots = input.ReadInt32();
          break;
        }
        case 80: {
          NumSpectators = input.ReadInt32();
          break;
        }
        case 88: {
          NumTvRelays = input.ReadInt32();
          break;
        }
        case 101: {
          Fps = input.ReadFloat();
          break;
        }
        case 138: {
          ports_.AddEntriesFrom(ref input, _repeated_ports_codec);
          break;
        }
        case 149: {
          AvgPingMs = input.ReadFloat();
          break;
        }
        case 157: {
          AvgEngineLatencyOut = input.ReadFloat();
          break;
        }
        case 165: {
          AvgPacketsOut = input.ReadFloat();
          break;
        }
        case 173: {
          AvgPacketsIn = input.ReadFloat();
          break;
        }
        case 181: {
          AvgLossOut = input.ReadFloat();
          break;
        }
        case 189: {
          AvgLossIn = input.ReadFloat();
          break;
        }
        case 197: {
          AvgDataOut = input.ReadFloat();
          break;
        }
        case 205: {
          AvgDataIn = input.ReadFloat();
          break;
        }
        case 208: {
          TotalDataIn = input.ReadUInt64();
          break;
        }
        case 216: {
          TotalPacketsIn = input.ReadUInt64();
          break;
        }
        case 224: {
          TotalDataOut = input.ReadUInt64();
          break;
        }
        case 232: {
          TotalPacketsOut = input.ReadUInt64();
          break;
        }
        case 242: {
          players_.AddEntriesFrom(ref input, _repeated_players_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgServerNetworkStats message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Port : pb::IMessage<Port>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Port> _parser = new pb::MessageParser<Port>(() => new Port());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Port> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgServerNetworkStats.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Port() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Port(Port other) : this() {
        _hasBits0 = other._hasBits0;
        port_ = other.port_;
        name_ = other.name_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Port Clone() {
        return new Port(this);
      }

      /// <summary>Field number for the "port" field.</summary>
      public const int Port_FieldNumber = 1;
      private readonly static int Port_DefaultValue = 0;

      private int port_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Port_ {
        get { if ((_hasBits0 & 1) != 0) { return port_; } else { return Port_DefaultValue; } }
        set {
          _hasBits0 |= 1;
          port_ = value;
        }
      }
      /// <summary>Gets whether the "port" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPort_ {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "port" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPort_() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 2;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Port);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Port other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Port_ != other.Port_) return false;
        if (Name != other.Name) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasPort_) hash ^= Port_.GetHashCode();
        if (HasName) hash ^= Name.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasPort_) {
          output.WriteRawTag(8);
          output.WriteInt32(Port_);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasPort_) {
          output.WriteRawTag(8);
          output.WriteInt32(Port_);
        }
        if (HasName) {
          output.WriteRawTag(18);
          output.WriteString(Name);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasPort_) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port_);
        }
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Port other) {
        if (other == null) {
          return;
        }
        if (other.HasPort_) {
          Port_ = other.Port_;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Port_ = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Port_ = input.ReadInt32();
              break;
            }
            case 18: {
              Name = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class Player : pb::IMessage<Player>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<Player> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgServerNetworkStats.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player(Player other) : this() {
        _hasBits0 = other._hasBits0;
        steamid_ = other.steamid_;
        remoteAddr_ = other.remoteAddr_;
        pingAvgMs_ = other.pingAvgMs_;
        packetLossPct_ = other.packetLossPct_;
        isBot_ = other.isBot_;
        lossIn_ = other.lossIn_;
        lossOut_ = other.lossOut_;
        engineLatencyMs_ = other.engineLatencyMs_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public Player Clone() {
        return new Player(this);
      }

      /// <summary>Field number for the "steamid" field.</summary>
      public const int SteamidFieldNumber = 1;
      private readonly static ulong SteamidDefaultValue = 0UL;

      private ulong steamid_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong Steamid {
        get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
        set {
          _hasBits0 |= 1;
          steamid_ = value;
        }
      }
      /// <summary>Gets whether the "steamid" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSteamid {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "steamid" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSteamid() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "remote_addr" field.</summary>
      public const int RemoteAddrFieldNumber = 2;
      private readonly static string RemoteAddrDefaultValue = "";

      private string remoteAddr_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string RemoteAddr {
        get { return remoteAddr_ ?? RemoteAddrDefaultValue; }
        set {
          remoteAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "remote_addr" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasRemoteAddr {
        get { return remoteAddr_ != null; }
      }
      /// <summary>Clears the value of the "remote_addr" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearRemoteAddr() {
        remoteAddr_ = null;
      }

      /// <summary>Field number for the "ping_avg_ms" field.</summary>
      public const int PingAvgMsFieldNumber = 4;
      private readonly static int PingAvgMsDefaultValue = 0;

      private int pingAvgMs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int PingAvgMs {
        get { if ((_hasBits0 & 2) != 0) { return pingAvgMs_; } else { return PingAvgMsDefaultValue; } }
        set {
          _hasBits0 |= 2;
          pingAvgMs_ = value;
        }
      }
      /// <summary>Gets whether the "ping_avg_ms" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPingAvgMs {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "ping_avg_ms" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPingAvgMs() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "packet_loss_pct" field.</summary>
      public const int PacketLossPctFieldNumber = 5;
      private readonly static float PacketLossPctDefaultValue = 0F;

      private float packetLossPct_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float PacketLossPct {
        get { if ((_hasBits0 & 4) != 0) { return packetLossPct_; } else { return PacketLossPctDefaultValue; } }
        set {
          _hasBits0 |= 4;
          packetLossPct_ = value;
        }
      }
      /// <summary>Gets whether the "packet_loss_pct" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasPacketLossPct {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "packet_loss_pct" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearPacketLossPct() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "is_bot" field.</summary>
      public const int IsBotFieldNumber = 6;
      private readonly static bool IsBotDefaultValue = false;

      private bool isBot_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool IsBot {
        get { if ((_hasBits0 & 8) != 0) { return isBot_; } else { return IsBotDefaultValue; } }
        set {
          _hasBits0 |= 8;
          isBot_ = value;
        }
      }
      /// <summary>Gets whether the "is_bot" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasIsBot {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "is_bot" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearIsBot() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "loss_in" field.</summary>
      public const int LossInFieldNumber = 7;
      private readonly static float LossInDefaultValue = 0F;

      private float lossIn_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float LossIn {
        get { if ((_hasBits0 & 16) != 0) { return lossIn_; } else { return LossInDefaultValue; } }
        set {
          _hasBits0 |= 16;
          lossIn_ = value;
        }
      }
      /// <summary>Gets whether the "loss_in" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLossIn {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "loss_in" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLossIn() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "loss_out" field.</summary>
      public const int LossOutFieldNumber = 8;
      private readonly static float LossOutDefaultValue = 0F;

      private float lossOut_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float LossOut {
        get { if ((_hasBits0 & 32) != 0) { return lossOut_; } else { return LossOutDefaultValue; } }
        set {
          _hasBits0 |= 32;
          lossOut_ = value;
        }
      }
      /// <summary>Gets whether the "loss_out" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasLossOut {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "loss_out" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearLossOut() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "engine_latency_ms" field.</summary>
      public const int EngineLatencyMsFieldNumber = 9;
      private readonly static int EngineLatencyMsDefaultValue = 0;

      private int engineLatencyMs_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int EngineLatencyMs {
        get { if ((_hasBits0 & 64) != 0) { return engineLatencyMs_; } else { return EngineLatencyMsDefaultValue; } }
        set {
          _hasBits0 |= 64;
          engineLatencyMs_ = value;
        }
      }
      /// <summary>Gets whether the "engine_latency_ms" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEngineLatencyMs {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "engine_latency_ms" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEngineLatencyMs() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as Player);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(Player other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Steamid != other.Steamid) return false;
        if (RemoteAddr != other.RemoteAddr) return false;
        if (PingAvgMs != other.PingAvgMs) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PacketLossPct, other.PacketLossPct)) return false;
        if (IsBot != other.IsBot) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LossIn, other.LossIn)) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LossOut, other.LossOut)) return false;
        if (EngineLatencyMs != other.EngineLatencyMs) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSteamid) hash ^= Steamid.GetHashCode();
        if (HasRemoteAddr) hash ^= RemoteAddr.GetHashCode();
        if (HasPingAvgMs) hash ^= PingAvgMs.GetHashCode();
        if (HasPacketLossPct) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PacketLossPct);
        if (HasIsBot) hash ^= IsBot.GetHashCode();
        if (HasLossIn) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LossIn);
        if (HasLossOut) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LossOut);
        if (HasEngineLatencyMs) hash ^= EngineLatencyMs.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSteamid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Steamid);
        }
        if (HasRemoteAddr) {
          output.WriteRawTag(18);
          output.WriteString(RemoteAddr);
        }
        if (HasPingAvgMs) {
          output.WriteRawTag(32);
          output.WriteInt32(PingAvgMs);
        }
        if (HasPacketLossPct) {
          output.WriteRawTag(45);
          output.WriteFloat(PacketLossPct);
        }
        if (HasIsBot) {
          output.WriteRawTag(48);
          output.WriteBool(IsBot);
        }
        if (HasLossIn) {
          output.WriteRawTag(61);
          output.WriteFloat(LossIn);
        }
        if (HasLossOut) {
          output.WriteRawTag(69);
          output.WriteFloat(LossOut);
        }
        if (HasEngineLatencyMs) {
          output.WriteRawTag(72);
          output.WriteInt32(EngineLatencyMs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSteamid) {
          output.WriteRawTag(8);
          output.WriteUInt64(Steamid);
        }
        if (HasRemoteAddr) {
          output.WriteRawTag(18);
          output.WriteString(RemoteAddr);
        }
        if (HasPingAvgMs) {
          output.WriteRawTag(32);
          output.WriteInt32(PingAvgMs);
        }
        if (HasPacketLossPct) {
          output.WriteRawTag(45);
          output.WriteFloat(PacketLossPct);
        }
        if (HasIsBot) {
          output.WriteRawTag(48);
          output.WriteBool(IsBot);
        }
        if (HasLossIn) {
          output.WriteRawTag(61);
          output.WriteFloat(LossIn);
        }
        if (HasLossOut) {
          output.WriteRawTag(69);
          output.WriteFloat(LossOut);
        }
        if (HasEngineLatencyMs) {
          output.WriteRawTag(72);
          output.WriteInt32(EngineLatencyMs);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSteamid) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
        }
        if (HasRemoteAddr) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(RemoteAddr);
        }
        if (HasPingAvgMs) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(PingAvgMs);
        }
        if (HasPacketLossPct) {
          size += 1 + 4;
        }
        if (HasIsBot) {
          size += 1 + 1;
        }
        if (HasLossIn) {
          size += 1 + 4;
        }
        if (HasLossOut) {
          size += 1 + 4;
        }
        if (HasEngineLatencyMs) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(EngineLatencyMs);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(Player other) {
        if (other == null) {
          return;
        }
        if (other.HasSteamid) {
          Steamid = other.Steamid;
        }
        if (other.HasRemoteAddr) {
          RemoteAddr = other.RemoteAddr;
        }
        if (other.HasPingAvgMs) {
          PingAvgMs = other.PingAvgMs;
        }
        if (other.HasPacketLossPct) {
          PacketLossPct = other.PacketLossPct;
        }
        if (other.HasIsBot) {
          IsBot = other.IsBot;
        }
        if (other.HasLossIn) {
          LossIn = other.LossIn;
        }
        if (other.HasLossOut) {
          LossOut = other.LossOut;
        }
        if (other.HasEngineLatencyMs) {
          EngineLatencyMs = other.EngineLatencyMs;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Steamid = input.ReadUInt64();
              break;
            }
            case 18: {
              RemoteAddr = input.ReadString();
              break;
            }
            case 32: {
              PingAvgMs = input.ReadInt32();
              break;
            }
            case 45: {
              PacketLossPct = input.ReadFloat();
              break;
            }
            case 48: {
              IsBot = input.ReadBool();
              break;
            }
            case 61: {
              LossIn = input.ReadFloat();
              break;
            }
            case 69: {
              LossOut = input.ReadFloat();
              break;
            }
            case 72: {
              EngineLatencyMs = input.ReadInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Steamid = input.ReadUInt64();
              break;
            }
            case 18: {
              RemoteAddr = input.ReadString();
              break;
            }
            case 32: {
              PingAvgMs = input.ReadInt32();
              break;
            }
            case 45: {
              PacketLossPct = input.ReadFloat();
              break;
            }
            case 48: {
              IsBot = input.ReadBool();
              break;
            }
            case 61: {
              LossIn = input.ReadFloat();
              break;
            }
            case 69: {
              LossOut = input.ReadFloat();
              break;
            }
            case 72: {
              EngineLatencyMs = input.ReadInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_HltvReplay : pb::IMessage<CSVCMsg_HltvReplay>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_HltvReplay> _parser = new pb::MessageParser<CSVCMsg_HltvReplay>(() => new CSVCMsg_HltvReplay());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_HltvReplay> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvReplay() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvReplay(CSVCMsg_HltvReplay other) : this() {
    _hasBits0 = other._hasBits0;
    delay_ = other.delay_;
    primaryTarget_ = other.primaryTarget_;
    replayStopAt_ = other.replayStopAt_;
    replayStartAt_ = other.replayStartAt_;
    replaySlowdownBegin_ = other.replaySlowdownBegin_;
    replaySlowdownEnd_ = other.replaySlowdownEnd_;
    replaySlowdownRate_ = other.replaySlowdownRate_;
    reason_ = other.reason_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvReplay Clone() {
    return new CSVCMsg_HltvReplay(this);
  }

  /// <summary>Field number for the "delay" field.</summary>
  public const int DelayFieldNumber = 1;
  private readonly static int DelayDefaultValue = 0;

  private int delay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Delay {
    get { if ((_hasBits0 & 1) != 0) { return delay_; } else { return DelayDefaultValue; } }
    set {
      _hasBits0 |= 1;
      delay_ = value;
    }
  }
  /// <summary>Gets whether the "delay" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDelay {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "delay" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDelay() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "primary_target" field.</summary>
  public const int PrimaryTargetFieldNumber = 2;
  private readonly static int PrimaryTargetDefaultValue = -1;

  private int primaryTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PrimaryTarget {
    get { if ((_hasBits0 & 2) != 0) { return primaryTarget_; } else { return PrimaryTargetDefaultValue; } }
    set {
      _hasBits0 |= 2;
      primaryTarget_ = value;
    }
  }
  /// <summary>Gets whether the "primary_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrimaryTarget {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "primary_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrimaryTarget() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "replay_stop_at" field.</summary>
  public const int ReplayStopAtFieldNumber = 3;
  private readonly static int ReplayStopAtDefaultValue = 0;

  private int replayStopAt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReplayStopAt {
    get { if ((_hasBits0 & 4) != 0) { return replayStopAt_; } else { return ReplayStopAtDefaultValue; } }
    set {
      _hasBits0 |= 4;
      replayStopAt_ = value;
    }
  }
  /// <summary>Gets whether the "replay_stop_at" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReplayStopAt {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "replay_stop_at" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReplayStopAt() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "replay_start_at" field.</summary>
  public const int ReplayStartAtFieldNumber = 4;
  private readonly static int ReplayStartAtDefaultValue = 0;

  private int replayStartAt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReplayStartAt {
    get { if ((_hasBits0 & 8) != 0) { return replayStartAt_; } else { return ReplayStartAtDefaultValue; } }
    set {
      _hasBits0 |= 8;
      replayStartAt_ = value;
    }
  }
  /// <summary>Gets whether the "replay_start_at" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReplayStartAt {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "replay_start_at" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReplayStartAt() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "replay_slowdown_begin" field.</summary>
  public const int ReplaySlowdownBeginFieldNumber = 5;
  private readonly static int ReplaySlowdownBeginDefaultValue = 0;

  private int replaySlowdownBegin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReplaySlowdownBegin {
    get { if ((_hasBits0 & 16) != 0) { return replaySlowdownBegin_; } else { return ReplaySlowdownBeginDefaultValue; } }
    set {
      _hasBits0 |= 16;
      replaySlowdownBegin_ = value;
    }
  }
  /// <summary>Gets whether the "replay_slowdown_begin" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReplaySlowdownBegin {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "replay_slowdown_begin" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReplaySlowdownBegin() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "replay_slowdown_end" field.</summary>
  public const int ReplaySlowdownEndFieldNumber = 6;
  private readonly static int ReplaySlowdownEndDefaultValue = 0;

  private int replaySlowdownEnd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ReplaySlowdownEnd {
    get { if ((_hasBits0 & 32) != 0) { return replaySlowdownEnd_; } else { return ReplaySlowdownEndDefaultValue; } }
    set {
      _hasBits0 |= 32;
      replaySlowdownEnd_ = value;
    }
  }
  /// <summary>Gets whether the "replay_slowdown_end" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReplaySlowdownEnd {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "replay_slowdown_end" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReplaySlowdownEnd() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "replay_slowdown_rate" field.</summary>
  public const int ReplaySlowdownRateFieldNumber = 7;
  private readonly static float ReplaySlowdownRateDefaultValue = 0F;

  private float replaySlowdownRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float ReplaySlowdownRate {
    get { if ((_hasBits0 & 64) != 0) { return replaySlowdownRate_; } else { return ReplaySlowdownRateDefaultValue; } }
    set {
      _hasBits0 |= 64;
      replaySlowdownRate_ = value;
    }
  }
  /// <summary>Gets whether the "replay_slowdown_rate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReplaySlowdownRate {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "replay_slowdown_rate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReplaySlowdownRate() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "reason" field.</summary>
  public const int ReasonFieldNumber = 8;
  private readonly static int ReasonDefaultValue = 0;

  private int reason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Reason {
    get { if ((_hasBits0 & 128) != 0) { return reason_; } else { return ReasonDefaultValue; } }
    set {
      _hasBits0 |= 128;
      reason_ = value;
    }
  }
  /// <summary>Gets whether the "reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasReason {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearReason() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_HltvReplay);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_HltvReplay other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Delay != other.Delay) return false;
    if (PrimaryTarget != other.PrimaryTarget) return false;
    if (ReplayStopAt != other.ReplayStopAt) return false;
    if (ReplayStartAt != other.ReplayStartAt) return false;
    if (ReplaySlowdownBegin != other.ReplaySlowdownBegin) return false;
    if (ReplaySlowdownEnd != other.ReplaySlowdownEnd) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ReplaySlowdownRate, other.ReplaySlowdownRate)) return false;
    if (Reason != other.Reason) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasDelay) hash ^= Delay.GetHashCode();
    if (HasPrimaryTarget) hash ^= PrimaryTarget.GetHashCode();
    if (HasReplayStopAt) hash ^= ReplayStopAt.GetHashCode();
    if (HasReplayStartAt) hash ^= ReplayStartAt.GetHashCode();
    if (HasReplaySlowdownBegin) hash ^= ReplaySlowdownBegin.GetHashCode();
    if (HasReplaySlowdownEnd) hash ^= ReplaySlowdownEnd.GetHashCode();
    if (HasReplaySlowdownRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ReplaySlowdownRate);
    if (HasReason) hash ^= Reason.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasDelay) {
      output.WriteRawTag(8);
      output.WriteInt32(Delay);
    }
    if (HasPrimaryTarget) {
      output.WriteRawTag(16);
      output.WriteInt32(PrimaryTarget);
    }
    if (HasReplayStopAt) {
      output.WriteRawTag(24);
      output.WriteInt32(ReplayStopAt);
    }
    if (HasReplayStartAt) {
      output.WriteRawTag(32);
      output.WriteInt32(ReplayStartAt);
    }
    if (HasReplaySlowdownBegin) {
      output.WriteRawTag(40);
      output.WriteInt32(ReplaySlowdownBegin);
    }
    if (HasReplaySlowdownEnd) {
      output.WriteRawTag(48);
      output.WriteInt32(ReplaySlowdownEnd);
    }
    if (HasReplaySlowdownRate) {
      output.WriteRawTag(61);
      output.WriteFloat(ReplaySlowdownRate);
    }
    if (HasReason) {
      output.WriteRawTag(64);
      output.WriteInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasDelay) {
      output.WriteRawTag(8);
      output.WriteInt32(Delay);
    }
    if (HasPrimaryTarget) {
      output.WriteRawTag(16);
      output.WriteInt32(PrimaryTarget);
    }
    if (HasReplayStopAt) {
      output.WriteRawTag(24);
      output.WriteInt32(ReplayStopAt);
    }
    if (HasReplayStartAt) {
      output.WriteRawTag(32);
      output.WriteInt32(ReplayStartAt);
    }
    if (HasReplaySlowdownBegin) {
      output.WriteRawTag(40);
      output.WriteInt32(ReplaySlowdownBegin);
    }
    if (HasReplaySlowdownEnd) {
      output.WriteRawTag(48);
      output.WriteInt32(ReplaySlowdownEnd);
    }
    if (HasReplaySlowdownRate) {
      output.WriteRawTag(61);
      output.WriteFloat(ReplaySlowdownRate);
    }
    if (HasReason) {
      output.WriteRawTag(64);
      output.WriteInt32(Reason);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasDelay) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Delay);
    }
    if (HasPrimaryTarget) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrimaryTarget);
    }
    if (HasReplayStopAt) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplayStopAt);
    }
    if (HasReplayStartAt) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplayStartAt);
    }
    if (HasReplaySlowdownBegin) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplaySlowdownBegin);
    }
    if (HasReplaySlowdownEnd) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplaySlowdownEnd);
    }
    if (HasReplaySlowdownRate) {
      size += 1 + 4;
    }
    if (HasReason) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Reason);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_HltvReplay other) {
    if (other == null) {
      return;
    }
    if (other.HasDelay) {
      Delay = other.Delay;
    }
    if (other.HasPrimaryTarget) {
      PrimaryTarget = other.PrimaryTarget;
    }
    if (other.HasReplayStopAt) {
      ReplayStopAt = other.ReplayStopAt;
    }
    if (other.HasReplayStartAt) {
      ReplayStartAt = other.ReplayStartAt;
    }
    if (other.HasReplaySlowdownBegin) {
      ReplaySlowdownBegin = other.ReplaySlowdownBegin;
    }
    if (other.HasReplaySlowdownEnd) {
      ReplaySlowdownEnd = other.ReplaySlowdownEnd;
    }
    if (other.HasReplaySlowdownRate) {
      ReplaySlowdownRate = other.ReplaySlowdownRate;
    }
    if (other.HasReason) {
      Reason = other.Reason;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Delay = input.ReadInt32();
          break;
        }
        case 16: {
          PrimaryTarget = input.ReadInt32();
          break;
        }
        case 24: {
          ReplayStopAt = input.ReadInt32();
          break;
        }
        case 32: {
          ReplayStartAt = input.ReadInt32();
          break;
        }
        case 40: {
          ReplaySlowdownBegin = input.ReadInt32();
          break;
        }
        case 48: {
          ReplaySlowdownEnd = input.ReadInt32();
          break;
        }
        case 61: {
          ReplaySlowdownRate = input.ReadFloat();
          break;
        }
        case 64: {
          Reason = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Delay = input.ReadInt32();
          break;
        }
        case 16: {
          PrimaryTarget = input.ReadInt32();
          break;
        }
        case 24: {
          ReplayStopAt = input.ReadInt32();
          break;
        }
        case 32: {
          ReplayStartAt = input.ReadInt32();
          break;
        }
        case 40: {
          ReplaySlowdownBegin = input.ReadInt32();
          break;
        }
        case 48: {
          ReplaySlowdownEnd = input.ReadInt32();
          break;
        }
        case 61: {
          ReplaySlowdownRate = input.ReadFloat();
          break;
        }
        case 64: {
          Reason = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_HltvReplay : pb::IMessage<CCLCMsg_HltvReplay>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_HltvReplay> _parser = new pb::MessageParser<CCLCMsg_HltvReplay>(() => new CCLCMsg_HltvReplay());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_HltvReplay> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvReplay() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvReplay(CCLCMsg_HltvReplay other) : this() {
    _hasBits0 = other._hasBits0;
    request_ = other.request_;
    slowdownLength_ = other.slowdownLength_;
    slowdownRate_ = other.slowdownRate_;
    primaryTarget_ = other.primaryTarget_;
    eventTime_ = other.eventTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvReplay Clone() {
    return new CCLCMsg_HltvReplay(this);
  }

  /// <summary>Field number for the "request" field.</summary>
  public const int RequestFieldNumber = 1;
  private readonly static int RequestDefaultValue = 0;

  private int request_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Request {
    get { if ((_hasBits0 & 1) != 0) { return request_; } else { return RequestDefaultValue; } }
    set {
      _hasBits0 |= 1;
      request_ = value;
    }
  }
  /// <summary>Gets whether the "request" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRequest {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "request" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRequest() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "slowdown_length" field.</summary>
  public const int SlowdownLengthFieldNumber = 2;
  private readonly static float SlowdownLengthDefaultValue = 0F;

  private float slowdownLength_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float SlowdownLength {
    get { if ((_hasBits0 & 2) != 0) { return slowdownLength_; } else { return SlowdownLengthDefaultValue; } }
    set {
      _hasBits0 |= 2;
      slowdownLength_ = value;
    }
  }
  /// <summary>Gets whether the "slowdown_length" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlowdownLength {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "slowdown_length" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlowdownLength() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "slowdown_rate" field.</summary>
  public const int SlowdownRateFieldNumber = 3;
  private readonly static float SlowdownRateDefaultValue = 0F;

  private float slowdownRate_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float SlowdownRate {
    get { if ((_hasBits0 & 4) != 0) { return slowdownRate_; } else { return SlowdownRateDefaultValue; } }
    set {
      _hasBits0 |= 4;
      slowdownRate_ = value;
    }
  }
  /// <summary>Gets whether the "slowdown_rate" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlowdownRate {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "slowdown_rate" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlowdownRate() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "primary_target" field.</summary>
  public const int PrimaryTargetFieldNumber = 4;
  private readonly static int PrimaryTargetDefaultValue = -1;

  private int primaryTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PrimaryTarget {
    get { if ((_hasBits0 & 8) != 0) { return primaryTarget_; } else { return PrimaryTargetDefaultValue; } }
    set {
      _hasBits0 |= 8;
      primaryTarget_ = value;
    }
  }
  /// <summary>Gets whether the "primary_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPrimaryTarget {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "primary_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPrimaryTarget() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "event_time" field.</summary>
  public const int EventTimeFieldNumber = 5;
  private readonly static float EventTimeDefaultValue = 0F;

  private float eventTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float EventTime {
    get { if ((_hasBits0 & 16) != 0) { return eventTime_; } else { return EventTimeDefaultValue; } }
    set {
      _hasBits0 |= 16;
      eventTime_ = value;
    }
  }
  /// <summary>Gets whether the "event_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventTime {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "event_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventTime() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_HltvReplay);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_HltvReplay other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Request != other.Request) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SlowdownLength, other.SlowdownLength)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SlowdownRate, other.SlowdownRate)) return false;
    if (PrimaryTarget != other.PrimaryTarget) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EventTime, other.EventTime)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasRequest) hash ^= Request.GetHashCode();
    if (HasSlowdownLength) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SlowdownLength);
    if (HasSlowdownRate) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SlowdownRate);
    if (HasPrimaryTarget) hash ^= PrimaryTarget.GetHashCode();
    if (HasEventTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EventTime);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasRequest) {
      output.WriteRawTag(8);
      output.WriteInt32(Request);
    }
    if (HasSlowdownLength) {
      output.WriteRawTag(21);
      output.WriteFloat(SlowdownLength);
    }
    if (HasSlowdownRate) {
      output.WriteRawTag(29);
      output.WriteFloat(SlowdownRate);
    }
    if (HasPrimaryTarget) {
      output.WriteRawTag(32);
      output.WriteInt32(PrimaryTarget);
    }
    if (HasEventTime) {
      output.WriteRawTag(45);
      output.WriteFloat(EventTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasRequest) {
      output.WriteRawTag(8);
      output.WriteInt32(Request);
    }
    if (HasSlowdownLength) {
      output.WriteRawTag(21);
      output.WriteFloat(SlowdownLength);
    }
    if (HasSlowdownRate) {
      output.WriteRawTag(29);
      output.WriteFloat(SlowdownRate);
    }
    if (HasPrimaryTarget) {
      output.WriteRawTag(32);
      output.WriteInt32(PrimaryTarget);
    }
    if (HasEventTime) {
      output.WriteRawTag(45);
      output.WriteFloat(EventTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasRequest) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Request);
    }
    if (HasSlowdownLength) {
      size += 1 + 4;
    }
    if (HasSlowdownRate) {
      size += 1 + 4;
    }
    if (HasPrimaryTarget) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrimaryTarget);
    }
    if (HasEventTime) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_HltvReplay other) {
    if (other == null) {
      return;
    }
    if (other.HasRequest) {
      Request = other.Request;
    }
    if (other.HasSlowdownLength) {
      SlowdownLength = other.SlowdownLength;
    }
    if (other.HasSlowdownRate) {
      SlowdownRate = other.SlowdownRate;
    }
    if (other.HasPrimaryTarget) {
      PrimaryTarget = other.PrimaryTarget;
    }
    if (other.HasEventTime) {
      EventTime = other.EventTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Request = input.ReadInt32();
          break;
        }
        case 21: {
          SlowdownLength = input.ReadFloat();
          break;
        }
        case 29: {
          SlowdownRate = input.ReadFloat();
          break;
        }
        case 32: {
          PrimaryTarget = input.ReadInt32();
          break;
        }
        case 45: {
          EventTime = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Request = input.ReadInt32();
          break;
        }
        case 21: {
          SlowdownLength = input.ReadFloat();
          break;
        }
        case 29: {
          SlowdownRate = input.ReadFloat();
          break;
        }
        case 32: {
          PrimaryTarget = input.ReadInt32();
          break;
        }
        case 45: {
          EventTime = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_Broadcast_Command : pb::IMessage<CSVCMsg_Broadcast_Command>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_Broadcast_Command> _parser = new pb::MessageParser<CSVCMsg_Broadcast_Command>(() => new CSVCMsg_Broadcast_Command());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_Broadcast_Command> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Broadcast_Command() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Broadcast_Command(CSVCMsg_Broadcast_Command other) : this() {
    cmd_ = other.cmd_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_Broadcast_Command Clone() {
    return new CSVCMsg_Broadcast_Command(this);
  }

  /// <summary>Field number for the "cmd" field.</summary>
  public const int CmdFieldNumber = 1;
  private readonly static string CmdDefaultValue = "";

  private string cmd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Cmd {
    get { return cmd_ ?? CmdDefaultValue; }
    set {
      cmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "cmd" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmd {
    get { return cmd_ != null; }
  }
  /// <summary>Clears the value of the "cmd" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmd() {
    cmd_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_Broadcast_Command);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_Broadcast_Command other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Cmd != other.Cmd) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCmd) hash ^= Cmd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCmd) {
      output.WriteRawTag(10);
      output.WriteString(Cmd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCmd) {
      output.WriteRawTag(10);
      output.WriteString(Cmd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCmd) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Cmd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_Broadcast_Command other) {
    if (other == null) {
      return;
    }
    if (other.HasCmd) {
      Cmd = other.Cmd;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Cmd = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Cmd = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CCLCMsg_HltvFixupOperatorTick : pb::IMessage<CCLCMsg_HltvFixupOperatorTick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CCLCMsg_HltvFixupOperatorTick> _parser = new pb::MessageParser<CCLCMsg_HltvFixupOperatorTick>(() => new CCLCMsg_HltvFixupOperatorTick());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CCLCMsg_HltvFixupOperatorTick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvFixupOperatorTick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvFixupOperatorTick(CCLCMsg_HltvFixupOperatorTick other) : this() {
    _hasBits0 = other._hasBits0;
    tick_ = other.tick_;
    propsData_ = other.propsData_;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    eyeAngles_ = other.eyeAngles_ != null ? other.eyeAngles_.Clone() : null;
    observerMode_ = other.observerMode_;
    cameramanScoreboard_ = other.cameramanScoreboard_;
    observerTarget_ = other.observerTarget_;
    viewOffset_ = other.viewOffset_ != null ? other.viewOffset_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CCLCMsg_HltvFixupOperatorTick Clone() {
    return new CCLCMsg_HltvFixupOperatorTick(this);
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 1;
  private readonly static int TickDefaultValue = 0;

  private int tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tick {
    get { if ((_hasBits0 & 1) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "props_data" field.</summary>
  public const int PropsDataFieldNumber = 2;
  private readonly static pb::ByteString PropsDataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString propsData_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString PropsData {
    get { return propsData_ ?? PropsDataDefaultValue; }
    set {
      propsData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "props_data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPropsData {
    get { return propsData_ != null; }
  }
  /// <summary>Clears the value of the "props_data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPropsData() {
    propsData_ = null;
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 3;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "eye_angles" field.</summary>
  public const int EyeAnglesFieldNumber = 4;
  private global::CMsgQAngle eyeAngles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle EyeAngles {
    get { return eyeAngles_; }
    set {
      eyeAngles_ = value;
    }
  }

  /// <summary>Field number for the "observer_mode" field.</summary>
  public const int ObserverModeFieldNumber = 5;
  private readonly static int ObserverModeDefaultValue = 0;

  private int observerMode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ObserverMode {
    get { if ((_hasBits0 & 2) != 0) { return observerMode_; } else { return ObserverModeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      observerMode_ = value;
    }
  }
  /// <summary>Gets whether the "observer_mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasObserverMode {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "observer_mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearObserverMode() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "cameraman_scoreboard" field.</summary>
  public const int CameramanScoreboardFieldNumber = 6;
  private readonly static bool CameramanScoreboardDefaultValue = false;

  private bool cameramanScoreboard_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool CameramanScoreboard {
    get { if ((_hasBits0 & 4) != 0) { return cameramanScoreboard_; } else { return CameramanScoreboardDefaultValue; } }
    set {
      _hasBits0 |= 4;
      cameramanScoreboard_ = value;
    }
  }
  /// <summary>Gets whether the "cameraman_scoreboard" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCameramanScoreboard {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "cameraman_scoreboard" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCameramanScoreboard() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "observer_target" field.</summary>
  public const int ObserverTargetFieldNumber = 7;
  private readonly static int ObserverTargetDefaultValue = 0;

  private int observerTarget_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ObserverTarget {
    get { if ((_hasBits0 & 8) != 0) { return observerTarget_; } else { return ObserverTargetDefaultValue; } }
    set {
      _hasBits0 |= 8;
      observerTarget_ = value;
    }
  }
  /// <summary>Gets whether the "observer_target" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasObserverTarget {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "observer_target" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearObserverTarget() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "view_offset" field.</summary>
  public const int ViewOffsetFieldNumber = 8;
  private global::CMsgVector viewOffset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector ViewOffset {
    get { return viewOffset_; }
    set {
      viewOffset_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CCLCMsg_HltvFixupOperatorTick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CCLCMsg_HltvFixupOperatorTick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Tick != other.Tick) return false;
    if (PropsData != other.PropsData) return false;
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(EyeAngles, other.EyeAngles)) return false;
    if (ObserverMode != other.ObserverMode) return false;
    if (CameramanScoreboard != other.CameramanScoreboard) return false;
    if (ObserverTarget != other.ObserverTarget) return false;
    if (!object.Equals(ViewOffset, other.ViewOffset)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTick) hash ^= Tick.GetHashCode();
    if (HasPropsData) hash ^= PropsData.GetHashCode();
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (eyeAngles_ != null) hash ^= EyeAngles.GetHashCode();
    if (HasObserverMode) hash ^= ObserverMode.GetHashCode();
    if (HasCameramanScoreboard) hash ^= CameramanScoreboard.GetHashCode();
    if (HasObserverTarget) hash ^= ObserverTarget.GetHashCode();
    if (viewOffset_ != null) hash ^= ViewOffset.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasPropsData) {
      output.WriteRawTag(18);
      output.WriteBytes(PropsData);
    }
    if (origin_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Origin);
    }
    if (eyeAngles_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(EyeAngles);
    }
    if (HasObserverMode) {
      output.WriteRawTag(40);
      output.WriteInt32(ObserverMode);
    }
    if (HasCameramanScoreboard) {
      output.WriteRawTag(48);
      output.WriteBool(CameramanScoreboard);
    }
    if (HasObserverTarget) {
      output.WriteRawTag(56);
      output.WriteInt32(ObserverTarget);
    }
    if (viewOffset_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(ViewOffset);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteInt32(Tick);
    }
    if (HasPropsData) {
      output.WriteRawTag(18);
      output.WriteBytes(PropsData);
    }
    if (origin_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Origin);
    }
    if (eyeAngles_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(EyeAngles);
    }
    if (HasObserverMode) {
      output.WriteRawTag(40);
      output.WriteInt32(ObserverMode);
    }
    if (HasCameramanScoreboard) {
      output.WriteRawTag(48);
      output.WriteBool(CameramanScoreboard);
    }
    if (HasObserverTarget) {
      output.WriteRawTag(56);
      output.WriteInt32(ObserverTarget);
    }
    if (viewOffset_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(ViewOffset);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
    }
    if (HasPropsData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(PropsData);
    }
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (eyeAngles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(EyeAngles);
    }
    if (HasObserverMode) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObserverMode);
    }
    if (HasCameramanScoreboard) {
      size += 1 + 1;
    }
    if (HasObserverTarget) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObserverTarget);
    }
    if (viewOffset_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ViewOffset);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CCLCMsg_HltvFixupOperatorTick other) {
    if (other == null) {
      return;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    if (other.HasPropsData) {
      PropsData = other.PropsData;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.eyeAngles_ != null) {
      if (eyeAngles_ == null) {
        EyeAngles = new global::CMsgQAngle();
      }
      EyeAngles.MergeFrom(other.EyeAngles);
    }
    if (other.HasObserverMode) {
      ObserverMode = other.ObserverMode;
    }
    if (other.HasCameramanScoreboard) {
      CameramanScoreboard = other.CameramanScoreboard;
    }
    if (other.HasObserverTarget) {
      ObserverTarget = other.ObserverTarget;
    }
    if (other.viewOffset_ != null) {
      if (viewOffset_ == null) {
        ViewOffset = new global::CMsgVector();
      }
      ViewOffset.MergeFrom(other.ViewOffset);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 18: {
          PropsData = input.ReadBytes();
          break;
        }
        case 26: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 34: {
          if (eyeAngles_ == null) {
            EyeAngles = new global::CMsgQAngle();
          }
          input.ReadMessage(EyeAngles);
          break;
        }
        case 40: {
          ObserverMode = input.ReadInt32();
          break;
        }
        case 48: {
          CameramanScoreboard = input.ReadBool();
          break;
        }
        case 56: {
          ObserverTarget = input.ReadInt32();
          break;
        }
        case 66: {
          if (viewOffset_ == null) {
            ViewOffset = new global::CMsgVector();
          }
          input.ReadMessage(ViewOffset);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Tick = input.ReadInt32();
          break;
        }
        case 18: {
          PropsData = input.ReadBytes();
          break;
        }
        case 26: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 34: {
          if (eyeAngles_ == null) {
            EyeAngles = new global::CMsgQAngle();
          }
          input.ReadMessage(EyeAngles);
          break;
        }
        case 40: {
          ObserverMode = input.ReadInt32();
          break;
        }
        case 48: {
          CameramanScoreboard = input.ReadBool();
          break;
        }
        case 56: {
          ObserverTarget = input.ReadInt32();
          break;
        }
        case 66: {
          if (viewOffset_ == null) {
            ViewOffset = new global::CMsgVector();
          }
          input.ReadMessage(ViewOffset);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_HltvFixupOperatorStatus : pb::IMessage<CSVCMsg_HltvFixupOperatorStatus>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_HltvFixupOperatorStatus> _parser = new pb::MessageParser<CSVCMsg_HltvFixupOperatorStatus>(() => new CSVCMsg_HltvFixupOperatorStatus());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_HltvFixupOperatorStatus> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvFixupOperatorStatus() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvFixupOperatorStatus(CSVCMsg_HltvFixupOperatorStatus other) : this() {
    _hasBits0 = other._hasBits0;
    mode_ = other.mode_;
    overrideOperatorName_ = other.overrideOperatorName_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_HltvFixupOperatorStatus Clone() {
    return new CSVCMsg_HltvFixupOperatorStatus(this);
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 1;
  private readonly static uint ModeDefaultValue = 0;

  private uint mode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Mode {
    get { if ((_hasBits0 & 1) != 0) { return mode_; } else { return ModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      mode_ = value;
    }
  }
  /// <summary>Gets whether the "mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "override_operator_name" field.</summary>
  public const int OverrideOperatorNameFieldNumber = 2;
  private readonly static string OverrideOperatorNameDefaultValue = "";

  private string overrideOperatorName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string OverrideOperatorName {
    get { return overrideOperatorName_ ?? OverrideOperatorNameDefaultValue; }
    set {
      overrideOperatorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "override_operator_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOverrideOperatorName {
    get { return overrideOperatorName_ != null; }
  }
  /// <summary>Clears the value of the "override_operator_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOverrideOperatorName() {
    overrideOperatorName_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_HltvFixupOperatorStatus);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_HltvFixupOperatorStatus other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mode != other.Mode) return false;
    if (OverrideOperatorName != other.OverrideOperatorName) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMode) hash ^= Mode.GetHashCode();
    if (HasOverrideOperatorName) hash ^= OverrideOperatorName.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (HasOverrideOperatorName) {
      output.WriteRawTag(18);
      output.WriteString(OverrideOperatorName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (HasOverrideOperatorName) {
      output.WriteRawTag(18);
      output.WriteString(OverrideOperatorName);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (HasOverrideOperatorName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OverrideOperatorName);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_HltvFixupOperatorStatus other) {
    if (other == null) {
      return;
    }
    if (other.HasMode) {
      Mode = other.Mode;
    }
    if (other.HasOverrideOperatorName) {
      OverrideOperatorName = other.OverrideOperatorName;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 18: {
          OverrideOperatorName = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 18: {
          OverrideOperatorName = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgServerUserCmd : pb::IMessage<CMsgServerUserCmd>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgServerUserCmd> _parser = new pb::MessageParser<CMsgServerUserCmd>(() => new CMsgServerUserCmd());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgServerUserCmd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerUserCmd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerUserCmd(CMsgServerUserCmd other) : this() {
    _hasBits0 = other._hasBits0;
    data_ = other.data_;
    cmdNumber_ = other.cmdNumber_;
    playerSlot_ = other.playerSlot_;
    serverTickExecuted_ = other.serverTickExecuted_;
    clientTick_ = other.clientTick_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerUserCmd Clone() {
    return new CMsgServerUserCmd(this);
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 1;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  /// <summary>Field number for the "cmd_number" field.</summary>
  public const int CmdNumberFieldNumber = 2;
  private readonly static int CmdNumberDefaultValue = 0;

  private int cmdNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CmdNumber {
    get { if ((_hasBits0 & 1) != 0) { return cmdNumber_; } else { return CmdNumberDefaultValue; } }
    set {
      _hasBits0 |= 1;
      cmdNumber_ = value;
    }
  }
  /// <summary>Gets whether the "cmd_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCmdNumber {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "cmd_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCmdNumber() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "player_slot" field.</summary>
  public const int PlayerSlotFieldNumber = 3;
  private readonly static int PlayerSlotDefaultValue = -1;

  private int playerSlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int PlayerSlot {
    get { if ((_hasBits0 & 2) != 0) { return playerSlot_; } else { return PlayerSlotDefaultValue; } }
    set {
      _hasBits0 |= 2;
      playerSlot_ = value;
    }
  }
  /// <summary>Gets whether the "player_slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayerSlot {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "player_slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayerSlot() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "server_tick_executed" field.</summary>
  public const int ServerTickExecutedFieldNumber = 4;
  private readonly static int ServerTickExecutedDefaultValue = 0;

  private int serverTickExecuted_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ServerTickExecuted {
    get { if ((_hasBits0 & 4) != 0) { return serverTickExecuted_; } else { return ServerTickExecutedDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serverTickExecuted_ = value;
    }
  }
  /// <summary>Gets whether the "server_tick_executed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerTickExecuted {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "server_tick_executed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerTickExecuted() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "client_tick" field.</summary>
  public const int ClientTickFieldNumber = 5;
  private readonly static int ClientTickDefaultValue = 0;

  private int clientTick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ClientTick {
    get { if ((_hasBits0 & 8) != 0) { return clientTick_; } else { return ClientTickDefaultValue; } }
    set {
      _hasBits0 |= 8;
      clientTick_ = value;
    }
  }
  /// <summary>Gets whether the "client_tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasClientTick {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "client_tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearClientTick() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgServerUserCmd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgServerUserCmd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Data != other.Data) return false;
    if (CmdNumber != other.CmdNumber) return false;
    if (PlayerSlot != other.PlayerSlot) return false;
    if (ServerTickExecuted != other.ServerTickExecuted) return false;
    if (ClientTick != other.ClientTick) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasData) hash ^= Data.GetHashCode();
    if (HasCmdNumber) hash ^= CmdNumber.GetHashCode();
    if (HasPlayerSlot) hash ^= PlayerSlot.GetHashCode();
    if (HasServerTickExecuted) hash ^= ServerTickExecuted.GetHashCode();
    if (HasClientTick) hash ^= ClientTick.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (HasCmdNumber) {
      output.WriteRawTag(16);
      output.WriteInt32(CmdNumber);
    }
    if (HasPlayerSlot) {
      output.WriteRawTag(24);
      output.WriteInt32(PlayerSlot);
    }
    if (HasServerTickExecuted) {
      output.WriteRawTag(32);
      output.WriteInt32(ServerTickExecuted);
    }
    if (HasClientTick) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientTick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasData) {
      output.WriteRawTag(10);
      output.WriteBytes(Data);
    }
    if (HasCmdNumber) {
      output.WriteRawTag(16);
      output.WriteInt32(CmdNumber);
    }
    if (HasPlayerSlot) {
      output.WriteRawTag(24);
      output.WriteInt32(PlayerSlot);
    }
    if (HasServerTickExecuted) {
      output.WriteRawTag(32);
      output.WriteInt32(ServerTickExecuted);
    }
    if (HasClientTick) {
      output.WriteRawTag(40);
      output.WriteInt32(ClientTick);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (HasCmdNumber) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(CmdNumber);
    }
    if (HasPlayerSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
    }
    if (HasServerTickExecuted) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ServerTickExecuted);
    }
    if (HasClientTick) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientTick);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgServerUserCmd other) {
    if (other == null) {
      return;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    if (other.HasCmdNumber) {
      CmdNumber = other.CmdNumber;
    }
    if (other.HasPlayerSlot) {
      PlayerSlot = other.PlayerSlot;
    }
    if (other.HasServerTickExecuted) {
      ServerTickExecuted = other.ServerTickExecuted;
    }
    if (other.HasClientTick) {
      ClientTick = other.ClientTick;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
        case 16: {
          CmdNumber = input.ReadInt32();
          break;
        }
        case 24: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 32: {
          ServerTickExecuted = input.ReadInt32();
          break;
        }
        case 40: {
          ClientTick = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Data = input.ReadBytes();
          break;
        }
        case 16: {
          CmdNumber = input.ReadInt32();
          break;
        }
        case 24: {
          PlayerSlot = input.ReadInt32();
          break;
        }
        case 32: {
          ServerTickExecuted = input.ReadInt32();
          break;
        }
        case 40: {
          ClientTick = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_UserCommands : pb::IMessage<CSVCMsg_UserCommands>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_UserCommands> _parser = new pb::MessageParser<CSVCMsg_UserCommands>(() => new CSVCMsg_UserCommands());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_UserCommands> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetmessagesReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserCommands() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserCommands(CSVCMsg_UserCommands other) : this() {
    commands_ = other.commands_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_UserCommands Clone() {
    return new CSVCMsg_UserCommands(this);
  }

  /// <summary>Field number for the "commands" field.</summary>
  public const int CommandsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsgServerUserCmd> _repeated_commands_codec
      = pb::FieldCodec.ForMessage(10, global::CMsgServerUserCmd.Parser);
  private readonly pbc::RepeatedField<global::CMsgServerUserCmd> commands_ = new pbc::RepeatedField<global::CMsgServerUserCmd>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgServerUserCmd> Commands {
    get { return commands_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_UserCommands);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_UserCommands other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!commands_.Equals(other.commands_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= commands_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    commands_.WriteTo(output, _repeated_commands_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    commands_.WriteTo(ref output, _repeated_commands_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += commands_.CalculateSize(_repeated_commands_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_UserCommands other) {
    if (other == null) {
      return;
    }
    commands_.Add(other.commands_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          commands_.AddEntriesFrom(input, _repeated_commands_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          commands_.AddEntriesFrom(ref input, _repeated_commands_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
