// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: networkbasetypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from networkbasetypes.proto</summary>
public static partial class NetworkbasetypesReflection {

  #region Descriptor
  /// <summary>File descriptor for networkbasetypes.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NetworkbasetypesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZuZXR3b3JrYmFzZXR5cGVzLnByb3RvIjgKCkNNc2dWZWN0b3ISCQoBeBgB",
          "IAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAISCQoBdxgEIAEoAiIkCgxDTXNn",
          "VmVjdG9yMkQSCQoBeBgBIAEoAhIJCgF5GAIgASgCIi0KCkNNc2dRQW5nbGUS",
          "CQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiPAoOQ01zZ1F1YXRl",
          "cm5pb24SCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAISCQoBdxgE",
          "IAEoAiJjCg1DTXNnVHJhbnNmb3JtEh0KCHBvc2l0aW9uGAEgASgLMgsuQ01z",
          "Z1ZlY3RvchINCgVzY2FsZRgCIAEoAhIkCgtvcmllbnRhdGlvbhgDIAEoCzIP",
          "LkNNc2dRdWF0ZXJuaW9uIjYKCENNc2dSR0JBEgkKAXIYASABKAUSCQoBZxgC",
          "IAEoBRIJCgFiGAMgASgFEgkKAWEYBCABKAUicQoOQ01zZ1BsYXllckluZm8S",
          "DAoEbmFtZRgBIAEoCRIMCgR4dWlkGAIgASgGEg4KBnVzZXJpZBgDIAEoBRIP",
          "CgdzdGVhbWlkGAQgASgGEhIKCmZha2VwbGF5ZXIYBSABKAgSDgoGaXNobHR2",
          "GAYgASgIIi0KCkNFbnRpdHlNc2cSHwoNdGFyZ2V0X2VudGl0eRgBIAEoDToI",
          "MTY3NzcyMTUiUgoKQ01zZ19DVmFycxIfCgVjdmFycxgBIAMoCzIQLkNNc2df",
          "Q1ZhcnMuQ1ZhchojCgRDVmFyEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiAB",
          "KAkiDQoLQ05FVE1zZ19OT1AiJwoXQ05FVE1zZ19TcGxpdFNjcmVlblVzZXIS",
          "DAoEc2xvdBgBIAEoBSLvAgoMQ05FVE1zZ19UaWNrEgwKBHRpY2sYASABKA0S",
          "FgoOaG9zdF9mcmFtZXRpbWUYAiABKA0SJAocaG9zdF9mcmFtZXRpbWVfc3Rk",
          "X2RldmlhdGlvbhgDIAEoDRIcChRob3N0X2NvbXB1dGF0aW9udGltZRgEIAEo",
          "DRIqCiJob3N0X2NvbXB1dGF0aW9udGltZV9zdGRfZGV2aWF0aW9uGAUgASgN",
          "EikKIWhvc3RfZnJhbWVzdGFydHRpbWVfc3RkX2RldmlhdGlvbhgGIAEoDRIR",
          "Cglob3N0X2xvc3MYByABKA0SIQoZaG9zdF91bmZpbHRlcmVkX2ZyYW1ldGlt",
          "ZRgIIAEoDRIZChFobHR2X3JlcGxheV9mbGFncxgJIAEoDRIaChJleHBlY3Rl",
          "ZF9sb25nX3RpY2sYCiABKA0SIQoZZXhwZWN0ZWRfbG9uZ190aWNrX3JlYXNv",
          "bhgLIAEoCRIOCgZqaXR0ZXIYDCABKA0iPQoRQ05FVE1zZ19TdHJpbmdDbWQS",
          "DwoHY29tbWFuZBgBIAEoCRIXCg9wcmVkaWN0aW9uX3N5bmMYAiABKA0iMQoR",
          "Q05FVE1zZ19TZXRDb25WYXISHAoHY29udmFycxgBIAEoCzILLkNNc2dfQ1Zh",
          "cnMivAEKE0NORVRNc2dfU2lnbm9uU3RhdGUSNgoMc2lnbm9uX3N0YXRlGAEg",
          "ASgOMg4uU2lnbm9uU3RhdGVfdDoQU0lHTk9OU1RBVEVfTk9ORRITCgtzcGF3",
          "bl9jb3VudBgCIAEoDRIaChJudW1fc2VydmVyX3BsYXllcnMYAyABKA0SGgoS",
          "cGxheWVyc19uZXR3b3JraWRzGAQgAygJEhAKCG1hcF9uYW1lGAUgASgJEg4K",
          "BmFkZG9ucxgGIAEoCSL8AQoRQ1NWQ01zZ19HYW1lRXZlbnQSEgoKZXZlbnRf",
          "bmFtZRgBIAEoCRIPCgdldmVudGlkGAIgASgFEiYKBGtleXMYAyADKAsyGC5D",
          "U1ZDTXNnX0dhbWVFdmVudC5rZXlfdBqZAQoFa2V5X3QSDAoEdHlwZRgBIAEo",
          "BRISCgp2YWxfc3RyaW5nGAIgASgJEhEKCXZhbF9mbG9hdBgDIAEoAhIQCgh2",
          "YWxfbG9uZxgEIAEoBRIRCgl2YWxfc2hvcnQYBSABKAUSEAoIdmFsX2J5dGUY",
          "BiABKAUSEAoIdmFsX2Jvb2wYByABKAgSEgoKdmFsX3VpbnQ2NBgIIAEoBCKF",
          "AQoWQ1NWQ01zZ0xpc3RfR2FtZUV2ZW50cxIvCgZldmVudHMYASADKAsyHy5D",
          "U1ZDTXNnTGlzdF9HYW1lRXZlbnRzLmV2ZW50X3QaOgoHZXZlbnRfdBIMCgR0",
          "aWNrGAEgASgFEiEKBWV2ZW50GAIgASgLMhIuQ1NWQ01zZ19HYW1lRXZlbnQi",
          "qwQKF0NORVRNc2dfU3Bhd25Hcm91cF9Mb2FkEhEKCXdvcmxkbmFtZRgBIAEo",
          "CRIWCg5lbnRpdHlsdW1wbmFtZRgCIAEoCRIYChBlbnRpdHlmaWx0ZXJuYW1l",
          "GAMgASgJEhgKEHNwYXduZ3JvdXBoYW5kbGUYBCABKA0SHQoVc3Bhd25ncm91",
          "cG93bmVyaGFuZGxlGAUgASgNEiUKEHdvcmxkX29mZnNldF9wb3MYBiABKAsy",
          "Cy5DTXNnVmVjdG9yEicKEndvcmxkX29mZnNldF9hbmdsZRgHIAEoCzILLkNN",
          "c2dRQW5nbGUSGgoSc3Bhd25ncm91cG1hbmlmZXN0GAggASgMEg0KBWZsYWdz",
          "GAkgASgNEhEKCXRpY2tjb3VudBgKIAEoBRIaChJtYW5pZmVzdGluY29tcGxl",
          "dGUYCyABKAgSFgoObG9jYWxuYW1lZml4dXAYDCABKAkSFwoPcGFyZW50bmFt",
          "ZWZpeHVwGA0gASgJEhwKFG1hbmlmZXN0bG9hZHByaW9yaXR5GA4gASgFEhQK",
          "DHdvcmxkZ3JvdXBpZBgPIAEoDRIYChBjcmVhdGlvbnNlcXVlbmNlGBAgASgN",
          "EhgKEHNhdmVnYW1lZmlsZW5hbWUYESABKAkSHgoWc3Bhd25ncm91cHBhcmVu",
          "dGhhbmRsZRgSIAEoDRIXCg9sZXZlbHRyYW5zaXRpb24YEyABKAgSFgoOd29y",
          "bGRncm91cG5hbWUYFCABKAkidQohQ05FVE1zZ19TcGF3bkdyb3VwX01hbmlm",
          "ZXN0VXBkYXRlEhgKEHNwYXduZ3JvdXBoYW5kbGUYASABKA0SGgoSc3Bhd25n",
          "cm91cG1hbmlmZXN0GAIgASgMEhoKEm1hbmlmZXN0aW5jb21wbGV0ZRgDIAEo",
          "CCJrCiJDTkVUTXNnX1NwYXduR3JvdXBfU2V0Q3JlYXRpb25UaWNrEhgKEHNw",
          "YXduZ3JvdXBoYW5kbGUYASABKA0SEQoJdGlja2NvdW50GAIgASgFEhgKEGNy",
          "ZWF0aW9uc2VxdWVuY2UYAyABKA0iVwoZQ05FVE1zZ19TcGF3bkdyb3VwX1Vu",
          "bG9hZBIYChBzcGF3bmdyb3VwaGFuZGxlGAEgASgNEg0KBWZsYWdzGAIgASgN",
          "EhEKCXRpY2tjb3VudBgDIAEoBSI8CiBDTkVUTXNnX1NwYXduR3JvdXBfTG9h",
          "ZENvbXBsZXRlZBIYChBzcGF3bmdyb3VwaGFuZGxlGAEgASgNIs0DCiBDU1ZD",
          "TXNnX0dhbWVTZXNzaW9uQ29uZmlndXJhdGlvbhIWCg5pc19tdWx0aXBsYXll",
          "chgBIAEoCBIXCg9pc19sb2Fkc2F2ZWdhbWUYAiABKAgSGQoRaXNfYmFja2dy",
          "b3VuZF9tYXAYAyABKAgSEwoLaXNfaGVhZGxlc3MYBCABKAgSGAoQbWluX2Ns",
          "aWVudF9saW1pdBgFIAEoDRIYChBtYXhfY2xpZW50X2xpbWl0GAYgASgNEhMK",
          "C21heF9jbGllbnRzGAcgASgNEhUKDXRpY2tfaW50ZXJ2YWwYCCABKAcSEAoI",
          "aG9zdG5hbWUYCSABKAkSFAoMc2F2ZWdhbWVuYW1lGAogASgJEhIKCnMxX21h",
          "cG5hbWUYCyABKAkSEAoIZ2FtZW1vZGUYDCABKAkSGQoRc2VydmVyX2lwX2Fk",
          "ZHJlc3MYDSABKAkSDAoEZGF0YRgOIAEoDBIUCgxpc19sb2NhbG9ubHkYDyAB",
          "KAgSFwoPbm9fc3RlYW1fc2VydmVyGBMgASgIEhUKDWlzX3RyYW5zaXRpb24Y",
          "ECABKAgSFQoNcHJldmlvdXNsZXZlbBgRIAEoCRIUCgxsYW5kbWFya25hbWUY",
          "EiABKAkisgEKFENORVRNc2dfRGVidWdPdmVybGF5Eg0KBWV0eXBlGAEgASgF",
          "EhwKB3ZlY3RvcnMYAiADKAsyCy5DTXNnVmVjdG9yEhkKBmNvbG9ycxgDIAMo",
          "CzIJLkNNc2dSR0JBEhIKCmRpbWVuc2lvbnMYBCADKAISDQoFdGltZXMYBSAD",
          "KAISDQoFYm9vbHMYBiADKAgSDwoHdWludDY0cxgHIAMoBBIPCgdzdHJpbmdz",
          "GAggAygJKtQBCg1TaWdub25TdGF0ZV90EhQKEFNJR05PTlNUQVRFX05PTkUQ",
          "ABIZChVTSUdOT05TVEFURV9DSEFMTEVOR0UQARIZChVTSUdOT05TVEFURV9D",
          "T05ORUNURUQQAhITCg9TSUdOT05TVEFURV9ORVcQAxIYChRTSUdOT05TVEFU",
          "RV9QUkVTUEFXThAEEhUKEVNJR05PTlNUQVRFX1NQQVdOEAUSFAoQU0lHTk9O",
          "U1RBVEVfRlVMTBAGEhsKF1NJR05PTlNUQVRFX0NIQU5HRUxFVkVMEAcqywIK",
          "DE5FVF9NZXNzYWdlcxILCgduZXRfTk9QEAASGQoVbmV0X0Rpc2Nvbm5lY3Rf",
          "TGVnYWN5EAESFwoTbmV0X1NwbGl0U2NyZWVuVXNlchADEgwKCG5ldF9UaWNr",
          "EAQSEQoNbmV0X1N0cmluZ0NtZBAFEhEKDW5ldF9TZXRDb25WYXIQBhITCg9u",
          "ZXRfU2lnbm9uU3RhdGUQBxIXChNuZXRfU3Bhd25Hcm91cF9Mb2FkEAgSIQod",
          "bmV0X1NwYXduR3JvdXBfTWFuaWZlc3RVcGRhdGUQCRIiCh5uZXRfU3Bhd25H",
          "cm91cF9TZXRDcmVhdGlvblRpY2sQCxIZChVuZXRfU3Bhd25Hcm91cF9Vbmxv",
          "YWQQDBIgChxuZXRfU3Bhd25Hcm91cF9Mb2FkQ29tcGxldGVkEA0SFAoQbmV0",
          "X0RlYnVnT3ZlcmxheRAPKswCChFTcGF3bkdyb3VwRmxhZ3NfdBInCiNTUEFX",
          "Tl9HUk9VUF9MT0FEX0VOVElUSUVTX0ZST01fU0FWRRABEiMKH1NQQVdOX0dS",
          "T1VQX0RPTlRfU1BBV05fRU5USVRJRVMQAhIhCh1TUEFXTl9HUk9VUF9TWU5D",
          "SFJPTk9VU19TUEFXThAEEiYKIlNQQVdOX0dST1VQX0lTX0lOSVRJQUxfU1BB",
          "V05fR1JPVVAQCBIrCidTUEFXTl9HUk9VUF9DUkVBVEVfQ0xJRU5UX09OTFlf",
          "RU5USVRJRVMQEBIiCh5TUEFXTl9HUk9VUF9CTE9DS19VTlRJTF9MT0FERUQQ",
          "QBIkCh9TUEFXTl9HUk9VUF9MT0FEX1NUUkVBTUlOR19EQVRBEIABEicKIlNQ",
          "QVdOX0dST1VQX0NSRUFURV9ORVdfU0NFTkVfV09STEQQgAI="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SignonState_t), typeof(global::NET_Messages), typeof(global::SpawnGroupFlags_t), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgVector), global::CMsgVector.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgVector2D), global::CMsgVector2D.Parser, new[]{ "X", "Y" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgQAngle), global::CMsgQAngle.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgQuaternion), global::CMsgQuaternion.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgTransform), global::CMsgTransform.Parser, new[]{ "Position", "Scale", "Orientation" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRGBA), global::CMsgRGBA.Parser, new[]{ "R", "G", "B", "A" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgPlayerInfo), global::CMsgPlayerInfo.Parser, new[]{ "Name", "Xuid", "Userid", "Steamid", "Fakeplayer", "Ishltv" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CEntityMsg), global::CEntityMsg.Parser, new[]{ "TargetEntity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsg_CVars), global::CMsg_CVars.Parser, new[]{ "Cvars" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsg_CVars.Types.CVar), global::CMsg_CVars.Types.CVar.Parser, new[]{ "Name", "Value" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_NOP), global::CNETMsg_NOP.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SplitScreenUser), global::CNETMsg_SplitScreenUser.Parser, new[]{ "Slot" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_Tick), global::CNETMsg_Tick.Parser, new[]{ "Tick", "HostFrametime", "HostFrametimeStdDeviation", "HostComputationtime", "HostComputationtimeStdDeviation", "HostFramestarttimeStdDeviation", "HostLoss", "HostUnfilteredFrametime", "HltvReplayFlags", "ExpectedLongTick", "ExpectedLongTickReason", "Jitter" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_StringCmd), global::CNETMsg_StringCmd.Parser, new[]{ "Command", "PredictionSync" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SetConVar), global::CNETMsg_SetConVar.Parser, new[]{ "Convars" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SignonState), global::CNETMsg_SignonState.Parser, new[]{ "SignonState", "SpawnCount", "NumServerPlayers", "PlayersNetworkids", "MapName", "Addons" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameEvent), global::CSVCMsg_GameEvent.Parser, new[]{ "EventName", "Eventid", "Keys" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameEvent.Types.key_t), global::CSVCMsg_GameEvent.Types.key_t.Parser, new[]{ "Type", "ValString", "ValFloat", "ValLong", "ValShort", "ValByte", "ValBool", "ValUint64" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsgList_GameEvents), global::CSVCMsgList_GameEvents.Parser, new[]{ "Events" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsgList_GameEvents.Types.event_t), global::CSVCMsgList_GameEvents.Types.event_t.Parser, new[]{ "Tick", "Event" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SpawnGroup_Load), global::CNETMsg_SpawnGroup_Load.Parser, new[]{ "Worldname", "Entitylumpname", "Entityfiltername", "Spawngrouphandle", "Spawngroupownerhandle", "WorldOffsetPos", "WorldOffsetAngle", "Spawngroupmanifest", "Flags", "Tickcount", "Manifestincomplete", "Localnamefixup", "Parentnamefixup", "Manifestloadpriority", "Worldgroupid", "Creationsequence", "Savegamefilename", "Spawngroupparenthandle", "Leveltransition", "Worldgroupname" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SpawnGroup_ManifestUpdate), global::CNETMsg_SpawnGroup_ManifestUpdate.Parser, new[]{ "Spawngrouphandle", "Spawngroupmanifest", "Manifestincomplete" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SpawnGroup_SetCreationTick), global::CNETMsg_SpawnGroup_SetCreationTick.Parser, new[]{ "Spawngrouphandle", "Tickcount", "Creationsequence" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SpawnGroup_Unload), global::CNETMsg_SpawnGroup_Unload.Parser, new[]{ "Spawngrouphandle", "Flags", "Tickcount" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_SpawnGroup_LoadCompleted), global::CNETMsg_SpawnGroup_LoadCompleted.Parser, new[]{ "Spawngrouphandle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CSVCMsg_GameSessionConfiguration), global::CSVCMsg_GameSessionConfiguration.Parser, new[]{ "IsMultiplayer", "IsLoadsavegame", "IsBackgroundMap", "IsHeadless", "MinClientLimit", "MaxClientLimit", "MaxClients", "TickInterval", "Hostname", "Savegamename", "S1Mapname", "Gamemode", "ServerIpAddress", "Data", "IsLocalonly", "NoSteamServer", "IsTransition", "Previouslevel", "Landmarkname" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CNETMsg_DebugOverlay), global::CNETMsg_DebugOverlay.Parser, new[]{ "Etype", "Vectors", "Colors", "Dimensions", "Times", "Bools", "Uint64S", "Strings" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum SignonState_t {
  [pbr::OriginalName("SIGNONSTATE_NONE")] SignonstateNone = 0,
  [pbr::OriginalName("SIGNONSTATE_CHALLENGE")] SignonstateChallenge = 1,
  [pbr::OriginalName("SIGNONSTATE_CONNECTED")] SignonstateConnected = 2,
  [pbr::OriginalName("SIGNONSTATE_NEW")] SignonstateNew = 3,
  [pbr::OriginalName("SIGNONSTATE_PRESPAWN")] SignonstatePrespawn = 4,
  [pbr::OriginalName("SIGNONSTATE_SPAWN")] SignonstateSpawn = 5,
  [pbr::OriginalName("SIGNONSTATE_FULL")] SignonstateFull = 6,
  [pbr::OriginalName("SIGNONSTATE_CHANGELEVEL")] SignonstateChangelevel = 7,
}

public enum NET_Messages {
  [pbr::OriginalName("net_NOP")] NetNop = 0,
  [pbr::OriginalName("net_Disconnect_Legacy")] NetDisconnectLegacy = 1,
  [pbr::OriginalName("net_SplitScreenUser")] NetSplitScreenUser = 3,
  [pbr::OriginalName("net_Tick")] NetTick = 4,
  [pbr::OriginalName("net_StringCmd")] NetStringCmd = 5,
  [pbr::OriginalName("net_SetConVar")] NetSetConVar = 6,
  [pbr::OriginalName("net_SignonState")] NetSignonState = 7,
  [pbr::OriginalName("net_SpawnGroup_Load")] NetSpawnGroupLoad = 8,
  [pbr::OriginalName("net_SpawnGroup_ManifestUpdate")] NetSpawnGroupManifestUpdate = 9,
  [pbr::OriginalName("net_SpawnGroup_SetCreationTick")] NetSpawnGroupSetCreationTick = 11,
  [pbr::OriginalName("net_SpawnGroup_Unload")] NetSpawnGroupUnload = 12,
  [pbr::OriginalName("net_SpawnGroup_LoadCompleted")] NetSpawnGroupLoadCompleted = 13,
  [pbr::OriginalName("net_DebugOverlay")] NetDebugOverlay = 15,
}

public enum SpawnGroupFlags_t {
  [pbr::OriginalName("SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE")] SpawnGroupLoadEntitiesFromSave = 1,
  [pbr::OriginalName("SPAWN_GROUP_DONT_SPAWN_ENTITIES")] SpawnGroupDontSpawnEntities = 2,
  [pbr::OriginalName("SPAWN_GROUP_SYNCHRONOUS_SPAWN")] SpawnGroupSynchronousSpawn = 4,
  [pbr::OriginalName("SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP")] SpawnGroupIsInitialSpawnGroup = 8,
  [pbr::OriginalName("SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES")] SpawnGroupCreateClientOnlyEntities = 16,
  [pbr::OriginalName("SPAWN_GROUP_BLOCK_UNTIL_LOADED")] SpawnGroupBlockUntilLoaded = 64,
  [pbr::OriginalName("SPAWN_GROUP_LOAD_STREAMING_DATA")] SpawnGroupLoadStreamingData = 128,
  [pbr::OriginalName("SPAWN_GROUP_CREATE_NEW_SCENE_WORLD")] SpawnGroupCreateNewSceneWorld = 256,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgVector : pb::IMessage<CMsgVector>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgVector> _parser = new pb::MessageParser<CMsgVector>(() => new CMsgVector());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgVector> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector(CMsgVector other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    w_ = other.w_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector Clone() {
    return new CMsgVector(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private readonly static float ZDefaultValue = 0F;

  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Z {
    get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
    set {
      _hasBits0 |= 4;
      z_ = value;
    }
  }
  /// <summary>Gets whether the "z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZ {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZ() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "w" field.</summary>
  public const int WFieldNumber = 4;
  private readonly static float WDefaultValue = 0F;

  private float w_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float W {
    get { if ((_hasBits0 & 8) != 0) { return w_; } else { return WDefaultValue; } }
    set {
      _hasBits0 |= 8;
      w_ = value;
    }
  }
  /// <summary>Gets whether the "w" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasW {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "w" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearW() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgVector);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgVector other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (HasW) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (HasW) {
      output.WriteRawTag(37);
      output.WriteFloat(W);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (HasW) {
      output.WriteRawTag(37);
      output.WriteFloat(W);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (HasZ) {
      size += 1 + 4;
    }
    if (HasW) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgVector other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasZ) {
      Z = other.Z;
    }
    if (other.HasW) {
      W = other.W;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
        case 37: {
          W = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
        case 37: {
          W = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgVector2D : pb::IMessage<CMsgVector2D>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgVector2D> _parser = new pb::MessageParser<CMsgVector2D>(() => new CMsgVector2D());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgVector2D> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector2D() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector2D(CMsgVector2D other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgVector2D Clone() {
    return new CMsgVector2D(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgVector2D);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgVector2D other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgVector2D other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgQAngle : pb::IMessage<CMsgQAngle>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgQAngle> _parser = new pb::MessageParser<CMsgQAngle>(() => new CMsgQAngle());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgQAngle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQAngle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQAngle(CMsgQAngle other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQAngle Clone() {
    return new CMsgQAngle(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private readonly static float ZDefaultValue = 0F;

  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Z {
    get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
    set {
      _hasBits0 |= 4;
      z_ = value;
    }
  }
  /// <summary>Gets whether the "z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZ {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZ() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgQAngle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgQAngle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (HasZ) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgQAngle other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasZ) {
      Z = other.Z;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgQuaternion : pb::IMessage<CMsgQuaternion>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgQuaternion> _parser = new pb::MessageParser<CMsgQuaternion>(() => new CMsgQuaternion());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgQuaternion> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQuaternion() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQuaternion(CMsgQuaternion other) : this() {
    _hasBits0 = other._hasBits0;
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    w_ = other.w_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgQuaternion Clone() {
    return new CMsgQuaternion(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private readonly static float XDefaultValue = 0F;

  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float X {
    get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
    set {
      _hasBits0 |= 1;
      x_ = value;
    }
  }
  /// <summary>Gets whether the "x" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasX {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearX() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private readonly static float YDefaultValue = 0F;

  private float y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Y {
    get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
    set {
      _hasBits0 |= 2;
      y_ = value;
    }
  }
  /// <summary>Gets whether the "y" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasY {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearY() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private readonly static float ZDefaultValue = 0F;

  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Z {
    get { if ((_hasBits0 & 4) != 0) { return z_; } else { return ZDefaultValue; } }
    set {
      _hasBits0 |= 4;
      z_ = value;
    }
  }
  /// <summary>Gets whether the "z" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasZ {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "z" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearZ() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "w" field.</summary>
  public const int WFieldNumber = 4;
  private readonly static float WDefaultValue = 0F;

  private float w_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float W {
    get { if ((_hasBits0 & 8) != 0) { return w_; } else { return WDefaultValue; } }
    set {
      _hasBits0 |= 8;
      w_ = value;
    }
  }
  /// <summary>Gets whether the "w" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasW {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "w" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearW() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgQuaternion);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgQuaternion other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasX) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (HasY) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
    if (HasZ) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (HasW) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (HasW) {
      output.WriteRawTag(37);
      output.WriteFloat(W);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasX) {
      output.WriteRawTag(13);
      output.WriteFloat(X);
    }
    if (HasY) {
      output.WriteRawTag(21);
      output.WriteFloat(Y);
    }
    if (HasZ) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (HasW) {
      output.WriteRawTag(37);
      output.WriteFloat(W);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasX) {
      size += 1 + 4;
    }
    if (HasY) {
      size += 1 + 4;
    }
    if (HasZ) {
      size += 1 + 4;
    }
    if (HasW) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgQuaternion other) {
    if (other == null) {
      return;
    }
    if (other.HasX) {
      X = other.X;
    }
    if (other.HasY) {
      Y = other.Y;
    }
    if (other.HasZ) {
      Z = other.Z;
    }
    if (other.HasW) {
      W = other.W;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
        case 37: {
          W = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          X = input.ReadFloat();
          break;
        }
        case 21: {
          Y = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
        case 37: {
          W = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgTransform : pb::IMessage<CMsgTransform>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgTransform> _parser = new pb::MessageParser<CMsgTransform>(() => new CMsgTransform());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgTransform> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTransform() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTransform(CMsgTransform other) : this() {
    _hasBits0 = other._hasBits0;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    scale_ = other.scale_;
    orientation_ = other.orientation_ != null ? other.orientation_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgTransform Clone() {
    return new CMsgTransform(this);
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::CMsgVector position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "scale" field.</summary>
  public const int ScaleFieldNumber = 2;
  private readonly static float ScaleDefaultValue = 0F;

  private float scale_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Scale {
    get { if ((_hasBits0 & 1) != 0) { return scale_; } else { return ScaleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      scale_ = value;
    }
  }
  /// <summary>Gets whether the "scale" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasScale {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "scale" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearScale() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "orientation" field.</summary>
  public const int OrientationFieldNumber = 3;
  private global::CMsgQuaternion orientation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQuaternion Orientation {
    get { return orientation_; }
    set {
      orientation_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgTransform);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgTransform other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
    if (!object.Equals(Orientation, other.Orientation)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (HasScale) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
    if (orientation_ != null) hash ^= Orientation.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (orientation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Orientation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (HasScale) {
      output.WriteRawTag(21);
      output.WriteFloat(Scale);
    }
    if (orientation_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(Orientation);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (HasScale) {
      size += 1 + 4;
    }
    if (orientation_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgTransform other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::CMsgVector();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.HasScale) {
      Scale = other.Scale;
    }
    if (other.orientation_ != null) {
      if (orientation_ == null) {
        Orientation = new global::CMsgQuaternion();
      }
      Orientation.MergeFrom(other.Orientation);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          input.ReadMessage(Position);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
        case 26: {
          if (orientation_ == null) {
            Orientation = new global::CMsgQuaternion();
          }
          input.ReadMessage(Orientation);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          input.ReadMessage(Position);
          break;
        }
        case 21: {
          Scale = input.ReadFloat();
          break;
        }
        case 26: {
          if (orientation_ == null) {
            Orientation = new global::CMsgQuaternion();
          }
          input.ReadMessage(Orientation);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgRGBA : pb::IMessage<CMsgRGBA>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgRGBA> _parser = new pb::MessageParser<CMsgRGBA>(() => new CMsgRGBA());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgRGBA> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRGBA() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRGBA(CMsgRGBA other) : this() {
    _hasBits0 = other._hasBits0;
    r_ = other.r_;
    g_ = other.g_;
    b_ = other.b_;
    a_ = other.a_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRGBA Clone() {
    return new CMsgRGBA(this);
  }

  /// <summary>Field number for the "r" field.</summary>
  public const int RFieldNumber = 1;
  private readonly static int RDefaultValue = 0;

  private int r_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int R {
    get { if ((_hasBits0 & 1) != 0) { return r_; } else { return RDefaultValue; } }
    set {
      _hasBits0 |= 1;
      r_ = value;
    }
  }
  /// <summary>Gets whether the "r" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasR {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "r" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearR() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "g" field.</summary>
  public const int GFieldNumber = 2;
  private readonly static int GDefaultValue = 0;

  private int g_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int G {
    get { if ((_hasBits0 & 2) != 0) { return g_; } else { return GDefaultValue; } }
    set {
      _hasBits0 |= 2;
      g_ = value;
    }
  }
  /// <summary>Gets whether the "g" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasG {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "g" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearG() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "b" field.</summary>
  public const int BFieldNumber = 3;
  private readonly static int BDefaultValue = 0;

  private int b_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int B {
    get { if ((_hasBits0 & 4) != 0) { return b_; } else { return BDefaultValue; } }
    set {
      _hasBits0 |= 4;
      b_ = value;
    }
  }
  /// <summary>Gets whether the "b" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasB {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "b" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearB() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "a" field.</summary>
  public const int AFieldNumber = 4;
  private readonly static int ADefaultValue = 0;

  private int a_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int A {
    get { if ((_hasBits0 & 8) != 0) { return a_; } else { return ADefaultValue; } }
    set {
      _hasBits0 |= 8;
      a_ = value;
    }
  }
  /// <summary>Gets whether the "a" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "a" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA() {
    _hasBits0 &= ~8;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgRGBA);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgRGBA other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (R != other.R) return false;
    if (G != other.G) return false;
    if (B != other.B) return false;
    if (A != other.A) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasR) hash ^= R.GetHashCode();
    if (HasG) hash ^= G.GetHashCode();
    if (HasB) hash ^= B.GetHashCode();
    if (HasA) hash ^= A.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasR) {
      output.WriteRawTag(8);
      output.WriteInt32(R);
    }
    if (HasG) {
      output.WriteRawTag(16);
      output.WriteInt32(G);
    }
    if (HasB) {
      output.WriteRawTag(24);
      output.WriteInt32(B);
    }
    if (HasA) {
      output.WriteRawTag(32);
      output.WriteInt32(A);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasR) {
      output.WriteRawTag(8);
      output.WriteInt32(R);
    }
    if (HasG) {
      output.WriteRawTag(16);
      output.WriteInt32(G);
    }
    if (HasB) {
      output.WriteRawTag(24);
      output.WriteInt32(B);
    }
    if (HasA) {
      output.WriteRawTag(32);
      output.WriteInt32(A);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasR) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
    }
    if (HasG) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(G);
    }
    if (HasB) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
    }
    if (HasA) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgRGBA other) {
    if (other == null) {
      return;
    }
    if (other.HasR) {
      R = other.R;
    }
    if (other.HasG) {
      G = other.G;
    }
    if (other.HasB) {
      B = other.B;
    }
    if (other.HasA) {
      A = other.A;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          R = input.ReadInt32();
          break;
        }
        case 16: {
          G = input.ReadInt32();
          break;
        }
        case 24: {
          B = input.ReadInt32();
          break;
        }
        case 32: {
          A = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          R = input.ReadInt32();
          break;
        }
        case 16: {
          G = input.ReadInt32();
          break;
        }
        case 24: {
          B = input.ReadInt32();
          break;
        }
        case 32: {
          A = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgPlayerInfo : pb::IMessage<CMsgPlayerInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgPlayerInfo> _parser = new pb::MessageParser<CMsgPlayerInfo>(() => new CMsgPlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgPlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerInfo(CMsgPlayerInfo other) : this() {
    _hasBits0 = other._hasBits0;
    name_ = other.name_;
    xuid_ = other.xuid_;
    userid_ = other.userid_;
    steamid_ = other.steamid_;
    fakeplayer_ = other.fakeplayer_;
    ishltv_ = other.ishltv_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerInfo Clone() {
    return new CMsgPlayerInfo(this);
  }

  /// <summary>Field number for the "name" field.</summary>
  public const int NameFieldNumber = 1;
  private readonly static string NameDefaultValue = "";

  private string name_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Name {
    get { return name_ ?? NameDefaultValue; }
    set {
      name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasName {
    get { return name_ != null; }
  }
  /// <summary>Clears the value of the "name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearName() {
    name_ = null;
  }

  /// <summary>Field number for the "xuid" field.</summary>
  public const int XuidFieldNumber = 2;
  private readonly static ulong XuidDefaultValue = 0UL;

  private ulong xuid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Xuid {
    get { if ((_hasBits0 & 1) != 0) { return xuid_; } else { return XuidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      xuid_ = value;
    }
  }
  /// <summary>Gets whether the "xuid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXuid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "xuid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXuid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "userid" field.</summary>
  public const int UseridFieldNumber = 3;
  private readonly static int UseridDefaultValue = 0;

  private int userid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Userid {
    get { if ((_hasBits0 & 2) != 0) { return userid_; } else { return UseridDefaultValue; } }
    set {
      _hasBits0 |= 2;
      userid_ = value;
    }
  }
  /// <summary>Gets whether the "userid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUserid {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "userid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUserid() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "steamid" field.</summary>
  public const int SteamidFieldNumber = 4;
  private readonly static ulong SteamidDefaultValue = 0UL;

  private ulong steamid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Steamid {
    get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
    set {
      _hasBits0 |= 4;
      steamid_ = value;
    }
  }
  /// <summary>Gets whether the "steamid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSteamid {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "steamid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSteamid() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "fakeplayer" field.</summary>
  public const int FakeplayerFieldNumber = 5;
  private readonly static bool FakeplayerDefaultValue = false;

  private bool fakeplayer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Fakeplayer {
    get { if ((_hasBits0 & 8) != 0) { return fakeplayer_; } else { return FakeplayerDefaultValue; } }
    set {
      _hasBits0 |= 8;
      fakeplayer_ = value;
    }
  }
  /// <summary>Gets whether the "fakeplayer" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFakeplayer {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "fakeplayer" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFakeplayer() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "ishltv" field.</summary>
  public const int IshltvFieldNumber = 6;
  private readonly static bool IshltvDefaultValue = false;

  private bool ishltv_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Ishltv {
    get { if ((_hasBits0 & 16) != 0) { return ishltv_; } else { return IshltvDefaultValue; } }
    set {
      _hasBits0 |= 16;
      ishltv_ = value;
    }
  }
  /// <summary>Gets whether the "ishltv" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIshltv {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "ishltv" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIshltv() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgPlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgPlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Name != other.Name) return false;
    if (Xuid != other.Xuid) return false;
    if (Userid != other.Userid) return false;
    if (Steamid != other.Steamid) return false;
    if (Fakeplayer != other.Fakeplayer) return false;
    if (Ishltv != other.Ishltv) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasName) hash ^= Name.GetHashCode();
    if (HasXuid) hash ^= Xuid.GetHashCode();
    if (HasUserid) hash ^= Userid.GetHashCode();
    if (HasSteamid) hash ^= Steamid.GetHashCode();
    if (HasFakeplayer) hash ^= Fakeplayer.GetHashCode();
    if (HasIshltv) hash ^= Ishltv.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasXuid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Xuid);
    }
    if (HasUserid) {
      output.WriteRawTag(24);
      output.WriteInt32(Userid);
    }
    if (HasSteamid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Steamid);
    }
    if (HasFakeplayer) {
      output.WriteRawTag(40);
      output.WriteBool(Fakeplayer);
    }
    if (HasIshltv) {
      output.WriteRawTag(48);
      output.WriteBool(Ishltv);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasName) {
      output.WriteRawTag(10);
      output.WriteString(Name);
    }
    if (HasXuid) {
      output.WriteRawTag(17);
      output.WriteFixed64(Xuid);
    }
    if (HasUserid) {
      output.WriteRawTag(24);
      output.WriteInt32(Userid);
    }
    if (HasSteamid) {
      output.WriteRawTag(33);
      output.WriteFixed64(Steamid);
    }
    if (HasFakeplayer) {
      output.WriteRawTag(40);
      output.WriteBool(Fakeplayer);
    }
    if (HasIshltv) {
      output.WriteRawTag(48);
      output.WriteBool(Ishltv);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
    }
    if (HasXuid) {
      size += 1 + 8;
    }
    if (HasUserid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
    }
    if (HasSteamid) {
      size += 1 + 8;
    }
    if (HasFakeplayer) {
      size += 1 + 1;
    }
    if (HasIshltv) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgPlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.HasName) {
      Name = other.Name;
    }
    if (other.HasXuid) {
      Xuid = other.Xuid;
    }
    if (other.HasUserid) {
      Userid = other.Userid;
    }
    if (other.HasSteamid) {
      Steamid = other.Steamid;
    }
    if (other.HasFakeplayer) {
      Fakeplayer = other.Fakeplayer;
    }
    if (other.HasIshltv) {
      Ishltv = other.Ishltv;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 17: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 24: {
          Userid = input.ReadInt32();
          break;
        }
        case 33: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 40: {
          Fakeplayer = input.ReadBool();
          break;
        }
        case 48: {
          Ishltv = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Name = input.ReadString();
          break;
        }
        case 17: {
          Xuid = input.ReadFixed64();
          break;
        }
        case 24: {
          Userid = input.ReadInt32();
          break;
        }
        case 33: {
          Steamid = input.ReadFixed64();
          break;
        }
        case 40: {
          Fakeplayer = input.ReadBool();
          break;
        }
        case 48: {
          Ishltv = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CEntityMsg : pb::IMessage<CEntityMsg>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CEntityMsg> _parser = new pb::MessageParser<CEntityMsg>(() => new CEntityMsg());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CEntityMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEntityMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEntityMsg(CEntityMsg other) : this() {
    _hasBits0 = other._hasBits0;
    targetEntity_ = other.targetEntity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CEntityMsg Clone() {
    return new CEntityMsg(this);
  }

  /// <summary>Field number for the "target_entity" field.</summary>
  public const int TargetEntityFieldNumber = 1;
  private readonly static uint TargetEntityDefaultValue = 16777215;

  private uint targetEntity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TargetEntity {
    get { if ((_hasBits0 & 1) != 0) { return targetEntity_; } else { return TargetEntityDefaultValue; } }
    set {
      _hasBits0 |= 1;
      targetEntity_ = value;
    }
  }
  /// <summary>Gets whether the "target_entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTargetEntity {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "target_entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTargetEntity() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CEntityMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CEntityMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (TargetEntity != other.TargetEntity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTargetEntity) hash ^= TargetEntity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTargetEntity) {
      output.WriteRawTag(8);
      output.WriteUInt32(TargetEntity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTargetEntity) {
      output.WriteRawTag(8);
      output.WriteUInt32(TargetEntity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTargetEntity) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetEntity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CEntityMsg other) {
    if (other == null) {
      return;
    }
    if (other.HasTargetEntity) {
      TargetEntity = other.TargetEntity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          TargetEntity = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          TargetEntity = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsg_CVars : pb::IMessage<CMsg_CVars>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsg_CVars> _parser = new pb::MessageParser<CMsg_CVars>(() => new CMsg_CVars());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsg_CVars> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsg_CVars() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsg_CVars(CMsg_CVars other) : this() {
    cvars_ = other.cvars_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsg_CVars Clone() {
    return new CMsg_CVars(this);
  }

  /// <summary>Field number for the "cvars" field.</summary>
  public const int CvarsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CMsg_CVars.Types.CVar> _repeated_cvars_codec
      = pb::FieldCodec.ForMessage(10, global::CMsg_CVars.Types.CVar.Parser);
  private readonly pbc::RepeatedField<global::CMsg_CVars.Types.CVar> cvars_ = new pbc::RepeatedField<global::CMsg_CVars.Types.CVar>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsg_CVars.Types.CVar> Cvars {
    get { return cvars_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsg_CVars);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsg_CVars other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!cvars_.Equals(other.cvars_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= cvars_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    cvars_.WriteTo(output, _repeated_cvars_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    cvars_.WriteTo(ref output, _repeated_cvars_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += cvars_.CalculateSize(_repeated_cvars_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsg_CVars other) {
    if (other == null) {
      return;
    }
    cvars_.Add(other.cvars_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          cvars_.AddEntriesFrom(input, _repeated_cvars_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          cvars_.AddEntriesFrom(ref input, _repeated_cvars_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsg_CVars message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class CVar : pb::IMessage<CVar>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CVar> _parser = new pb::MessageParser<CVar>(() => new CVar());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<CVar> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsg_CVars.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CVar() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CVar(CVar other) : this() {
        name_ = other.name_;
        value_ = other.value_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CVar Clone() {
        return new CVar(this);
      }

      /// <summary>Field number for the "name" field.</summary>
      public const int NameFieldNumber = 1;
      private readonly static string NameDefaultValue = "";

      private string name_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Name {
        get { return name_ ?? NameDefaultValue; }
        set {
          name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "name" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasName {
        get { return name_ != null; }
      }
      /// <summary>Clears the value of the "name" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearName() {
        name_ = null;
      }

      /// <summary>Field number for the "value" field.</summary>
      public const int ValueFieldNumber = 2;
      private readonly static string ValueDefaultValue = "";

      private string value_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string Value {
        get { return value_ ?? ValueDefaultValue; }
        set {
          value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "value" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValue {
        get { return value_ != null; }
      }
      /// <summary>Clears the value of the "value" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValue() {
        value_ = null;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as CVar);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(CVar other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Name != other.Name) return false;
        if (Value != other.Value) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasName) hash ^= Name.GetHashCode();
        if (HasValue) hash ^= Value.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasName) {
          output.WriteRawTag(10);
          output.WriteString(Name);
        }
        if (HasValue) {
          output.WriteRawTag(18);
          output.WriteString(Value);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasName) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
        }
        if (HasValue) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(CVar other) {
        if (other == null) {
          return;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 10: {
              Name = input.ReadString();
              break;
            }
            case 18: {
              Value = input.ReadString();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_NOP : pb::IMessage<CNETMsg_NOP>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_NOP> _parser = new pb::MessageParser<CNETMsg_NOP>(() => new CNETMsg_NOP());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_NOP> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_NOP() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_NOP(CNETMsg_NOP other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_NOP Clone() {
    return new CNETMsg_NOP(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_NOP);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_NOP other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_NOP other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SplitScreenUser : pb::IMessage<CNETMsg_SplitScreenUser>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SplitScreenUser> _parser = new pb::MessageParser<CNETMsg_SplitScreenUser>(() => new CNETMsg_SplitScreenUser());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SplitScreenUser> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SplitScreenUser() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SplitScreenUser(CNETMsg_SplitScreenUser other) : this() {
    _hasBits0 = other._hasBits0;
    slot_ = other.slot_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SplitScreenUser Clone() {
    return new CNETMsg_SplitScreenUser(this);
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int SlotFieldNumber = 1;
  private readonly static int SlotDefaultValue = 0;

  private int slot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Slot {
    get { if ((_hasBits0 & 1) != 0) { return slot_; } else { return SlotDefaultValue; } }
    set {
      _hasBits0 |= 1;
      slot_ = value;
    }
  }
  /// <summary>Gets whether the "slot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSlot {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "slot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSlot() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SplitScreenUser);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SplitScreenUser other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Slot != other.Slot) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSlot) hash ^= Slot.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSlot) {
      output.WriteRawTag(8);
      output.WriteInt32(Slot);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSlot) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SplitScreenUser other) {
    if (other == null) {
      return;
    }
    if (other.HasSlot) {
      Slot = other.Slot;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Slot = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_Tick : pb::IMessage<CNETMsg_Tick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_Tick> _parser = new pb::MessageParser<CNETMsg_Tick>(() => new CNETMsg_Tick());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_Tick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_Tick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_Tick(CNETMsg_Tick other) : this() {
    _hasBits0 = other._hasBits0;
    tick_ = other.tick_;
    hostFrametime_ = other.hostFrametime_;
    hostFrametimeStdDeviation_ = other.hostFrametimeStdDeviation_;
    hostComputationtime_ = other.hostComputationtime_;
    hostComputationtimeStdDeviation_ = other.hostComputationtimeStdDeviation_;
    hostFramestarttimeStdDeviation_ = other.hostFramestarttimeStdDeviation_;
    hostLoss_ = other.hostLoss_;
    hostUnfilteredFrametime_ = other.hostUnfilteredFrametime_;
    hltvReplayFlags_ = other.hltvReplayFlags_;
    expectedLongTick_ = other.expectedLongTick_;
    expectedLongTickReason_ = other.expectedLongTickReason_;
    jitter_ = other.jitter_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_Tick Clone() {
    return new CNETMsg_Tick(this);
  }

  /// <summary>Field number for the "tick" field.</summary>
  public const int TickFieldNumber = 1;
  private readonly static uint TickDefaultValue = 0;

  private uint tick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Tick {
    get { if ((_hasBits0 & 1) != 0) { return tick_; } else { return TickDefaultValue; } }
    set {
      _hasBits0 |= 1;
      tick_ = value;
    }
  }
  /// <summary>Gets whether the "tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTick {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTick() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "host_frametime" field.</summary>
  public const int HostFrametimeFieldNumber = 2;
  private readonly static uint HostFrametimeDefaultValue = 0;

  private uint hostFrametime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostFrametime {
    get { if ((_hasBits0 & 2) != 0) { return hostFrametime_; } else { return HostFrametimeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      hostFrametime_ = value;
    }
  }
  /// <summary>Gets whether the "host_frametime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostFrametime {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "host_frametime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostFrametime() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "host_frametime_std_deviation" field.</summary>
  public const int HostFrametimeStdDeviationFieldNumber = 3;
  private readonly static uint HostFrametimeStdDeviationDefaultValue = 0;

  private uint hostFrametimeStdDeviation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostFrametimeStdDeviation {
    get { if ((_hasBits0 & 4) != 0) { return hostFrametimeStdDeviation_; } else { return HostFrametimeStdDeviationDefaultValue; } }
    set {
      _hasBits0 |= 4;
      hostFrametimeStdDeviation_ = value;
    }
  }
  /// <summary>Gets whether the "host_frametime_std_deviation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostFrametimeStdDeviation {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "host_frametime_std_deviation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostFrametimeStdDeviation() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "host_computationtime" field.</summary>
  public const int HostComputationtimeFieldNumber = 4;
  private readonly static uint HostComputationtimeDefaultValue = 0;

  private uint hostComputationtime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostComputationtime {
    get { if ((_hasBits0 & 8) != 0) { return hostComputationtime_; } else { return HostComputationtimeDefaultValue; } }
    set {
      _hasBits0 |= 8;
      hostComputationtime_ = value;
    }
  }
  /// <summary>Gets whether the "host_computationtime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostComputationtime {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "host_computationtime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostComputationtime() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "host_computationtime_std_deviation" field.</summary>
  public const int HostComputationtimeStdDeviationFieldNumber = 5;
  private readonly static uint HostComputationtimeStdDeviationDefaultValue = 0;

  private uint hostComputationtimeStdDeviation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostComputationtimeStdDeviation {
    get { if ((_hasBits0 & 16) != 0) { return hostComputationtimeStdDeviation_; } else { return HostComputationtimeStdDeviationDefaultValue; } }
    set {
      _hasBits0 |= 16;
      hostComputationtimeStdDeviation_ = value;
    }
  }
  /// <summary>Gets whether the "host_computationtime_std_deviation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostComputationtimeStdDeviation {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "host_computationtime_std_deviation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostComputationtimeStdDeviation() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "host_framestarttime_std_deviation" field.</summary>
  public const int HostFramestarttimeStdDeviationFieldNumber = 6;
  private readonly static uint HostFramestarttimeStdDeviationDefaultValue = 0;

  private uint hostFramestarttimeStdDeviation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostFramestarttimeStdDeviation {
    get { if ((_hasBits0 & 32) != 0) { return hostFramestarttimeStdDeviation_; } else { return HostFramestarttimeStdDeviationDefaultValue; } }
    set {
      _hasBits0 |= 32;
      hostFramestarttimeStdDeviation_ = value;
    }
  }
  /// <summary>Gets whether the "host_framestarttime_std_deviation" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostFramestarttimeStdDeviation {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "host_framestarttime_std_deviation" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostFramestarttimeStdDeviation() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "host_loss" field.</summary>
  public const int HostLossFieldNumber = 7;
  private readonly static uint HostLossDefaultValue = 0;

  private uint hostLoss_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostLoss {
    get { if ((_hasBits0 & 64) != 0) { return hostLoss_; } else { return HostLossDefaultValue; } }
    set {
      _hasBits0 |= 64;
      hostLoss_ = value;
    }
  }
  /// <summary>Gets whether the "host_loss" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostLoss {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "host_loss" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostLoss() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "host_unfiltered_frametime" field.</summary>
  public const int HostUnfilteredFrametimeFieldNumber = 8;
  private readonly static uint HostUnfilteredFrametimeDefaultValue = 0;

  private uint hostUnfilteredFrametime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HostUnfilteredFrametime {
    get { if ((_hasBits0 & 128) != 0) { return hostUnfilteredFrametime_; } else { return HostUnfilteredFrametimeDefaultValue; } }
    set {
      _hasBits0 |= 128;
      hostUnfilteredFrametime_ = value;
    }
  }
  /// <summary>Gets whether the "host_unfiltered_frametime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostUnfilteredFrametime {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "host_unfiltered_frametime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostUnfilteredFrametime() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "hltv_replay_flags" field.</summary>
  public const int HltvReplayFlagsFieldNumber = 9;
  private readonly static uint HltvReplayFlagsDefaultValue = 0;

  private uint hltvReplayFlags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint HltvReplayFlags {
    get { if ((_hasBits0 & 256) != 0) { return hltvReplayFlags_; } else { return HltvReplayFlagsDefaultValue; } }
    set {
      _hasBits0 |= 256;
      hltvReplayFlags_ = value;
    }
  }
  /// <summary>Gets whether the "hltv_replay_flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHltvReplayFlags {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "hltv_replay_flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHltvReplayFlags() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "expected_long_tick" field.</summary>
  public const int ExpectedLongTickFieldNumber = 10;
  private readonly static uint ExpectedLongTickDefaultValue = 0;

  private uint expectedLongTick_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ExpectedLongTick {
    get { if ((_hasBits0 & 512) != 0) { return expectedLongTick_; } else { return ExpectedLongTickDefaultValue; } }
    set {
      _hasBits0 |= 512;
      expectedLongTick_ = value;
    }
  }
  /// <summary>Gets whether the "expected_long_tick" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpectedLongTick {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "expected_long_tick" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpectedLongTick() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "expected_long_tick_reason" field.</summary>
  public const int ExpectedLongTickReasonFieldNumber = 11;
  private readonly static string ExpectedLongTickReasonDefaultValue = "";

  private string expectedLongTickReason_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ExpectedLongTickReason {
    get { return expectedLongTickReason_ ?? ExpectedLongTickReasonDefaultValue; }
    set {
      expectedLongTickReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "expected_long_tick_reason" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasExpectedLongTickReason {
    get { return expectedLongTickReason_ != null; }
  }
  /// <summary>Clears the value of the "expected_long_tick_reason" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearExpectedLongTickReason() {
    expectedLongTickReason_ = null;
  }

  /// <summary>Field number for the "jitter" field.</summary>
  public const int JitterFieldNumber = 12;
  private readonly static uint JitterDefaultValue = 0;

  private uint jitter_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Jitter {
    get { if ((_hasBits0 & 1024) != 0) { return jitter_; } else { return JitterDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      jitter_ = value;
    }
  }
  /// <summary>Gets whether the "jitter" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasJitter {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "jitter" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearJitter() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_Tick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_Tick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Tick != other.Tick) return false;
    if (HostFrametime != other.HostFrametime) return false;
    if (HostFrametimeStdDeviation != other.HostFrametimeStdDeviation) return false;
    if (HostComputationtime != other.HostComputationtime) return false;
    if (HostComputationtimeStdDeviation != other.HostComputationtimeStdDeviation) return false;
    if (HostFramestarttimeStdDeviation != other.HostFramestarttimeStdDeviation) return false;
    if (HostLoss != other.HostLoss) return false;
    if (HostUnfilteredFrametime != other.HostUnfilteredFrametime) return false;
    if (HltvReplayFlags != other.HltvReplayFlags) return false;
    if (ExpectedLongTick != other.ExpectedLongTick) return false;
    if (ExpectedLongTickReason != other.ExpectedLongTickReason) return false;
    if (Jitter != other.Jitter) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasTick) hash ^= Tick.GetHashCode();
    if (HasHostFrametime) hash ^= HostFrametime.GetHashCode();
    if (HasHostFrametimeStdDeviation) hash ^= HostFrametimeStdDeviation.GetHashCode();
    if (HasHostComputationtime) hash ^= HostComputationtime.GetHashCode();
    if (HasHostComputationtimeStdDeviation) hash ^= HostComputationtimeStdDeviation.GetHashCode();
    if (HasHostFramestarttimeStdDeviation) hash ^= HostFramestarttimeStdDeviation.GetHashCode();
    if (HasHostLoss) hash ^= HostLoss.GetHashCode();
    if (HasHostUnfilteredFrametime) hash ^= HostUnfilteredFrametime.GetHashCode();
    if (HasHltvReplayFlags) hash ^= HltvReplayFlags.GetHashCode();
    if (HasExpectedLongTick) hash ^= ExpectedLongTick.GetHashCode();
    if (HasExpectedLongTickReason) hash ^= ExpectedLongTickReason.GetHashCode();
    if (HasJitter) hash ^= Jitter.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteUInt32(Tick);
    }
    if (HasHostFrametime) {
      output.WriteRawTag(16);
      output.WriteUInt32(HostFrametime);
    }
    if (HasHostFrametimeStdDeviation) {
      output.WriteRawTag(24);
      output.WriteUInt32(HostFrametimeStdDeviation);
    }
    if (HasHostComputationtime) {
      output.WriteRawTag(32);
      output.WriteUInt32(HostComputationtime);
    }
    if (HasHostComputationtimeStdDeviation) {
      output.WriteRawTag(40);
      output.WriteUInt32(HostComputationtimeStdDeviation);
    }
    if (HasHostFramestarttimeStdDeviation) {
      output.WriteRawTag(48);
      output.WriteUInt32(HostFramestarttimeStdDeviation);
    }
    if (HasHostLoss) {
      output.WriteRawTag(56);
      output.WriteUInt32(HostLoss);
    }
    if (HasHostUnfilteredFrametime) {
      output.WriteRawTag(64);
      output.WriteUInt32(HostUnfilteredFrametime);
    }
    if (HasHltvReplayFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(HltvReplayFlags);
    }
    if (HasExpectedLongTick) {
      output.WriteRawTag(80);
      output.WriteUInt32(ExpectedLongTick);
    }
    if (HasExpectedLongTickReason) {
      output.WriteRawTag(90);
      output.WriteString(ExpectedLongTickReason);
    }
    if (HasJitter) {
      output.WriteRawTag(96);
      output.WriteUInt32(Jitter);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasTick) {
      output.WriteRawTag(8);
      output.WriteUInt32(Tick);
    }
    if (HasHostFrametime) {
      output.WriteRawTag(16);
      output.WriteUInt32(HostFrametime);
    }
    if (HasHostFrametimeStdDeviation) {
      output.WriteRawTag(24);
      output.WriteUInt32(HostFrametimeStdDeviation);
    }
    if (HasHostComputationtime) {
      output.WriteRawTag(32);
      output.WriteUInt32(HostComputationtime);
    }
    if (HasHostComputationtimeStdDeviation) {
      output.WriteRawTag(40);
      output.WriteUInt32(HostComputationtimeStdDeviation);
    }
    if (HasHostFramestarttimeStdDeviation) {
      output.WriteRawTag(48);
      output.WriteUInt32(HostFramestarttimeStdDeviation);
    }
    if (HasHostLoss) {
      output.WriteRawTag(56);
      output.WriteUInt32(HostLoss);
    }
    if (HasHostUnfilteredFrametime) {
      output.WriteRawTag(64);
      output.WriteUInt32(HostUnfilteredFrametime);
    }
    if (HasHltvReplayFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(HltvReplayFlags);
    }
    if (HasExpectedLongTick) {
      output.WriteRawTag(80);
      output.WriteUInt32(ExpectedLongTick);
    }
    if (HasExpectedLongTickReason) {
      output.WriteRawTag(90);
      output.WriteString(ExpectedLongTickReason);
    }
    if (HasJitter) {
      output.WriteRawTag(96);
      output.WriteUInt32(Jitter);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasTick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tick);
    }
    if (HasHostFrametime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostFrametime);
    }
    if (HasHostFrametimeStdDeviation) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostFrametimeStdDeviation);
    }
    if (HasHostComputationtime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostComputationtime);
    }
    if (HasHostComputationtimeStdDeviation) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostComputationtimeStdDeviation);
    }
    if (HasHostFramestarttimeStdDeviation) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostFramestarttimeStdDeviation);
    }
    if (HasHostLoss) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostLoss);
    }
    if (HasHostUnfilteredFrametime) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HostUnfilteredFrametime);
    }
    if (HasHltvReplayFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HltvReplayFlags);
    }
    if (HasExpectedLongTick) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpectedLongTick);
    }
    if (HasExpectedLongTickReason) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpectedLongTickReason);
    }
    if (HasJitter) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Jitter);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_Tick other) {
    if (other == null) {
      return;
    }
    if (other.HasTick) {
      Tick = other.Tick;
    }
    if (other.HasHostFrametime) {
      HostFrametime = other.HostFrametime;
    }
    if (other.HasHostFrametimeStdDeviation) {
      HostFrametimeStdDeviation = other.HostFrametimeStdDeviation;
    }
    if (other.HasHostComputationtime) {
      HostComputationtime = other.HostComputationtime;
    }
    if (other.HasHostComputationtimeStdDeviation) {
      HostComputationtimeStdDeviation = other.HostComputationtimeStdDeviation;
    }
    if (other.HasHostFramestarttimeStdDeviation) {
      HostFramestarttimeStdDeviation = other.HostFramestarttimeStdDeviation;
    }
    if (other.HasHostLoss) {
      HostLoss = other.HostLoss;
    }
    if (other.HasHostUnfilteredFrametime) {
      HostUnfilteredFrametime = other.HostUnfilteredFrametime;
    }
    if (other.HasHltvReplayFlags) {
      HltvReplayFlags = other.HltvReplayFlags;
    }
    if (other.HasExpectedLongTick) {
      ExpectedLongTick = other.ExpectedLongTick;
    }
    if (other.HasExpectedLongTickReason) {
      ExpectedLongTickReason = other.ExpectedLongTickReason;
    }
    if (other.HasJitter) {
      Jitter = other.Jitter;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Tick = input.ReadUInt32();
          break;
        }
        case 16: {
          HostFrametime = input.ReadUInt32();
          break;
        }
        case 24: {
          HostFrametimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 32: {
          HostComputationtime = input.ReadUInt32();
          break;
        }
        case 40: {
          HostComputationtimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 48: {
          HostFramestarttimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 56: {
          HostLoss = input.ReadUInt32();
          break;
        }
        case 64: {
          HostUnfilteredFrametime = input.ReadUInt32();
          break;
        }
        case 72: {
          HltvReplayFlags = input.ReadUInt32();
          break;
        }
        case 80: {
          ExpectedLongTick = input.ReadUInt32();
          break;
        }
        case 90: {
          ExpectedLongTickReason = input.ReadString();
          break;
        }
        case 96: {
          Jitter = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Tick = input.ReadUInt32();
          break;
        }
        case 16: {
          HostFrametime = input.ReadUInt32();
          break;
        }
        case 24: {
          HostFrametimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 32: {
          HostComputationtime = input.ReadUInt32();
          break;
        }
        case 40: {
          HostComputationtimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 48: {
          HostFramestarttimeStdDeviation = input.ReadUInt32();
          break;
        }
        case 56: {
          HostLoss = input.ReadUInt32();
          break;
        }
        case 64: {
          HostUnfilteredFrametime = input.ReadUInt32();
          break;
        }
        case 72: {
          HltvReplayFlags = input.ReadUInt32();
          break;
        }
        case 80: {
          ExpectedLongTick = input.ReadUInt32();
          break;
        }
        case 90: {
          ExpectedLongTickReason = input.ReadString();
          break;
        }
        case 96: {
          Jitter = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_StringCmd : pb::IMessage<CNETMsg_StringCmd>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_StringCmd> _parser = new pb::MessageParser<CNETMsg_StringCmd>(() => new CNETMsg_StringCmd());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_StringCmd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_StringCmd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_StringCmd(CNETMsg_StringCmd other) : this() {
    _hasBits0 = other._hasBits0;
    command_ = other.command_;
    predictionSync_ = other.predictionSync_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_StringCmd Clone() {
    return new CNETMsg_StringCmd(this);
  }

  /// <summary>Field number for the "command" field.</summary>
  public const int CommandFieldNumber = 1;
  private readonly static string CommandDefaultValue = "";

  private string command_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Command {
    get { return command_ ?? CommandDefaultValue; }
    set {
      command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "command" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCommand {
    get { return command_ != null; }
  }
  /// <summary>Clears the value of the "command" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCommand() {
    command_ = null;
  }

  /// <summary>Field number for the "prediction_sync" field.</summary>
  public const int PredictionSyncFieldNumber = 2;
  private readonly static uint PredictionSyncDefaultValue = 0;

  private uint predictionSync_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint PredictionSync {
    get { if ((_hasBits0 & 1) != 0) { return predictionSync_; } else { return PredictionSyncDefaultValue; } }
    set {
      _hasBits0 |= 1;
      predictionSync_ = value;
    }
  }
  /// <summary>Gets whether the "prediction_sync" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPredictionSync {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "prediction_sync" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPredictionSync() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_StringCmd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_StringCmd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Command != other.Command) return false;
    if (PredictionSync != other.PredictionSync) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasCommand) hash ^= Command.GetHashCode();
    if (HasPredictionSync) hash ^= PredictionSync.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasCommand) {
      output.WriteRawTag(10);
      output.WriteString(Command);
    }
    if (HasPredictionSync) {
      output.WriteRawTag(16);
      output.WriteUInt32(PredictionSync);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasCommand) {
      output.WriteRawTag(10);
      output.WriteString(Command);
    }
    if (HasPredictionSync) {
      output.WriteRawTag(16);
      output.WriteUInt32(PredictionSync);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasCommand) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
    }
    if (HasPredictionSync) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PredictionSync);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_StringCmd other) {
    if (other == null) {
      return;
    }
    if (other.HasCommand) {
      Command = other.Command;
    }
    if (other.HasPredictionSync) {
      PredictionSync = other.PredictionSync;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Command = input.ReadString();
          break;
        }
        case 16: {
          PredictionSync = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Command = input.ReadString();
          break;
        }
        case 16: {
          PredictionSync = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SetConVar : pb::IMessage<CNETMsg_SetConVar>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SetConVar> _parser = new pb::MessageParser<CNETMsg_SetConVar>(() => new CNETMsg_SetConVar());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SetConVar> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SetConVar() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SetConVar(CNETMsg_SetConVar other) : this() {
    convars_ = other.convars_ != null ? other.convars_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SetConVar Clone() {
    return new CNETMsg_SetConVar(this);
  }

  /// <summary>Field number for the "convars" field.</summary>
  public const int ConvarsFieldNumber = 1;
  private global::CMsg_CVars convars_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsg_CVars Convars {
    get { return convars_; }
    set {
      convars_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SetConVar);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SetConVar other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Convars, other.Convars)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (convars_ != null) hash ^= Convars.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (convars_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Convars);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (convars_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Convars);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (convars_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Convars);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SetConVar other) {
    if (other == null) {
      return;
    }
    if (other.convars_ != null) {
      if (convars_ == null) {
        Convars = new global::CMsg_CVars();
      }
      Convars.MergeFrom(other.Convars);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (convars_ == null) {
            Convars = new global::CMsg_CVars();
          }
          input.ReadMessage(Convars);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (convars_ == null) {
            Convars = new global::CMsg_CVars();
          }
          input.ReadMessage(Convars);
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SignonState : pb::IMessage<CNETMsg_SignonState>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SignonState> _parser = new pb::MessageParser<CNETMsg_SignonState>(() => new CNETMsg_SignonState());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SignonState> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SignonState() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SignonState(CNETMsg_SignonState other) : this() {
    _hasBits0 = other._hasBits0;
    signonState_ = other.signonState_;
    spawnCount_ = other.spawnCount_;
    numServerPlayers_ = other.numServerPlayers_;
    playersNetworkids_ = other.playersNetworkids_.Clone();
    mapName_ = other.mapName_;
    addons_ = other.addons_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SignonState Clone() {
    return new CNETMsg_SignonState(this);
  }

  /// <summary>Field number for the "signon_state" field.</summary>
  public const int SignonStateFieldNumber = 1;
  private readonly static global::SignonState_t SignonStateDefaultValue = global::SignonState_t.SignonstateNone;

  private global::SignonState_t signonState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::SignonState_t SignonState {
    get { if ((_hasBits0 & 1) != 0) { return signonState_; } else { return SignonStateDefaultValue; } }
    set {
      _hasBits0 |= 1;
      signonState_ = value;
    }
  }
  /// <summary>Gets whether the "signon_state" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSignonState {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "signon_state" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSignonState() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "spawn_count" field.</summary>
  public const int SpawnCountFieldNumber = 2;
  private readonly static uint SpawnCountDefaultValue = 0;

  private uint spawnCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SpawnCount {
    get { if ((_hasBits0 & 2) != 0) { return spawnCount_; } else { return SpawnCountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      spawnCount_ = value;
    }
  }
  /// <summary>Gets whether the "spawn_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawnCount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "spawn_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawnCount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "num_server_players" field.</summary>
  public const int NumServerPlayersFieldNumber = 3;
  private readonly static uint NumServerPlayersDefaultValue = 0;

  private uint numServerPlayers_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint NumServerPlayers {
    get { if ((_hasBits0 & 4) != 0) { return numServerPlayers_; } else { return NumServerPlayersDefaultValue; } }
    set {
      _hasBits0 |= 4;
      numServerPlayers_ = value;
    }
  }
  /// <summary>Gets whether the "num_server_players" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNumServerPlayers {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "num_server_players" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNumServerPlayers() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "players_networkids" field.</summary>
  public const int PlayersNetworkidsFieldNumber = 4;
  private static readonly pb::FieldCodec<string> _repeated_playersNetworkids_codec
      = pb::FieldCodec.ForString(34);
  private readonly pbc::RepeatedField<string> playersNetworkids_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> PlayersNetworkids {
    get { return playersNetworkids_; }
  }

  /// <summary>Field number for the "map_name" field.</summary>
  public const int MapNameFieldNumber = 5;
  private readonly static string MapNameDefaultValue = "";

  private string mapName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string MapName {
    get { return mapName_ ?? MapNameDefaultValue; }
    set {
      mapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "map_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMapName {
    get { return mapName_ != null; }
  }
  /// <summary>Clears the value of the "map_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMapName() {
    mapName_ = null;
  }

  /// <summary>Field number for the "addons" field.</summary>
  public const int AddonsFieldNumber = 6;
  private readonly static string AddonsDefaultValue = "";

  private string addons_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Addons {
    get { return addons_ ?? AddonsDefaultValue; }
    set {
      addons_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "addons" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAddons {
    get { return addons_ != null; }
  }
  /// <summary>Clears the value of the "addons" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAddons() {
    addons_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SignonState);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SignonState other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SignonState != other.SignonState) return false;
    if (SpawnCount != other.SpawnCount) return false;
    if (NumServerPlayers != other.NumServerPlayers) return false;
    if(!playersNetworkids_.Equals(other.playersNetworkids_)) return false;
    if (MapName != other.MapName) return false;
    if (Addons != other.Addons) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSignonState) hash ^= SignonState.GetHashCode();
    if (HasSpawnCount) hash ^= SpawnCount.GetHashCode();
    if (HasNumServerPlayers) hash ^= NumServerPlayers.GetHashCode();
    hash ^= playersNetworkids_.GetHashCode();
    if (HasMapName) hash ^= MapName.GetHashCode();
    if (HasAddons) hash ^= Addons.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSignonState) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SignonState);
    }
    if (HasSpawnCount) {
      output.WriteRawTag(16);
      output.WriteUInt32(SpawnCount);
    }
    if (HasNumServerPlayers) {
      output.WriteRawTag(24);
      output.WriteUInt32(NumServerPlayers);
    }
    playersNetworkids_.WriteTo(output, _repeated_playersNetworkids_codec);
    if (HasMapName) {
      output.WriteRawTag(42);
      output.WriteString(MapName);
    }
    if (HasAddons) {
      output.WriteRawTag(50);
      output.WriteString(Addons);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSignonState) {
      output.WriteRawTag(8);
      output.WriteEnum((int) SignonState);
    }
    if (HasSpawnCount) {
      output.WriteRawTag(16);
      output.WriteUInt32(SpawnCount);
    }
    if (HasNumServerPlayers) {
      output.WriteRawTag(24);
      output.WriteUInt32(NumServerPlayers);
    }
    playersNetworkids_.WriteTo(ref output, _repeated_playersNetworkids_codec);
    if (HasMapName) {
      output.WriteRawTag(42);
      output.WriteString(MapName);
    }
    if (HasAddons) {
      output.WriteRawTag(50);
      output.WriteString(Addons);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSignonState) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SignonState);
    }
    if (HasSpawnCount) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpawnCount);
    }
    if (HasNumServerPlayers) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumServerPlayers);
    }
    size += playersNetworkids_.CalculateSize(_repeated_playersNetworkids_codec);
    if (HasMapName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(MapName);
    }
    if (HasAddons) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Addons);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SignonState other) {
    if (other == null) {
      return;
    }
    if (other.HasSignonState) {
      SignonState = other.SignonState;
    }
    if (other.HasSpawnCount) {
      SpawnCount = other.SpawnCount;
    }
    if (other.HasNumServerPlayers) {
      NumServerPlayers = other.NumServerPlayers;
    }
    playersNetworkids_.Add(other.playersNetworkids_);
    if (other.HasMapName) {
      MapName = other.MapName;
    }
    if (other.HasAddons) {
      Addons = other.Addons;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          SignonState = (global::SignonState_t) input.ReadEnum();
          break;
        }
        case 16: {
          SpawnCount = input.ReadUInt32();
          break;
        }
        case 24: {
          NumServerPlayers = input.ReadUInt32();
          break;
        }
        case 34: {
          playersNetworkids_.AddEntriesFrom(input, _repeated_playersNetworkids_codec);
          break;
        }
        case 42: {
          MapName = input.ReadString();
          break;
        }
        case 50: {
          Addons = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          SignonState = (global::SignonState_t) input.ReadEnum();
          break;
        }
        case 16: {
          SpawnCount = input.ReadUInt32();
          break;
        }
        case 24: {
          NumServerPlayers = input.ReadUInt32();
          break;
        }
        case 34: {
          playersNetworkids_.AddEntriesFrom(ref input, _repeated_playersNetworkids_codec);
          break;
        }
        case 42: {
          MapName = input.ReadString();
          break;
        }
        case 50: {
          Addons = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_GameEvent : pb::IMessage<CSVCMsg_GameEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_GameEvent> _parser = new pb::MessageParser<CSVCMsg_GameEvent>(() => new CSVCMsg_GameEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_GameEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEvent(CSVCMsg_GameEvent other) : this() {
    _hasBits0 = other._hasBits0;
    eventName_ = other.eventName_;
    eventid_ = other.eventid_;
    keys_ = other.keys_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameEvent Clone() {
    return new CSVCMsg_GameEvent(this);
  }

  /// <summary>Field number for the "event_name" field.</summary>
  public const int EventNameFieldNumber = 1;
  private readonly static string EventNameDefaultValue = "";

  private string eventName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EventName {
    get { return eventName_ ?? EventNameDefaultValue; }
    set {
      eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "event_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventName {
    get { return eventName_ != null; }
  }
  /// <summary>Clears the value of the "event_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventName() {
    eventName_ = null;
  }

  /// <summary>Field number for the "eventid" field.</summary>
  public const int EventidFieldNumber = 2;
  private readonly static int EventidDefaultValue = 0;

  private int eventid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Eventid {
    get { if ((_hasBits0 & 1) != 0) { return eventid_; } else { return EventidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      eventid_ = value;
    }
  }
  /// <summary>Gets whether the "eventid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEventid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "eventid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEventid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "keys" field.</summary>
  public const int KeysFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CSVCMsg_GameEvent.Types.key_t> _repeated_keys_codec
      = pb::FieldCodec.ForMessage(26, global::CSVCMsg_GameEvent.Types.key_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsg_GameEvent.Types.key_t> keys_ = new pbc::RepeatedField<global::CSVCMsg_GameEvent.Types.key_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsg_GameEvent.Types.key_t> Keys {
    get { return keys_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_GameEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_GameEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EventName != other.EventName) return false;
    if (Eventid != other.Eventid) return false;
    if(!keys_.Equals(other.keys_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEventName) hash ^= EventName.GetHashCode();
    if (HasEventid) hash ^= Eventid.GetHashCode();
    hash ^= keys_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEventName) {
      output.WriteRawTag(10);
      output.WriteString(EventName);
    }
    if (HasEventid) {
      output.WriteRawTag(16);
      output.WriteInt32(Eventid);
    }
    keys_.WriteTo(output, _repeated_keys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEventName) {
      output.WriteRawTag(10);
      output.WriteString(EventName);
    }
    if (HasEventid) {
      output.WriteRawTag(16);
      output.WriteInt32(Eventid);
    }
    keys_.WriteTo(ref output, _repeated_keys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEventName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
    }
    if (HasEventid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Eventid);
    }
    size += keys_.CalculateSize(_repeated_keys_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_GameEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasEventName) {
      EventName = other.EventName;
    }
    if (other.HasEventid) {
      Eventid = other.Eventid;
    }
    keys_.Add(other.keys_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EventName = input.ReadString();
          break;
        }
        case 16: {
          Eventid = input.ReadInt32();
          break;
        }
        case 26: {
          keys_.AddEntriesFrom(input, _repeated_keys_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          EventName = input.ReadString();
          break;
        }
        case 16: {
          Eventid = input.ReadInt32();
          break;
        }
        case 26: {
          keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsg_GameEvent message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class key_t : pb::IMessage<key_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<key_t> _parser = new pb::MessageParser<key_t>(() => new key_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<key_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsg_GameEvent.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t(key_t other) : this() {
        _hasBits0 = other._hasBits0;
        type_ = other.type_;
        valString_ = other.valString_;
        valFloat_ = other.valFloat_;
        valLong_ = other.valLong_;
        valShort_ = other.valShort_;
        valByte_ = other.valByte_;
        valBool_ = other.valBool_;
        valUint64_ = other.valUint64_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public key_t Clone() {
        return new key_t(this);
      }

      /// <summary>Field number for the "type" field.</summary>
      public const int TypeFieldNumber = 1;
      private readonly static int TypeDefaultValue = 0;

      private int type_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Type {
        get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
        set {
          _hasBits0 |= 1;
          type_ = value;
        }
      }
      /// <summary>Gets whether the "type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasType {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearType() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "val_string" field.</summary>
      public const int ValStringFieldNumber = 2;
      private readonly static string ValStringDefaultValue = "";

      private string valString_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public string ValString {
        get { return valString_ ?? ValStringDefaultValue; }
        set {
          valString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        }
      }
      /// <summary>Gets whether the "val_string" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValString {
        get { return valString_ != null; }
      }
      /// <summary>Clears the value of the "val_string" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValString() {
        valString_ = null;
      }

      /// <summary>Field number for the "val_float" field.</summary>
      public const int ValFloatFieldNumber = 3;
      private readonly static float ValFloatDefaultValue = 0F;

      private float valFloat_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public float ValFloat {
        get { if ((_hasBits0 & 2) != 0) { return valFloat_; } else { return ValFloatDefaultValue; } }
        set {
          _hasBits0 |= 2;
          valFloat_ = value;
        }
      }
      /// <summary>Gets whether the "val_float" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValFloat {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "val_float" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValFloat() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "val_long" field.</summary>
      public const int ValLongFieldNumber = 4;
      private readonly static int ValLongDefaultValue = 0;

      private int valLong_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ValLong {
        get { if ((_hasBits0 & 4) != 0) { return valLong_; } else { return ValLongDefaultValue; } }
        set {
          _hasBits0 |= 4;
          valLong_ = value;
        }
      }
      /// <summary>Gets whether the "val_long" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValLong {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "val_long" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValLong() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "val_short" field.</summary>
      public const int ValShortFieldNumber = 5;
      private readonly static int ValShortDefaultValue = 0;

      private int valShort_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ValShort {
        get { if ((_hasBits0 & 8) != 0) { return valShort_; } else { return ValShortDefaultValue; } }
        set {
          _hasBits0 |= 8;
          valShort_ = value;
        }
      }
      /// <summary>Gets whether the "val_short" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValShort {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "val_short" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValShort() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "val_byte" field.</summary>
      public const int ValByteFieldNumber = 6;
      private readonly static int ValByteDefaultValue = 0;

      private int valByte_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ValByte {
        get { if ((_hasBits0 & 16) != 0) { return valByte_; } else { return ValByteDefaultValue; } }
        set {
          _hasBits0 |= 16;
          valByte_ = value;
        }
      }
      /// <summary>Gets whether the "val_byte" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValByte {
        get { return (_hasBits0 & 16) != 0; }
      }
      /// <summary>Clears the value of the "val_byte" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValByte() {
        _hasBits0 &= ~16;
      }

      /// <summary>Field number for the "val_bool" field.</summary>
      public const int ValBoolFieldNumber = 7;
      private readonly static bool ValBoolDefaultValue = false;

      private bool valBool_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool ValBool {
        get { if ((_hasBits0 & 32) != 0) { return valBool_; } else { return ValBoolDefaultValue; } }
        set {
          _hasBits0 |= 32;
          valBool_ = value;
        }
      }
      /// <summary>Gets whether the "val_bool" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValBool {
        get { return (_hasBits0 & 32) != 0; }
      }
      /// <summary>Clears the value of the "val_bool" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValBool() {
        _hasBits0 &= ~32;
      }

      /// <summary>Field number for the "val_uint64" field.</summary>
      public const int ValUint64FieldNumber = 8;
      private readonly static ulong ValUint64DefaultValue = 0UL;

      private ulong valUint64_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ValUint64 {
        get { if ((_hasBits0 & 64) != 0) { return valUint64_; } else { return ValUint64DefaultValue; } }
        set {
          _hasBits0 |= 64;
          valUint64_ = value;
        }
      }
      /// <summary>Gets whether the "val_uint64" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasValUint64 {
        get { return (_hasBits0 & 64) != 0; }
      }
      /// <summary>Clears the value of the "val_uint64" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearValUint64() {
        _hasBits0 &= ~64;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as key_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(key_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Type != other.Type) return false;
        if (ValString != other.ValString) return false;
        if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValFloat, other.ValFloat)) return false;
        if (ValLong != other.ValLong) return false;
        if (ValShort != other.ValShort) return false;
        if (ValByte != other.ValByte) return false;
        if (ValBool != other.ValBool) return false;
        if (ValUint64 != other.ValUint64) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasType) hash ^= Type.GetHashCode();
        if (HasValString) hash ^= ValString.GetHashCode();
        if (HasValFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValFloat);
        if (HasValLong) hash ^= ValLong.GetHashCode();
        if (HasValShort) hash ^= ValShort.GetHashCode();
        if (HasValByte) hash ^= ValByte.GetHashCode();
        if (HasValBool) hash ^= ValBool.GetHashCode();
        if (HasValUint64) hash ^= ValUint64.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasValString) {
          output.WriteRawTag(18);
          output.WriteString(ValString);
        }
        if (HasValFloat) {
          output.WriteRawTag(29);
          output.WriteFloat(ValFloat);
        }
        if (HasValLong) {
          output.WriteRawTag(32);
          output.WriteInt32(ValLong);
        }
        if (HasValShort) {
          output.WriteRawTag(40);
          output.WriteInt32(ValShort);
        }
        if (HasValByte) {
          output.WriteRawTag(48);
          output.WriteInt32(ValByte);
        }
        if (HasValBool) {
          output.WriteRawTag(56);
          output.WriteBool(ValBool);
        }
        if (HasValUint64) {
          output.WriteRawTag(64);
          output.WriteUInt64(ValUint64);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasType) {
          output.WriteRawTag(8);
          output.WriteInt32(Type);
        }
        if (HasValString) {
          output.WriteRawTag(18);
          output.WriteString(ValString);
        }
        if (HasValFloat) {
          output.WriteRawTag(29);
          output.WriteFloat(ValFloat);
        }
        if (HasValLong) {
          output.WriteRawTag(32);
          output.WriteInt32(ValLong);
        }
        if (HasValShort) {
          output.WriteRawTag(40);
          output.WriteInt32(ValShort);
        }
        if (HasValByte) {
          output.WriteRawTag(48);
          output.WriteInt32(ValByte);
        }
        if (HasValBool) {
          output.WriteRawTag(56);
          output.WriteBool(ValBool);
        }
        if (HasValUint64) {
          output.WriteRawTag(64);
          output.WriteUInt64(ValUint64);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
        }
        if (HasValString) {
          size += 1 + pb::CodedOutputStream.ComputeStringSize(ValString);
        }
        if (HasValFloat) {
          size += 1 + 4;
        }
        if (HasValLong) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValLong);
        }
        if (HasValShort) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValShort);
        }
        if (HasValByte) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValByte);
        }
        if (HasValBool) {
          size += 1 + 1;
        }
        if (HasValUint64) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ValUint64);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(key_t other) {
        if (other == null) {
          return;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasValString) {
          ValString = other.ValString;
        }
        if (other.HasValFloat) {
          ValFloat = other.ValFloat;
        }
        if (other.HasValLong) {
          ValLong = other.ValLong;
        }
        if (other.HasValShort) {
          ValShort = other.ValShort;
        }
        if (other.HasValByte) {
          ValByte = other.ValByte;
        }
        if (other.HasValBool) {
          ValBool = other.ValBool;
        }
        if (other.HasValUint64) {
          ValUint64 = other.ValUint64;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              ValString = input.ReadString();
              break;
            }
            case 29: {
              ValFloat = input.ReadFloat();
              break;
            }
            case 32: {
              ValLong = input.ReadInt32();
              break;
            }
            case 40: {
              ValShort = input.ReadInt32();
              break;
            }
            case 48: {
              ValByte = input.ReadInt32();
              break;
            }
            case 56: {
              ValBool = input.ReadBool();
              break;
            }
            case 64: {
              ValUint64 = input.ReadUInt64();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Type = input.ReadInt32();
              break;
            }
            case 18: {
              ValString = input.ReadString();
              break;
            }
            case 29: {
              ValFloat = input.ReadFloat();
              break;
            }
            case 32: {
              ValLong = input.ReadInt32();
              break;
            }
            case 40: {
              ValShort = input.ReadInt32();
              break;
            }
            case 48: {
              ValByte = input.ReadInt32();
              break;
            }
            case 56: {
              ValBool = input.ReadBool();
              break;
            }
            case 64: {
              ValUint64 = input.ReadUInt64();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsgList_GameEvents : pb::IMessage<CSVCMsgList_GameEvents>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsgList_GameEvents> _parser = new pb::MessageParser<CSVCMsgList_GameEvents>(() => new CSVCMsgList_GameEvents());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsgList_GameEvents> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsgList_GameEvents() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsgList_GameEvents(CSVCMsgList_GameEvents other) : this() {
    events_ = other.events_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsgList_GameEvents Clone() {
    return new CSVCMsgList_GameEvents(this);
  }

  /// <summary>Field number for the "events" field.</summary>
  public const int EventsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::CSVCMsgList_GameEvents.Types.event_t> _repeated_events_codec
      = pb::FieldCodec.ForMessage(10, global::CSVCMsgList_GameEvents.Types.event_t.Parser);
  private readonly pbc::RepeatedField<global::CSVCMsgList_GameEvents.Types.event_t> events_ = new pbc::RepeatedField<global::CSVCMsgList_GameEvents.Types.event_t>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CSVCMsgList_GameEvents.Types.event_t> Events {
    get { return events_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsgList_GameEvents);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsgList_GameEvents other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!events_.Equals(other.events_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= events_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    events_.WriteTo(output, _repeated_events_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    events_.WriteTo(ref output, _repeated_events_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    size += events_.CalculateSize(_repeated_events_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsgList_GameEvents other) {
    if (other == null) {
      return;
    }
    events_.Add(other.events_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          events_.AddEntriesFrom(input, _repeated_events_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          events_.AddEntriesFrom(ref input, _repeated_events_codec);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CSVCMsgList_GameEvents message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class event_t : pb::IMessage<event_t>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<event_t> _parser = new pb::MessageParser<event_t>(() => new event_t());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<event_t> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CSVCMsgList_GameEvents.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public event_t() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public event_t(event_t other) : this() {
        _hasBits0 = other._hasBits0;
        tick_ = other.tick_;
        event_ = other.event_ != null ? other.event_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public event_t Clone() {
        return new event_t(this);
      }

      /// <summary>Field number for the "tick" field.</summary>
      public const int TickFieldNumber = 1;
      private readonly static int TickDefaultValue = 0;

      private int tick_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Tick {
        get { if ((_hasBits0 & 1) != 0) { return tick_; } else { return TickDefaultValue; } }
        set {
          _hasBits0 |= 1;
          tick_ = value;
        }
      }
      /// <summary>Gets whether the "tick" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTick {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "tick" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTick() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "event" field.</summary>
      public const int EventFieldNumber = 2;
      private global::CSVCMsg_GameEvent event_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CSVCMsg_GameEvent Event {
        get { return event_; }
        set {
          event_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as event_t);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(event_t other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (Tick != other.Tick) return false;
        if (!object.Equals(Event, other.Event)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTick) hash ^= Tick.GetHashCode();
        if (event_ != null) hash ^= Event.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTick) {
          output.WriteRawTag(8);
          output.WriteInt32(Tick);
        }
        if (event_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Event);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTick) {
          output.WriteRawTag(8);
          output.WriteInt32(Tick);
        }
        if (event_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Event);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTick) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tick);
        }
        if (event_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(event_t other) {
        if (other == null) {
          return;
        }
        if (other.HasTick) {
          Tick = other.Tick;
        }
        if (other.event_ != null) {
          if (event_ == null) {
            Event = new global::CSVCMsg_GameEvent();
          }
          Event.MergeFrom(other.Event);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              Tick = input.ReadInt32();
              break;
            }
            case 18: {
              if (event_ == null) {
                Event = new global::CSVCMsg_GameEvent();
              }
              input.ReadMessage(Event);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
        if ((tag & 7) == 4) {
          // Abort on any end group tag.
          return;
        }
        switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              Tick = input.ReadInt32();
              break;
            }
            case 18: {
              if (event_ == null) {
                Event = new global::CSVCMsg_GameEvent();
              }
              input.ReadMessage(Event);
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SpawnGroup_Load : pb::IMessage<CNETMsg_SpawnGroup_Load>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SpawnGroup_Load> _parser = new pb::MessageParser<CNETMsg_SpawnGroup_Load>(() => new CNETMsg_SpawnGroup_Load());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SpawnGroup_Load> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Load() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Load(CNETMsg_SpawnGroup_Load other) : this() {
    _hasBits0 = other._hasBits0;
    worldname_ = other.worldname_;
    entitylumpname_ = other.entitylumpname_;
    entityfiltername_ = other.entityfiltername_;
    spawngrouphandle_ = other.spawngrouphandle_;
    spawngroupownerhandle_ = other.spawngroupownerhandle_;
    worldOffsetPos_ = other.worldOffsetPos_ != null ? other.worldOffsetPos_.Clone() : null;
    worldOffsetAngle_ = other.worldOffsetAngle_ != null ? other.worldOffsetAngle_.Clone() : null;
    spawngroupmanifest_ = other.spawngroupmanifest_;
    flags_ = other.flags_;
    tickcount_ = other.tickcount_;
    manifestincomplete_ = other.manifestincomplete_;
    localnamefixup_ = other.localnamefixup_;
    parentnamefixup_ = other.parentnamefixup_;
    manifestloadpriority_ = other.manifestloadpriority_;
    worldgroupid_ = other.worldgroupid_;
    creationsequence_ = other.creationsequence_;
    savegamefilename_ = other.savegamefilename_;
    spawngroupparenthandle_ = other.spawngroupparenthandle_;
    leveltransition_ = other.leveltransition_;
    worldgroupname_ = other.worldgroupname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Load Clone() {
    return new CNETMsg_SpawnGroup_Load(this);
  }

  /// <summary>Field number for the "worldname" field.</summary>
  public const int WorldnameFieldNumber = 1;
  private readonly static string WorldnameDefaultValue = "";

  private string worldname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Worldname {
    get { return worldname_ ?? WorldnameDefaultValue; }
    set {
      worldname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "worldname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldname {
    get { return worldname_ != null; }
  }
  /// <summary>Clears the value of the "worldname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldname() {
    worldname_ = null;
  }

  /// <summary>Field number for the "entitylumpname" field.</summary>
  public const int EntitylumpnameFieldNumber = 2;
  private readonly static string EntitylumpnameDefaultValue = "";

  private string entitylumpname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Entitylumpname {
    get { return entitylumpname_ ?? EntitylumpnameDefaultValue; }
    set {
      entitylumpname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "entitylumpname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntitylumpname {
    get { return entitylumpname_ != null; }
  }
  /// <summary>Clears the value of the "entitylumpname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntitylumpname() {
    entitylumpname_ = null;
  }

  /// <summary>Field number for the "entityfiltername" field.</summary>
  public const int EntityfilternameFieldNumber = 3;
  private readonly static string EntityfilternameDefaultValue = "";

  private string entityfiltername_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Entityfiltername {
    get { return entityfiltername_ ?? EntityfilternameDefaultValue; }
    set {
      entityfiltername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "entityfiltername" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityfiltername {
    get { return entityfiltername_ != null; }
  }
  /// <summary>Clears the value of the "entityfiltername" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityfiltername() {
    entityfiltername_ = null;
  }

  /// <summary>Field number for the "spawngrouphandle" field.</summary>
  public const int SpawngrouphandleFieldNumber = 4;
  private readonly static uint SpawngrouphandleDefaultValue = 0;

  private uint spawngrouphandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngrouphandle {
    get { if ((_hasBits0 & 1) != 0) { return spawngrouphandle_; } else { return SpawngrouphandleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      spawngrouphandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngrouphandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngrouphandle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "spawngrouphandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngrouphandle() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "spawngroupownerhandle" field.</summary>
  public const int SpawngroupownerhandleFieldNumber = 5;
  private readonly static uint SpawngroupownerhandleDefaultValue = 0;

  private uint spawngroupownerhandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngroupownerhandle {
    get { if ((_hasBits0 & 2) != 0) { return spawngroupownerhandle_; } else { return SpawngroupownerhandleDefaultValue; } }
    set {
      _hasBits0 |= 2;
      spawngroupownerhandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngroupownerhandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngroupownerhandle {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "spawngroupownerhandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngroupownerhandle() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "world_offset_pos" field.</summary>
  public const int WorldOffsetPosFieldNumber = 6;
  private global::CMsgVector worldOffsetPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector WorldOffsetPos {
    get { return worldOffsetPos_; }
    set {
      worldOffsetPos_ = value;
    }
  }

  /// <summary>Field number for the "world_offset_angle" field.</summary>
  public const int WorldOffsetAngleFieldNumber = 7;
  private global::CMsgQAngle worldOffsetAngle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle WorldOffsetAngle {
    get { return worldOffsetAngle_; }
    set {
      worldOffsetAngle_ = value;
    }
  }

  /// <summary>Field number for the "spawngroupmanifest" field.</summary>
  public const int SpawngroupmanifestFieldNumber = 8;
  private readonly static pb::ByteString SpawngroupmanifestDefaultValue = pb::ByteString.Empty;

  private pb::ByteString spawngroupmanifest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Spawngroupmanifest {
    get { return spawngroupmanifest_ ?? SpawngroupmanifestDefaultValue; }
    set {
      spawngroupmanifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "spawngroupmanifest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngroupmanifest {
    get { return spawngroupmanifest_ != null; }
  }
  /// <summary>Clears the value of the "spawngroupmanifest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngroupmanifest() {
    spawngroupmanifest_ = null;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 9;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 4) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "tickcount" field.</summary>
  public const int TickcountFieldNumber = 10;
  private readonly static int TickcountDefaultValue = 0;

  private int tickcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tickcount {
    get { if ((_hasBits0 & 8) != 0) { return tickcount_; } else { return TickcountDefaultValue; } }
    set {
      _hasBits0 |= 8;
      tickcount_ = value;
    }
  }
  /// <summary>Gets whether the "tickcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTickcount {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "tickcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTickcount() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "manifestincomplete" field.</summary>
  public const int ManifestincompleteFieldNumber = 11;
  private readonly static bool ManifestincompleteDefaultValue = false;

  private bool manifestincomplete_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Manifestincomplete {
    get { if ((_hasBits0 & 16) != 0) { return manifestincomplete_; } else { return ManifestincompleteDefaultValue; } }
    set {
      _hasBits0 |= 16;
      manifestincomplete_ = value;
    }
  }
  /// <summary>Gets whether the "manifestincomplete" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestincomplete {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "manifestincomplete" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestincomplete() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "localnamefixup" field.</summary>
  public const int LocalnamefixupFieldNumber = 12;
  private readonly static string LocalnamefixupDefaultValue = "";

  private string localnamefixup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Localnamefixup {
    get { return localnamefixup_ ?? LocalnamefixupDefaultValue; }
    set {
      localnamefixup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "localnamefixup" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLocalnamefixup {
    get { return localnamefixup_ != null; }
  }
  /// <summary>Clears the value of the "localnamefixup" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLocalnamefixup() {
    localnamefixup_ = null;
  }

  /// <summary>Field number for the "parentnamefixup" field.</summary>
  public const int ParentnamefixupFieldNumber = 13;
  private readonly static string ParentnamefixupDefaultValue = "";

  private string parentnamefixup_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Parentnamefixup {
    get { return parentnamefixup_ ?? ParentnamefixupDefaultValue; }
    set {
      parentnamefixup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "parentnamefixup" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParentnamefixup {
    get { return parentnamefixup_ != null; }
  }
  /// <summary>Clears the value of the "parentnamefixup" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParentnamefixup() {
    parentnamefixup_ = null;
  }

  /// <summary>Field number for the "manifestloadpriority" field.</summary>
  public const int ManifestloadpriorityFieldNumber = 14;
  private readonly static int ManifestloadpriorityDefaultValue = 0;

  private int manifestloadpriority_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Manifestloadpriority {
    get { if ((_hasBits0 & 32) != 0) { return manifestloadpriority_; } else { return ManifestloadpriorityDefaultValue; } }
    set {
      _hasBits0 |= 32;
      manifestloadpriority_ = value;
    }
  }
  /// <summary>Gets whether the "manifestloadpriority" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestloadpriority {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "manifestloadpriority" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestloadpriority() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "worldgroupid" field.</summary>
  public const int WorldgroupidFieldNumber = 15;
  private readonly static uint WorldgroupidDefaultValue = 0;

  private uint worldgroupid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Worldgroupid {
    get { if ((_hasBits0 & 64) != 0) { return worldgroupid_; } else { return WorldgroupidDefaultValue; } }
    set {
      _hasBits0 |= 64;
      worldgroupid_ = value;
    }
  }
  /// <summary>Gets whether the "worldgroupid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldgroupid {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "worldgroupid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldgroupid() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "creationsequence" field.</summary>
  public const int CreationsequenceFieldNumber = 16;
  private readonly static uint CreationsequenceDefaultValue = 0;

  private uint creationsequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Creationsequence {
    get { if ((_hasBits0 & 128) != 0) { return creationsequence_; } else { return CreationsequenceDefaultValue; } }
    set {
      _hasBits0 |= 128;
      creationsequence_ = value;
    }
  }
  /// <summary>Gets whether the "creationsequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreationsequence {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "creationsequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreationsequence() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "savegamefilename" field.</summary>
  public const int SavegamefilenameFieldNumber = 17;
  private readonly static string SavegamefilenameDefaultValue = "";

  private string savegamefilename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Savegamefilename {
    get { return savegamefilename_ ?? SavegamefilenameDefaultValue; }
    set {
      savegamefilename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "savegamefilename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSavegamefilename {
    get { return savegamefilename_ != null; }
  }
  /// <summary>Clears the value of the "savegamefilename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSavegamefilename() {
    savegamefilename_ = null;
  }

  /// <summary>Field number for the "spawngroupparenthandle" field.</summary>
  public const int SpawngroupparenthandleFieldNumber = 18;
  private readonly static uint SpawngroupparenthandleDefaultValue = 0;

  private uint spawngroupparenthandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngroupparenthandle {
    get { if ((_hasBits0 & 256) != 0) { return spawngroupparenthandle_; } else { return SpawngroupparenthandleDefaultValue; } }
    set {
      _hasBits0 |= 256;
      spawngroupparenthandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngroupparenthandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngroupparenthandle {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "spawngroupparenthandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngroupparenthandle() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "leveltransition" field.</summary>
  public const int LeveltransitionFieldNumber = 19;
  private readonly static bool LeveltransitionDefaultValue = false;

  private bool leveltransition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Leveltransition {
    get { if ((_hasBits0 & 512) != 0) { return leveltransition_; } else { return LeveltransitionDefaultValue; } }
    set {
      _hasBits0 |= 512;
      leveltransition_ = value;
    }
  }
  /// <summary>Gets whether the "leveltransition" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLeveltransition {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "leveltransition" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLeveltransition() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "worldgroupname" field.</summary>
  public const int WorldgroupnameFieldNumber = 20;
  private readonly static string WorldgroupnameDefaultValue = "";

  private string worldgroupname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Worldgroupname {
    get { return worldgroupname_ ?? WorldgroupnameDefaultValue; }
    set {
      worldgroupname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "worldgroupname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWorldgroupname {
    get { return worldgroupname_ != null; }
  }
  /// <summary>Clears the value of the "worldgroupname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWorldgroupname() {
    worldgroupname_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SpawnGroup_Load);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SpawnGroup_Load other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Worldname != other.Worldname) return false;
    if (Entitylumpname != other.Entitylumpname) return false;
    if (Entityfiltername != other.Entityfiltername) return false;
    if (Spawngrouphandle != other.Spawngrouphandle) return false;
    if (Spawngroupownerhandle != other.Spawngroupownerhandle) return false;
    if (!object.Equals(WorldOffsetPos, other.WorldOffsetPos)) return false;
    if (!object.Equals(WorldOffsetAngle, other.WorldOffsetAngle)) return false;
    if (Spawngroupmanifest != other.Spawngroupmanifest) return false;
    if (Flags != other.Flags) return false;
    if (Tickcount != other.Tickcount) return false;
    if (Manifestincomplete != other.Manifestincomplete) return false;
    if (Localnamefixup != other.Localnamefixup) return false;
    if (Parentnamefixup != other.Parentnamefixup) return false;
    if (Manifestloadpriority != other.Manifestloadpriority) return false;
    if (Worldgroupid != other.Worldgroupid) return false;
    if (Creationsequence != other.Creationsequence) return false;
    if (Savegamefilename != other.Savegamefilename) return false;
    if (Spawngroupparenthandle != other.Spawngroupparenthandle) return false;
    if (Leveltransition != other.Leveltransition) return false;
    if (Worldgroupname != other.Worldgroupname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasWorldname) hash ^= Worldname.GetHashCode();
    if (HasEntitylumpname) hash ^= Entitylumpname.GetHashCode();
    if (HasEntityfiltername) hash ^= Entityfiltername.GetHashCode();
    if (HasSpawngrouphandle) hash ^= Spawngrouphandle.GetHashCode();
    if (HasSpawngroupownerhandle) hash ^= Spawngroupownerhandle.GetHashCode();
    if (worldOffsetPos_ != null) hash ^= WorldOffsetPos.GetHashCode();
    if (worldOffsetAngle_ != null) hash ^= WorldOffsetAngle.GetHashCode();
    if (HasSpawngroupmanifest) hash ^= Spawngroupmanifest.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasTickcount) hash ^= Tickcount.GetHashCode();
    if (HasManifestincomplete) hash ^= Manifestincomplete.GetHashCode();
    if (HasLocalnamefixup) hash ^= Localnamefixup.GetHashCode();
    if (HasParentnamefixup) hash ^= Parentnamefixup.GetHashCode();
    if (HasManifestloadpriority) hash ^= Manifestloadpriority.GetHashCode();
    if (HasWorldgroupid) hash ^= Worldgroupid.GetHashCode();
    if (HasCreationsequence) hash ^= Creationsequence.GetHashCode();
    if (HasSavegamefilename) hash ^= Savegamefilename.GetHashCode();
    if (HasSpawngroupparenthandle) hash ^= Spawngroupparenthandle.GetHashCode();
    if (HasLeveltransition) hash ^= Leveltransition.GetHashCode();
    if (HasWorldgroupname) hash ^= Worldgroupname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasWorldname) {
      output.WriteRawTag(10);
      output.WriteString(Worldname);
    }
    if (HasEntitylumpname) {
      output.WriteRawTag(18);
      output.WriteString(Entitylumpname);
    }
    if (HasEntityfiltername) {
      output.WriteRawTag(26);
      output.WriteString(Entityfiltername);
    }
    if (HasSpawngrouphandle) {
      output.WriteRawTag(32);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasSpawngroupownerhandle) {
      output.WriteRawTag(40);
      output.WriteUInt32(Spawngroupownerhandle);
    }
    if (worldOffsetPos_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(WorldOffsetPos);
    }
    if (worldOffsetAngle_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(WorldOffsetAngle);
    }
    if (HasSpawngroupmanifest) {
      output.WriteRawTag(66);
      output.WriteBytes(Spawngroupmanifest);
    }
    if (HasFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(Flags);
    }
    if (HasTickcount) {
      output.WriteRawTag(80);
      output.WriteInt32(Tickcount);
    }
    if (HasManifestincomplete) {
      output.WriteRawTag(88);
      output.WriteBool(Manifestincomplete);
    }
    if (HasLocalnamefixup) {
      output.WriteRawTag(98);
      output.WriteString(Localnamefixup);
    }
    if (HasParentnamefixup) {
      output.WriteRawTag(106);
      output.WriteString(Parentnamefixup);
    }
    if (HasManifestloadpriority) {
      output.WriteRawTag(112);
      output.WriteInt32(Manifestloadpriority);
    }
    if (HasWorldgroupid) {
      output.WriteRawTag(120);
      output.WriteUInt32(Worldgroupid);
    }
    if (HasCreationsequence) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Creationsequence);
    }
    if (HasSavegamefilename) {
      output.WriteRawTag(138, 1);
      output.WriteString(Savegamefilename);
    }
    if (HasSpawngroupparenthandle) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Spawngroupparenthandle);
    }
    if (HasLeveltransition) {
      output.WriteRawTag(152, 1);
      output.WriteBool(Leveltransition);
    }
    if (HasWorldgroupname) {
      output.WriteRawTag(162, 1);
      output.WriteString(Worldgroupname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasWorldname) {
      output.WriteRawTag(10);
      output.WriteString(Worldname);
    }
    if (HasEntitylumpname) {
      output.WriteRawTag(18);
      output.WriteString(Entitylumpname);
    }
    if (HasEntityfiltername) {
      output.WriteRawTag(26);
      output.WriteString(Entityfiltername);
    }
    if (HasSpawngrouphandle) {
      output.WriteRawTag(32);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasSpawngroupownerhandle) {
      output.WriteRawTag(40);
      output.WriteUInt32(Spawngroupownerhandle);
    }
    if (worldOffsetPos_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(WorldOffsetPos);
    }
    if (worldOffsetAngle_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(WorldOffsetAngle);
    }
    if (HasSpawngroupmanifest) {
      output.WriteRawTag(66);
      output.WriteBytes(Spawngroupmanifest);
    }
    if (HasFlags) {
      output.WriteRawTag(72);
      output.WriteUInt32(Flags);
    }
    if (HasTickcount) {
      output.WriteRawTag(80);
      output.WriteInt32(Tickcount);
    }
    if (HasManifestincomplete) {
      output.WriteRawTag(88);
      output.WriteBool(Manifestincomplete);
    }
    if (HasLocalnamefixup) {
      output.WriteRawTag(98);
      output.WriteString(Localnamefixup);
    }
    if (HasParentnamefixup) {
      output.WriteRawTag(106);
      output.WriteString(Parentnamefixup);
    }
    if (HasManifestloadpriority) {
      output.WriteRawTag(112);
      output.WriteInt32(Manifestloadpriority);
    }
    if (HasWorldgroupid) {
      output.WriteRawTag(120);
      output.WriteUInt32(Worldgroupid);
    }
    if (HasCreationsequence) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(Creationsequence);
    }
    if (HasSavegamefilename) {
      output.WriteRawTag(138, 1);
      output.WriteString(Savegamefilename);
    }
    if (HasSpawngroupparenthandle) {
      output.WriteRawTag(144, 1);
      output.WriteUInt32(Spawngroupparenthandle);
    }
    if (HasLeveltransition) {
      output.WriteRawTag(152, 1);
      output.WriteBool(Leveltransition);
    }
    if (HasWorldgroupname) {
      output.WriteRawTag(162, 1);
      output.WriteString(Worldgroupname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasWorldname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Worldname);
    }
    if (HasEntitylumpname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Entitylumpname);
    }
    if (HasEntityfiltername) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Entityfiltername);
    }
    if (HasSpawngrouphandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngrouphandle);
    }
    if (HasSpawngroupownerhandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngroupownerhandle);
    }
    if (worldOffsetPos_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldOffsetPos);
    }
    if (worldOffsetAngle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldOffsetAngle);
    }
    if (HasSpawngroupmanifest) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Spawngroupmanifest);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (HasTickcount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tickcount);
    }
    if (HasManifestincomplete) {
      size += 1 + 1;
    }
    if (HasLocalnamefixup) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Localnamefixup);
    }
    if (HasParentnamefixup) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Parentnamefixup);
    }
    if (HasManifestloadpriority) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Manifestloadpriority);
    }
    if (HasWorldgroupid) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Worldgroupid);
    }
    if (HasCreationsequence) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Creationsequence);
    }
    if (HasSavegamefilename) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Savegamefilename);
    }
    if (HasSpawngroupparenthandle) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Spawngroupparenthandle);
    }
    if (HasLeveltransition) {
      size += 2 + 1;
    }
    if (HasWorldgroupname) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Worldgroupname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SpawnGroup_Load other) {
    if (other == null) {
      return;
    }
    if (other.HasWorldname) {
      Worldname = other.Worldname;
    }
    if (other.HasEntitylumpname) {
      Entitylumpname = other.Entitylumpname;
    }
    if (other.HasEntityfiltername) {
      Entityfiltername = other.Entityfiltername;
    }
    if (other.HasSpawngrouphandle) {
      Spawngrouphandle = other.Spawngrouphandle;
    }
    if (other.HasSpawngroupownerhandle) {
      Spawngroupownerhandle = other.Spawngroupownerhandle;
    }
    if (other.worldOffsetPos_ != null) {
      if (worldOffsetPos_ == null) {
        WorldOffsetPos = new global::CMsgVector();
      }
      WorldOffsetPos.MergeFrom(other.WorldOffsetPos);
    }
    if (other.worldOffsetAngle_ != null) {
      if (worldOffsetAngle_ == null) {
        WorldOffsetAngle = new global::CMsgQAngle();
      }
      WorldOffsetAngle.MergeFrom(other.WorldOffsetAngle);
    }
    if (other.HasSpawngroupmanifest) {
      Spawngroupmanifest = other.Spawngroupmanifest;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasTickcount) {
      Tickcount = other.Tickcount;
    }
    if (other.HasManifestincomplete) {
      Manifestincomplete = other.Manifestincomplete;
    }
    if (other.HasLocalnamefixup) {
      Localnamefixup = other.Localnamefixup;
    }
    if (other.HasParentnamefixup) {
      Parentnamefixup = other.Parentnamefixup;
    }
    if (other.HasManifestloadpriority) {
      Manifestloadpriority = other.Manifestloadpriority;
    }
    if (other.HasWorldgroupid) {
      Worldgroupid = other.Worldgroupid;
    }
    if (other.HasCreationsequence) {
      Creationsequence = other.Creationsequence;
    }
    if (other.HasSavegamefilename) {
      Savegamefilename = other.Savegamefilename;
    }
    if (other.HasSpawngroupparenthandle) {
      Spawngroupparenthandle = other.Spawngroupparenthandle;
    }
    if (other.HasLeveltransition) {
      Leveltransition = other.Leveltransition;
    }
    if (other.HasWorldgroupname) {
      Worldgroupname = other.Worldgroupname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Worldname = input.ReadString();
          break;
        }
        case 18: {
          Entitylumpname = input.ReadString();
          break;
        }
        case 26: {
          Entityfiltername = input.ReadString();
          break;
        }
        case 32: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 40: {
          Spawngroupownerhandle = input.ReadUInt32();
          break;
        }
        case 50: {
          if (worldOffsetPos_ == null) {
            WorldOffsetPos = new global::CMsgVector();
          }
          input.ReadMessage(WorldOffsetPos);
          break;
        }
        case 58: {
          if (worldOffsetAngle_ == null) {
            WorldOffsetAngle = new global::CMsgQAngle();
          }
          input.ReadMessage(WorldOffsetAngle);
          break;
        }
        case 66: {
          Spawngroupmanifest = input.ReadBytes();
          break;
        }
        case 72: {
          Flags = input.ReadUInt32();
          break;
        }
        case 80: {
          Tickcount = input.ReadInt32();
          break;
        }
        case 88: {
          Manifestincomplete = input.ReadBool();
          break;
        }
        case 98: {
          Localnamefixup = input.ReadString();
          break;
        }
        case 106: {
          Parentnamefixup = input.ReadString();
          break;
        }
        case 112: {
          Manifestloadpriority = input.ReadInt32();
          break;
        }
        case 120: {
          Worldgroupid = input.ReadUInt32();
          break;
        }
        case 128: {
          Creationsequence = input.ReadUInt32();
          break;
        }
        case 138: {
          Savegamefilename = input.ReadString();
          break;
        }
        case 144: {
          Spawngroupparenthandle = input.ReadUInt32();
          break;
        }
        case 152: {
          Leveltransition = input.ReadBool();
          break;
        }
        case 162: {
          Worldgroupname = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Worldname = input.ReadString();
          break;
        }
        case 18: {
          Entitylumpname = input.ReadString();
          break;
        }
        case 26: {
          Entityfiltername = input.ReadString();
          break;
        }
        case 32: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 40: {
          Spawngroupownerhandle = input.ReadUInt32();
          break;
        }
        case 50: {
          if (worldOffsetPos_ == null) {
            WorldOffsetPos = new global::CMsgVector();
          }
          input.ReadMessage(WorldOffsetPos);
          break;
        }
        case 58: {
          if (worldOffsetAngle_ == null) {
            WorldOffsetAngle = new global::CMsgQAngle();
          }
          input.ReadMessage(WorldOffsetAngle);
          break;
        }
        case 66: {
          Spawngroupmanifest = input.ReadBytes();
          break;
        }
        case 72: {
          Flags = input.ReadUInt32();
          break;
        }
        case 80: {
          Tickcount = input.ReadInt32();
          break;
        }
        case 88: {
          Manifestincomplete = input.ReadBool();
          break;
        }
        case 98: {
          Localnamefixup = input.ReadString();
          break;
        }
        case 106: {
          Parentnamefixup = input.ReadString();
          break;
        }
        case 112: {
          Manifestloadpriority = input.ReadInt32();
          break;
        }
        case 120: {
          Worldgroupid = input.ReadUInt32();
          break;
        }
        case 128: {
          Creationsequence = input.ReadUInt32();
          break;
        }
        case 138: {
          Savegamefilename = input.ReadString();
          break;
        }
        case 144: {
          Spawngroupparenthandle = input.ReadUInt32();
          break;
        }
        case 152: {
          Leveltransition = input.ReadBool();
          break;
        }
        case 162: {
          Worldgroupname = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SpawnGroup_ManifestUpdate : pb::IMessage<CNETMsg_SpawnGroup_ManifestUpdate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SpawnGroup_ManifestUpdate> _parser = new pb::MessageParser<CNETMsg_SpawnGroup_ManifestUpdate>(() => new CNETMsg_SpawnGroup_ManifestUpdate());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SpawnGroup_ManifestUpdate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_ManifestUpdate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_ManifestUpdate(CNETMsg_SpawnGroup_ManifestUpdate other) : this() {
    _hasBits0 = other._hasBits0;
    spawngrouphandle_ = other.spawngrouphandle_;
    spawngroupmanifest_ = other.spawngroupmanifest_;
    manifestincomplete_ = other.manifestincomplete_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_ManifestUpdate Clone() {
    return new CNETMsg_SpawnGroup_ManifestUpdate(this);
  }

  /// <summary>Field number for the "spawngrouphandle" field.</summary>
  public const int SpawngrouphandleFieldNumber = 1;
  private readonly static uint SpawngrouphandleDefaultValue = 0;

  private uint spawngrouphandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngrouphandle {
    get { if ((_hasBits0 & 1) != 0) { return spawngrouphandle_; } else { return SpawngrouphandleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      spawngrouphandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngrouphandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngrouphandle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "spawngrouphandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngrouphandle() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "spawngroupmanifest" field.</summary>
  public const int SpawngroupmanifestFieldNumber = 2;
  private readonly static pb::ByteString SpawngroupmanifestDefaultValue = pb::ByteString.Empty;

  private pb::ByteString spawngroupmanifest_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Spawngroupmanifest {
    get { return spawngroupmanifest_ ?? SpawngroupmanifestDefaultValue; }
    set {
      spawngroupmanifest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "spawngroupmanifest" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngroupmanifest {
    get { return spawngroupmanifest_ != null; }
  }
  /// <summary>Clears the value of the "spawngroupmanifest" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngroupmanifest() {
    spawngroupmanifest_ = null;
  }

  /// <summary>Field number for the "manifestincomplete" field.</summary>
  public const int ManifestincompleteFieldNumber = 3;
  private readonly static bool ManifestincompleteDefaultValue = false;

  private bool manifestincomplete_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Manifestincomplete {
    get { if ((_hasBits0 & 2) != 0) { return manifestincomplete_; } else { return ManifestincompleteDefaultValue; } }
    set {
      _hasBits0 |= 2;
      manifestincomplete_ = value;
    }
  }
  /// <summary>Gets whether the "manifestincomplete" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasManifestincomplete {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "manifestincomplete" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearManifestincomplete() {
    _hasBits0 &= ~2;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SpawnGroup_ManifestUpdate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SpawnGroup_ManifestUpdate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Spawngrouphandle != other.Spawngrouphandle) return false;
    if (Spawngroupmanifest != other.Spawngroupmanifest) return false;
    if (Manifestincomplete != other.Manifestincomplete) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSpawngrouphandle) hash ^= Spawngrouphandle.GetHashCode();
    if (HasSpawngroupmanifest) hash ^= Spawngroupmanifest.GetHashCode();
    if (HasManifestincomplete) hash ^= Manifestincomplete.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasSpawngroupmanifest) {
      output.WriteRawTag(18);
      output.WriteBytes(Spawngroupmanifest);
    }
    if (HasManifestincomplete) {
      output.WriteRawTag(24);
      output.WriteBool(Manifestincomplete);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasSpawngroupmanifest) {
      output.WriteRawTag(18);
      output.WriteBytes(Spawngroupmanifest);
    }
    if (HasManifestincomplete) {
      output.WriteRawTag(24);
      output.WriteBool(Manifestincomplete);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSpawngrouphandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngrouphandle);
    }
    if (HasSpawngroupmanifest) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Spawngroupmanifest);
    }
    if (HasManifestincomplete) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SpawnGroup_ManifestUpdate other) {
    if (other == null) {
      return;
    }
    if (other.HasSpawngrouphandle) {
      Spawngrouphandle = other.Spawngrouphandle;
    }
    if (other.HasSpawngroupmanifest) {
      Spawngroupmanifest = other.Spawngroupmanifest;
    }
    if (other.HasManifestincomplete) {
      Manifestincomplete = other.Manifestincomplete;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 18: {
          Spawngroupmanifest = input.ReadBytes();
          break;
        }
        case 24: {
          Manifestincomplete = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 18: {
          Spawngroupmanifest = input.ReadBytes();
          break;
        }
        case 24: {
          Manifestincomplete = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SpawnGroup_SetCreationTick : pb::IMessage<CNETMsg_SpawnGroup_SetCreationTick>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SpawnGroup_SetCreationTick> _parser = new pb::MessageParser<CNETMsg_SpawnGroup_SetCreationTick>(() => new CNETMsg_SpawnGroup_SetCreationTick());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SpawnGroup_SetCreationTick> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_SetCreationTick() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_SetCreationTick(CNETMsg_SpawnGroup_SetCreationTick other) : this() {
    _hasBits0 = other._hasBits0;
    spawngrouphandle_ = other.spawngrouphandle_;
    tickcount_ = other.tickcount_;
    creationsequence_ = other.creationsequence_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_SetCreationTick Clone() {
    return new CNETMsg_SpawnGroup_SetCreationTick(this);
  }

  /// <summary>Field number for the "spawngrouphandle" field.</summary>
  public const int SpawngrouphandleFieldNumber = 1;
  private readonly static uint SpawngrouphandleDefaultValue = 0;

  private uint spawngrouphandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngrouphandle {
    get { if ((_hasBits0 & 1) != 0) { return spawngrouphandle_; } else { return SpawngrouphandleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      spawngrouphandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngrouphandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngrouphandle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "spawngrouphandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngrouphandle() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "tickcount" field.</summary>
  public const int TickcountFieldNumber = 2;
  private readonly static int TickcountDefaultValue = 0;

  private int tickcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tickcount {
    get { if ((_hasBits0 & 2) != 0) { return tickcount_; } else { return TickcountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      tickcount_ = value;
    }
  }
  /// <summary>Gets whether the "tickcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTickcount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "tickcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTickcount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "creationsequence" field.</summary>
  public const int CreationsequenceFieldNumber = 3;
  private readonly static uint CreationsequenceDefaultValue = 0;

  private uint creationsequence_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Creationsequence {
    get { if ((_hasBits0 & 4) != 0) { return creationsequence_; } else { return CreationsequenceDefaultValue; } }
    set {
      _hasBits0 |= 4;
      creationsequence_ = value;
    }
  }
  /// <summary>Gets whether the "creationsequence" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreationsequence {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "creationsequence" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreationsequence() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SpawnGroup_SetCreationTick);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SpawnGroup_SetCreationTick other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Spawngrouphandle != other.Spawngrouphandle) return false;
    if (Tickcount != other.Tickcount) return false;
    if (Creationsequence != other.Creationsequence) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSpawngrouphandle) hash ^= Spawngrouphandle.GetHashCode();
    if (HasTickcount) hash ^= Tickcount.GetHashCode();
    if (HasCreationsequence) hash ^= Creationsequence.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasTickcount) {
      output.WriteRawTag(16);
      output.WriteInt32(Tickcount);
    }
    if (HasCreationsequence) {
      output.WriteRawTag(24);
      output.WriteUInt32(Creationsequence);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasTickcount) {
      output.WriteRawTag(16);
      output.WriteInt32(Tickcount);
    }
    if (HasCreationsequence) {
      output.WriteRawTag(24);
      output.WriteUInt32(Creationsequence);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSpawngrouphandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngrouphandle);
    }
    if (HasTickcount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tickcount);
    }
    if (HasCreationsequence) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Creationsequence);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SpawnGroup_SetCreationTick other) {
    if (other == null) {
      return;
    }
    if (other.HasSpawngrouphandle) {
      Spawngrouphandle = other.Spawngrouphandle;
    }
    if (other.HasTickcount) {
      Tickcount = other.Tickcount;
    }
    if (other.HasCreationsequence) {
      Creationsequence = other.Creationsequence;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 16: {
          Tickcount = input.ReadInt32();
          break;
        }
        case 24: {
          Creationsequence = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 16: {
          Tickcount = input.ReadInt32();
          break;
        }
        case 24: {
          Creationsequence = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SpawnGroup_Unload : pb::IMessage<CNETMsg_SpawnGroup_Unload>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SpawnGroup_Unload> _parser = new pb::MessageParser<CNETMsg_SpawnGroup_Unload>(() => new CNETMsg_SpawnGroup_Unload());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SpawnGroup_Unload> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Unload() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Unload(CNETMsg_SpawnGroup_Unload other) : this() {
    _hasBits0 = other._hasBits0;
    spawngrouphandle_ = other.spawngrouphandle_;
    flags_ = other.flags_;
    tickcount_ = other.tickcount_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_Unload Clone() {
    return new CNETMsg_SpawnGroup_Unload(this);
  }

  /// <summary>Field number for the "spawngrouphandle" field.</summary>
  public const int SpawngrouphandleFieldNumber = 1;
  private readonly static uint SpawngrouphandleDefaultValue = 0;

  private uint spawngrouphandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngrouphandle {
    get { if ((_hasBits0 & 1) != 0) { return spawngrouphandle_; } else { return SpawngrouphandleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      spawngrouphandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngrouphandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngrouphandle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "spawngrouphandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngrouphandle() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "flags" field.</summary>
  public const int FlagsFieldNumber = 2;
  private readonly static uint FlagsDefaultValue = 0;

  private uint flags_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Flags {
    get { if ((_hasBits0 & 2) != 0) { return flags_; } else { return FlagsDefaultValue; } }
    set {
      _hasBits0 |= 2;
      flags_ = value;
    }
  }
  /// <summary>Gets whether the "flags" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFlags {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "flags" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFlags() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "tickcount" field.</summary>
  public const int TickcountFieldNumber = 3;
  private readonly static int TickcountDefaultValue = 0;

  private int tickcount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Tickcount {
    get { if ((_hasBits0 & 4) != 0) { return tickcount_; } else { return TickcountDefaultValue; } }
    set {
      _hasBits0 |= 4;
      tickcount_ = value;
    }
  }
  /// <summary>Gets whether the "tickcount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTickcount {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "tickcount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTickcount() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SpawnGroup_Unload);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SpawnGroup_Unload other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Spawngrouphandle != other.Spawngrouphandle) return false;
    if (Flags != other.Flags) return false;
    if (Tickcount != other.Tickcount) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSpawngrouphandle) hash ^= Spawngrouphandle.GetHashCode();
    if (HasFlags) hash ^= Flags.GetHashCode();
    if (HasTickcount) hash ^= Tickcount.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasFlags) {
      output.WriteRawTag(16);
      output.WriteUInt32(Flags);
    }
    if (HasTickcount) {
      output.WriteRawTag(24);
      output.WriteInt32(Tickcount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (HasFlags) {
      output.WriteRawTag(16);
      output.WriteUInt32(Flags);
    }
    if (HasTickcount) {
      output.WriteRawTag(24);
      output.WriteInt32(Tickcount);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSpawngrouphandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngrouphandle);
    }
    if (HasFlags) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Flags);
    }
    if (HasTickcount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tickcount);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SpawnGroup_Unload other) {
    if (other == null) {
      return;
    }
    if (other.HasSpawngrouphandle) {
      Spawngrouphandle = other.Spawngrouphandle;
    }
    if (other.HasFlags) {
      Flags = other.Flags;
    }
    if (other.HasTickcount) {
      Tickcount = other.Tickcount;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 16: {
          Flags = input.ReadUInt32();
          break;
        }
        case 24: {
          Tickcount = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
        case 16: {
          Flags = input.ReadUInt32();
          break;
        }
        case 24: {
          Tickcount = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_SpawnGroup_LoadCompleted : pb::IMessage<CNETMsg_SpawnGroup_LoadCompleted>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_SpawnGroup_LoadCompleted> _parser = new pb::MessageParser<CNETMsg_SpawnGroup_LoadCompleted>(() => new CNETMsg_SpawnGroup_LoadCompleted());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_SpawnGroup_LoadCompleted> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_LoadCompleted() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_LoadCompleted(CNETMsg_SpawnGroup_LoadCompleted other) : this() {
    _hasBits0 = other._hasBits0;
    spawngrouphandle_ = other.spawngrouphandle_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_SpawnGroup_LoadCompleted Clone() {
    return new CNETMsg_SpawnGroup_LoadCompleted(this);
  }

  /// <summary>Field number for the "spawngrouphandle" field.</summary>
  public const int SpawngrouphandleFieldNumber = 1;
  private readonly static uint SpawngrouphandleDefaultValue = 0;

  private uint spawngrouphandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Spawngrouphandle {
    get { if ((_hasBits0 & 1) != 0) { return spawngrouphandle_; } else { return SpawngrouphandleDefaultValue; } }
    set {
      _hasBits0 |= 1;
      spawngrouphandle_ = value;
    }
  }
  /// <summary>Gets whether the "spawngrouphandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpawngrouphandle {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "spawngrouphandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpawngrouphandle() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_SpawnGroup_LoadCompleted);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_SpawnGroup_LoadCompleted other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Spawngrouphandle != other.Spawngrouphandle) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSpawngrouphandle) hash ^= Spawngrouphandle.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasSpawngrouphandle) {
      output.WriteRawTag(8);
      output.WriteUInt32(Spawngrouphandle);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasSpawngrouphandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Spawngrouphandle);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_SpawnGroup_LoadCompleted other) {
    if (other == null) {
      return;
    }
    if (other.HasSpawngrouphandle) {
      Spawngrouphandle = other.Spawngrouphandle;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Spawngrouphandle = input.ReadUInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CSVCMsg_GameSessionConfiguration : pb::IMessage<CSVCMsg_GameSessionConfiguration>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CSVCMsg_GameSessionConfiguration> _parser = new pb::MessageParser<CSVCMsg_GameSessionConfiguration>(() => new CSVCMsg_GameSessionConfiguration());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CSVCMsg_GameSessionConfiguration> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameSessionConfiguration() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameSessionConfiguration(CSVCMsg_GameSessionConfiguration other) : this() {
    _hasBits0 = other._hasBits0;
    isMultiplayer_ = other.isMultiplayer_;
    isLoadsavegame_ = other.isLoadsavegame_;
    isBackgroundMap_ = other.isBackgroundMap_;
    isHeadless_ = other.isHeadless_;
    minClientLimit_ = other.minClientLimit_;
    maxClientLimit_ = other.maxClientLimit_;
    maxClients_ = other.maxClients_;
    tickInterval_ = other.tickInterval_;
    hostname_ = other.hostname_;
    savegamename_ = other.savegamename_;
    s1Mapname_ = other.s1Mapname_;
    gamemode_ = other.gamemode_;
    serverIpAddress_ = other.serverIpAddress_;
    data_ = other.data_;
    isLocalonly_ = other.isLocalonly_;
    noSteamServer_ = other.noSteamServer_;
    isTransition_ = other.isTransition_;
    previouslevel_ = other.previouslevel_;
    landmarkname_ = other.landmarkname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CSVCMsg_GameSessionConfiguration Clone() {
    return new CSVCMsg_GameSessionConfiguration(this);
  }

  /// <summary>Field number for the "is_multiplayer" field.</summary>
  public const int IsMultiplayerFieldNumber = 1;
  private readonly static bool IsMultiplayerDefaultValue = false;

  private bool isMultiplayer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsMultiplayer {
    get { if ((_hasBits0 & 1) != 0) { return isMultiplayer_; } else { return IsMultiplayerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      isMultiplayer_ = value;
    }
  }
  /// <summary>Gets whether the "is_multiplayer" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsMultiplayer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "is_multiplayer" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsMultiplayer() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "is_loadsavegame" field.</summary>
  public const int IsLoadsavegameFieldNumber = 2;
  private readonly static bool IsLoadsavegameDefaultValue = false;

  private bool isLoadsavegame_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLoadsavegame {
    get { if ((_hasBits0 & 2) != 0) { return isLoadsavegame_; } else { return IsLoadsavegameDefaultValue; } }
    set {
      _hasBits0 |= 2;
      isLoadsavegame_ = value;
    }
  }
  /// <summary>Gets whether the "is_loadsavegame" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsLoadsavegame {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "is_loadsavegame" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsLoadsavegame() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "is_background_map" field.</summary>
  public const int IsBackgroundMapFieldNumber = 3;
  private readonly static bool IsBackgroundMapDefaultValue = false;

  private bool isBackgroundMap_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsBackgroundMap {
    get { if ((_hasBits0 & 4) != 0) { return isBackgroundMap_; } else { return IsBackgroundMapDefaultValue; } }
    set {
      _hasBits0 |= 4;
      isBackgroundMap_ = value;
    }
  }
  /// <summary>Gets whether the "is_background_map" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsBackgroundMap {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "is_background_map" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsBackgroundMap() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "is_headless" field.</summary>
  public const int IsHeadlessFieldNumber = 4;
  private readonly static bool IsHeadlessDefaultValue = false;

  private bool isHeadless_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsHeadless {
    get { if ((_hasBits0 & 8) != 0) { return isHeadless_; } else { return IsHeadlessDefaultValue; } }
    set {
      _hasBits0 |= 8;
      isHeadless_ = value;
    }
  }
  /// <summary>Gets whether the "is_headless" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsHeadless {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "is_headless" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsHeadless() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "min_client_limit" field.</summary>
  public const int MinClientLimitFieldNumber = 5;
  private readonly static uint MinClientLimitDefaultValue = 0;

  private uint minClientLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MinClientLimit {
    get { if ((_hasBits0 & 16) != 0) { return minClientLimit_; } else { return MinClientLimitDefaultValue; } }
    set {
      _hasBits0 |= 16;
      minClientLimit_ = value;
    }
  }
  /// <summary>Gets whether the "min_client_limit" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMinClientLimit {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "min_client_limit" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMinClientLimit() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "max_client_limit" field.</summary>
  public const int MaxClientLimitFieldNumber = 6;
  private readonly static uint MaxClientLimitDefaultValue = 0;

  private uint maxClientLimit_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxClientLimit {
    get { if ((_hasBits0 & 32) != 0) { return maxClientLimit_; } else { return MaxClientLimitDefaultValue; } }
    set {
      _hasBits0 |= 32;
      maxClientLimit_ = value;
    }
  }
  /// <summary>Gets whether the "max_client_limit" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxClientLimit {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "max_client_limit" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxClientLimit() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "max_clients" field.</summary>
  public const int MaxClientsFieldNumber = 7;
  private readonly static uint MaxClientsDefaultValue = 0;

  private uint maxClients_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint MaxClients {
    get { if ((_hasBits0 & 64) != 0) { return maxClients_; } else { return MaxClientsDefaultValue; } }
    set {
      _hasBits0 |= 64;
      maxClients_ = value;
    }
  }
  /// <summary>Gets whether the "max_clients" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxClients {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "max_clients" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxClients() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "tick_interval" field.</summary>
  public const int TickIntervalFieldNumber = 8;
  private readonly static uint TickIntervalDefaultValue = 0;

  private uint tickInterval_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint TickInterval {
    get { if ((_hasBits0 & 128) != 0) { return tickInterval_; } else { return TickIntervalDefaultValue; } }
    set {
      _hasBits0 |= 128;
      tickInterval_ = value;
    }
  }
  /// <summary>Gets whether the "tick_interval" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasTickInterval {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "tick_interval" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearTickInterval() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "hostname" field.</summary>
  public const int HostnameFieldNumber = 9;
  private readonly static string HostnameDefaultValue = "";

  private string hostname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Hostname {
    get { return hostname_ ?? HostnameDefaultValue; }
    set {
      hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "hostname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasHostname {
    get { return hostname_ != null; }
  }
  /// <summary>Clears the value of the "hostname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearHostname() {
    hostname_ = null;
  }

  /// <summary>Field number for the "savegamename" field.</summary>
  public const int SavegamenameFieldNumber = 10;
  private readonly static string SavegamenameDefaultValue = "";

  private string savegamename_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Savegamename {
    get { return savegamename_ ?? SavegamenameDefaultValue; }
    set {
      savegamename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "savegamename" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSavegamename {
    get { return savegamename_ != null; }
  }
  /// <summary>Clears the value of the "savegamename" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSavegamename() {
    savegamename_ = null;
  }

  /// <summary>Field number for the "s1_mapname" field.</summary>
  public const int S1MapnameFieldNumber = 11;
  private readonly static string S1MapnameDefaultValue = "";

  private string s1Mapname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string S1Mapname {
    get { return s1Mapname_ ?? S1MapnameDefaultValue; }
    set {
      s1Mapname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "s1_mapname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasS1Mapname {
    get { return s1Mapname_ != null; }
  }
  /// <summary>Clears the value of the "s1_mapname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearS1Mapname() {
    s1Mapname_ = null;
  }

  /// <summary>Field number for the "gamemode" field.</summary>
  public const int GamemodeFieldNumber = 12;
  private readonly static string GamemodeDefaultValue = "";

  private string gamemode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Gamemode {
    get { return gamemode_ ?? GamemodeDefaultValue; }
    set {
      gamemode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "gamemode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasGamemode {
    get { return gamemode_ != null; }
  }
  /// <summary>Clears the value of the "gamemode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearGamemode() {
    gamemode_ = null;
  }

  /// <summary>Field number for the "server_ip_address" field.</summary>
  public const int ServerIpAddressFieldNumber = 13;
  private readonly static string ServerIpAddressDefaultValue = "";

  private string serverIpAddress_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ServerIpAddress {
    get { return serverIpAddress_ ?? ServerIpAddressDefaultValue; }
    set {
      serverIpAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "server_ip_address" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasServerIpAddress {
    get { return serverIpAddress_ != null; }
  }
  /// <summary>Clears the value of the "server_ip_address" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearServerIpAddress() {
    serverIpAddress_ = null;
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 14;
  private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

  private pb::ByteString data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pb::ByteString Data {
    get { return data_ ?? DataDefaultValue; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return data_ != null; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    data_ = null;
  }

  /// <summary>Field number for the "is_localonly" field.</summary>
  public const int IsLocalonlyFieldNumber = 15;
  private readonly static bool IsLocalonlyDefaultValue = false;

  private bool isLocalonly_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsLocalonly {
    get { if ((_hasBits0 & 256) != 0) { return isLocalonly_; } else { return IsLocalonlyDefaultValue; } }
    set {
      _hasBits0 |= 256;
      isLocalonly_ = value;
    }
  }
  /// <summary>Gets whether the "is_localonly" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsLocalonly {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "is_localonly" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsLocalonly() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "no_steam_server" field.</summary>
  public const int NoSteamServerFieldNumber = 19;
  private readonly static bool NoSteamServerDefaultValue = false;

  private bool noSteamServer_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool NoSteamServer {
    get { if ((_hasBits0 & 1024) != 0) { return noSteamServer_; } else { return NoSteamServerDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      noSteamServer_ = value;
    }
  }
  /// <summary>Gets whether the "no_steam_server" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasNoSteamServer {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "no_steam_server" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearNoSteamServer() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "is_transition" field.</summary>
  public const int IsTransitionFieldNumber = 16;
  private readonly static bool IsTransitionDefaultValue = false;

  private bool isTransition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool IsTransition {
    get { if ((_hasBits0 & 512) != 0) { return isTransition_; } else { return IsTransitionDefaultValue; } }
    set {
      _hasBits0 |= 512;
      isTransition_ = value;
    }
  }
  /// <summary>Gets whether the "is_transition" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIsTransition {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "is_transition" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIsTransition() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "previouslevel" field.</summary>
  public const int PreviouslevelFieldNumber = 17;
  private readonly static string PreviouslevelDefaultValue = "";

  private string previouslevel_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Previouslevel {
    get { return previouslevel_ ?? PreviouslevelDefaultValue; }
    set {
      previouslevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "previouslevel" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPreviouslevel {
    get { return previouslevel_ != null; }
  }
  /// <summary>Clears the value of the "previouslevel" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPreviouslevel() {
    previouslevel_ = null;
  }

  /// <summary>Field number for the "landmarkname" field.</summary>
  public const int LandmarknameFieldNumber = 18;
  private readonly static string LandmarknameDefaultValue = "";

  private string landmarkname_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Landmarkname {
    get { return landmarkname_ ?? LandmarknameDefaultValue; }
    set {
      landmarkname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "landmarkname" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLandmarkname {
    get { return landmarkname_ != null; }
  }
  /// <summary>Clears the value of the "landmarkname" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLandmarkname() {
    landmarkname_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CSVCMsg_GameSessionConfiguration);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CSVCMsg_GameSessionConfiguration other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (IsMultiplayer != other.IsMultiplayer) return false;
    if (IsLoadsavegame != other.IsLoadsavegame) return false;
    if (IsBackgroundMap != other.IsBackgroundMap) return false;
    if (IsHeadless != other.IsHeadless) return false;
    if (MinClientLimit != other.MinClientLimit) return false;
    if (MaxClientLimit != other.MaxClientLimit) return false;
    if (MaxClients != other.MaxClients) return false;
    if (TickInterval != other.TickInterval) return false;
    if (Hostname != other.Hostname) return false;
    if (Savegamename != other.Savegamename) return false;
    if (S1Mapname != other.S1Mapname) return false;
    if (Gamemode != other.Gamemode) return false;
    if (ServerIpAddress != other.ServerIpAddress) return false;
    if (Data != other.Data) return false;
    if (IsLocalonly != other.IsLocalonly) return false;
    if (NoSteamServer != other.NoSteamServer) return false;
    if (IsTransition != other.IsTransition) return false;
    if (Previouslevel != other.Previouslevel) return false;
    if (Landmarkname != other.Landmarkname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasIsMultiplayer) hash ^= IsMultiplayer.GetHashCode();
    if (HasIsLoadsavegame) hash ^= IsLoadsavegame.GetHashCode();
    if (HasIsBackgroundMap) hash ^= IsBackgroundMap.GetHashCode();
    if (HasIsHeadless) hash ^= IsHeadless.GetHashCode();
    if (HasMinClientLimit) hash ^= MinClientLimit.GetHashCode();
    if (HasMaxClientLimit) hash ^= MaxClientLimit.GetHashCode();
    if (HasMaxClients) hash ^= MaxClients.GetHashCode();
    if (HasTickInterval) hash ^= TickInterval.GetHashCode();
    if (HasHostname) hash ^= Hostname.GetHashCode();
    if (HasSavegamename) hash ^= Savegamename.GetHashCode();
    if (HasS1Mapname) hash ^= S1Mapname.GetHashCode();
    if (HasGamemode) hash ^= Gamemode.GetHashCode();
    if (HasServerIpAddress) hash ^= ServerIpAddress.GetHashCode();
    if (HasData) hash ^= Data.GetHashCode();
    if (HasIsLocalonly) hash ^= IsLocalonly.GetHashCode();
    if (HasNoSteamServer) hash ^= NoSteamServer.GetHashCode();
    if (HasIsTransition) hash ^= IsTransition.GetHashCode();
    if (HasPreviouslevel) hash ^= Previouslevel.GetHashCode();
    if (HasLandmarkname) hash ^= Landmarkname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasIsMultiplayer) {
      output.WriteRawTag(8);
      output.WriteBool(IsMultiplayer);
    }
    if (HasIsLoadsavegame) {
      output.WriteRawTag(16);
      output.WriteBool(IsLoadsavegame);
    }
    if (HasIsBackgroundMap) {
      output.WriteRawTag(24);
      output.WriteBool(IsBackgroundMap);
    }
    if (HasIsHeadless) {
      output.WriteRawTag(32);
      output.WriteBool(IsHeadless);
    }
    if (HasMinClientLimit) {
      output.WriteRawTag(40);
      output.WriteUInt32(MinClientLimit);
    }
    if (HasMaxClientLimit) {
      output.WriteRawTag(48);
      output.WriteUInt32(MaxClientLimit);
    }
    if (HasMaxClients) {
      output.WriteRawTag(56);
      output.WriteUInt32(MaxClients);
    }
    if (HasTickInterval) {
      output.WriteRawTag(69);
      output.WriteFixed32(TickInterval);
    }
    if (HasHostname) {
      output.WriteRawTag(74);
      output.WriteString(Hostname);
    }
    if (HasSavegamename) {
      output.WriteRawTag(82);
      output.WriteString(Savegamename);
    }
    if (HasS1Mapname) {
      output.WriteRawTag(90);
      output.WriteString(S1Mapname);
    }
    if (HasGamemode) {
      output.WriteRawTag(98);
      output.WriteString(Gamemode);
    }
    if (HasServerIpAddress) {
      output.WriteRawTag(106);
      output.WriteString(ServerIpAddress);
    }
    if (HasData) {
      output.WriteRawTag(114);
      output.WriteBytes(Data);
    }
    if (HasIsLocalonly) {
      output.WriteRawTag(120);
      output.WriteBool(IsLocalonly);
    }
    if (HasIsTransition) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsTransition);
    }
    if (HasPreviouslevel) {
      output.WriteRawTag(138, 1);
      output.WriteString(Previouslevel);
    }
    if (HasLandmarkname) {
      output.WriteRawTag(146, 1);
      output.WriteString(Landmarkname);
    }
    if (HasNoSteamServer) {
      output.WriteRawTag(152, 1);
      output.WriteBool(NoSteamServer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasIsMultiplayer) {
      output.WriteRawTag(8);
      output.WriteBool(IsMultiplayer);
    }
    if (HasIsLoadsavegame) {
      output.WriteRawTag(16);
      output.WriteBool(IsLoadsavegame);
    }
    if (HasIsBackgroundMap) {
      output.WriteRawTag(24);
      output.WriteBool(IsBackgroundMap);
    }
    if (HasIsHeadless) {
      output.WriteRawTag(32);
      output.WriteBool(IsHeadless);
    }
    if (HasMinClientLimit) {
      output.WriteRawTag(40);
      output.WriteUInt32(MinClientLimit);
    }
    if (HasMaxClientLimit) {
      output.WriteRawTag(48);
      output.WriteUInt32(MaxClientLimit);
    }
    if (HasMaxClients) {
      output.WriteRawTag(56);
      output.WriteUInt32(MaxClients);
    }
    if (HasTickInterval) {
      output.WriteRawTag(69);
      output.WriteFixed32(TickInterval);
    }
    if (HasHostname) {
      output.WriteRawTag(74);
      output.WriteString(Hostname);
    }
    if (HasSavegamename) {
      output.WriteRawTag(82);
      output.WriteString(Savegamename);
    }
    if (HasS1Mapname) {
      output.WriteRawTag(90);
      output.WriteString(S1Mapname);
    }
    if (HasGamemode) {
      output.WriteRawTag(98);
      output.WriteString(Gamemode);
    }
    if (HasServerIpAddress) {
      output.WriteRawTag(106);
      output.WriteString(ServerIpAddress);
    }
    if (HasData) {
      output.WriteRawTag(114);
      output.WriteBytes(Data);
    }
    if (HasIsLocalonly) {
      output.WriteRawTag(120);
      output.WriteBool(IsLocalonly);
    }
    if (HasIsTransition) {
      output.WriteRawTag(128, 1);
      output.WriteBool(IsTransition);
    }
    if (HasPreviouslevel) {
      output.WriteRawTag(138, 1);
      output.WriteString(Previouslevel);
    }
    if (HasLandmarkname) {
      output.WriteRawTag(146, 1);
      output.WriteString(Landmarkname);
    }
    if (HasNoSteamServer) {
      output.WriteRawTag(152, 1);
      output.WriteBool(NoSteamServer);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasIsMultiplayer) {
      size += 1 + 1;
    }
    if (HasIsLoadsavegame) {
      size += 1 + 1;
    }
    if (HasIsBackgroundMap) {
      size += 1 + 1;
    }
    if (HasIsHeadless) {
      size += 1 + 1;
    }
    if (HasMinClientLimit) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinClientLimit);
    }
    if (HasMaxClientLimit) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxClientLimit);
    }
    if (HasMaxClients) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxClients);
    }
    if (HasTickInterval) {
      size += 1 + 4;
    }
    if (HasHostname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
    }
    if (HasSavegamename) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Savegamename);
    }
    if (HasS1Mapname) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(S1Mapname);
    }
    if (HasGamemode) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Gamemode);
    }
    if (HasServerIpAddress) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerIpAddress);
    }
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (HasIsLocalonly) {
      size += 1 + 1;
    }
    if (HasNoSteamServer) {
      size += 2 + 1;
    }
    if (HasIsTransition) {
      size += 2 + 1;
    }
    if (HasPreviouslevel) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Previouslevel);
    }
    if (HasLandmarkname) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(Landmarkname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CSVCMsg_GameSessionConfiguration other) {
    if (other == null) {
      return;
    }
    if (other.HasIsMultiplayer) {
      IsMultiplayer = other.IsMultiplayer;
    }
    if (other.HasIsLoadsavegame) {
      IsLoadsavegame = other.IsLoadsavegame;
    }
    if (other.HasIsBackgroundMap) {
      IsBackgroundMap = other.IsBackgroundMap;
    }
    if (other.HasIsHeadless) {
      IsHeadless = other.IsHeadless;
    }
    if (other.HasMinClientLimit) {
      MinClientLimit = other.MinClientLimit;
    }
    if (other.HasMaxClientLimit) {
      MaxClientLimit = other.MaxClientLimit;
    }
    if (other.HasMaxClients) {
      MaxClients = other.MaxClients;
    }
    if (other.HasTickInterval) {
      TickInterval = other.TickInterval;
    }
    if (other.HasHostname) {
      Hostname = other.Hostname;
    }
    if (other.HasSavegamename) {
      Savegamename = other.Savegamename;
    }
    if (other.HasS1Mapname) {
      S1Mapname = other.S1Mapname;
    }
    if (other.HasGamemode) {
      Gamemode = other.Gamemode;
    }
    if (other.HasServerIpAddress) {
      ServerIpAddress = other.ServerIpAddress;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    if (other.HasIsLocalonly) {
      IsLocalonly = other.IsLocalonly;
    }
    if (other.HasNoSteamServer) {
      NoSteamServer = other.NoSteamServer;
    }
    if (other.HasIsTransition) {
      IsTransition = other.IsTransition;
    }
    if (other.HasPreviouslevel) {
      Previouslevel = other.Previouslevel;
    }
    if (other.HasLandmarkname) {
      Landmarkname = other.Landmarkname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          IsMultiplayer = input.ReadBool();
          break;
        }
        case 16: {
          IsLoadsavegame = input.ReadBool();
          break;
        }
        case 24: {
          IsBackgroundMap = input.ReadBool();
          break;
        }
        case 32: {
          IsHeadless = input.ReadBool();
          break;
        }
        case 40: {
          MinClientLimit = input.ReadUInt32();
          break;
        }
        case 48: {
          MaxClientLimit = input.ReadUInt32();
          break;
        }
        case 56: {
          MaxClients = input.ReadUInt32();
          break;
        }
        case 69: {
          TickInterval = input.ReadFixed32();
          break;
        }
        case 74: {
          Hostname = input.ReadString();
          break;
        }
        case 82: {
          Savegamename = input.ReadString();
          break;
        }
        case 90: {
          S1Mapname = input.ReadString();
          break;
        }
        case 98: {
          Gamemode = input.ReadString();
          break;
        }
        case 106: {
          ServerIpAddress = input.ReadString();
          break;
        }
        case 114: {
          Data = input.ReadBytes();
          break;
        }
        case 120: {
          IsLocalonly = input.ReadBool();
          break;
        }
        case 128: {
          IsTransition = input.ReadBool();
          break;
        }
        case 138: {
          Previouslevel = input.ReadString();
          break;
        }
        case 146: {
          Landmarkname = input.ReadString();
          break;
        }
        case 152: {
          NoSteamServer = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          IsMultiplayer = input.ReadBool();
          break;
        }
        case 16: {
          IsLoadsavegame = input.ReadBool();
          break;
        }
        case 24: {
          IsBackgroundMap = input.ReadBool();
          break;
        }
        case 32: {
          IsHeadless = input.ReadBool();
          break;
        }
        case 40: {
          MinClientLimit = input.ReadUInt32();
          break;
        }
        case 48: {
          MaxClientLimit = input.ReadUInt32();
          break;
        }
        case 56: {
          MaxClients = input.ReadUInt32();
          break;
        }
        case 69: {
          TickInterval = input.ReadFixed32();
          break;
        }
        case 74: {
          Hostname = input.ReadString();
          break;
        }
        case 82: {
          Savegamename = input.ReadString();
          break;
        }
        case 90: {
          S1Mapname = input.ReadString();
          break;
        }
        case 98: {
          Gamemode = input.ReadString();
          break;
        }
        case 106: {
          ServerIpAddress = input.ReadString();
          break;
        }
        case 114: {
          Data = input.ReadBytes();
          break;
        }
        case 120: {
          IsLocalonly = input.ReadBool();
          break;
        }
        case 128: {
          IsTransition = input.ReadBool();
          break;
        }
        case 138: {
          Previouslevel = input.ReadString();
          break;
        }
        case 146: {
          Landmarkname = input.ReadString();
          break;
        }
        case 152: {
          NoSteamServer = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CNETMsg_DebugOverlay : pb::IMessage<CNETMsg_DebugOverlay>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CNETMsg_DebugOverlay> _parser = new pb::MessageParser<CNETMsg_DebugOverlay>(() => new CNETMsg_DebugOverlay());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CNETMsg_DebugOverlay> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetworkbasetypesReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_DebugOverlay() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_DebugOverlay(CNETMsg_DebugOverlay other) : this() {
    _hasBits0 = other._hasBits0;
    etype_ = other.etype_;
    vectors_ = other.vectors_.Clone();
    colors_ = other.colors_.Clone();
    dimensions_ = other.dimensions_.Clone();
    times_ = other.times_.Clone();
    bools_ = other.bools_.Clone();
    uint64S_ = other.uint64S_.Clone();
    strings_ = other.strings_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CNETMsg_DebugOverlay Clone() {
    return new CNETMsg_DebugOverlay(this);
  }

  /// <summary>Field number for the "etype" field.</summary>
  public const int EtypeFieldNumber = 1;
  private readonly static int EtypeDefaultValue = 0;

  private int etype_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Etype {
    get { if ((_hasBits0 & 1) != 0) { return etype_; } else { return EtypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      etype_ = value;
    }
  }
  /// <summary>Gets whether the "etype" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEtype {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "etype" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEtype() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "vectors" field.</summary>
  public const int VectorsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::CMsgVector> _repeated_vectors_codec
      = pb::FieldCodec.ForMessage(18, global::CMsgVector.Parser);
  private readonly pbc::RepeatedField<global::CMsgVector> vectors_ = new pbc::RepeatedField<global::CMsgVector>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgVector> Vectors {
    get { return vectors_; }
  }

  /// <summary>Field number for the "colors" field.</summary>
  public const int ColorsFieldNumber = 3;
  private static readonly pb::FieldCodec<global::CMsgRGBA> _repeated_colors_codec
      = pb::FieldCodec.ForMessage(26, global::CMsgRGBA.Parser);
  private readonly pbc::RepeatedField<global::CMsgRGBA> colors_ = new pbc::RepeatedField<global::CMsgRGBA>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgRGBA> Colors {
    get { return colors_; }
  }

  /// <summary>Field number for the "dimensions" field.</summary>
  public const int DimensionsFieldNumber = 4;
  private static readonly pb::FieldCodec<float> _repeated_dimensions_codec
      = pb::FieldCodec.ForFloat(37);
  private readonly pbc::RepeatedField<float> dimensions_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Dimensions {
    get { return dimensions_; }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int TimesFieldNumber = 5;
  private static readonly pb::FieldCodec<float> _repeated_times_codec
      = pb::FieldCodec.ForFloat(45);
  private readonly pbc::RepeatedField<float> times_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Times {
    get { return times_; }
  }

  /// <summary>Field number for the "bools" field.</summary>
  public const int BoolsFieldNumber = 6;
  private static readonly pb::FieldCodec<bool> _repeated_bools_codec
      = pb::FieldCodec.ForBool(48);
  private readonly pbc::RepeatedField<bool> bools_ = new pbc::RepeatedField<bool>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<bool> Bools {
    get { return bools_; }
  }

  /// <summary>Field number for the "uint64s" field.</summary>
  public const int Uint64SFieldNumber = 7;
  private static readonly pb::FieldCodec<ulong> _repeated_uint64S_codec
      = pb::FieldCodec.ForUInt64(56);
  private readonly pbc::RepeatedField<ulong> uint64S_ = new pbc::RepeatedField<ulong>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<ulong> Uint64S {
    get { return uint64S_; }
  }

  /// <summary>Field number for the "strings" field.</summary>
  public const int StringsFieldNumber = 8;
  private static readonly pb::FieldCodec<string> _repeated_strings_codec
      = pb::FieldCodec.ForString(66);
  private readonly pbc::RepeatedField<string> strings_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<string> Strings {
    get { return strings_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CNETMsg_DebugOverlay);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CNETMsg_DebugOverlay other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Etype != other.Etype) return false;
    if(!vectors_.Equals(other.vectors_)) return false;
    if(!colors_.Equals(other.colors_)) return false;
    if(!dimensions_.Equals(other.dimensions_)) return false;
    if(!times_.Equals(other.times_)) return false;
    if(!bools_.Equals(other.bools_)) return false;
    if(!uint64S_.Equals(other.uint64S_)) return false;
    if(!strings_.Equals(other.strings_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEtype) hash ^= Etype.GetHashCode();
    hash ^= vectors_.GetHashCode();
    hash ^= colors_.GetHashCode();
    hash ^= dimensions_.GetHashCode();
    hash ^= times_.GetHashCode();
    hash ^= bools_.GetHashCode();
    hash ^= uint64S_.GetHashCode();
    hash ^= strings_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEtype) {
      output.WriteRawTag(8);
      output.WriteInt32(Etype);
    }
    vectors_.WriteTo(output, _repeated_vectors_codec);
    colors_.WriteTo(output, _repeated_colors_codec);
    dimensions_.WriteTo(output, _repeated_dimensions_codec);
    times_.WriteTo(output, _repeated_times_codec);
    bools_.WriteTo(output, _repeated_bools_codec);
    uint64S_.WriteTo(output, _repeated_uint64S_codec);
    strings_.WriteTo(output, _repeated_strings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEtype) {
      output.WriteRawTag(8);
      output.WriteInt32(Etype);
    }
    vectors_.WriteTo(ref output, _repeated_vectors_codec);
    colors_.WriteTo(ref output, _repeated_colors_codec);
    dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
    times_.WriteTo(ref output, _repeated_times_codec);
    bools_.WriteTo(ref output, _repeated_bools_codec);
    uint64S_.WriteTo(ref output, _repeated_uint64S_codec);
    strings_.WriteTo(ref output, _repeated_strings_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEtype) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Etype);
    }
    size += vectors_.CalculateSize(_repeated_vectors_codec);
    size += colors_.CalculateSize(_repeated_colors_codec);
    size += dimensions_.CalculateSize(_repeated_dimensions_codec);
    size += times_.CalculateSize(_repeated_times_codec);
    size += bools_.CalculateSize(_repeated_bools_codec);
    size += uint64S_.CalculateSize(_repeated_uint64S_codec);
    size += strings_.CalculateSize(_repeated_strings_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CNETMsg_DebugOverlay other) {
    if (other == null) {
      return;
    }
    if (other.HasEtype) {
      Etype = other.Etype;
    }
    vectors_.Add(other.vectors_);
    colors_.Add(other.colors_);
    dimensions_.Add(other.dimensions_);
    times_.Add(other.times_);
    bools_.Add(other.bools_);
    uint64S_.Add(other.uint64S_);
    strings_.Add(other.strings_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Etype = input.ReadInt32();
          break;
        }
        case 18: {
          vectors_.AddEntriesFrom(input, _repeated_vectors_codec);
          break;
        }
        case 26: {
          colors_.AddEntriesFrom(input, _repeated_colors_codec);
          break;
        }
        case 34:
        case 37: {
          dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
          break;
        }
        case 42:
        case 45: {
          times_.AddEntriesFrom(input, _repeated_times_codec);
          break;
        }
        case 50:
        case 48: {
          bools_.AddEntriesFrom(input, _repeated_bools_codec);
          break;
        }
        case 58:
        case 56: {
          uint64S_.AddEntriesFrom(input, _repeated_uint64S_codec);
          break;
        }
        case 66: {
          strings_.AddEntriesFrom(input, _repeated_strings_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Etype = input.ReadInt32();
          break;
        }
        case 18: {
          vectors_.AddEntriesFrom(ref input, _repeated_vectors_codec);
          break;
        }
        case 26: {
          colors_.AddEntriesFrom(ref input, _repeated_colors_codec);
          break;
        }
        case 34:
        case 37: {
          dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
          break;
        }
        case 42:
        case 45: {
          times_.AddEntriesFrom(ref input, _repeated_times_codec);
          break;
        }
        case 50:
        case 48: {
          bools_.AddEntriesFrom(ref input, _repeated_bools_codec);
          break;
        }
        case 58:
        case 56: {
          uint64S_.AddEntriesFrom(ref input, _repeated_uint64S_codec);
          break;
        }
        case 66: {
          strings_.AddEntriesFrom(ref input, _repeated_strings_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
