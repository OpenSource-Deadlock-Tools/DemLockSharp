// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base_modifier.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from base_modifier.proto</summary>
public static partial class BaseModifierReflection {

  #region Descriptor
  /// <summary>File descriptor for base_modifier.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BaseModifierReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNiYXNlX21vZGlmaWVyLnByb3RvGhZuZXR3b3JrYmFzZXR5cGVzLnByb3Rv",
          "IsIHChNDTW9kaWZpZXJUYWJsZUVudHJ5EkQKCmVudHJ5X3R5cGUYASACKA4y",
          "FC5NT0RJRklFUl9FTlRSWV9UWVBFOhpNT0RJRklFUl9FTlRSWV9UWVBFX0FD",
          "VElWRRIYCgZwYXJlbnQYAiACKA06CDE2Nzc3MjE1EhUKDXNlcmlhbF9udW1i",
          "ZXIYAyACKA0SGQoRbW9kaWZpZXJfc3ViY2xhc3MYBCABKA0SEwoLc3RhY2tf",
          "Y291bnQYBSABKAUSFwoPbWF4X3N0YWNrX2NvdW50GAYgASgFEhkKEWxhc3Rf",
          "YXBwbGllZF90aW1lGAcgASgCEhQKCGR1cmF0aW9uGAggASgCOgItMRIYCgZj",
          "YXN0ZXIYCSABKA06CDE2Nzc3MjE1EhkKB2FiaWxpdHkYCiABKA06CDE2Nzc3",
          "MjE1EiMKG2F1cmFfcHJvdmlkZXJfc2VyaWFsX251bWJlchgLIAEoBRInChVh",
          "dXJhX3Byb3ZpZGVyX2VoYW5kbGUYDCABKA06CDE2Nzc3MjE1EhgKEGFiaWxp",
          "dHlfc3ViY2xhc3MYDSABKA0SDgoGYm9vbDFfGBQgASgIEg4KBmJvb2wyXxgV",
          "IAEoCBIOCgZib29sM18YFiABKAgSDgoGYm9vbDRfGBcgASgIEg0KBWludDFf",
          "GBkgASgFEg0KBWludDJfGBogASgFEg0KBWludDNfGBsgASgFEg0KBWludDRf",
          "GBwgASgFEg8KB2Zsb2F0MV8YHiABKAISDwoHZmxvYXQyXxgfIAEoAhIPCgdm",
          "bG9hdDNfGCAgASgCEg8KB2Zsb2F0NF8YISABKAISDwoHZmxvYXQ1XxgxIAEo",
          "AhIPCgdmbG9hdDZfGDIgASgCEg8KB2Zsb2F0N18YMyABKAISDwoHZmxvYXQ4",
          "Xxg0IAEoAhIPCgdmbG9hdDlfGDUgASgCEhAKCGZsb2F0MTBfGDYgASgCEg4K",
          "BnVpbnQxXxgjIAEoBBIOCgZ1aW50Ml8YJCABKAQSDgoGdWludDNfGCUgASgE",
          "Eg4KBnVpbnQ0XxgmIAEoBBIaCgV2ZWMxXxgoIAEoCzILLkNNc2dWZWN0b3IS",
          "GgoFdmVjMl8YKSABKAsyCy5DTXNnVmVjdG9yEhoKBXZlYzNfGCogASgLMgsu",
          "Q01zZ1ZlY3RvchIaCgV2ZWM0XxgrIAEoCzILLkNNc2dWZWN0b3ISEAoIc3Ry",
          "aW5nMV8YLSABKAkSEAoIc3RyaW5nMl8YLiABKAkSEAoIc3RyaW5nM18YLyAB",
          "KAkSEAoIc3RyaW5nNF8YMCABKAkqVgoTTU9ESUZJRVJfRU5UUllfVFlQRRIe",
          "ChpNT0RJRklFUl9FTlRSWV9UWVBFX0FDVElWRRABEh8KG01PRElGSUVSX0VO",
          "VFJZX1RZUEVfUkVNT1ZFRBAC"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetworkbasetypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MODIFIER_ENTRY_TYPE), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CModifierTableEntry), global::CModifierTableEntry.Parser, new[]{ "EntryType", "Parent", "SerialNumber", "ModifierSubclass", "StackCount", "MaxStackCount", "LastAppliedTime", "Duration", "Caster", "Ability", "AuraProviderSerialNumber", "AuraProviderEhandle", "AbilitySubclass", "Bool1", "Bool2", "Bool3", "Bool4", "Int1", "Int2", "Int3", "Int4", "Float1", "Float2", "Float3", "Float4", "Float5", "Float6", "Float7", "Float8", "Float9", "Float10", "Uint1", "Uint2", "Uint3", "Uint4", "Vec1", "Vec2", "Vec3", "Vec4", "String1", "String2", "String3", "String4" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum MODIFIER_ENTRY_TYPE {
  [pbr::OriginalName("MODIFIER_ENTRY_TYPE_ACTIVE")] Active = 1,
  [pbr::OriginalName("MODIFIER_ENTRY_TYPE_REMOVED")] Removed = 2,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CModifierTableEntry : pb::IMessage<CModifierTableEntry>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CModifierTableEntry> _parser = new pb::MessageParser<CModifierTableEntry>(() => new CModifierTableEntry());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  private int _hasBits1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CModifierTableEntry> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BaseModifierReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CModifierTableEntry() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CModifierTableEntry(CModifierTableEntry other) : this() {
    _hasBits0 = other._hasBits0;
    _hasBits1 = other._hasBits1;
    entryType_ = other.entryType_;
    parent_ = other.parent_;
    serialNumber_ = other.serialNumber_;
    modifierSubclass_ = other.modifierSubclass_;
    stackCount_ = other.stackCount_;
    maxStackCount_ = other.maxStackCount_;
    lastAppliedTime_ = other.lastAppliedTime_;
    duration_ = other.duration_;
    caster_ = other.caster_;
    ability_ = other.ability_;
    auraProviderSerialNumber_ = other.auraProviderSerialNumber_;
    auraProviderEhandle_ = other.auraProviderEhandle_;
    abilitySubclass_ = other.abilitySubclass_;
    bool1_ = other.bool1_;
    bool2_ = other.bool2_;
    bool3_ = other.bool3_;
    bool4_ = other.bool4_;
    int1_ = other.int1_;
    int2_ = other.int2_;
    int3_ = other.int3_;
    int4_ = other.int4_;
    float1_ = other.float1_;
    float2_ = other.float2_;
    float3_ = other.float3_;
    float4_ = other.float4_;
    float5_ = other.float5_;
    float6_ = other.float6_;
    float7_ = other.float7_;
    float8_ = other.float8_;
    float9_ = other.float9_;
    float10_ = other.float10_;
    uint1_ = other.uint1_;
    uint2_ = other.uint2_;
    uint3_ = other.uint3_;
    uint4_ = other.uint4_;
    vec1_ = other.vec1_ != null ? other.vec1_.Clone() : null;
    vec2_ = other.vec2_ != null ? other.vec2_.Clone() : null;
    vec3_ = other.vec3_ != null ? other.vec3_.Clone() : null;
    vec4_ = other.vec4_ != null ? other.vec4_.Clone() : null;
    string1_ = other.string1_;
    string2_ = other.string2_;
    string3_ = other.string3_;
    string4_ = other.string4_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CModifierTableEntry Clone() {
    return new CModifierTableEntry(this);
  }

  /// <summary>Field number for the "entry_type" field.</summary>
  public const int EntryTypeFieldNumber = 1;
  private readonly static global::MODIFIER_ENTRY_TYPE EntryTypeDefaultValue = global::MODIFIER_ENTRY_TYPE.Active;

  private global::MODIFIER_ENTRY_TYPE entryType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::MODIFIER_ENTRY_TYPE EntryType {
    get { if ((_hasBits0 & 1) != 0) { return entryType_; } else { return EntryTypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      entryType_ = value;
    }
  }
  /// <summary>Gets whether the "entry_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntryType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "entry_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntryType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "parent" field.</summary>
  public const int ParentFieldNumber = 2;
  private readonly static uint ParentDefaultValue = 16777215;

  private uint parent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Parent {
    get { if ((_hasBits0 & 2) != 0) { return parent_; } else { return ParentDefaultValue; } }
    set {
      _hasBits0 |= 2;
      parent_ = value;
    }
  }
  /// <summary>Gets whether the "parent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasParent {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "parent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearParent() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "serial_number" field.</summary>
  public const int SerialNumberFieldNumber = 3;
  private readonly static uint SerialNumberDefaultValue = 0;

  private uint serialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SerialNumber {
    get { if ((_hasBits0 & 4) != 0) { return serialNumber_; } else { return SerialNumberDefaultValue; } }
    set {
      _hasBits0 |= 4;
      serialNumber_ = value;
    }
  }
  /// <summary>Gets whether the "serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSerialNumber {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSerialNumber() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "modifier_subclass" field.</summary>
  public const int ModifierSubclassFieldNumber = 4;
  private readonly static uint ModifierSubclassDefaultValue = 0;

  private uint modifierSubclass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ModifierSubclass {
    get { if ((_hasBits0 & 8) != 0) { return modifierSubclass_; } else { return ModifierSubclassDefaultValue; } }
    set {
      _hasBits0 |= 8;
      modifierSubclass_ = value;
    }
  }
  /// <summary>Gets whether the "modifier_subclass" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasModifierSubclass {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "modifier_subclass" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearModifierSubclass() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "stack_count" field.</summary>
  public const int StackCountFieldNumber = 5;
  private readonly static int StackCountDefaultValue = 0;

  private int stackCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int StackCount {
    get { if ((_hasBits0 & 16) != 0) { return stackCount_; } else { return StackCountDefaultValue; } }
    set {
      _hasBits0 |= 16;
      stackCount_ = value;
    }
  }
  /// <summary>Gets whether the "stack_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasStackCount {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "stack_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearStackCount() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "max_stack_count" field.</summary>
  public const int MaxStackCountFieldNumber = 6;
  private readonly static int MaxStackCountDefaultValue = 0;

  private int maxStackCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int MaxStackCount {
    get { if ((_hasBits0 & 32) != 0) { return maxStackCount_; } else { return MaxStackCountDefaultValue; } }
    set {
      _hasBits0 |= 32;
      maxStackCount_ = value;
    }
  }
  /// <summary>Gets whether the "max_stack_count" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxStackCount {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "max_stack_count" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxStackCount() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "last_applied_time" field.</summary>
  public const int LastAppliedTimeFieldNumber = 7;
  private readonly static float LastAppliedTimeDefaultValue = 0F;

  private float lastAppliedTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float LastAppliedTime {
    get { if ((_hasBits0 & 64) != 0) { return lastAppliedTime_; } else { return LastAppliedTimeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      lastAppliedTime_ = value;
    }
  }
  /// <summary>Gets whether the "last_applied_time" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLastAppliedTime {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "last_applied_time" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLastAppliedTime() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "duration" field.</summary>
  public const int DurationFieldNumber = 8;
  private readonly static float DurationDefaultValue = -1F;

  private float duration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Duration {
    get { if ((_hasBits0 & 128) != 0) { return duration_; } else { return DurationDefaultValue; } }
    set {
      _hasBits0 |= 128;
      duration_ = value;
    }
  }
  /// <summary>Gets whether the "duration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDuration {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "duration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDuration() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "caster" field.</summary>
  public const int CasterFieldNumber = 9;
  private readonly static uint CasterDefaultValue = 16777215;

  private uint caster_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Caster {
    get { if ((_hasBits0 & 256) != 0) { return caster_; } else { return CasterDefaultValue; } }
    set {
      _hasBits0 |= 256;
      caster_ = value;
    }
  }
  /// <summary>Gets whether the "caster" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCaster {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "caster" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCaster() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "ability" field.</summary>
  public const int AbilityFieldNumber = 10;
  private readonly static uint AbilityDefaultValue = 16777215;

  private uint ability_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Ability {
    get { if ((_hasBits0 & 512) != 0) { return ability_; } else { return AbilityDefaultValue; } }
    set {
      _hasBits0 |= 512;
      ability_ = value;
    }
  }
  /// <summary>Gets whether the "ability" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbility {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "ability" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbility() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "aura_provider_serial_number" field.</summary>
  public const int AuraProviderSerialNumberFieldNumber = 11;
  private readonly static int AuraProviderSerialNumberDefaultValue = 0;

  private int auraProviderSerialNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AuraProviderSerialNumber {
    get { if ((_hasBits0 & 1024) != 0) { return auraProviderSerialNumber_; } else { return AuraProviderSerialNumberDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      auraProviderSerialNumber_ = value;
    }
  }
  /// <summary>Gets whether the "aura_provider_serial_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuraProviderSerialNumber {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "aura_provider_serial_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuraProviderSerialNumber() {
    _hasBits0 &= ~1024;
  }

  /// <summary>Field number for the "aura_provider_ehandle" field.</summary>
  public const int AuraProviderEhandleFieldNumber = 12;
  private readonly static uint AuraProviderEhandleDefaultValue = 16777215;

  private uint auraProviderEhandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AuraProviderEhandle {
    get { if ((_hasBits0 & 2048) != 0) { return auraProviderEhandle_; } else { return AuraProviderEhandleDefaultValue; } }
    set {
      _hasBits0 |= 2048;
      auraProviderEhandle_ = value;
    }
  }
  /// <summary>Gets whether the "aura_provider_ehandle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAuraProviderEhandle {
    get { return (_hasBits0 & 2048) != 0; }
  }
  /// <summary>Clears the value of the "aura_provider_ehandle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAuraProviderEhandle() {
    _hasBits0 &= ~2048;
  }

  /// <summary>Field number for the "ability_subclass" field.</summary>
  public const int AbilitySubclassFieldNumber = 13;
  private readonly static uint AbilitySubclassDefaultValue = 0;

  private uint abilitySubclass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AbilitySubclass {
    get { if ((_hasBits0 & 4096) != 0) { return abilitySubclass_; } else { return AbilitySubclassDefaultValue; } }
    set {
      _hasBits0 |= 4096;
      abilitySubclass_ = value;
    }
  }
  /// <summary>Gets whether the "ability_subclass" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbilitySubclass {
    get { return (_hasBits0 & 4096) != 0; }
  }
  /// <summary>Clears the value of the "ability_subclass" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbilitySubclass() {
    _hasBits0 &= ~4096;
  }

  /// <summary>Field number for the "bool1_" field.</summary>
  public const int Bool1FieldNumber = 20;
  private readonly static bool Bool1DefaultValue = false;

  private bool bool1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Bool1 {
    get { if ((_hasBits0 & 8192) != 0) { return bool1_; } else { return Bool1DefaultValue; } }
    set {
      _hasBits0 |= 8192;
      bool1_ = value;
    }
  }
  /// <summary>Gets whether the "bool1_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBool1 {
    get { return (_hasBits0 & 8192) != 0; }
  }
  /// <summary>Clears the value of the "bool1_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBool1() {
    _hasBits0 &= ~8192;
  }

  /// <summary>Field number for the "bool2_" field.</summary>
  public const int Bool2FieldNumber = 21;
  private readonly static bool Bool2DefaultValue = false;

  private bool bool2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Bool2 {
    get { if ((_hasBits0 & 16384) != 0) { return bool2_; } else { return Bool2DefaultValue; } }
    set {
      _hasBits0 |= 16384;
      bool2_ = value;
    }
  }
  /// <summary>Gets whether the "bool2_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBool2 {
    get { return (_hasBits0 & 16384) != 0; }
  }
  /// <summary>Clears the value of the "bool2_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBool2() {
    _hasBits0 &= ~16384;
  }

  /// <summary>Field number for the "bool3_" field.</summary>
  public const int Bool3FieldNumber = 22;
  private readonly static bool Bool3DefaultValue = false;

  private bool bool3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Bool3 {
    get { if ((_hasBits0 & 32768) != 0) { return bool3_; } else { return Bool3DefaultValue; } }
    set {
      _hasBits0 |= 32768;
      bool3_ = value;
    }
  }
  /// <summary>Gets whether the "bool3_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBool3 {
    get { return (_hasBits0 & 32768) != 0; }
  }
  /// <summary>Clears the value of the "bool3_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBool3() {
    _hasBits0 &= ~32768;
  }

  /// <summary>Field number for the "bool4_" field.</summary>
  public const int Bool4FieldNumber = 23;
  private readonly static bool Bool4DefaultValue = false;

  private bool bool4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Bool4 {
    get { if ((_hasBits0 & 65536) != 0) { return bool4_; } else { return Bool4DefaultValue; } }
    set {
      _hasBits0 |= 65536;
      bool4_ = value;
    }
  }
  /// <summary>Gets whether the "bool4_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBool4 {
    get { return (_hasBits0 & 65536) != 0; }
  }
  /// <summary>Clears the value of the "bool4_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBool4() {
    _hasBits0 &= ~65536;
  }

  /// <summary>Field number for the "int1_" field.</summary>
  public const int Int1FieldNumber = 25;
  private readonly static int Int1DefaultValue = 0;

  private int int1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Int1 {
    get { if ((_hasBits0 & 131072) != 0) { return int1_; } else { return Int1DefaultValue; } }
    set {
      _hasBits0 |= 131072;
      int1_ = value;
    }
  }
  /// <summary>Gets whether the "int1_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInt1 {
    get { return (_hasBits0 & 131072) != 0; }
  }
  /// <summary>Clears the value of the "int1_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInt1() {
    _hasBits0 &= ~131072;
  }

  /// <summary>Field number for the "int2_" field.</summary>
  public const int Int2FieldNumber = 26;
  private readonly static int Int2DefaultValue = 0;

  private int int2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Int2 {
    get { if ((_hasBits0 & 262144) != 0) { return int2_; } else { return Int2DefaultValue; } }
    set {
      _hasBits0 |= 262144;
      int2_ = value;
    }
  }
  /// <summary>Gets whether the "int2_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInt2 {
    get { return (_hasBits0 & 262144) != 0; }
  }
  /// <summary>Clears the value of the "int2_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInt2() {
    _hasBits0 &= ~262144;
  }

  /// <summary>Field number for the "int3_" field.</summary>
  public const int Int3FieldNumber = 27;
  private readonly static int Int3DefaultValue = 0;

  private int int3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Int3 {
    get { if ((_hasBits0 & 524288) != 0) { return int3_; } else { return Int3DefaultValue; } }
    set {
      _hasBits0 |= 524288;
      int3_ = value;
    }
  }
  /// <summary>Gets whether the "int3_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInt3 {
    get { return (_hasBits0 & 524288) != 0; }
  }
  /// <summary>Clears the value of the "int3_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInt3() {
    _hasBits0 &= ~524288;
  }

  /// <summary>Field number for the "int4_" field.</summary>
  public const int Int4FieldNumber = 28;
  private readonly static int Int4DefaultValue = 0;

  private int int4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Int4 {
    get { if ((_hasBits0 & 1048576) != 0) { return int4_; } else { return Int4DefaultValue; } }
    set {
      _hasBits0 |= 1048576;
      int4_ = value;
    }
  }
  /// <summary>Gets whether the "int4_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasInt4 {
    get { return (_hasBits0 & 1048576) != 0; }
  }
  /// <summary>Clears the value of the "int4_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearInt4() {
    _hasBits0 &= ~1048576;
  }

  /// <summary>Field number for the "float1_" field.</summary>
  public const int Float1FieldNumber = 30;
  private readonly static float Float1DefaultValue = 0F;

  private float float1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float1 {
    get { if ((_hasBits0 & 2097152) != 0) { return float1_; } else { return Float1DefaultValue; } }
    set {
      _hasBits0 |= 2097152;
      float1_ = value;
    }
  }
  /// <summary>Gets whether the "float1_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat1 {
    get { return (_hasBits0 & 2097152) != 0; }
  }
  /// <summary>Clears the value of the "float1_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat1() {
    _hasBits0 &= ~2097152;
  }

  /// <summary>Field number for the "float2_" field.</summary>
  public const int Float2FieldNumber = 31;
  private readonly static float Float2DefaultValue = 0F;

  private float float2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float2 {
    get { if ((_hasBits0 & 4194304) != 0) { return float2_; } else { return Float2DefaultValue; } }
    set {
      _hasBits0 |= 4194304;
      float2_ = value;
    }
  }
  /// <summary>Gets whether the "float2_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat2 {
    get { return (_hasBits0 & 4194304) != 0; }
  }
  /// <summary>Clears the value of the "float2_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat2() {
    _hasBits0 &= ~4194304;
  }

  /// <summary>Field number for the "float3_" field.</summary>
  public const int Float3FieldNumber = 32;
  private readonly static float Float3DefaultValue = 0F;

  private float float3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float3 {
    get { if ((_hasBits0 & 8388608) != 0) { return float3_; } else { return Float3DefaultValue; } }
    set {
      _hasBits0 |= 8388608;
      float3_ = value;
    }
  }
  /// <summary>Gets whether the "float3_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat3 {
    get { return (_hasBits0 & 8388608) != 0; }
  }
  /// <summary>Clears the value of the "float3_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat3() {
    _hasBits0 &= ~8388608;
  }

  /// <summary>Field number for the "float4_" field.</summary>
  public const int Float4FieldNumber = 33;
  private readonly static float Float4DefaultValue = 0F;

  private float float4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float4 {
    get { if ((_hasBits0 & 16777216) != 0) { return float4_; } else { return Float4DefaultValue; } }
    set {
      _hasBits0 |= 16777216;
      float4_ = value;
    }
  }
  /// <summary>Gets whether the "float4_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat4 {
    get { return (_hasBits0 & 16777216) != 0; }
  }
  /// <summary>Clears the value of the "float4_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat4() {
    _hasBits0 &= ~16777216;
  }

  /// <summary>Field number for the "float5_" field.</summary>
  public const int Float5FieldNumber = 49;
  private readonly static float Float5DefaultValue = 0F;

  private float float5_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float5 {
    get { if ((_hasBits0 & 536870912) != 0) { return float5_; } else { return Float5DefaultValue; } }
    set {
      _hasBits0 |= 536870912;
      float5_ = value;
    }
  }
  /// <summary>Gets whether the "float5_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat5 {
    get { return (_hasBits0 & 536870912) != 0; }
  }
  /// <summary>Clears the value of the "float5_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat5() {
    _hasBits0 &= ~536870912;
  }

  /// <summary>Field number for the "float6_" field.</summary>
  public const int Float6FieldNumber = 50;
  private readonly static float Float6DefaultValue = 0F;

  private float float6_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float6 {
    get { if ((_hasBits0 & 1073741824) != 0) { return float6_; } else { return Float6DefaultValue; } }
    set {
      _hasBits0 |= 1073741824;
      float6_ = value;
    }
  }
  /// <summary>Gets whether the "float6_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat6 {
    get { return (_hasBits0 & 1073741824) != 0; }
  }
  /// <summary>Clears the value of the "float6_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat6() {
    _hasBits0 &= ~1073741824;
  }

  /// <summary>Field number for the "float7_" field.</summary>
  public const int Float7FieldNumber = 51;
  private readonly static float Float7DefaultValue = 0F;

  private float float7_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float7 {
    get { if ((_hasBits0 & -2147483648) != 0) { return float7_; } else { return Float7DefaultValue; } }
    set {
      _hasBits0 |= -2147483648;
      float7_ = value;
    }
  }
  /// <summary>Gets whether the "float7_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat7 {
    get { return (_hasBits0 & -2147483648) != 0; }
  }
  /// <summary>Clears the value of the "float7_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat7() {
    _hasBits0 &= ~-2147483648;
  }

  /// <summary>Field number for the "float8_" field.</summary>
  public const int Float8FieldNumber = 52;
  private readonly static float Float8DefaultValue = 0F;

  private float float8_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float8 {
    get { if ((_hasBits1 & 1) != 0) { return float8_; } else { return Float8DefaultValue; } }
    set {
      _hasBits1 |= 1;
      float8_ = value;
    }
  }
  /// <summary>Gets whether the "float8_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat8 {
    get { return (_hasBits1 & 1) != 0; }
  }
  /// <summary>Clears the value of the "float8_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat8() {
    _hasBits1 &= ~1;
  }

  /// <summary>Field number for the "float9_" field.</summary>
  public const int Float9FieldNumber = 53;
  private readonly static float Float9DefaultValue = 0F;

  private float float9_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float9 {
    get { if ((_hasBits1 & 2) != 0) { return float9_; } else { return Float9DefaultValue; } }
    set {
      _hasBits1 |= 2;
      float9_ = value;
    }
  }
  /// <summary>Gets whether the "float9_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat9 {
    get { return (_hasBits1 & 2) != 0; }
  }
  /// <summary>Clears the value of the "float9_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat9() {
    _hasBits1 &= ~2;
  }

  /// <summary>Field number for the "float10_" field.</summary>
  public const int Float10FieldNumber = 54;
  private readonly static float Float10DefaultValue = 0F;

  private float float10_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Float10 {
    get { if ((_hasBits1 & 4) != 0) { return float10_; } else { return Float10DefaultValue; } }
    set {
      _hasBits1 |= 4;
      float10_ = value;
    }
  }
  /// <summary>Gets whether the "float10_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFloat10 {
    get { return (_hasBits1 & 4) != 0; }
  }
  /// <summary>Clears the value of the "float10_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFloat10() {
    _hasBits1 &= ~4;
  }

  /// <summary>Field number for the "uint1_" field.</summary>
  public const int Uint1FieldNumber = 35;
  private readonly static ulong Uint1DefaultValue = 0UL;

  private ulong uint1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Uint1 {
    get { if ((_hasBits0 & 33554432) != 0) { return uint1_; } else { return Uint1DefaultValue; } }
    set {
      _hasBits0 |= 33554432;
      uint1_ = value;
    }
  }
  /// <summary>Gets whether the "uint1_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUint1 {
    get { return (_hasBits0 & 33554432) != 0; }
  }
  /// <summary>Clears the value of the "uint1_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUint1() {
    _hasBits0 &= ~33554432;
  }

  /// <summary>Field number for the "uint2_" field.</summary>
  public const int Uint2FieldNumber = 36;
  private readonly static ulong Uint2DefaultValue = 0UL;

  private ulong uint2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Uint2 {
    get { if ((_hasBits0 & 67108864) != 0) { return uint2_; } else { return Uint2DefaultValue; } }
    set {
      _hasBits0 |= 67108864;
      uint2_ = value;
    }
  }
  /// <summary>Gets whether the "uint2_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUint2 {
    get { return (_hasBits0 & 67108864) != 0; }
  }
  /// <summary>Clears the value of the "uint2_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUint2() {
    _hasBits0 &= ~67108864;
  }

  /// <summary>Field number for the "uint3_" field.</summary>
  public const int Uint3FieldNumber = 37;
  private readonly static ulong Uint3DefaultValue = 0UL;

  private ulong uint3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Uint3 {
    get { if ((_hasBits0 & 134217728) != 0) { return uint3_; } else { return Uint3DefaultValue; } }
    set {
      _hasBits0 |= 134217728;
      uint3_ = value;
    }
  }
  /// <summary>Gets whether the "uint3_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUint3 {
    get { return (_hasBits0 & 134217728) != 0; }
  }
  /// <summary>Clears the value of the "uint3_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUint3() {
    _hasBits0 &= ~134217728;
  }

  /// <summary>Field number for the "uint4_" field.</summary>
  public const int Uint4FieldNumber = 38;
  private readonly static ulong Uint4DefaultValue = 0UL;

  private ulong uint4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public ulong Uint4 {
    get { if ((_hasBits0 & 268435456) != 0) { return uint4_; } else { return Uint4DefaultValue; } }
    set {
      _hasBits0 |= 268435456;
      uint4_ = value;
    }
  }
  /// <summary>Gets whether the "uint4_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasUint4 {
    get { return (_hasBits0 & 268435456) != 0; }
  }
  /// <summary>Clears the value of the "uint4_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearUint4() {
    _hasBits0 &= ~268435456;
  }

  /// <summary>Field number for the "vec1_" field.</summary>
  public const int Vec1FieldNumber = 40;
  private global::CMsgVector vec1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Vec1 {
    get { return vec1_; }
    set {
      vec1_ = value;
    }
  }

  /// <summary>Field number for the "vec2_" field.</summary>
  public const int Vec2FieldNumber = 41;
  private global::CMsgVector vec2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Vec2 {
    get { return vec2_; }
    set {
      vec2_ = value;
    }
  }

  /// <summary>Field number for the "vec3_" field.</summary>
  public const int Vec3FieldNumber = 42;
  private global::CMsgVector vec3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Vec3 {
    get { return vec3_; }
    set {
      vec3_ = value;
    }
  }

  /// <summary>Field number for the "vec4_" field.</summary>
  public const int Vec4FieldNumber = 43;
  private global::CMsgVector vec4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Vec4 {
    get { return vec4_; }
    set {
      vec4_ = value;
    }
  }

  /// <summary>Field number for the "string1_" field.</summary>
  public const int String1FieldNumber = 45;
  private readonly static string String1DefaultValue = "";

  private string string1_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string String1 {
    get { return string1_ ?? String1DefaultValue; }
    set {
      string1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string1_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasString1 {
    get { return string1_ != null; }
  }
  /// <summary>Clears the value of the "string1_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearString1() {
    string1_ = null;
  }

  /// <summary>Field number for the "string2_" field.</summary>
  public const int String2FieldNumber = 46;
  private readonly static string String2DefaultValue = "";

  private string string2_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string String2 {
    get { return string2_ ?? String2DefaultValue; }
    set {
      string2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string2_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasString2 {
    get { return string2_ != null; }
  }
  /// <summary>Clears the value of the "string2_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearString2() {
    string2_ = null;
  }

  /// <summary>Field number for the "string3_" field.</summary>
  public const int String3FieldNumber = 47;
  private readonly static string String3DefaultValue = "";

  private string string3_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string String3 {
    get { return string3_ ?? String3DefaultValue; }
    set {
      string3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string3_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasString3 {
    get { return string3_ != null; }
  }
  /// <summary>Clears the value of the "string3_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearString3() {
    string3_ = null;
  }

  /// <summary>Field number for the "string4_" field.</summary>
  public const int String4FieldNumber = 48;
  private readonly static string String4DefaultValue = "";

  private string string4_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string String4 {
    get { return string4_ ?? String4DefaultValue; }
    set {
      string4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "string4_" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasString4 {
    get { return string4_ != null; }
  }
  /// <summary>Clears the value of the "string4_" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearString4() {
    string4_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CModifierTableEntry);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CModifierTableEntry other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntryType != other.EntryType) return false;
    if (Parent != other.Parent) return false;
    if (SerialNumber != other.SerialNumber) return false;
    if (ModifierSubclass != other.ModifierSubclass) return false;
    if (StackCount != other.StackCount) return false;
    if (MaxStackCount != other.MaxStackCount) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LastAppliedTime, other.LastAppliedTime)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
    if (Caster != other.Caster) return false;
    if (Ability != other.Ability) return false;
    if (AuraProviderSerialNumber != other.AuraProviderSerialNumber) return false;
    if (AuraProviderEhandle != other.AuraProviderEhandle) return false;
    if (AbilitySubclass != other.AbilitySubclass) return false;
    if (Bool1 != other.Bool1) return false;
    if (Bool2 != other.Bool2) return false;
    if (Bool3 != other.Bool3) return false;
    if (Bool4 != other.Bool4) return false;
    if (Int1 != other.Int1) return false;
    if (Int2 != other.Int2) return false;
    if (Int3 != other.Int3) return false;
    if (Int4 != other.Int4) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float1, other.Float1)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float2, other.Float2)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float3, other.Float3)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float4, other.Float4)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float5, other.Float5)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float6, other.Float6)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float7, other.Float7)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float8, other.Float8)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float9, other.Float9)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float10, other.Float10)) return false;
    if (Uint1 != other.Uint1) return false;
    if (Uint2 != other.Uint2) return false;
    if (Uint3 != other.Uint3) return false;
    if (Uint4 != other.Uint4) return false;
    if (!object.Equals(Vec1, other.Vec1)) return false;
    if (!object.Equals(Vec2, other.Vec2)) return false;
    if (!object.Equals(Vec3, other.Vec3)) return false;
    if (!object.Equals(Vec4, other.Vec4)) return false;
    if (String1 != other.String1) return false;
    if (String2 != other.String2) return false;
    if (String3 != other.String3) return false;
    if (String4 != other.String4) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasEntryType) hash ^= EntryType.GetHashCode();
    if (HasParent) hash ^= Parent.GetHashCode();
    if (HasSerialNumber) hash ^= SerialNumber.GetHashCode();
    if (HasModifierSubclass) hash ^= ModifierSubclass.GetHashCode();
    if (HasStackCount) hash ^= StackCount.GetHashCode();
    if (HasMaxStackCount) hash ^= MaxStackCount.GetHashCode();
    if (HasLastAppliedTime) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LastAppliedTime);
    if (HasDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
    if (HasCaster) hash ^= Caster.GetHashCode();
    if (HasAbility) hash ^= Ability.GetHashCode();
    if (HasAuraProviderSerialNumber) hash ^= AuraProviderSerialNumber.GetHashCode();
    if (HasAuraProviderEhandle) hash ^= AuraProviderEhandle.GetHashCode();
    if (HasAbilitySubclass) hash ^= AbilitySubclass.GetHashCode();
    if (HasBool1) hash ^= Bool1.GetHashCode();
    if (HasBool2) hash ^= Bool2.GetHashCode();
    if (HasBool3) hash ^= Bool3.GetHashCode();
    if (HasBool4) hash ^= Bool4.GetHashCode();
    if (HasInt1) hash ^= Int1.GetHashCode();
    if (HasInt2) hash ^= Int2.GetHashCode();
    if (HasInt3) hash ^= Int3.GetHashCode();
    if (HasInt4) hash ^= Int4.GetHashCode();
    if (HasFloat1) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float1);
    if (HasFloat2) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float2);
    if (HasFloat3) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float3);
    if (HasFloat4) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float4);
    if (HasFloat5) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float5);
    if (HasFloat6) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float6);
    if (HasFloat7) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float7);
    if (HasFloat8) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float8);
    if (HasFloat9) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float9);
    if (HasFloat10) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float10);
    if (HasUint1) hash ^= Uint1.GetHashCode();
    if (HasUint2) hash ^= Uint2.GetHashCode();
    if (HasUint3) hash ^= Uint3.GetHashCode();
    if (HasUint4) hash ^= Uint4.GetHashCode();
    if (vec1_ != null) hash ^= Vec1.GetHashCode();
    if (vec2_ != null) hash ^= Vec2.GetHashCode();
    if (vec3_ != null) hash ^= Vec3.GetHashCode();
    if (vec4_ != null) hash ^= Vec4.GetHashCode();
    if (HasString1) hash ^= String1.GetHashCode();
    if (HasString2) hash ^= String2.GetHashCode();
    if (HasString3) hash ^= String3.GetHashCode();
    if (HasString4) hash ^= String4.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasEntryType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) EntryType);
    }
    if (HasParent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Parent);
    }
    if (HasSerialNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(SerialNumber);
    }
    if (HasModifierSubclass) {
      output.WriteRawTag(32);
      output.WriteUInt32(ModifierSubclass);
    }
    if (HasStackCount) {
      output.WriteRawTag(40);
      output.WriteInt32(StackCount);
    }
    if (HasMaxStackCount) {
      output.WriteRawTag(48);
      output.WriteInt32(MaxStackCount);
    }
    if (HasLastAppliedTime) {
      output.WriteRawTag(61);
      output.WriteFloat(LastAppliedTime);
    }
    if (HasDuration) {
      output.WriteRawTag(69);
      output.WriteFloat(Duration);
    }
    if (HasCaster) {
      output.WriteRawTag(72);
      output.WriteUInt32(Caster);
    }
    if (HasAbility) {
      output.WriteRawTag(80);
      output.WriteUInt32(Ability);
    }
    if (HasAuraProviderSerialNumber) {
      output.WriteRawTag(88);
      output.WriteInt32(AuraProviderSerialNumber);
    }
    if (HasAuraProviderEhandle) {
      output.WriteRawTag(96);
      output.WriteUInt32(AuraProviderEhandle);
    }
    if (HasAbilitySubclass) {
      output.WriteRawTag(104);
      output.WriteUInt32(AbilitySubclass);
    }
    if (HasBool1) {
      output.WriteRawTag(160, 1);
      output.WriteBool(Bool1);
    }
    if (HasBool2) {
      output.WriteRawTag(168, 1);
      output.WriteBool(Bool2);
    }
    if (HasBool3) {
      output.WriteRawTag(176, 1);
      output.WriteBool(Bool3);
    }
    if (HasBool4) {
      output.WriteRawTag(184, 1);
      output.WriteBool(Bool4);
    }
    if (HasInt1) {
      output.WriteRawTag(200, 1);
      output.WriteInt32(Int1);
    }
    if (HasInt2) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(Int2);
    }
    if (HasInt3) {
      output.WriteRawTag(216, 1);
      output.WriteInt32(Int3);
    }
    if (HasInt4) {
      output.WriteRawTag(224, 1);
      output.WriteInt32(Int4);
    }
    if (HasFloat1) {
      output.WriteRawTag(245, 1);
      output.WriteFloat(Float1);
    }
    if (HasFloat2) {
      output.WriteRawTag(253, 1);
      output.WriteFloat(Float2);
    }
    if (HasFloat3) {
      output.WriteRawTag(133, 2);
      output.WriteFloat(Float3);
    }
    if (HasFloat4) {
      output.WriteRawTag(141, 2);
      output.WriteFloat(Float4);
    }
    if (HasUint1) {
      output.WriteRawTag(152, 2);
      output.WriteUInt64(Uint1);
    }
    if (HasUint2) {
      output.WriteRawTag(160, 2);
      output.WriteUInt64(Uint2);
    }
    if (HasUint3) {
      output.WriteRawTag(168, 2);
      output.WriteUInt64(Uint3);
    }
    if (HasUint4) {
      output.WriteRawTag(176, 2);
      output.WriteUInt64(Uint4);
    }
    if (vec1_ != null) {
      output.WriteRawTag(194, 2);
      output.WriteMessage(Vec1);
    }
    if (vec2_ != null) {
      output.WriteRawTag(202, 2);
      output.WriteMessage(Vec2);
    }
    if (vec3_ != null) {
      output.WriteRawTag(210, 2);
      output.WriteMessage(Vec3);
    }
    if (vec4_ != null) {
      output.WriteRawTag(218, 2);
      output.WriteMessage(Vec4);
    }
    if (HasString1) {
      output.WriteRawTag(234, 2);
      output.WriteString(String1);
    }
    if (HasString2) {
      output.WriteRawTag(242, 2);
      output.WriteString(String2);
    }
    if (HasString3) {
      output.WriteRawTag(250, 2);
      output.WriteString(String3);
    }
    if (HasString4) {
      output.WriteRawTag(130, 3);
      output.WriteString(String4);
    }
    if (HasFloat5) {
      output.WriteRawTag(141, 3);
      output.WriteFloat(Float5);
    }
    if (HasFloat6) {
      output.WriteRawTag(149, 3);
      output.WriteFloat(Float6);
    }
    if (HasFloat7) {
      output.WriteRawTag(157, 3);
      output.WriteFloat(Float7);
    }
    if (HasFloat8) {
      output.WriteRawTag(165, 3);
      output.WriteFloat(Float8);
    }
    if (HasFloat9) {
      output.WriteRawTag(173, 3);
      output.WriteFloat(Float9);
    }
    if (HasFloat10) {
      output.WriteRawTag(181, 3);
      output.WriteFloat(Float10);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasEntryType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) EntryType);
    }
    if (HasParent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Parent);
    }
    if (HasSerialNumber) {
      output.WriteRawTag(24);
      output.WriteUInt32(SerialNumber);
    }
    if (HasModifierSubclass) {
      output.WriteRawTag(32);
      output.WriteUInt32(ModifierSubclass);
    }
    if (HasStackCount) {
      output.WriteRawTag(40);
      output.WriteInt32(StackCount);
    }
    if (HasMaxStackCount) {
      output.WriteRawTag(48);
      output.WriteInt32(MaxStackCount);
    }
    if (HasLastAppliedTime) {
      output.WriteRawTag(61);
      output.WriteFloat(LastAppliedTime);
    }
    if (HasDuration) {
      output.WriteRawTag(69);
      output.WriteFloat(Duration);
    }
    if (HasCaster) {
      output.WriteRawTag(72);
      output.WriteUInt32(Caster);
    }
    if (HasAbility) {
      output.WriteRawTag(80);
      output.WriteUInt32(Ability);
    }
    if (HasAuraProviderSerialNumber) {
      output.WriteRawTag(88);
      output.WriteInt32(AuraProviderSerialNumber);
    }
    if (HasAuraProviderEhandle) {
      output.WriteRawTag(96);
      output.WriteUInt32(AuraProviderEhandle);
    }
    if (HasAbilitySubclass) {
      output.WriteRawTag(104);
      output.WriteUInt32(AbilitySubclass);
    }
    if (HasBool1) {
      output.WriteRawTag(160, 1);
      output.WriteBool(Bool1);
    }
    if (HasBool2) {
      output.WriteRawTag(168, 1);
      output.WriteBool(Bool2);
    }
    if (HasBool3) {
      output.WriteRawTag(176, 1);
      output.WriteBool(Bool3);
    }
    if (HasBool4) {
      output.WriteRawTag(184, 1);
      output.WriteBool(Bool4);
    }
    if (HasInt1) {
      output.WriteRawTag(200, 1);
      output.WriteInt32(Int1);
    }
    if (HasInt2) {
      output.WriteRawTag(208, 1);
      output.WriteInt32(Int2);
    }
    if (HasInt3) {
      output.WriteRawTag(216, 1);
      output.WriteInt32(Int3);
    }
    if (HasInt4) {
      output.WriteRawTag(224, 1);
      output.WriteInt32(Int4);
    }
    if (HasFloat1) {
      output.WriteRawTag(245, 1);
      output.WriteFloat(Float1);
    }
    if (HasFloat2) {
      output.WriteRawTag(253, 1);
      output.WriteFloat(Float2);
    }
    if (HasFloat3) {
      output.WriteRawTag(133, 2);
      output.WriteFloat(Float3);
    }
    if (HasFloat4) {
      output.WriteRawTag(141, 2);
      output.WriteFloat(Float4);
    }
    if (HasUint1) {
      output.WriteRawTag(152, 2);
      output.WriteUInt64(Uint1);
    }
    if (HasUint2) {
      output.WriteRawTag(160, 2);
      output.WriteUInt64(Uint2);
    }
    if (HasUint3) {
      output.WriteRawTag(168, 2);
      output.WriteUInt64(Uint3);
    }
    if (HasUint4) {
      output.WriteRawTag(176, 2);
      output.WriteUInt64(Uint4);
    }
    if (vec1_ != null) {
      output.WriteRawTag(194, 2);
      output.WriteMessage(Vec1);
    }
    if (vec2_ != null) {
      output.WriteRawTag(202, 2);
      output.WriteMessage(Vec2);
    }
    if (vec3_ != null) {
      output.WriteRawTag(210, 2);
      output.WriteMessage(Vec3);
    }
    if (vec4_ != null) {
      output.WriteRawTag(218, 2);
      output.WriteMessage(Vec4);
    }
    if (HasString1) {
      output.WriteRawTag(234, 2);
      output.WriteString(String1);
    }
    if (HasString2) {
      output.WriteRawTag(242, 2);
      output.WriteString(String2);
    }
    if (HasString3) {
      output.WriteRawTag(250, 2);
      output.WriteString(String3);
    }
    if (HasString4) {
      output.WriteRawTag(130, 3);
      output.WriteString(String4);
    }
    if (HasFloat5) {
      output.WriteRawTag(141, 3);
      output.WriteFloat(Float5);
    }
    if (HasFloat6) {
      output.WriteRawTag(149, 3);
      output.WriteFloat(Float6);
    }
    if (HasFloat7) {
      output.WriteRawTag(157, 3);
      output.WriteFloat(Float7);
    }
    if (HasFloat8) {
      output.WriteRawTag(165, 3);
      output.WriteFloat(Float8);
    }
    if (HasFloat9) {
      output.WriteRawTag(173, 3);
      output.WriteFloat(Float9);
    }
    if (HasFloat10) {
      output.WriteRawTag(181, 3);
      output.WriteFloat(Float10);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasEntryType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EntryType);
    }
    if (HasParent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Parent);
    }
    if (HasSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SerialNumber);
    }
    if (HasModifierSubclass) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ModifierSubclass);
    }
    if (HasStackCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(StackCount);
    }
    if (HasMaxStackCount) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStackCount);
    }
    if (HasLastAppliedTime) {
      size += 1 + 4;
    }
    if (HasDuration) {
      size += 1 + 4;
    }
    if (HasCaster) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Caster);
    }
    if (HasAbility) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Ability);
    }
    if (HasAuraProviderSerialNumber) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuraProviderSerialNumber);
    }
    if (HasAuraProviderEhandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuraProviderEhandle);
    }
    if (HasAbilitySubclass) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilitySubclass);
    }
    if (HasBool1) {
      size += 2 + 1;
    }
    if (HasBool2) {
      size += 2 + 1;
    }
    if (HasBool3) {
      size += 2 + 1;
    }
    if (HasBool4) {
      size += 2 + 1;
    }
    if (HasInt1) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int1);
    }
    if (HasInt2) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int2);
    }
    if (HasInt3) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int3);
    }
    if (HasInt4) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int4);
    }
    if (HasFloat1) {
      size += 2 + 4;
    }
    if (HasFloat2) {
      size += 2 + 4;
    }
    if (HasFloat3) {
      size += 2 + 4;
    }
    if (HasFloat4) {
      size += 2 + 4;
    }
    if (HasFloat5) {
      size += 2 + 4;
    }
    if (HasFloat6) {
      size += 2 + 4;
    }
    if (HasFloat7) {
      size += 2 + 4;
    }
    if (HasFloat8) {
      size += 2 + 4;
    }
    if (HasFloat9) {
      size += 2 + 4;
    }
    if (HasFloat10) {
      size += 2 + 4;
    }
    if (HasUint1) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint1);
    }
    if (HasUint2) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint2);
    }
    if (HasUint3) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint3);
    }
    if (HasUint4) {
      size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint4);
    }
    if (vec1_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vec1);
    }
    if (vec2_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vec2);
    }
    if (vec3_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vec3);
    }
    if (vec4_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(Vec4);
    }
    if (HasString1) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(String1);
    }
    if (HasString2) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(String2);
    }
    if (HasString3) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(String3);
    }
    if (HasString4) {
      size += 2 + pb::CodedOutputStream.ComputeStringSize(String4);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CModifierTableEntry other) {
    if (other == null) {
      return;
    }
    if (other.HasEntryType) {
      EntryType = other.EntryType;
    }
    if (other.HasParent) {
      Parent = other.Parent;
    }
    if (other.HasSerialNumber) {
      SerialNumber = other.SerialNumber;
    }
    if (other.HasModifierSubclass) {
      ModifierSubclass = other.ModifierSubclass;
    }
    if (other.HasStackCount) {
      StackCount = other.StackCount;
    }
    if (other.HasMaxStackCount) {
      MaxStackCount = other.MaxStackCount;
    }
    if (other.HasLastAppliedTime) {
      LastAppliedTime = other.LastAppliedTime;
    }
    if (other.HasDuration) {
      Duration = other.Duration;
    }
    if (other.HasCaster) {
      Caster = other.Caster;
    }
    if (other.HasAbility) {
      Ability = other.Ability;
    }
    if (other.HasAuraProviderSerialNumber) {
      AuraProviderSerialNumber = other.AuraProviderSerialNumber;
    }
    if (other.HasAuraProviderEhandle) {
      AuraProviderEhandle = other.AuraProviderEhandle;
    }
    if (other.HasAbilitySubclass) {
      AbilitySubclass = other.AbilitySubclass;
    }
    if (other.HasBool1) {
      Bool1 = other.Bool1;
    }
    if (other.HasBool2) {
      Bool2 = other.Bool2;
    }
    if (other.HasBool3) {
      Bool3 = other.Bool3;
    }
    if (other.HasBool4) {
      Bool4 = other.Bool4;
    }
    if (other.HasInt1) {
      Int1 = other.Int1;
    }
    if (other.HasInt2) {
      Int2 = other.Int2;
    }
    if (other.HasInt3) {
      Int3 = other.Int3;
    }
    if (other.HasInt4) {
      Int4 = other.Int4;
    }
    if (other.HasFloat1) {
      Float1 = other.Float1;
    }
    if (other.HasFloat2) {
      Float2 = other.Float2;
    }
    if (other.HasFloat3) {
      Float3 = other.Float3;
    }
    if (other.HasFloat4) {
      Float4 = other.Float4;
    }
    if (other.HasFloat5) {
      Float5 = other.Float5;
    }
    if (other.HasFloat6) {
      Float6 = other.Float6;
    }
    if (other.HasFloat7) {
      Float7 = other.Float7;
    }
    if (other.HasFloat8) {
      Float8 = other.Float8;
    }
    if (other.HasFloat9) {
      Float9 = other.Float9;
    }
    if (other.HasFloat10) {
      Float10 = other.Float10;
    }
    if (other.HasUint1) {
      Uint1 = other.Uint1;
    }
    if (other.HasUint2) {
      Uint2 = other.Uint2;
    }
    if (other.HasUint3) {
      Uint3 = other.Uint3;
    }
    if (other.HasUint4) {
      Uint4 = other.Uint4;
    }
    if (other.vec1_ != null) {
      if (vec1_ == null) {
        Vec1 = new global::CMsgVector();
      }
      Vec1.MergeFrom(other.Vec1);
    }
    if (other.vec2_ != null) {
      if (vec2_ == null) {
        Vec2 = new global::CMsgVector();
      }
      Vec2.MergeFrom(other.Vec2);
    }
    if (other.vec3_ != null) {
      if (vec3_ == null) {
        Vec3 = new global::CMsgVector();
      }
      Vec3.MergeFrom(other.Vec3);
    }
    if (other.vec4_ != null) {
      if (vec4_ == null) {
        Vec4 = new global::CMsgVector();
      }
      Vec4.MergeFrom(other.Vec4);
    }
    if (other.HasString1) {
      String1 = other.String1;
    }
    if (other.HasString2) {
      String2 = other.String2;
    }
    if (other.HasString3) {
      String3 = other.String3;
    }
    if (other.HasString4) {
      String4 = other.String4;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          EntryType = (global::MODIFIER_ENTRY_TYPE) input.ReadEnum();
          break;
        }
        case 16: {
          Parent = input.ReadUInt32();
          break;
        }
        case 24: {
          SerialNumber = input.ReadUInt32();
          break;
        }
        case 32: {
          ModifierSubclass = input.ReadUInt32();
          break;
        }
        case 40: {
          StackCount = input.ReadInt32();
          break;
        }
        case 48: {
          MaxStackCount = input.ReadInt32();
          break;
        }
        case 61: {
          LastAppliedTime = input.ReadFloat();
          break;
        }
        case 69: {
          Duration = input.ReadFloat();
          break;
        }
        case 72: {
          Caster = input.ReadUInt32();
          break;
        }
        case 80: {
          Ability = input.ReadUInt32();
          break;
        }
        case 88: {
          AuraProviderSerialNumber = input.ReadInt32();
          break;
        }
        case 96: {
          AuraProviderEhandle = input.ReadUInt32();
          break;
        }
        case 104: {
          AbilitySubclass = input.ReadUInt32();
          break;
        }
        case 160: {
          Bool1 = input.ReadBool();
          break;
        }
        case 168: {
          Bool2 = input.ReadBool();
          break;
        }
        case 176: {
          Bool3 = input.ReadBool();
          break;
        }
        case 184: {
          Bool4 = input.ReadBool();
          break;
        }
        case 200: {
          Int1 = input.ReadInt32();
          break;
        }
        case 208: {
          Int2 = input.ReadInt32();
          break;
        }
        case 216: {
          Int3 = input.ReadInt32();
          break;
        }
        case 224: {
          Int4 = input.ReadInt32();
          break;
        }
        case 245: {
          Float1 = input.ReadFloat();
          break;
        }
        case 253: {
          Float2 = input.ReadFloat();
          break;
        }
        case 261: {
          Float3 = input.ReadFloat();
          break;
        }
        case 269: {
          Float4 = input.ReadFloat();
          break;
        }
        case 280: {
          Uint1 = input.ReadUInt64();
          break;
        }
        case 288: {
          Uint2 = input.ReadUInt64();
          break;
        }
        case 296: {
          Uint3 = input.ReadUInt64();
          break;
        }
        case 304: {
          Uint4 = input.ReadUInt64();
          break;
        }
        case 322: {
          if (vec1_ == null) {
            Vec1 = new global::CMsgVector();
          }
          input.ReadMessage(Vec1);
          break;
        }
        case 330: {
          if (vec2_ == null) {
            Vec2 = new global::CMsgVector();
          }
          input.ReadMessage(Vec2);
          break;
        }
        case 338: {
          if (vec3_ == null) {
            Vec3 = new global::CMsgVector();
          }
          input.ReadMessage(Vec3);
          break;
        }
        case 346: {
          if (vec4_ == null) {
            Vec4 = new global::CMsgVector();
          }
          input.ReadMessage(Vec4);
          break;
        }
        case 362: {
          String1 = input.ReadString();
          break;
        }
        case 370: {
          String2 = input.ReadString();
          break;
        }
        case 378: {
          String3 = input.ReadString();
          break;
        }
        case 386: {
          String4 = input.ReadString();
          break;
        }
        case 397: {
          Float5 = input.ReadFloat();
          break;
        }
        case 405: {
          Float6 = input.ReadFloat();
          break;
        }
        case 413: {
          Float7 = input.ReadFloat();
          break;
        }
        case 421: {
          Float8 = input.ReadFloat();
          break;
        }
        case 429: {
          Float9 = input.ReadFloat();
          break;
        }
        case 437: {
          Float10 = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          EntryType = (global::MODIFIER_ENTRY_TYPE) input.ReadEnum();
          break;
        }
        case 16: {
          Parent = input.ReadUInt32();
          break;
        }
        case 24: {
          SerialNumber = input.ReadUInt32();
          break;
        }
        case 32: {
          ModifierSubclass = input.ReadUInt32();
          break;
        }
        case 40: {
          StackCount = input.ReadInt32();
          break;
        }
        case 48: {
          MaxStackCount = input.ReadInt32();
          break;
        }
        case 61: {
          LastAppliedTime = input.ReadFloat();
          break;
        }
        case 69: {
          Duration = input.ReadFloat();
          break;
        }
        case 72: {
          Caster = input.ReadUInt32();
          break;
        }
        case 80: {
          Ability = input.ReadUInt32();
          break;
        }
        case 88: {
          AuraProviderSerialNumber = input.ReadInt32();
          break;
        }
        case 96: {
          AuraProviderEhandle = input.ReadUInt32();
          break;
        }
        case 104: {
          AbilitySubclass = input.ReadUInt32();
          break;
        }
        case 160: {
          Bool1 = input.ReadBool();
          break;
        }
        case 168: {
          Bool2 = input.ReadBool();
          break;
        }
        case 176: {
          Bool3 = input.ReadBool();
          break;
        }
        case 184: {
          Bool4 = input.ReadBool();
          break;
        }
        case 200: {
          Int1 = input.ReadInt32();
          break;
        }
        case 208: {
          Int2 = input.ReadInt32();
          break;
        }
        case 216: {
          Int3 = input.ReadInt32();
          break;
        }
        case 224: {
          Int4 = input.ReadInt32();
          break;
        }
        case 245: {
          Float1 = input.ReadFloat();
          break;
        }
        case 253: {
          Float2 = input.ReadFloat();
          break;
        }
        case 261: {
          Float3 = input.ReadFloat();
          break;
        }
        case 269: {
          Float4 = input.ReadFloat();
          break;
        }
        case 280: {
          Uint1 = input.ReadUInt64();
          break;
        }
        case 288: {
          Uint2 = input.ReadUInt64();
          break;
        }
        case 296: {
          Uint3 = input.ReadUInt64();
          break;
        }
        case 304: {
          Uint4 = input.ReadUInt64();
          break;
        }
        case 322: {
          if (vec1_ == null) {
            Vec1 = new global::CMsgVector();
          }
          input.ReadMessage(Vec1);
          break;
        }
        case 330: {
          if (vec2_ == null) {
            Vec2 = new global::CMsgVector();
          }
          input.ReadMessage(Vec2);
          break;
        }
        case 338: {
          if (vec3_ == null) {
            Vec3 = new global::CMsgVector();
          }
          input.ReadMessage(Vec3);
          break;
        }
        case 346: {
          if (vec4_ == null) {
            Vec4 = new global::CMsgVector();
          }
          input.ReadMessage(Vec4);
          break;
        }
        case 362: {
          String1 = input.ReadString();
          break;
        }
        case 370: {
          String2 = input.ReadString();
          break;
        }
        case 378: {
          String3 = input.ReadString();
          break;
        }
        case 386: {
          String4 = input.ReadString();
          break;
        }
        case 397: {
          Float5 = input.ReadFloat();
          break;
        }
        case 405: {
          Float6 = input.ReadFloat();
          break;
        }
        case 413: {
          Float7 = input.ReadFloat();
          break;
        }
        case 421: {
          Float8 = input.ReadFloat();
          break;
        }
        case 429: {
          Float9 = input.ReadFloat();
          break;
        }
        case 437: {
          Float10 = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
