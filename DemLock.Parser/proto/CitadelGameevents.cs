// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: citadel_gameevents.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from citadel_gameevents.proto</summary>
public static partial class CitadelGameeventsReflection {

  #region Descriptor
  /// <summary>File descriptor for citadel_gameevents.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static CitadelGameeventsReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChhjaXRhZGVsX2dhbWVldmVudHMucHJvdG8aFm5ldHdvcmtiYXNldHlwZXMu",
          "cHJvdG8iugQKD0NNc2dGaXJlQnVsbGV0cxIbCgZvcmlnaW4YASABKAsyCy5D",
          "TXNnVmVjdG9yEhsKBmFuZ2xlcxgCIAEoCzILLkNNc2dRQW5nbGUSDAoEc2Vl",
          "ZBgEIAEoDRIaCg5zaG9vdGVyX2VudGl0eRgFIAEoBToCLTESEwoHYWJpbGl0",
          "eRgHIAEoBToCLTESGwoTcGVuZXRyYXRpb25fcGVyY2VudBgIIAEoAhIOCgZz",
          "cHJlYWQYCSABKAISHAoOZmlyZWRfZnJvbV9ndW4YCiABKAg6BHRydWUSGAoQ",
          "YnVsbGV0c19vdmVycmlkZRgLIAEoDRI9ChJ0cmFjZXJfcmVwbGFjZW1lbnQY",
          "DCABKAsyIS5DTXNnRmlyZUJ1bGxldHMuVHJhY2VyQXNzaWdubWVudBI8ChF0",
          "cmFjZXJfYWRkaXRpb25hbBgNIAMoCzIhLkNNc2dGaXJlQnVsbGV0cy5UcmFj",
          "ZXJBc3NpZ25tZW50EiQKD2FuZ2xlc19vcmlnaW5hbBgOIAEoCzILLkNNc2dR",
          "QW5nbGUSGgoSd2VhcG9uX3N1YmNsYXNzX2lkGA8gASgNEhMKC3Nob3RfbnVt",
          "YmVyGBAgASgNEhkKDWlnbm9yZV9lbnRpdHkYESABKAU6Ai0xEhEKCW1heF9y",
          "YW5nZRgSIAEoAhpHChBUcmFjZXJBc3NpZ25tZW50EhoKEnRyYWNlcl9yZXNv",
          "dXJjZV9pZBgBIAEoBBIXCg9idWxsZXRfaW5kaWNpZXMYAiABKA0iswIKEENN",
          "c2dCdWxsZXRJbXBhY3QSIAoLdHJhY2Vfc3RhcnQYASABKAsyCy5DTXNnVmVj",
          "dG9yEiIKDWltcGFjdF9vcmlnaW4YAiABKAsyCy5DTXNnVmVjdG9yEiMKDnN1",
          "cmZhY2Vfbm9ybWFsGAMgASgLMgsuQ01zZ1ZlY3RvchIOCgZkYW1hZ2UYBCAB",
          "KA0SFAoMc3VyZmFjZV90eXBlGAUgASgNEhwKEGFiaWxpdHlfZW50aW5kZXgY",
          "ByABKAU6Ai0xEh0KEWltcGFjdGVkX2VudGluZGV4GAggASgFOgItMRIXCg9p",
          "bXBhY3RlZF9oaXRib3gYCSABKA0SGgoSd2VhcG9uX3N1YmNsYXNzX2lkGAog",
          "ASgNEhwKEHNob290ZXJfZW50aW5kZXgYCyABKAU6Ai0xIkwKE0NNc2dQbGF5",
          "ZXJBbmltRXZlbnQSGAoGcGxheWVyGAEgASgHOggxNjc3NzIxNRINCgVldmVu",
          "dBgCIAEoDRIMCgRkYXRhGAMgASgFIqYQChlDTXNnUGFydGljbGVTeXN0ZW1N",
          "YW5hZ2VyElQKBHR5cGUYASACKA4yIC5QQVJUSUNMRV9TWVNURU1fTUFOQUdF",
          "Ul9NRVNTQUdFOiRQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9DUkVB",
          "VEUSDQoFaW5kZXgYAiACKA0SQgoPY3JlYXRlX3BhcnRpY2xlGAMgASgLMiku",
          "Q01zZ1BhcnRpY2xlU3lzdGVtTWFuYWdlci5DcmVhdGVQYXJ0aWNsZRJEChBk",
          "ZXN0cm95X3BhcnRpY2xlGAQgASgLMiouQ01zZ1BhcnRpY2xlU3lzdGVtTWFu",
          "YWdlci5EZXN0cm95UGFydGljbGUSVwoaZGVzdHJveV9wYXJ0aWNsZV9pbnZv",
          "bHZpbmcYBSABKAsyMy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLkRlc3Ry",
          "b3lQYXJ0aWNsZUludm9sdmluZxJPChZyZWxlYXNlX3BhcnRpY2xlX2luZGV4",
          "GAYgASgLMi8uQ01zZ1BhcnRpY2xlU3lzdGVtTWFuYWdlci5SZWxlYXNlUGFy",
          "dGljbGVJbmRleBJCCg91cGRhdGVfcGFydGljbGUYByABKAsyKS5DTXNnUGFy",
          "dGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBhcnRpY2xlEkkKE3VwZGF0ZV9w",
          "YXJ0aWNsZV9md2QYCCABKAsyLC5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2Vy",
          "LlVwZGF0ZVBhcnRpY2xlRndkEk8KFnVwZGF0ZV9wYXJ0aWNsZV9vcmllbnQY",
          "CSABKAsyLy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBhcnRp",
          "Y2xlT3JpZW50ElMKGHVwZGF0ZV9wYXJ0aWNsZV9mYWxsYmFjaxgKIAEoCzIx",
          "LkNNc2dQYXJ0aWNsZVN5c3RlbU1hbmFnZXIuVXBkYXRlUGFydGljbGVGYWxs",
          "YmFjaxJPChZ1cGRhdGVfcGFydGljbGVfb2Zmc2V0GAsgASgLMi8uQ01zZ1Bh",
          "cnRpY2xlU3lzdGVtTWFuYWdlci5VcGRhdGVQYXJ0aWNsZU9mZnNldBJJChN1",
          "cGRhdGVfcGFydGljbGVfZW50GAwgASgLMiwuQ01zZ1BhcnRpY2xlU3lzdGVt",
          "TWFuYWdlci5VcGRhdGVQYXJ0aWNsZUVudBJPChZ1cGRhdGVfcGFydGljbGVf",
          "ZnJvemVuGA0gASgLMi8uQ01zZ1BhcnRpY2xlU3lzdGVtTWFuYWdlci5VcGRh",
          "dGVQYXJ0aWNsZUZyb3plbhJYCht1cGRhdGVfcGFydGljbGVfc2hvdWxkX2Ry",
          "YXcYDiABKAsyMy5DTXNnUGFydGljbGVTeXN0ZW1NYW5hZ2VyLlVwZGF0ZVBh",
          "cnRpY2xlU2hvdWxkRHJhdxqfAQoOQ3JlYXRlUGFydGljbGUSGwoTcGFydGlj",
          "bGVfbmFtZV9pbmRleBgBIAEoBhITCgthdHRhY2hfdHlwZRgCIAEoBRIfCg1l",
          "bnRpdHlfaGFuZGxlGAMgASgNOggxNjc3NzIxNRIdCghwb3NpdGlvbhgEIAEo",
          "CzILLkNNc2dWZWN0b3ISGwoGYW5nbGVzGAUgASgLMgsuQ01zZ1FBbmdsZRou",
          "Cg9EZXN0cm95UGFydGljbGUSGwoTZGVzdHJveV9pbW1lZGlhdGVseRgBIAEo",
          "CBpYChhEZXN0cm95UGFydGljbGVJbnZvbHZpbmcSGwoTZGVzdHJveV9pbW1l",
          "ZGlhdGVseRgBIAEoCBIfCg1lbnRpdHlfaGFuZGxlGAMgASgNOggxNjc3NzIx",
          "NRoWChRSZWxlYXNlUGFydGljbGVJbmRleBpGCg5VcGRhdGVQYXJ0aWNsZRIV",
          "Cg1jb250cm9sX3BvaW50GAEgASgFEh0KCHBvc2l0aW9uGAIgASgLMgsuQ01z",
          "Z1ZlY3RvchpIChFVcGRhdGVQYXJ0aWNsZUZ3ZBIVCg1jb250cm9sX3BvaW50",
          "GAEgASgFEhwKB2ZvcndhcmQYAiABKAsyCy5DTXNnVmVjdG9yGn8KFFVwZGF0",
          "ZVBhcnRpY2xlT3JpZW50EhUKDWNvbnRyb2xfcG9pbnQYASABKAUSHAoHZm9y",
          "d2FyZBgCIAEoCzILLkNNc2dWZWN0b3ISGQoEbGVmdBgDIAEoCzILLkNNc2dW",
          "ZWN0b3ISFwoCdXAYBCABKAsyCy5DTXNnVmVjdG9yGk4KFlVwZGF0ZVBhcnRp",
          "Y2xlRmFsbGJhY2sSFQoNY29udHJvbF9wb2ludBgBIAEoBRIdCghwb3NpdGlv",
          "bhgCIAEoCzILLkNNc2dWZWN0b3IanAEKEVVwZGF0ZVBhcnRpY2xlRW50EhUK",
          "DWNvbnRyb2xfcG9pbnQYASABKAUSHwoNZW50aXR5X2hhbmRsZRgCIAEoDToI",
          "MTY3NzcyMTUSEwoLYXR0YWNoX3R5cGUYAyABKAUSEgoKYXR0YWNobWVudBgE",
          "IAEoBRImChFmYWxsYmFja19wb3NpdGlvbhgFIAEoCzILLkNNc2dWZWN0b3Ia",
          "UQoUVXBkYXRlUGFydGljbGVPZmZzZXQSFQoNY29udHJvbF9wb2ludBgBIAEo",
          "BRIiCg1vcmlnaW5fb2Zmc2V0GAIgASgLMgsuQ01zZ1ZlY3RvchoqChRVcGRh",
          "dGVQYXJ0aWNsZUZyb3plbhISCgpzZXRfZnJvemVuGAEgASgIGi8KGFVwZGF0",
          "ZVBhcnRpY2xlU2hvdWxkRHJhdxITCgtzaG91bGRfZHJhdxgBIAEoCCLHAQoU",
          "Q01zZ1NjcmVlblRleHRQcmV0dHkSDQoFeF9wb3MYASABKAISDQoFeV9wb3MY",
          "AiABKAISDAoEbGluZRgDIAEoBRIMCgR0ZXh0GAQgASgJEgkKAXIYBSABKAUS",
          "CQoBZxgGIAEoBRIJCgFiGAcgASgFEgkKAWEYCCABKAUSEAoIZHVyYXRpb24Y",
          "CSABKAISEQoJZm9udF9uYW1lGAogASgJEhEKCWZvbnRfc2l6ZRgLIAEoBRIR",
          "Cglib2xkX2ZvbnQYDCABKAgilgEKGUNNc2dTZXJ2ZXJSZXF1ZXN0ZWRUcmFj",
          "ZXISGwoGb3JpZ2luGAEgASgLMgsuQ01zZ1ZlY3RvchIYCgNlbmQYAiABKAsy",
          "Cy5DTXNnVmVjdG9yEhQKCHdlYXBvbmlkGAMgASgFOgItMRIfCg1lbnRpdHlf",
          "aGFuZGxlGAQgASgNOggxNjc3NzIxNRILCgNkcHMYBSABKAIifAoZQ01zZ0Vu",
          "YWJsZVNhdFZvbHVtZXNFdmVudBIMCgRtb2RlGAEgASgNEhQKDGRlc2F0X2Ft",
          "b3VudBgCIAEoAhIQCghzYXRfdGludBgDIAEoBxISCgpkZXNhdF90aW50GAQg",
          "ASgHEhUKDW91dGxpbmVfY29sb3IYBSABKAcigwIKF0NNc2dQbGFjZVNhdFZv",
          "bHVtZUV2ZW50Eh0KCHBvc2l0aW9uGAEgASgLMgsuQ01zZ1ZlY3RvchIeCglk",
          "aXJlY3Rpb24YAiABKAsyCy5DTXNnVmVjdG9yEg4KBnJhZGl1cxgDIAEoAhIY",
          "ChBmYWxsb2ZmX2Rpc3RhbmNlGAQgASgCEhEKCXRoZXRhX2RvdBgFIAEoAhIP",
          "CgdwaGlfZG90GAYgASgCEh8KDWVudGl0eV9oYW5kbGUYByABKA06CDE2Nzc3",
          "MjE1EhkKEWF0dGFjaG1lbnRfaGFuZGxlGAggASgNEgwKBHR5cGUYCSABKA0S",
          "EQoJdm9sdW1lX2lkGAogASgFIi0KGENNc2dSZW1vdmVTYXRWb2x1bWVFdmVu",
          "dBIRCgl2b2x1bWVfaWQYASABKAUiHAoaQ01zZ0Rpc2FibGVTYXRWb2x1bWVz",
          "RXZlbnQqqgIKEkVDaXRhZGVsR2FtZUV2ZW50cxITCg5HRV9GaXJlQnVsbGV0",
          "cxDCAxIXChJHRV9QbGF5ZXJBbmltRXZlbnQQwwMSHQoYR0VfUGFydGljbGVT",
          "eXN0ZW1NYW5hZ2VyEMoDEhgKE0dFX1NjcmVlblRleHRQcmV0dHkQywMSHQoY",
          "R0VfU2VydmVyUmVxdWVzdGVkVHJhY2VyEMwDEhQKD0dFX0J1bGxldEltcGFj",
          "dBDNAxIdChhHRV9FbmFibGVTYXRWb2x1bWVzRXZlbnQQzgMSGwoWR0VfUGxh",
          "Y2VTYXRWb2x1bWVFdmVudBDPAxIeChlHRV9EaXNhYmxlU2F0Vm9sdW1lc0V2",
          "ZW50ENADEhwKF0dFX1JlbW92ZVNhdFZvbHVtZUV2ZW50ENEDKuEECh9QQVJU",
          "SUNMRV9TWVNURU1fTUFOQUdFUl9NRVNTQUdFEigKJFBBUlRJQ0xFX1NZU1RF",
          "TV9NQU5BR0VSX0VWRU5UX0NSRUFURRAAEikKJVBBUlRJQ0xFX1NZU1RFTV9N",
          "QU5BR0VSX0VWRU5UX0RFU1RST1kQARIzCi9QQVJUSUNMRV9TWVNURU1fTUFO",
          "QUdFUl9FVkVOVF9ERVNUUk9ZX0lOVk9MVklORxACEikKJVBBUlRJQ0xFX1NZ",
          "U1RFTV9NQU5BR0VSX0VWRU5UX1JFTEVBU0UQAxIoCiRQQVJUSUNMRV9TWVNU",
          "RU1fTUFOQUdFUl9FVkVOVF9VUERBVEUQBBIwCixQQVJUSUNMRV9TWVNURU1f",
          "TUFOQUdFUl9FVkVOVF9VUERBVEVfRk9SV0FSRBAFEjQKMFBBUlRJQ0xFX1NZ",
          "U1RFTV9NQU5BR0VSX0VWRU5UX1VQREFURV9PUklFTlRBVElPThAGEjEKLVBB",
          "UlRJQ0xFX1NZU1RFTV9NQU5BR0VSX0VWRU5UX1VQREFURV9GQUxMQkFDSxAH",
          "EiwKKFBBUlRJQ0xFX1NZU1RFTV9NQU5BR0VSX0VWRU5UX1VQREFURV9FTlQQ",
          "CBIvCitQQVJUSUNMRV9TWVNURU1fTUFOQUdFUl9FVkVOVF9VUERBVEVfT0ZG",
          "U0VUEAkSLworUEFSVElDTEVfU1lTVEVNX01BTkFHRVJfRVZFTlRfVVBEQVRF",
          "X0ZST1pFThAKEjQKMFBBUlRJQ0xFX1NZU1RFTV9NQU5BR0VSX0VWRU5UX1VQ",
          "REFURV9TSE9VTERfRFJBVxAL"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::NetworkbasetypesReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ECitadelGameEvents), typeof(global::PARTICLE_SYSTEM_MANAGER_MESSAGE), }, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgFireBullets), global::CMsgFireBullets.Parser, new[]{ "Origin", "Angles", "Seed", "ShooterEntity", "Ability", "PenetrationPercent", "Spread", "FiredFromGun", "BulletsOverride", "TracerReplacement", "TracerAdditional", "AnglesOriginal", "WeaponSubclassId", "ShotNumber", "IgnoreEntity", "MaxRange" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgFireBullets.Types.TracerAssignment), global::CMsgFireBullets.Types.TracerAssignment.Parser, new[]{ "TracerResourceId", "BulletIndicies" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgBulletImpact), global::CMsgBulletImpact.Parser, new[]{ "TraceStart", "ImpactOrigin", "SurfaceNormal", "Damage", "SurfaceType", "AbilityEntindex", "ImpactedEntindex", "ImpactedHitbox", "WeaponSubclassId", "ShooterEntindex" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgPlayerAnimEvent), global::CMsgPlayerAnimEvent.Parser, new[]{ "Player", "Event", "Data" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager), global::CMsgParticleSystemManager.Parser, new[]{ "Type", "Index", "CreateParticle", "DestroyParticle", "DestroyParticleInvolving", "ReleaseParticleIndex", "UpdateParticle", "UpdateParticleFwd", "UpdateParticleOrient", "UpdateParticleFallback", "UpdateParticleOffset", "UpdateParticleEnt", "UpdateParticleFrozen", "UpdateParticleShouldDraw" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.CreateParticle), global::CMsgParticleSystemManager.Types.CreateParticle.Parser, new[]{ "ParticleNameIndex", "AttachType", "EntityHandle", "Position", "Angles" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.DestroyParticle), global::CMsgParticleSystemManager.Types.DestroyParticle.Parser, new[]{ "DestroyImmediately" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.DestroyParticleInvolving), global::CMsgParticleSystemManager.Types.DestroyParticleInvolving.Parser, new[]{ "DestroyImmediately", "EntityHandle" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.ReleaseParticleIndex), global::CMsgParticleSystemManager.Types.ReleaseParticleIndex.Parser, null, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticle), global::CMsgParticleSystemManager.Types.UpdateParticle.Parser, new[]{ "ControlPoint", "Position" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleFwd), global::CMsgParticleSystemManager.Types.UpdateParticleFwd.Parser, new[]{ "ControlPoint", "Forward" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleOrient), global::CMsgParticleSystemManager.Types.UpdateParticleOrient.Parser, new[]{ "ControlPoint", "Forward", "Left", "Up" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleFallback), global::CMsgParticleSystemManager.Types.UpdateParticleFallback.Parser, new[]{ "ControlPoint", "Position" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleEnt), global::CMsgParticleSystemManager.Types.UpdateParticleEnt.Parser, new[]{ "ControlPoint", "EntityHandle", "AttachType", "Attachment", "FallbackPosition" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleOffset), global::CMsgParticleSystemManager.Types.UpdateParticleOffset.Parser, new[]{ "ControlPoint", "OriginOffset" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleFrozen), global::CMsgParticleSystemManager.Types.UpdateParticleFrozen.Parser, new[]{ "SetFrozen" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw), global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw.Parser, new[]{ "ShouldDraw" }, null, null, null, null)}),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgScreenTextPretty), global::CMsgScreenTextPretty.Parser, new[]{ "XPos", "YPos", "Line", "Text", "R", "G", "B", "A", "Duration", "FontName", "FontSize", "BoldFont" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgServerRequestedTracer), global::CMsgServerRequestedTracer.Parser, new[]{ "Origin", "End", "Weaponid", "EntityHandle", "Dps" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgEnableSatVolumesEvent), global::CMsgEnableSatVolumesEvent.Parser, new[]{ "Mode", "DesatAmount", "SatTint", "DesatTint", "OutlineColor" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgPlaceSatVolumeEvent), global::CMsgPlaceSatVolumeEvent.Parser, new[]{ "Position", "Direction", "Radius", "FalloffDistance", "ThetaDot", "PhiDot", "EntityHandle", "AttachmentHandle", "Type", "VolumeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgRemoveSatVolumeEvent), global::CMsgRemoveSatVolumeEvent.Parser, new[]{ "VolumeId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CMsgDisableSatVolumesEvent), global::CMsgDisableSatVolumesEvent.Parser, null, null, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum ECitadelGameEvents {
  [pbr::OriginalName("GE_FireBullets")] GeFireBullets = 450,
  [pbr::OriginalName("GE_PlayerAnimEvent")] GePlayerAnimEvent = 451,
  [pbr::OriginalName("GE_ParticleSystemManager")] GeParticleSystemManager = 458,
  [pbr::OriginalName("GE_ScreenTextPretty")] GeScreenTextPretty = 459,
  [pbr::OriginalName("GE_ServerRequestedTracer")] GeServerRequestedTracer = 460,
  [pbr::OriginalName("GE_BulletImpact")] GeBulletImpact = 461,
  [pbr::OriginalName("GE_EnableSatVolumesEvent")] GeEnableSatVolumesEvent = 462,
  [pbr::OriginalName("GE_PlaceSatVolumeEvent")] GePlaceSatVolumeEvent = 463,
  [pbr::OriginalName("GE_DisableSatVolumesEvent")] GeDisableSatVolumesEvent = 464,
  [pbr::OriginalName("GE_RemoveSatVolumeEvent")] GeRemoveSatVolumeEvent = 465,
}

public enum PARTICLE_SYSTEM_MANAGER_MESSAGE {
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_CREATE")] ParticleSystemManagerEventCreate = 0,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY")] ParticleSystemManagerEventDestroy = 1,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING")] ParticleSystemManagerEventDestroyInvolving = 2,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE")] ParticleSystemManagerEventRelease = 3,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE")] ParticleSystemManagerEventUpdate = 4,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD")] ParticleSystemManagerEventUpdateForward = 5,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION")] ParticleSystemManagerEventUpdateOrientation = 6,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK")] ParticleSystemManagerEventUpdateFallback = 7,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT")] ParticleSystemManagerEventUpdateEnt = 8,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET")] ParticleSystemManagerEventUpdateOffset = 9,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN")] ParticleSystemManagerEventUpdateFrozen = 10,
  [pbr::OriginalName("PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW")] ParticleSystemManagerEventUpdateShouldDraw = 11,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgFireBullets : pb::IMessage<CMsgFireBullets>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgFireBullets> _parser = new pb::MessageParser<CMsgFireBullets>(() => new CMsgFireBullets());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgFireBullets> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgFireBullets() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgFireBullets(CMsgFireBullets other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    angles_ = other.angles_ != null ? other.angles_.Clone() : null;
    seed_ = other.seed_;
    shooterEntity_ = other.shooterEntity_;
    ability_ = other.ability_;
    penetrationPercent_ = other.penetrationPercent_;
    spread_ = other.spread_;
    firedFromGun_ = other.firedFromGun_;
    bulletsOverride_ = other.bulletsOverride_;
    tracerReplacement_ = other.tracerReplacement_ != null ? other.tracerReplacement_.Clone() : null;
    tracerAdditional_ = other.tracerAdditional_.Clone();
    anglesOriginal_ = other.anglesOriginal_ != null ? other.anglesOriginal_.Clone() : null;
    weaponSubclassId_ = other.weaponSubclassId_;
    shotNumber_ = other.shotNumber_;
    ignoreEntity_ = other.ignoreEntity_;
    maxRange_ = other.maxRange_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgFireBullets Clone() {
    return new CMsgFireBullets(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "angles" field.</summary>
  public const int AnglesFieldNumber = 2;
  private global::CMsgQAngle angles_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle Angles {
    get { return angles_; }
    set {
      angles_ = value;
    }
  }

  /// <summary>Field number for the "seed" field.</summary>
  public const int SeedFieldNumber = 4;
  private readonly static uint SeedDefaultValue = 0;

  private uint seed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Seed {
    get { if ((_hasBits0 & 1) != 0) { return seed_; } else { return SeedDefaultValue; } }
    set {
      _hasBits0 |= 1;
      seed_ = value;
    }
  }
  /// <summary>Gets whether the "seed" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSeed {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "seed" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSeed() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "shooter_entity" field.</summary>
  public const int ShooterEntityFieldNumber = 5;
  private readonly static int ShooterEntityDefaultValue = -1;

  private int shooterEntity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ShooterEntity {
    get { if ((_hasBits0 & 2) != 0) { return shooterEntity_; } else { return ShooterEntityDefaultValue; } }
    set {
      _hasBits0 |= 2;
      shooterEntity_ = value;
    }
  }
  /// <summary>Gets whether the "shooter_entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShooterEntity {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "shooter_entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShooterEntity() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ability" field.</summary>
  public const int AbilityFieldNumber = 7;
  private readonly static int AbilityDefaultValue = -1;

  private int ability_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Ability {
    get { if ((_hasBits0 & 4) != 0) { return ability_; } else { return AbilityDefaultValue; } }
    set {
      _hasBits0 |= 4;
      ability_ = value;
    }
  }
  /// <summary>Gets whether the "ability" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbility {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ability" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbility() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "penetration_percent" field.</summary>
  public const int PenetrationPercentFieldNumber = 8;
  private readonly static float PenetrationPercentDefaultValue = 0F;

  private float penetrationPercent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PenetrationPercent {
    get { if ((_hasBits0 & 8) != 0) { return penetrationPercent_; } else { return PenetrationPercentDefaultValue; } }
    set {
      _hasBits0 |= 8;
      penetrationPercent_ = value;
    }
  }
  /// <summary>Gets whether the "penetration_percent" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPenetrationPercent {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "penetration_percent" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPenetrationPercent() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "spread" field.</summary>
  public const int SpreadFieldNumber = 9;
  private readonly static float SpreadDefaultValue = 0F;

  private float spread_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Spread {
    get { if ((_hasBits0 & 16) != 0) { return spread_; } else { return SpreadDefaultValue; } }
    set {
      _hasBits0 |= 16;
      spread_ = value;
    }
  }
  /// <summary>Gets whether the "spread" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSpread {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "spread" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSpread() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "fired_from_gun" field.</summary>
  public const int FiredFromGunFieldNumber = 10;
  private readonly static bool FiredFromGunDefaultValue = true;

  private bool firedFromGun_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool FiredFromGun {
    get { if ((_hasBits0 & 32) != 0) { return firedFromGun_; } else { return FiredFromGunDefaultValue; } }
    set {
      _hasBits0 |= 32;
      firedFromGun_ = value;
    }
  }
  /// <summary>Gets whether the "fired_from_gun" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFiredFromGun {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "fired_from_gun" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFiredFromGun() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "bullets_override" field.</summary>
  public const int BulletsOverrideFieldNumber = 11;
  private readonly static uint BulletsOverrideDefaultValue = 0;

  private uint bulletsOverride_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint BulletsOverride {
    get { if ((_hasBits0 & 64) != 0) { return bulletsOverride_; } else { return BulletsOverrideDefaultValue; } }
    set {
      _hasBits0 |= 64;
      bulletsOverride_ = value;
    }
  }
  /// <summary>Gets whether the "bullets_override" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBulletsOverride {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "bullets_override" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBulletsOverride() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "tracer_replacement" field.</summary>
  public const int TracerReplacementFieldNumber = 12;
  private global::CMsgFireBullets.Types.TracerAssignment tracerReplacement_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgFireBullets.Types.TracerAssignment TracerReplacement {
    get { return tracerReplacement_; }
    set {
      tracerReplacement_ = value;
    }
  }

  /// <summary>Field number for the "tracer_additional" field.</summary>
  public const int TracerAdditionalFieldNumber = 13;
  private static readonly pb::FieldCodec<global::CMsgFireBullets.Types.TracerAssignment> _repeated_tracerAdditional_codec
      = pb::FieldCodec.ForMessage(106, global::CMsgFireBullets.Types.TracerAssignment.Parser);
  private readonly pbc::RepeatedField<global::CMsgFireBullets.Types.TracerAssignment> tracerAdditional_ = new pbc::RepeatedField<global::CMsgFireBullets.Types.TracerAssignment>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::CMsgFireBullets.Types.TracerAssignment> TracerAdditional {
    get { return tracerAdditional_; }
  }

  /// <summary>Field number for the "angles_original" field.</summary>
  public const int AnglesOriginalFieldNumber = 14;
  private global::CMsgQAngle anglesOriginal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgQAngle AnglesOriginal {
    get { return anglesOriginal_; }
    set {
      anglesOriginal_ = value;
    }
  }

  /// <summary>Field number for the "weapon_subclass_id" field.</summary>
  public const int WeaponSubclassIdFieldNumber = 15;
  private readonly static uint WeaponSubclassIdDefaultValue = 0;

  private uint weaponSubclassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WeaponSubclassId {
    get { if ((_hasBits0 & 128) != 0) { return weaponSubclassId_; } else { return WeaponSubclassIdDefaultValue; } }
    set {
      _hasBits0 |= 128;
      weaponSubclassId_ = value;
    }
  }
  /// <summary>Gets whether the "weapon_subclass_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWeaponSubclassId {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "weapon_subclass_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWeaponSubclassId() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "shot_number" field.</summary>
  public const int ShotNumberFieldNumber = 16;
  private readonly static uint ShotNumberDefaultValue = 0;

  private uint shotNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ShotNumber {
    get { if ((_hasBits0 & 256) != 0) { return shotNumber_; } else { return ShotNumberDefaultValue; } }
    set {
      _hasBits0 |= 256;
      shotNumber_ = value;
    }
  }
  /// <summary>Gets whether the "shot_number" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShotNumber {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "shot_number" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShotNumber() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "ignore_entity" field.</summary>
  public const int IgnoreEntityFieldNumber = 17;
  private readonly static int IgnoreEntityDefaultValue = -1;

  private int ignoreEntity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int IgnoreEntity {
    get { if ((_hasBits0 & 512) != 0) { return ignoreEntity_; } else { return IgnoreEntityDefaultValue; } }
    set {
      _hasBits0 |= 512;
      ignoreEntity_ = value;
    }
  }
  /// <summary>Gets whether the "ignore_entity" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIgnoreEntity {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "ignore_entity" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIgnoreEntity() {
    _hasBits0 &= ~512;
  }

  /// <summary>Field number for the "max_range" field.</summary>
  public const int MaxRangeFieldNumber = 18;
  private readonly static float MaxRangeDefaultValue = 0F;

  private float maxRange_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float MaxRange {
    get { if ((_hasBits0 & 1024) != 0) { return maxRange_; } else { return MaxRangeDefaultValue; } }
    set {
      _hasBits0 |= 1024;
      maxRange_ = value;
    }
  }
  /// <summary>Gets whether the "max_range" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMaxRange {
    get { return (_hasBits0 & 1024) != 0; }
  }
  /// <summary>Clears the value of the "max_range" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMaxRange() {
    _hasBits0 &= ~1024;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgFireBullets);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgFireBullets other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(Angles, other.Angles)) return false;
    if (Seed != other.Seed) return false;
    if (ShooterEntity != other.ShooterEntity) return false;
    if (Ability != other.Ability) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PenetrationPercent, other.PenetrationPercent)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Spread, other.Spread)) return false;
    if (FiredFromGun != other.FiredFromGun) return false;
    if (BulletsOverride != other.BulletsOverride) return false;
    if (!object.Equals(TracerReplacement, other.TracerReplacement)) return false;
    if(!tracerAdditional_.Equals(other.tracerAdditional_)) return false;
    if (!object.Equals(AnglesOriginal, other.AnglesOriginal)) return false;
    if (WeaponSubclassId != other.WeaponSubclassId) return false;
    if (ShotNumber != other.ShotNumber) return false;
    if (IgnoreEntity != other.IgnoreEntity) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxRange, other.MaxRange)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (angles_ != null) hash ^= Angles.GetHashCode();
    if (HasSeed) hash ^= Seed.GetHashCode();
    if (HasShooterEntity) hash ^= ShooterEntity.GetHashCode();
    if (HasAbility) hash ^= Ability.GetHashCode();
    if (HasPenetrationPercent) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PenetrationPercent);
    if (HasSpread) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Spread);
    if (HasFiredFromGun) hash ^= FiredFromGun.GetHashCode();
    if (HasBulletsOverride) hash ^= BulletsOverride.GetHashCode();
    if (tracerReplacement_ != null) hash ^= TracerReplacement.GetHashCode();
    hash ^= tracerAdditional_.GetHashCode();
    if (anglesOriginal_ != null) hash ^= AnglesOriginal.GetHashCode();
    if (HasWeaponSubclassId) hash ^= WeaponSubclassId.GetHashCode();
    if (HasShotNumber) hash ^= ShotNumber.GetHashCode();
    if (HasIgnoreEntity) hash ^= IgnoreEntity.GetHashCode();
    if (HasMaxRange) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxRange);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasSeed) {
      output.WriteRawTag(32);
      output.WriteUInt32(Seed);
    }
    if (HasShooterEntity) {
      output.WriteRawTag(40);
      output.WriteInt32(ShooterEntity);
    }
    if (HasAbility) {
      output.WriteRawTag(56);
      output.WriteInt32(Ability);
    }
    if (HasPenetrationPercent) {
      output.WriteRawTag(69);
      output.WriteFloat(PenetrationPercent);
    }
    if (HasSpread) {
      output.WriteRawTag(77);
      output.WriteFloat(Spread);
    }
    if (HasFiredFromGun) {
      output.WriteRawTag(80);
      output.WriteBool(FiredFromGun);
    }
    if (HasBulletsOverride) {
      output.WriteRawTag(88);
      output.WriteUInt32(BulletsOverride);
    }
    if (tracerReplacement_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(TracerReplacement);
    }
    tracerAdditional_.WriteTo(output, _repeated_tracerAdditional_codec);
    if (anglesOriginal_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(AnglesOriginal);
    }
    if (HasWeaponSubclassId) {
      output.WriteRawTag(120);
      output.WriteUInt32(WeaponSubclassId);
    }
    if (HasShotNumber) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(ShotNumber);
    }
    if (HasIgnoreEntity) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(IgnoreEntity);
    }
    if (HasMaxRange) {
      output.WriteRawTag(149, 1);
      output.WriteFloat(MaxRange);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (angles_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Angles);
    }
    if (HasSeed) {
      output.WriteRawTag(32);
      output.WriteUInt32(Seed);
    }
    if (HasShooterEntity) {
      output.WriteRawTag(40);
      output.WriteInt32(ShooterEntity);
    }
    if (HasAbility) {
      output.WriteRawTag(56);
      output.WriteInt32(Ability);
    }
    if (HasPenetrationPercent) {
      output.WriteRawTag(69);
      output.WriteFloat(PenetrationPercent);
    }
    if (HasSpread) {
      output.WriteRawTag(77);
      output.WriteFloat(Spread);
    }
    if (HasFiredFromGun) {
      output.WriteRawTag(80);
      output.WriteBool(FiredFromGun);
    }
    if (HasBulletsOverride) {
      output.WriteRawTag(88);
      output.WriteUInt32(BulletsOverride);
    }
    if (tracerReplacement_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(TracerReplacement);
    }
    tracerAdditional_.WriteTo(ref output, _repeated_tracerAdditional_codec);
    if (anglesOriginal_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(AnglesOriginal);
    }
    if (HasWeaponSubclassId) {
      output.WriteRawTag(120);
      output.WriteUInt32(WeaponSubclassId);
    }
    if (HasShotNumber) {
      output.WriteRawTag(128, 1);
      output.WriteUInt32(ShotNumber);
    }
    if (HasIgnoreEntity) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(IgnoreEntity);
    }
    if (HasMaxRange) {
      output.WriteRawTag(149, 1);
      output.WriteFloat(MaxRange);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (angles_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
    }
    if (HasSeed) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seed);
    }
    if (HasShooterEntity) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShooterEntity);
    }
    if (HasAbility) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ability);
    }
    if (HasPenetrationPercent) {
      size += 1 + 4;
    }
    if (HasSpread) {
      size += 1 + 4;
    }
    if (HasFiredFromGun) {
      size += 1 + 1;
    }
    if (HasBulletsOverride) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BulletsOverride);
    }
    if (tracerReplacement_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TracerReplacement);
    }
    size += tracerAdditional_.CalculateSize(_repeated_tracerAdditional_codec);
    if (anglesOriginal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnglesOriginal);
    }
    if (HasWeaponSubclassId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponSubclassId);
    }
    if (HasShotNumber) {
      size += 2 + pb::CodedOutputStream.ComputeUInt32Size(ShotNumber);
    }
    if (HasIgnoreEntity) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(IgnoreEntity);
    }
    if (HasMaxRange) {
      size += 2 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgFireBullets other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.angles_ != null) {
      if (angles_ == null) {
        Angles = new global::CMsgQAngle();
      }
      Angles.MergeFrom(other.Angles);
    }
    if (other.HasSeed) {
      Seed = other.Seed;
    }
    if (other.HasShooterEntity) {
      ShooterEntity = other.ShooterEntity;
    }
    if (other.HasAbility) {
      Ability = other.Ability;
    }
    if (other.HasPenetrationPercent) {
      PenetrationPercent = other.PenetrationPercent;
    }
    if (other.HasSpread) {
      Spread = other.Spread;
    }
    if (other.HasFiredFromGun) {
      FiredFromGun = other.FiredFromGun;
    }
    if (other.HasBulletsOverride) {
      BulletsOverride = other.BulletsOverride;
    }
    if (other.tracerReplacement_ != null) {
      if (tracerReplacement_ == null) {
        TracerReplacement = new global::CMsgFireBullets.Types.TracerAssignment();
      }
      TracerReplacement.MergeFrom(other.TracerReplacement);
    }
    tracerAdditional_.Add(other.tracerAdditional_);
    if (other.anglesOriginal_ != null) {
      if (anglesOriginal_ == null) {
        AnglesOriginal = new global::CMsgQAngle();
      }
      AnglesOriginal.MergeFrom(other.AnglesOriginal);
    }
    if (other.HasWeaponSubclassId) {
      WeaponSubclassId = other.WeaponSubclassId;
    }
    if (other.HasShotNumber) {
      ShotNumber = other.ShotNumber;
    }
    if (other.HasIgnoreEntity) {
      IgnoreEntity = other.IgnoreEntity;
    }
    if (other.HasMaxRange) {
      MaxRange = other.MaxRange;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 32: {
          Seed = input.ReadUInt32();
          break;
        }
        case 40: {
          ShooterEntity = input.ReadInt32();
          break;
        }
        case 56: {
          Ability = input.ReadInt32();
          break;
        }
        case 69: {
          PenetrationPercent = input.ReadFloat();
          break;
        }
        case 77: {
          Spread = input.ReadFloat();
          break;
        }
        case 80: {
          FiredFromGun = input.ReadBool();
          break;
        }
        case 88: {
          BulletsOverride = input.ReadUInt32();
          break;
        }
        case 98: {
          if (tracerReplacement_ == null) {
            TracerReplacement = new global::CMsgFireBullets.Types.TracerAssignment();
          }
          input.ReadMessage(TracerReplacement);
          break;
        }
        case 106: {
          tracerAdditional_.AddEntriesFrom(input, _repeated_tracerAdditional_codec);
          break;
        }
        case 114: {
          if (anglesOriginal_ == null) {
            AnglesOriginal = new global::CMsgQAngle();
          }
          input.ReadMessage(AnglesOriginal);
          break;
        }
        case 120: {
          WeaponSubclassId = input.ReadUInt32();
          break;
        }
        case 128: {
          ShotNumber = input.ReadUInt32();
          break;
        }
        case 136: {
          IgnoreEntity = input.ReadInt32();
          break;
        }
        case 149: {
          MaxRange = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          input.ReadMessage(Angles);
          break;
        }
        case 32: {
          Seed = input.ReadUInt32();
          break;
        }
        case 40: {
          ShooterEntity = input.ReadInt32();
          break;
        }
        case 56: {
          Ability = input.ReadInt32();
          break;
        }
        case 69: {
          PenetrationPercent = input.ReadFloat();
          break;
        }
        case 77: {
          Spread = input.ReadFloat();
          break;
        }
        case 80: {
          FiredFromGun = input.ReadBool();
          break;
        }
        case 88: {
          BulletsOverride = input.ReadUInt32();
          break;
        }
        case 98: {
          if (tracerReplacement_ == null) {
            TracerReplacement = new global::CMsgFireBullets.Types.TracerAssignment();
          }
          input.ReadMessage(TracerReplacement);
          break;
        }
        case 106: {
          tracerAdditional_.AddEntriesFrom(ref input, _repeated_tracerAdditional_codec);
          break;
        }
        case 114: {
          if (anglesOriginal_ == null) {
            AnglesOriginal = new global::CMsgQAngle();
          }
          input.ReadMessage(AnglesOriginal);
          break;
        }
        case 120: {
          WeaponSubclassId = input.ReadUInt32();
          break;
        }
        case 128: {
          ShotNumber = input.ReadUInt32();
          break;
        }
        case 136: {
          IgnoreEntity = input.ReadInt32();
          break;
        }
        case 149: {
          MaxRange = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgFireBullets message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class TracerAssignment : pb::IMessage<TracerAssignment>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<TracerAssignment> _parser = new pb::MessageParser<TracerAssignment>(() => new TracerAssignment());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<TracerAssignment> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgFireBullets.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TracerAssignment() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TracerAssignment(TracerAssignment other) : this() {
        _hasBits0 = other._hasBits0;
        tracerResourceId_ = other.tracerResourceId_;
        bulletIndicies_ = other.bulletIndicies_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public TracerAssignment Clone() {
        return new TracerAssignment(this);
      }

      /// <summary>Field number for the "tracer_resource_id" field.</summary>
      public const int TracerResourceIdFieldNumber = 1;
      private readonly static ulong TracerResourceIdDefaultValue = 0UL;

      private ulong tracerResourceId_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong TracerResourceId {
        get { if ((_hasBits0 & 1) != 0) { return tracerResourceId_; } else { return TracerResourceIdDefaultValue; } }
        set {
          _hasBits0 |= 1;
          tracerResourceId_ = value;
        }
      }
      /// <summary>Gets whether the "tracer_resource_id" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasTracerResourceId {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "tracer_resource_id" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearTracerResourceId() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "bullet_indicies" field.</summary>
      public const int BulletIndiciesFieldNumber = 2;
      private readonly static uint BulletIndiciesDefaultValue = 0;

      private uint bulletIndicies_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint BulletIndicies {
        get { if ((_hasBits0 & 2) != 0) { return bulletIndicies_; } else { return BulletIndiciesDefaultValue; } }
        set {
          _hasBits0 |= 2;
          bulletIndicies_ = value;
        }
      }
      /// <summary>Gets whether the "bullet_indicies" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasBulletIndicies {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "bullet_indicies" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearBulletIndicies() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as TracerAssignment);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(TracerAssignment other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (TracerResourceId != other.TracerResourceId) return false;
        if (BulletIndicies != other.BulletIndicies) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasTracerResourceId) hash ^= TracerResourceId.GetHashCode();
        if (HasBulletIndicies) hash ^= BulletIndicies.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasTracerResourceId) {
          output.WriteRawTag(8);
          output.WriteUInt64(TracerResourceId);
        }
        if (HasBulletIndicies) {
          output.WriteRawTag(16);
          output.WriteUInt32(BulletIndicies);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasTracerResourceId) {
          output.WriteRawTag(8);
          output.WriteUInt64(TracerResourceId);
        }
        if (HasBulletIndicies) {
          output.WriteRawTag(16);
          output.WriteUInt32(BulletIndicies);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasTracerResourceId) {
          size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TracerResourceId);
        }
        if (HasBulletIndicies) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BulletIndicies);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(TracerAssignment other) {
        if (other == null) {
          return;
        }
        if (other.HasTracerResourceId) {
          TracerResourceId = other.TracerResourceId;
        }
        if (other.HasBulletIndicies) {
          BulletIndicies = other.BulletIndicies;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              TracerResourceId = input.ReadUInt64();
              break;
            }
            case 16: {
              BulletIndicies = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              TracerResourceId = input.ReadUInt64();
              break;
            }
            case 16: {
              BulletIndicies = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgBulletImpact : pb::IMessage<CMsgBulletImpact>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgBulletImpact> _parser = new pb::MessageParser<CMsgBulletImpact>(() => new CMsgBulletImpact());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgBulletImpact> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgBulletImpact() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgBulletImpact(CMsgBulletImpact other) : this() {
    _hasBits0 = other._hasBits0;
    traceStart_ = other.traceStart_ != null ? other.traceStart_.Clone() : null;
    impactOrigin_ = other.impactOrigin_ != null ? other.impactOrigin_.Clone() : null;
    surfaceNormal_ = other.surfaceNormal_ != null ? other.surfaceNormal_.Clone() : null;
    damage_ = other.damage_;
    surfaceType_ = other.surfaceType_;
    abilityEntindex_ = other.abilityEntindex_;
    impactedEntindex_ = other.impactedEntindex_;
    impactedHitbox_ = other.impactedHitbox_;
    weaponSubclassId_ = other.weaponSubclassId_;
    shooterEntindex_ = other.shooterEntindex_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgBulletImpact Clone() {
    return new CMsgBulletImpact(this);
  }

  /// <summary>Field number for the "trace_start" field.</summary>
  public const int TraceStartFieldNumber = 1;
  private global::CMsgVector traceStart_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector TraceStart {
    get { return traceStart_; }
    set {
      traceStart_ = value;
    }
  }

  /// <summary>Field number for the "impact_origin" field.</summary>
  public const int ImpactOriginFieldNumber = 2;
  private global::CMsgVector impactOrigin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector ImpactOrigin {
    get { return impactOrigin_; }
    set {
      impactOrigin_ = value;
    }
  }

  /// <summary>Field number for the "surface_normal" field.</summary>
  public const int SurfaceNormalFieldNumber = 3;
  private global::CMsgVector surfaceNormal_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector SurfaceNormal {
    get { return surfaceNormal_; }
    set {
      surfaceNormal_ = value;
    }
  }

  /// <summary>Field number for the "damage" field.</summary>
  public const int DamageFieldNumber = 4;
  private readonly static uint DamageDefaultValue = 0;

  private uint damage_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Damage {
    get { if ((_hasBits0 & 1) != 0) { return damage_; } else { return DamageDefaultValue; } }
    set {
      _hasBits0 |= 1;
      damage_ = value;
    }
  }
  /// <summary>Gets whether the "damage" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDamage {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "damage" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDamage() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "surface_type" field.</summary>
  public const int SurfaceTypeFieldNumber = 5;
  private readonly static uint SurfaceTypeDefaultValue = 0;

  private uint surfaceType_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SurfaceType {
    get { if ((_hasBits0 & 2) != 0) { return surfaceType_; } else { return SurfaceTypeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      surfaceType_ = value;
    }
  }
  /// <summary>Gets whether the "surface_type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSurfaceType {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "surface_type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSurfaceType() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "ability_entindex" field.</summary>
  public const int AbilityEntindexFieldNumber = 7;
  private readonly static int AbilityEntindexDefaultValue = -1;

  private int abilityEntindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int AbilityEntindex {
    get { if ((_hasBits0 & 4) != 0) { return abilityEntindex_; } else { return AbilityEntindexDefaultValue; } }
    set {
      _hasBits0 |= 4;
      abilityEntindex_ = value;
    }
  }
  /// <summary>Gets whether the "ability_entindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAbilityEntindex {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "ability_entindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAbilityEntindex() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "impacted_entindex" field.</summary>
  public const int ImpactedEntindexFieldNumber = 8;
  private readonly static int ImpactedEntindexDefaultValue = -1;

  private int impactedEntindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ImpactedEntindex {
    get { if ((_hasBits0 & 8) != 0) { return impactedEntindex_; } else { return ImpactedEntindexDefaultValue; } }
    set {
      _hasBits0 |= 8;
      impactedEntindex_ = value;
    }
  }
  /// <summary>Gets whether the "impacted_entindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasImpactedEntindex {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "impacted_entindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearImpactedEntindex() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "impacted_hitbox" field.</summary>
  public const int ImpactedHitboxFieldNumber = 9;
  private readonly static uint ImpactedHitboxDefaultValue = 0;

  private uint impactedHitbox_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint ImpactedHitbox {
    get { if ((_hasBits0 & 16) != 0) { return impactedHitbox_; } else { return ImpactedHitboxDefaultValue; } }
    set {
      _hasBits0 |= 16;
      impactedHitbox_ = value;
    }
  }
  /// <summary>Gets whether the "impacted_hitbox" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasImpactedHitbox {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "impacted_hitbox" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearImpactedHitbox() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "weapon_subclass_id" field.</summary>
  public const int WeaponSubclassIdFieldNumber = 10;
  private readonly static uint WeaponSubclassIdDefaultValue = 0;

  private uint weaponSubclassId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint WeaponSubclassId {
    get { if ((_hasBits0 & 32) != 0) { return weaponSubclassId_; } else { return WeaponSubclassIdDefaultValue; } }
    set {
      _hasBits0 |= 32;
      weaponSubclassId_ = value;
    }
  }
  /// <summary>Gets whether the "weapon_subclass_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWeaponSubclassId {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "weapon_subclass_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWeaponSubclassId() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "shooter_entindex" field.</summary>
  public const int ShooterEntindexFieldNumber = 11;
  private readonly static int ShooterEntindexDefaultValue = -1;

  private int shooterEntindex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int ShooterEntindex {
    get { if ((_hasBits0 & 64) != 0) { return shooterEntindex_; } else { return ShooterEntindexDefaultValue; } }
    set {
      _hasBits0 |= 64;
      shooterEntindex_ = value;
    }
  }
  /// <summary>Gets whether the "shooter_entindex" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasShooterEntindex {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "shooter_entindex" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearShooterEntindex() {
    _hasBits0 &= ~64;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgBulletImpact);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgBulletImpact other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(TraceStart, other.TraceStart)) return false;
    if (!object.Equals(ImpactOrigin, other.ImpactOrigin)) return false;
    if (!object.Equals(SurfaceNormal, other.SurfaceNormal)) return false;
    if (Damage != other.Damage) return false;
    if (SurfaceType != other.SurfaceType) return false;
    if (AbilityEntindex != other.AbilityEntindex) return false;
    if (ImpactedEntindex != other.ImpactedEntindex) return false;
    if (ImpactedHitbox != other.ImpactedHitbox) return false;
    if (WeaponSubclassId != other.WeaponSubclassId) return false;
    if (ShooterEntindex != other.ShooterEntindex) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (traceStart_ != null) hash ^= TraceStart.GetHashCode();
    if (impactOrigin_ != null) hash ^= ImpactOrigin.GetHashCode();
    if (surfaceNormal_ != null) hash ^= SurfaceNormal.GetHashCode();
    if (HasDamage) hash ^= Damage.GetHashCode();
    if (HasSurfaceType) hash ^= SurfaceType.GetHashCode();
    if (HasAbilityEntindex) hash ^= AbilityEntindex.GetHashCode();
    if (HasImpactedEntindex) hash ^= ImpactedEntindex.GetHashCode();
    if (HasImpactedHitbox) hash ^= ImpactedHitbox.GetHashCode();
    if (HasWeaponSubclassId) hash ^= WeaponSubclassId.GetHashCode();
    if (HasShooterEntindex) hash ^= ShooterEntindex.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (traceStart_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(TraceStart);
    }
    if (impactOrigin_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ImpactOrigin);
    }
    if (surfaceNormal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SurfaceNormal);
    }
    if (HasDamage) {
      output.WriteRawTag(32);
      output.WriteUInt32(Damage);
    }
    if (HasSurfaceType) {
      output.WriteRawTag(40);
      output.WriteUInt32(SurfaceType);
    }
    if (HasAbilityEntindex) {
      output.WriteRawTag(56);
      output.WriteInt32(AbilityEntindex);
    }
    if (HasImpactedEntindex) {
      output.WriteRawTag(64);
      output.WriteInt32(ImpactedEntindex);
    }
    if (HasImpactedHitbox) {
      output.WriteRawTag(72);
      output.WriteUInt32(ImpactedHitbox);
    }
    if (HasWeaponSubclassId) {
      output.WriteRawTag(80);
      output.WriteUInt32(WeaponSubclassId);
    }
    if (HasShooterEntindex) {
      output.WriteRawTag(88);
      output.WriteInt32(ShooterEntindex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (traceStart_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(TraceStart);
    }
    if (impactOrigin_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(ImpactOrigin);
    }
    if (surfaceNormal_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(SurfaceNormal);
    }
    if (HasDamage) {
      output.WriteRawTag(32);
      output.WriteUInt32(Damage);
    }
    if (HasSurfaceType) {
      output.WriteRawTag(40);
      output.WriteUInt32(SurfaceType);
    }
    if (HasAbilityEntindex) {
      output.WriteRawTag(56);
      output.WriteInt32(AbilityEntindex);
    }
    if (HasImpactedEntindex) {
      output.WriteRawTag(64);
      output.WriteInt32(ImpactedEntindex);
    }
    if (HasImpactedHitbox) {
      output.WriteRawTag(72);
      output.WriteUInt32(ImpactedHitbox);
    }
    if (HasWeaponSubclassId) {
      output.WriteRawTag(80);
      output.WriteUInt32(WeaponSubclassId);
    }
    if (HasShooterEntindex) {
      output.WriteRawTag(88);
      output.WriteInt32(ShooterEntindex);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (traceStart_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(TraceStart);
    }
    if (impactOrigin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImpactOrigin);
    }
    if (surfaceNormal_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SurfaceNormal);
    }
    if (HasDamage) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Damage);
    }
    if (HasSurfaceType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SurfaceType);
    }
    if (HasAbilityEntindex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityEntindex);
    }
    if (HasImpactedEntindex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ImpactedEntindex);
    }
    if (HasImpactedHitbox) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImpactedHitbox);
    }
    if (HasWeaponSubclassId) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeaponSubclassId);
    }
    if (HasShooterEntindex) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShooterEntindex);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgBulletImpact other) {
    if (other == null) {
      return;
    }
    if (other.traceStart_ != null) {
      if (traceStart_ == null) {
        TraceStart = new global::CMsgVector();
      }
      TraceStart.MergeFrom(other.TraceStart);
    }
    if (other.impactOrigin_ != null) {
      if (impactOrigin_ == null) {
        ImpactOrigin = new global::CMsgVector();
      }
      ImpactOrigin.MergeFrom(other.ImpactOrigin);
    }
    if (other.surfaceNormal_ != null) {
      if (surfaceNormal_ == null) {
        SurfaceNormal = new global::CMsgVector();
      }
      SurfaceNormal.MergeFrom(other.SurfaceNormal);
    }
    if (other.HasDamage) {
      Damage = other.Damage;
    }
    if (other.HasSurfaceType) {
      SurfaceType = other.SurfaceType;
    }
    if (other.HasAbilityEntindex) {
      AbilityEntindex = other.AbilityEntindex;
    }
    if (other.HasImpactedEntindex) {
      ImpactedEntindex = other.ImpactedEntindex;
    }
    if (other.HasImpactedHitbox) {
      ImpactedHitbox = other.ImpactedHitbox;
    }
    if (other.HasWeaponSubclassId) {
      WeaponSubclassId = other.WeaponSubclassId;
    }
    if (other.HasShooterEntindex) {
      ShooterEntindex = other.ShooterEntindex;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (traceStart_ == null) {
            TraceStart = new global::CMsgVector();
          }
          input.ReadMessage(TraceStart);
          break;
        }
        case 18: {
          if (impactOrigin_ == null) {
            ImpactOrigin = new global::CMsgVector();
          }
          input.ReadMessage(ImpactOrigin);
          break;
        }
        case 26: {
          if (surfaceNormal_ == null) {
            SurfaceNormal = new global::CMsgVector();
          }
          input.ReadMessage(SurfaceNormal);
          break;
        }
        case 32: {
          Damage = input.ReadUInt32();
          break;
        }
        case 40: {
          SurfaceType = input.ReadUInt32();
          break;
        }
        case 56: {
          AbilityEntindex = input.ReadInt32();
          break;
        }
        case 64: {
          ImpactedEntindex = input.ReadInt32();
          break;
        }
        case 72: {
          ImpactedHitbox = input.ReadUInt32();
          break;
        }
        case 80: {
          WeaponSubclassId = input.ReadUInt32();
          break;
        }
        case 88: {
          ShooterEntindex = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (traceStart_ == null) {
            TraceStart = new global::CMsgVector();
          }
          input.ReadMessage(TraceStart);
          break;
        }
        case 18: {
          if (impactOrigin_ == null) {
            ImpactOrigin = new global::CMsgVector();
          }
          input.ReadMessage(ImpactOrigin);
          break;
        }
        case 26: {
          if (surfaceNormal_ == null) {
            SurfaceNormal = new global::CMsgVector();
          }
          input.ReadMessage(SurfaceNormal);
          break;
        }
        case 32: {
          Damage = input.ReadUInt32();
          break;
        }
        case 40: {
          SurfaceType = input.ReadUInt32();
          break;
        }
        case 56: {
          AbilityEntindex = input.ReadInt32();
          break;
        }
        case 64: {
          ImpactedEntindex = input.ReadInt32();
          break;
        }
        case 72: {
          ImpactedHitbox = input.ReadUInt32();
          break;
        }
        case 80: {
          WeaponSubclassId = input.ReadUInt32();
          break;
        }
        case 88: {
          ShooterEntindex = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgPlayerAnimEvent : pb::IMessage<CMsgPlayerAnimEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgPlayerAnimEvent> _parser = new pb::MessageParser<CMsgPlayerAnimEvent>(() => new CMsgPlayerAnimEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgPlayerAnimEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerAnimEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerAnimEvent(CMsgPlayerAnimEvent other) : this() {
    _hasBits0 = other._hasBits0;
    player_ = other.player_;
    event_ = other.event_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlayerAnimEvent Clone() {
    return new CMsgPlayerAnimEvent(this);
  }

  /// <summary>Field number for the "player" field.</summary>
  public const int PlayerFieldNumber = 1;
  private readonly static uint PlayerDefaultValue = 16777215;

  private uint player_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Player {
    get { if ((_hasBits0 & 1) != 0) { return player_; } else { return PlayerDefaultValue; } }
    set {
      _hasBits0 |= 1;
      player_ = value;
    }
  }
  /// <summary>Gets whether the "player" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPlayer {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "player" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPlayer() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "event" field.</summary>
  public const int EventFieldNumber = 2;
  private readonly static uint EventDefaultValue = 0;

  private uint event_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Event {
    get { if ((_hasBits0 & 2) != 0) { return event_; } else { return EventDefaultValue; } }
    set {
      _hasBits0 |= 2;
      event_ = value;
    }
  }
  /// <summary>Gets whether the "event" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEvent {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "event" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEvent() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private readonly static int DataDefaultValue = 0;

  private int data_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Data {
    get { if ((_hasBits0 & 4) != 0) { return data_; } else { return DataDefaultValue; } }
    set {
      _hasBits0 |= 4;
      data_ = value;
    }
  }
  /// <summary>Gets whether the "data" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasData {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "data" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearData() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgPlayerAnimEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgPlayerAnimEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Player != other.Player) return false;
    if (Event != other.Event) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasPlayer) hash ^= Player.GetHashCode();
    if (HasEvent) hash ^= Event.GetHashCode();
    if (HasData) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (HasEvent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Event);
    }
    if (HasData) {
      output.WriteRawTag(24);
      output.WriteInt32(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasPlayer) {
      output.WriteRawTag(13);
      output.WriteFixed32(Player);
    }
    if (HasEvent) {
      output.WriteRawTag(16);
      output.WriteUInt32(Event);
    }
    if (HasData) {
      output.WriteRawTag(24);
      output.WriteInt32(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasPlayer) {
      size += 1 + 4;
    }
    if (HasEvent) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Event);
    }
    if (HasData) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgPlayerAnimEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasPlayer) {
      Player = other.Player;
    }
    if (other.HasEvent) {
      Event = other.Event;
    }
    if (other.HasData) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
        case 16: {
          Event = input.ReadUInt32();
          break;
        }
        case 24: {
          Data = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          Player = input.ReadFixed32();
          break;
        }
        case 16: {
          Event = input.ReadUInt32();
          break;
        }
        case 24: {
          Data = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgParticleSystemManager : pb::IMessage<CMsgParticleSystemManager>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgParticleSystemManager> _parser = new pb::MessageParser<CMsgParticleSystemManager>(() => new CMsgParticleSystemManager());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgParticleSystemManager> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgParticleSystemManager() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgParticleSystemManager(CMsgParticleSystemManager other) : this() {
    _hasBits0 = other._hasBits0;
    type_ = other.type_;
    index_ = other.index_;
    createParticle_ = other.createParticle_ != null ? other.createParticle_.Clone() : null;
    destroyParticle_ = other.destroyParticle_ != null ? other.destroyParticle_.Clone() : null;
    destroyParticleInvolving_ = other.destroyParticleInvolving_ != null ? other.destroyParticleInvolving_.Clone() : null;
    releaseParticleIndex_ = other.releaseParticleIndex_ != null ? other.releaseParticleIndex_.Clone() : null;
    updateParticle_ = other.updateParticle_ != null ? other.updateParticle_.Clone() : null;
    updateParticleFwd_ = other.updateParticleFwd_ != null ? other.updateParticleFwd_.Clone() : null;
    updateParticleOrient_ = other.updateParticleOrient_ != null ? other.updateParticleOrient_.Clone() : null;
    updateParticleFallback_ = other.updateParticleFallback_ != null ? other.updateParticleFallback_.Clone() : null;
    updateParticleOffset_ = other.updateParticleOffset_ != null ? other.updateParticleOffset_.Clone() : null;
    updateParticleEnt_ = other.updateParticleEnt_ != null ? other.updateParticleEnt_.Clone() : null;
    updateParticleFrozen_ = other.updateParticleFrozen_ != null ? other.updateParticleFrozen_.Clone() : null;
    updateParticleShouldDraw_ = other.updateParticleShouldDraw_ != null ? other.updateParticleShouldDraw_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgParticleSystemManager Clone() {
    return new CMsgParticleSystemManager(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 1;
  private readonly static global::PARTICLE_SYSTEM_MANAGER_MESSAGE TypeDefaultValue = global::PARTICLE_SYSTEM_MANAGER_MESSAGE.ParticleSystemManagerEventCreate;

  private global::PARTICLE_SYSTEM_MANAGER_MESSAGE type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PARTICLE_SYSTEM_MANAGER_MESSAGE Type {
    get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "index" field.</summary>
  public const int IndexFieldNumber = 2;
  private readonly static uint IndexDefaultValue = 0;

  private uint index_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Index {
    get { if ((_hasBits0 & 2) != 0) { return index_; } else { return IndexDefaultValue; } }
    set {
      _hasBits0 |= 2;
      index_ = value;
    }
  }
  /// <summary>Gets whether the "index" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasIndex {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "index" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearIndex() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "create_particle" field.</summary>
  public const int CreateParticleFieldNumber = 3;
  private global::CMsgParticleSystemManager.Types.CreateParticle createParticle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.CreateParticle CreateParticle {
    get { return createParticle_; }
    set {
      createParticle_ = value;
    }
  }

  /// <summary>Field number for the "destroy_particle" field.</summary>
  public const int DestroyParticleFieldNumber = 4;
  private global::CMsgParticleSystemManager.Types.DestroyParticle destroyParticle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.DestroyParticle DestroyParticle {
    get { return destroyParticle_; }
    set {
      destroyParticle_ = value;
    }
  }

  /// <summary>Field number for the "destroy_particle_involving" field.</summary>
  public const int DestroyParticleInvolvingFieldNumber = 5;
  private global::CMsgParticleSystemManager.Types.DestroyParticleInvolving destroyParticleInvolving_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.DestroyParticleInvolving DestroyParticleInvolving {
    get { return destroyParticleInvolving_; }
    set {
      destroyParticleInvolving_ = value;
    }
  }

  /// <summary>Field number for the "release_particle_index" field.</summary>
  public const int ReleaseParticleIndexFieldNumber = 6;
  private global::CMsgParticleSystemManager.Types.ReleaseParticleIndex releaseParticleIndex_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.ReleaseParticleIndex ReleaseParticleIndex {
    get { return releaseParticleIndex_; }
    set {
      releaseParticleIndex_ = value;
    }
  }

  /// <summary>Field number for the "update_particle" field.</summary>
  public const int UpdateParticleFieldNumber = 7;
  private global::CMsgParticleSystemManager.Types.UpdateParticle updateParticle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticle UpdateParticle {
    get { return updateParticle_; }
    set {
      updateParticle_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_fwd" field.</summary>
  public const int UpdateParticleFwdFieldNumber = 8;
  private global::CMsgParticleSystemManager.Types.UpdateParticleFwd updateParticleFwd_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleFwd UpdateParticleFwd {
    get { return updateParticleFwd_; }
    set {
      updateParticleFwd_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_orient" field.</summary>
  public const int UpdateParticleOrientFieldNumber = 9;
  private global::CMsgParticleSystemManager.Types.UpdateParticleOrient updateParticleOrient_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleOrient UpdateParticleOrient {
    get { return updateParticleOrient_; }
    set {
      updateParticleOrient_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_fallback" field.</summary>
  public const int UpdateParticleFallbackFieldNumber = 10;
  private global::CMsgParticleSystemManager.Types.UpdateParticleFallback updateParticleFallback_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleFallback UpdateParticleFallback {
    get { return updateParticleFallback_; }
    set {
      updateParticleFallback_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_offset" field.</summary>
  public const int UpdateParticleOffsetFieldNumber = 11;
  private global::CMsgParticleSystemManager.Types.UpdateParticleOffset updateParticleOffset_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleOffset UpdateParticleOffset {
    get { return updateParticleOffset_; }
    set {
      updateParticleOffset_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_ent" field.</summary>
  public const int UpdateParticleEntFieldNumber = 12;
  private global::CMsgParticleSystemManager.Types.UpdateParticleEnt updateParticleEnt_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleEnt UpdateParticleEnt {
    get { return updateParticleEnt_; }
    set {
      updateParticleEnt_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_frozen" field.</summary>
  public const int UpdateParticleFrozenFieldNumber = 13;
  private global::CMsgParticleSystemManager.Types.UpdateParticleFrozen updateParticleFrozen_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleFrozen UpdateParticleFrozen {
    get { return updateParticleFrozen_; }
    set {
      updateParticleFrozen_ = value;
    }
  }

  /// <summary>Field number for the "update_particle_should_draw" field.</summary>
  public const int UpdateParticleShouldDrawFieldNumber = 14;
  private global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw updateParticleShouldDraw_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw UpdateParticleShouldDraw {
    get { return updateParticleShouldDraw_; }
    set {
      updateParticleShouldDraw_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgParticleSystemManager);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgParticleSystemManager other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if (Index != other.Index) return false;
    if (!object.Equals(CreateParticle, other.CreateParticle)) return false;
    if (!object.Equals(DestroyParticle, other.DestroyParticle)) return false;
    if (!object.Equals(DestroyParticleInvolving, other.DestroyParticleInvolving)) return false;
    if (!object.Equals(ReleaseParticleIndex, other.ReleaseParticleIndex)) return false;
    if (!object.Equals(UpdateParticle, other.UpdateParticle)) return false;
    if (!object.Equals(UpdateParticleFwd, other.UpdateParticleFwd)) return false;
    if (!object.Equals(UpdateParticleOrient, other.UpdateParticleOrient)) return false;
    if (!object.Equals(UpdateParticleFallback, other.UpdateParticleFallback)) return false;
    if (!object.Equals(UpdateParticleOffset, other.UpdateParticleOffset)) return false;
    if (!object.Equals(UpdateParticleEnt, other.UpdateParticleEnt)) return false;
    if (!object.Equals(UpdateParticleFrozen, other.UpdateParticleFrozen)) return false;
    if (!object.Equals(UpdateParticleShouldDraw, other.UpdateParticleShouldDraw)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasType) hash ^= Type.GetHashCode();
    if (HasIndex) hash ^= Index.GetHashCode();
    if (createParticle_ != null) hash ^= CreateParticle.GetHashCode();
    if (destroyParticle_ != null) hash ^= DestroyParticle.GetHashCode();
    if (destroyParticleInvolving_ != null) hash ^= DestroyParticleInvolving.GetHashCode();
    if (releaseParticleIndex_ != null) hash ^= ReleaseParticleIndex.GetHashCode();
    if (updateParticle_ != null) hash ^= UpdateParticle.GetHashCode();
    if (updateParticleFwd_ != null) hash ^= UpdateParticleFwd.GetHashCode();
    if (updateParticleOrient_ != null) hash ^= UpdateParticleOrient.GetHashCode();
    if (updateParticleFallback_ != null) hash ^= UpdateParticleFallback.GetHashCode();
    if (updateParticleOffset_ != null) hash ^= UpdateParticleOffset.GetHashCode();
    if (updateParticleEnt_ != null) hash ^= UpdateParticleEnt.GetHashCode();
    if (updateParticleFrozen_ != null) hash ^= UpdateParticleFrozen.GetHashCode();
    if (updateParticleShouldDraw_ != null) hash ^= UpdateParticleShouldDraw.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasIndex) {
      output.WriteRawTag(16);
      output.WriteUInt32(Index);
    }
    if (createParticle_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CreateParticle);
    }
    if (destroyParticle_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(DestroyParticle);
    }
    if (destroyParticleInvolving_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(DestroyParticleInvolving);
    }
    if (releaseParticleIndex_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(ReleaseParticleIndex);
    }
    if (updateParticle_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateParticle);
    }
    if (updateParticleFwd_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateParticleFwd);
    }
    if (updateParticleOrient_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UpdateParticleOrient);
    }
    if (updateParticleFallback_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UpdateParticleFallback);
    }
    if (updateParticleOffset_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(UpdateParticleOffset);
    }
    if (updateParticleEnt_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(UpdateParticleEnt);
    }
    if (updateParticleFrozen_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(UpdateParticleFrozen);
    }
    if (updateParticleShouldDraw_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(UpdateParticleShouldDraw);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasType) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Type);
    }
    if (HasIndex) {
      output.WriteRawTag(16);
      output.WriteUInt32(Index);
    }
    if (createParticle_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(CreateParticle);
    }
    if (destroyParticle_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(DestroyParticle);
    }
    if (destroyParticleInvolving_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(DestroyParticleInvolving);
    }
    if (releaseParticleIndex_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(ReleaseParticleIndex);
    }
    if (updateParticle_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(UpdateParticle);
    }
    if (updateParticleFwd_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(UpdateParticleFwd);
    }
    if (updateParticleOrient_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(UpdateParticleOrient);
    }
    if (updateParticleFallback_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(UpdateParticleFallback);
    }
    if (updateParticleOffset_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(UpdateParticleOffset);
    }
    if (updateParticleEnt_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(UpdateParticleEnt);
    }
    if (updateParticleFrozen_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(UpdateParticleFrozen);
    }
    if (updateParticleShouldDraw_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(UpdateParticleShouldDraw);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
    }
    if (HasIndex) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
    }
    if (createParticle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateParticle);
    }
    if (destroyParticle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyParticle);
    }
    if (destroyParticleInvolving_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyParticleInvolving);
    }
    if (releaseParticleIndex_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseParticleIndex);
    }
    if (updateParticle_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticle);
    }
    if (updateParticleFwd_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleFwd);
    }
    if (updateParticleOrient_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleOrient);
    }
    if (updateParticleFallback_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleFallback);
    }
    if (updateParticleOffset_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleOffset);
    }
    if (updateParticleEnt_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleEnt);
    }
    if (updateParticleFrozen_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleFrozen);
    }
    if (updateParticleShouldDraw_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateParticleShouldDraw);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgParticleSystemManager other) {
    if (other == null) {
      return;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasIndex) {
      Index = other.Index;
    }
    if (other.createParticle_ != null) {
      if (createParticle_ == null) {
        CreateParticle = new global::CMsgParticleSystemManager.Types.CreateParticle();
      }
      CreateParticle.MergeFrom(other.CreateParticle);
    }
    if (other.destroyParticle_ != null) {
      if (destroyParticle_ == null) {
        DestroyParticle = new global::CMsgParticleSystemManager.Types.DestroyParticle();
      }
      DestroyParticle.MergeFrom(other.DestroyParticle);
    }
    if (other.destroyParticleInvolving_ != null) {
      if (destroyParticleInvolving_ == null) {
        DestroyParticleInvolving = new global::CMsgParticleSystemManager.Types.DestroyParticleInvolving();
      }
      DestroyParticleInvolving.MergeFrom(other.DestroyParticleInvolving);
    }
    if (other.releaseParticleIndex_ != null) {
      if (releaseParticleIndex_ == null) {
        ReleaseParticleIndex = new global::CMsgParticleSystemManager.Types.ReleaseParticleIndex();
      }
      ReleaseParticleIndex.MergeFrom(other.ReleaseParticleIndex);
    }
    if (other.updateParticle_ != null) {
      if (updateParticle_ == null) {
        UpdateParticle = new global::CMsgParticleSystemManager.Types.UpdateParticle();
      }
      UpdateParticle.MergeFrom(other.UpdateParticle);
    }
    if (other.updateParticleFwd_ != null) {
      if (updateParticleFwd_ == null) {
        UpdateParticleFwd = new global::CMsgParticleSystemManager.Types.UpdateParticleFwd();
      }
      UpdateParticleFwd.MergeFrom(other.UpdateParticleFwd);
    }
    if (other.updateParticleOrient_ != null) {
      if (updateParticleOrient_ == null) {
        UpdateParticleOrient = new global::CMsgParticleSystemManager.Types.UpdateParticleOrient();
      }
      UpdateParticleOrient.MergeFrom(other.UpdateParticleOrient);
    }
    if (other.updateParticleFallback_ != null) {
      if (updateParticleFallback_ == null) {
        UpdateParticleFallback = new global::CMsgParticleSystemManager.Types.UpdateParticleFallback();
      }
      UpdateParticleFallback.MergeFrom(other.UpdateParticleFallback);
    }
    if (other.updateParticleOffset_ != null) {
      if (updateParticleOffset_ == null) {
        UpdateParticleOffset = new global::CMsgParticleSystemManager.Types.UpdateParticleOffset();
      }
      UpdateParticleOffset.MergeFrom(other.UpdateParticleOffset);
    }
    if (other.updateParticleEnt_ != null) {
      if (updateParticleEnt_ == null) {
        UpdateParticleEnt = new global::CMsgParticleSystemManager.Types.UpdateParticleEnt();
      }
      UpdateParticleEnt.MergeFrom(other.UpdateParticleEnt);
    }
    if (other.updateParticleFrozen_ != null) {
      if (updateParticleFrozen_ == null) {
        UpdateParticleFrozen = new global::CMsgParticleSystemManager.Types.UpdateParticleFrozen();
      }
      UpdateParticleFrozen.MergeFrom(other.UpdateParticleFrozen);
    }
    if (other.updateParticleShouldDraw_ != null) {
      if (updateParticleShouldDraw_ == null) {
        UpdateParticleShouldDraw = new global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw();
      }
      UpdateParticleShouldDraw.MergeFrom(other.UpdateParticleShouldDraw);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Type = (global::PARTICLE_SYSTEM_MANAGER_MESSAGE) input.ReadEnum();
          break;
        }
        case 16: {
          Index = input.ReadUInt32();
          break;
        }
        case 26: {
          if (createParticle_ == null) {
            CreateParticle = new global::CMsgParticleSystemManager.Types.CreateParticle();
          }
          input.ReadMessage(CreateParticle);
          break;
        }
        case 34: {
          if (destroyParticle_ == null) {
            DestroyParticle = new global::CMsgParticleSystemManager.Types.DestroyParticle();
          }
          input.ReadMessage(DestroyParticle);
          break;
        }
        case 42: {
          if (destroyParticleInvolving_ == null) {
            DestroyParticleInvolving = new global::CMsgParticleSystemManager.Types.DestroyParticleInvolving();
          }
          input.ReadMessage(DestroyParticleInvolving);
          break;
        }
        case 50: {
          if (releaseParticleIndex_ == null) {
            ReleaseParticleIndex = new global::CMsgParticleSystemManager.Types.ReleaseParticleIndex();
          }
          input.ReadMessage(ReleaseParticleIndex);
          break;
        }
        case 58: {
          if (updateParticle_ == null) {
            UpdateParticle = new global::CMsgParticleSystemManager.Types.UpdateParticle();
          }
          input.ReadMessage(UpdateParticle);
          break;
        }
        case 66: {
          if (updateParticleFwd_ == null) {
            UpdateParticleFwd = new global::CMsgParticleSystemManager.Types.UpdateParticleFwd();
          }
          input.ReadMessage(UpdateParticleFwd);
          break;
        }
        case 74: {
          if (updateParticleOrient_ == null) {
            UpdateParticleOrient = new global::CMsgParticleSystemManager.Types.UpdateParticleOrient();
          }
          input.ReadMessage(UpdateParticleOrient);
          break;
        }
        case 82: {
          if (updateParticleFallback_ == null) {
            UpdateParticleFallback = new global::CMsgParticleSystemManager.Types.UpdateParticleFallback();
          }
          input.ReadMessage(UpdateParticleFallback);
          break;
        }
        case 90: {
          if (updateParticleOffset_ == null) {
            UpdateParticleOffset = new global::CMsgParticleSystemManager.Types.UpdateParticleOffset();
          }
          input.ReadMessage(UpdateParticleOffset);
          break;
        }
        case 98: {
          if (updateParticleEnt_ == null) {
            UpdateParticleEnt = new global::CMsgParticleSystemManager.Types.UpdateParticleEnt();
          }
          input.ReadMessage(UpdateParticleEnt);
          break;
        }
        case 106: {
          if (updateParticleFrozen_ == null) {
            UpdateParticleFrozen = new global::CMsgParticleSystemManager.Types.UpdateParticleFrozen();
          }
          input.ReadMessage(UpdateParticleFrozen);
          break;
        }
        case 114: {
          if (updateParticleShouldDraw_ == null) {
            UpdateParticleShouldDraw = new global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw();
          }
          input.ReadMessage(UpdateParticleShouldDraw);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Type = (global::PARTICLE_SYSTEM_MANAGER_MESSAGE) input.ReadEnum();
          break;
        }
        case 16: {
          Index = input.ReadUInt32();
          break;
        }
        case 26: {
          if (createParticle_ == null) {
            CreateParticle = new global::CMsgParticleSystemManager.Types.CreateParticle();
          }
          input.ReadMessage(CreateParticle);
          break;
        }
        case 34: {
          if (destroyParticle_ == null) {
            DestroyParticle = new global::CMsgParticleSystemManager.Types.DestroyParticle();
          }
          input.ReadMessage(DestroyParticle);
          break;
        }
        case 42: {
          if (destroyParticleInvolving_ == null) {
            DestroyParticleInvolving = new global::CMsgParticleSystemManager.Types.DestroyParticleInvolving();
          }
          input.ReadMessage(DestroyParticleInvolving);
          break;
        }
        case 50: {
          if (releaseParticleIndex_ == null) {
            ReleaseParticleIndex = new global::CMsgParticleSystemManager.Types.ReleaseParticleIndex();
          }
          input.ReadMessage(ReleaseParticleIndex);
          break;
        }
        case 58: {
          if (updateParticle_ == null) {
            UpdateParticle = new global::CMsgParticleSystemManager.Types.UpdateParticle();
          }
          input.ReadMessage(UpdateParticle);
          break;
        }
        case 66: {
          if (updateParticleFwd_ == null) {
            UpdateParticleFwd = new global::CMsgParticleSystemManager.Types.UpdateParticleFwd();
          }
          input.ReadMessage(UpdateParticleFwd);
          break;
        }
        case 74: {
          if (updateParticleOrient_ == null) {
            UpdateParticleOrient = new global::CMsgParticleSystemManager.Types.UpdateParticleOrient();
          }
          input.ReadMessage(UpdateParticleOrient);
          break;
        }
        case 82: {
          if (updateParticleFallback_ == null) {
            UpdateParticleFallback = new global::CMsgParticleSystemManager.Types.UpdateParticleFallback();
          }
          input.ReadMessage(UpdateParticleFallback);
          break;
        }
        case 90: {
          if (updateParticleOffset_ == null) {
            UpdateParticleOffset = new global::CMsgParticleSystemManager.Types.UpdateParticleOffset();
          }
          input.ReadMessage(UpdateParticleOffset);
          break;
        }
        case 98: {
          if (updateParticleEnt_ == null) {
            UpdateParticleEnt = new global::CMsgParticleSystemManager.Types.UpdateParticleEnt();
          }
          input.ReadMessage(UpdateParticleEnt);
          break;
        }
        case 106: {
          if (updateParticleFrozen_ == null) {
            UpdateParticleFrozen = new global::CMsgParticleSystemManager.Types.UpdateParticleFrozen();
          }
          input.ReadMessage(UpdateParticleFrozen);
          break;
        }
        case 114: {
          if (updateParticleShouldDraw_ == null) {
            UpdateParticleShouldDraw = new global::CMsgParticleSystemManager.Types.UpdateParticleShouldDraw();
          }
          input.ReadMessage(UpdateParticleShouldDraw);
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the CMsgParticleSystemManager message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class CreateParticle : pb::IMessage<CreateParticle>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<CreateParticle> _parser = new pb::MessageParser<CreateParticle>(() => new CreateParticle());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<CreateParticle> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[0]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CreateParticle() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CreateParticle(CreateParticle other) : this() {
        _hasBits0 = other._hasBits0;
        particleNameIndex_ = other.particleNameIndex_;
        attachType_ = other.attachType_;
        entityHandle_ = other.entityHandle_;
        position_ = other.position_ != null ? other.position_.Clone() : null;
        angles_ = other.angles_ != null ? other.angles_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public CreateParticle Clone() {
        return new CreateParticle(this);
      }

      /// <summary>Field number for the "particle_name_index" field.</summary>
      public const int ParticleNameIndexFieldNumber = 1;
      private readonly static ulong ParticleNameIndexDefaultValue = 0UL;

      private ulong particleNameIndex_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ulong ParticleNameIndex {
        get { if ((_hasBits0 & 1) != 0) { return particleNameIndex_; } else { return ParticleNameIndexDefaultValue; } }
        set {
          _hasBits0 |= 1;
          particleNameIndex_ = value;
        }
      }
      /// <summary>Gets whether the "particle_name_index" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasParticleNameIndex {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "particle_name_index" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearParticleNameIndex() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "attach_type" field.</summary>
      public const int AttachTypeFieldNumber = 2;
      private readonly static int AttachTypeDefaultValue = 0;

      private int attachType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int AttachType {
        get { if ((_hasBits0 & 2) != 0) { return attachType_; } else { return AttachTypeDefaultValue; } }
        set {
          _hasBits0 |= 2;
          attachType_ = value;
        }
      }
      /// <summary>Gets whether the "attach_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAttachType {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "attach_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAttachType() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "entity_handle" field.</summary>
      public const int EntityHandleFieldNumber = 3;
      private readonly static uint EntityHandleDefaultValue = 16777215;

      private uint entityHandle_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint EntityHandle {
        get { if ((_hasBits0 & 4) != 0) { return entityHandle_; } else { return EntityHandleDefaultValue; } }
        set {
          _hasBits0 |= 4;
          entityHandle_ = value;
        }
      }
      /// <summary>Gets whether the "entity_handle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEntityHandle {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "entity_handle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEntityHandle() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "position" field.</summary>
      public const int PositionFieldNumber = 4;
      private global::CMsgVector position_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Position {
        get { return position_; }
        set {
          position_ = value;
        }
      }

      /// <summary>Field number for the "angles" field.</summary>
      public const int AnglesFieldNumber = 5;
      private global::CMsgQAngle angles_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgQAngle Angles {
        get { return angles_; }
        set {
          angles_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as CreateParticle);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(CreateParticle other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ParticleNameIndex != other.ParticleNameIndex) return false;
        if (AttachType != other.AttachType) return false;
        if (EntityHandle != other.EntityHandle) return false;
        if (!object.Equals(Position, other.Position)) return false;
        if (!object.Equals(Angles, other.Angles)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasParticleNameIndex) hash ^= ParticleNameIndex.GetHashCode();
        if (HasAttachType) hash ^= AttachType.GetHashCode();
        if (HasEntityHandle) hash ^= EntityHandle.GetHashCode();
        if (position_ != null) hash ^= Position.GetHashCode();
        if (angles_ != null) hash ^= Angles.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasParticleNameIndex) {
          output.WriteRawTag(9);
          output.WriteFixed64(ParticleNameIndex);
        }
        if (HasAttachType) {
          output.WriteRawTag(16);
          output.WriteInt32(AttachType);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(24);
          output.WriteUInt32(EntityHandle);
        }
        if (position_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Position);
        }
        if (angles_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(Angles);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasParticleNameIndex) {
          output.WriteRawTag(9);
          output.WriteFixed64(ParticleNameIndex);
        }
        if (HasAttachType) {
          output.WriteRawTag(16);
          output.WriteInt32(AttachType);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(24);
          output.WriteUInt32(EntityHandle);
        }
        if (position_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Position);
        }
        if (angles_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(Angles);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasParticleNameIndex) {
          size += 1 + 8;
        }
        if (HasAttachType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttachType);
        }
        if (HasEntityHandle) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityHandle);
        }
        if (position_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
        }
        if (angles_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Angles);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(CreateParticle other) {
        if (other == null) {
          return;
        }
        if (other.HasParticleNameIndex) {
          ParticleNameIndex = other.ParticleNameIndex;
        }
        if (other.HasAttachType) {
          AttachType = other.AttachType;
        }
        if (other.HasEntityHandle) {
          EntityHandle = other.EntityHandle;
        }
        if (other.position_ != null) {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          Position.MergeFrom(other.Position);
        }
        if (other.angles_ != null) {
          if (angles_ == null) {
            Angles = new global::CMsgQAngle();
          }
          Angles.MergeFrom(other.Angles);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 9: {
              ParticleNameIndex = input.ReadFixed64();
              break;
            }
            case 16: {
              AttachType = input.ReadInt32();
              break;
            }
            case 24: {
              EntityHandle = input.ReadUInt32();
              break;
            }
            case 34: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
            case 42: {
              if (angles_ == null) {
                Angles = new global::CMsgQAngle();
              }
              input.ReadMessage(Angles);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 9: {
              ParticleNameIndex = input.ReadFixed64();
              break;
            }
            case 16: {
              AttachType = input.ReadInt32();
              break;
            }
            case 24: {
              EntityHandle = input.ReadUInt32();
              break;
            }
            case 34: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
            case 42: {
              if (angles_ == null) {
                Angles = new global::CMsgQAngle();
              }
              input.ReadMessage(Angles);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class DestroyParticle : pb::IMessage<DestroyParticle>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DestroyParticle> _parser = new pb::MessageParser<DestroyParticle>(() => new DestroyParticle());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DestroyParticle> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[1]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticle() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticle(DestroyParticle other) : this() {
        _hasBits0 = other._hasBits0;
        destroyImmediately_ = other.destroyImmediately_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticle Clone() {
        return new DestroyParticle(this);
      }

      /// <summary>Field number for the "destroy_immediately" field.</summary>
      public const int DestroyImmediatelyFieldNumber = 1;
      private readonly static bool DestroyImmediatelyDefaultValue = false;

      private bool destroyImmediately_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool DestroyImmediately {
        get { if ((_hasBits0 & 1) != 0) { return destroyImmediately_; } else { return DestroyImmediatelyDefaultValue; } }
        set {
          _hasBits0 |= 1;
          destroyImmediately_ = value;
        }
      }
      /// <summary>Gets whether the "destroy_immediately" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDestroyImmediately {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "destroy_immediately" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDestroyImmediately() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DestroyParticle);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DestroyParticle other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (DestroyImmediately != other.DestroyImmediately) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasDestroyImmediately) hash ^= DestroyImmediately.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasDestroyImmediately) {
          output.WriteRawTag(8);
          output.WriteBool(DestroyImmediately);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasDestroyImmediately) {
          output.WriteRawTag(8);
          output.WriteBool(DestroyImmediately);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasDestroyImmediately) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DestroyParticle other) {
        if (other == null) {
          return;
        }
        if (other.HasDestroyImmediately) {
          DestroyImmediately = other.DestroyImmediately;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              DestroyImmediately = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              DestroyImmediately = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class DestroyParticleInvolving : pb::IMessage<DestroyParticleInvolving>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<DestroyParticleInvolving> _parser = new pb::MessageParser<DestroyParticleInvolving>(() => new DestroyParticleInvolving());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<DestroyParticleInvolving> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[2]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticleInvolving() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticleInvolving(DestroyParticleInvolving other) : this() {
        _hasBits0 = other._hasBits0;
        destroyImmediately_ = other.destroyImmediately_;
        entityHandle_ = other.entityHandle_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public DestroyParticleInvolving Clone() {
        return new DestroyParticleInvolving(this);
      }

      /// <summary>Field number for the "destroy_immediately" field.</summary>
      public const int DestroyImmediatelyFieldNumber = 1;
      private readonly static bool DestroyImmediatelyDefaultValue = false;

      private bool destroyImmediately_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool DestroyImmediately {
        get { if ((_hasBits0 & 1) != 0) { return destroyImmediately_; } else { return DestroyImmediatelyDefaultValue; } }
        set {
          _hasBits0 |= 1;
          destroyImmediately_ = value;
        }
      }
      /// <summary>Gets whether the "destroy_immediately" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasDestroyImmediately {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "destroy_immediately" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearDestroyImmediately() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "entity_handle" field.</summary>
      public const int EntityHandleFieldNumber = 3;
      private readonly static uint EntityHandleDefaultValue = 16777215;

      private uint entityHandle_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint EntityHandle {
        get { if ((_hasBits0 & 2) != 0) { return entityHandle_; } else { return EntityHandleDefaultValue; } }
        set {
          _hasBits0 |= 2;
          entityHandle_ = value;
        }
      }
      /// <summary>Gets whether the "entity_handle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEntityHandle {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "entity_handle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEntityHandle() {
        _hasBits0 &= ~2;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as DestroyParticleInvolving);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(DestroyParticleInvolving other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (DestroyImmediately != other.DestroyImmediately) return false;
        if (EntityHandle != other.EntityHandle) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasDestroyImmediately) hash ^= DestroyImmediately.GetHashCode();
        if (HasEntityHandle) hash ^= EntityHandle.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasDestroyImmediately) {
          output.WriteRawTag(8);
          output.WriteBool(DestroyImmediately);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(24);
          output.WriteUInt32(EntityHandle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasDestroyImmediately) {
          output.WriteRawTag(8);
          output.WriteBool(DestroyImmediately);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(24);
          output.WriteUInt32(EntityHandle);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasDestroyImmediately) {
          size += 1 + 1;
        }
        if (HasEntityHandle) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityHandle);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(DestroyParticleInvolving other) {
        if (other == null) {
          return;
        }
        if (other.HasDestroyImmediately) {
          DestroyImmediately = other.DestroyImmediately;
        }
        if (other.HasEntityHandle) {
          EntityHandle = other.EntityHandle;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              DestroyImmediately = input.ReadBool();
              break;
            }
            case 24: {
              EntityHandle = input.ReadUInt32();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              DestroyImmediately = input.ReadBool();
              break;
            }
            case 24: {
              EntityHandle = input.ReadUInt32();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class ReleaseParticleIndex : pb::IMessage<ReleaseParticleIndex>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<ReleaseParticleIndex> _parser = new pb::MessageParser<ReleaseParticleIndex>(() => new ReleaseParticleIndex());
      private pb::UnknownFieldSet _unknownFields;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<ReleaseParticleIndex> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[3]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReleaseParticleIndex() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReleaseParticleIndex(ReleaseParticleIndex other) : this() {
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public ReleaseParticleIndex Clone() {
        return new ReleaseParticleIndex(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as ReleaseParticleIndex);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(ReleaseParticleIndex other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(ReleaseParticleIndex other) {
        if (other == null) {
          return;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticle : pb::IMessage<UpdateParticle>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticle> _parser = new pb::MessageParser<UpdateParticle>(() => new UpdateParticle());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticle> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[4]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticle() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticle(UpdateParticle other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        position_ = other.position_ != null ? other.position_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticle Clone() {
        return new UpdateParticle(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "position" field.</summary>
      public const int PositionFieldNumber = 2;
      private global::CMsgVector position_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Position {
        get { return position_; }
        set {
          position_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticle);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticle other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (!object.Equals(Position, other.Position)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (position_ != null) hash ^= Position.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (position_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Position);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (position_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Position);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (position_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticle other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.position_ != null) {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          Position.MergeFrom(other.Position);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleFwd : pb::IMessage<UpdateParticleFwd>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleFwd> _parser = new pb::MessageParser<UpdateParticleFwd>(() => new UpdateParticleFwd());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleFwd> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[5]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFwd() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFwd(UpdateParticleFwd other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        forward_ = other.forward_ != null ? other.forward_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFwd Clone() {
        return new UpdateParticleFwd(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "forward" field.</summary>
      public const int ForwardFieldNumber = 2;
      private global::CMsgVector forward_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Forward {
        get { return forward_; }
        set {
          forward_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleFwd);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleFwd other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (!object.Equals(Forward, other.Forward)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (forward_ != null) hash ^= Forward.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (forward_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Forward);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (forward_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Forward);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (forward_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forward);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleFwd other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.forward_ != null) {
          if (forward_ == null) {
            Forward = new global::CMsgVector();
          }
          Forward.MergeFrom(other.Forward);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (forward_ == null) {
                Forward = new global::CMsgVector();
              }
              input.ReadMessage(Forward);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (forward_ == null) {
                Forward = new global::CMsgVector();
              }
              input.ReadMessage(Forward);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleOrient : pb::IMessage<UpdateParticleOrient>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleOrient> _parser = new pb::MessageParser<UpdateParticleOrient>(() => new UpdateParticleOrient());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleOrient> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[6]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOrient() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOrient(UpdateParticleOrient other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        forward_ = other.forward_ != null ? other.forward_.Clone() : null;
        left_ = other.left_ != null ? other.left_.Clone() : null;
        up_ = other.up_ != null ? other.up_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOrient Clone() {
        return new UpdateParticleOrient(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "forward" field.</summary>
      public const int ForwardFieldNumber = 2;
      private global::CMsgVector forward_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Forward {
        get { return forward_; }
        set {
          forward_ = value;
        }
      }

      /// <summary>Field number for the "left" field.</summary>
      public const int LeftFieldNumber = 3;
      private global::CMsgVector left_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Left {
        get { return left_; }
        set {
          left_ = value;
        }
      }

      /// <summary>Field number for the "up" field.</summary>
      public const int UpFieldNumber = 4;
      private global::CMsgVector up_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Up {
        get { return up_; }
        set {
          up_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleOrient);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleOrient other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (!object.Equals(Forward, other.Forward)) return false;
        if (!object.Equals(Left, other.Left)) return false;
        if (!object.Equals(Up, other.Up)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (forward_ != null) hash ^= Forward.GetHashCode();
        if (left_ != null) hash ^= Left.GetHashCode();
        if (up_ != null) hash ^= Up.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (forward_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Forward);
        }
        if (left_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Left);
        }
        if (up_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Up);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (forward_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Forward);
        }
        if (left_ != null) {
          output.WriteRawTag(26);
          output.WriteMessage(Left);
        }
        if (up_ != null) {
          output.WriteRawTag(34);
          output.WriteMessage(Up);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (forward_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forward);
        }
        if (left_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
        }
        if (up_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Up);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleOrient other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.forward_ != null) {
          if (forward_ == null) {
            Forward = new global::CMsgVector();
          }
          Forward.MergeFrom(other.Forward);
        }
        if (other.left_ != null) {
          if (left_ == null) {
            Left = new global::CMsgVector();
          }
          Left.MergeFrom(other.Left);
        }
        if (other.up_ != null) {
          if (up_ == null) {
            Up = new global::CMsgVector();
          }
          Up.MergeFrom(other.Up);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (forward_ == null) {
                Forward = new global::CMsgVector();
              }
              input.ReadMessage(Forward);
              break;
            }
            case 26: {
              if (left_ == null) {
                Left = new global::CMsgVector();
              }
              input.ReadMessage(Left);
              break;
            }
            case 34: {
              if (up_ == null) {
                Up = new global::CMsgVector();
              }
              input.ReadMessage(Up);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (forward_ == null) {
                Forward = new global::CMsgVector();
              }
              input.ReadMessage(Forward);
              break;
            }
            case 26: {
              if (left_ == null) {
                Left = new global::CMsgVector();
              }
              input.ReadMessage(Left);
              break;
            }
            case 34: {
              if (up_ == null) {
                Up = new global::CMsgVector();
              }
              input.ReadMessage(Up);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleFallback : pb::IMessage<UpdateParticleFallback>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleFallback> _parser = new pb::MessageParser<UpdateParticleFallback>(() => new UpdateParticleFallback());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleFallback> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[7]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFallback() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFallback(UpdateParticleFallback other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        position_ = other.position_ != null ? other.position_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFallback Clone() {
        return new UpdateParticleFallback(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "position" field.</summary>
      public const int PositionFieldNumber = 2;
      private global::CMsgVector position_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector Position {
        get { return position_; }
        set {
          position_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleFallback);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleFallback other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (!object.Equals(Position, other.Position)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (position_ != null) hash ^= Position.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (position_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Position);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (position_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(Position);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (position_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleFallback other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.position_ != null) {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          Position.MergeFrom(other.Position);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (position_ == null) {
                Position = new global::CMsgVector();
              }
              input.ReadMessage(Position);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleEnt : pb::IMessage<UpdateParticleEnt>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleEnt> _parser = new pb::MessageParser<UpdateParticleEnt>(() => new UpdateParticleEnt());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleEnt> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[8]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleEnt() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleEnt(UpdateParticleEnt other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        entityHandle_ = other.entityHandle_;
        attachType_ = other.attachType_;
        attachment_ = other.attachment_;
        fallbackPosition_ = other.fallbackPosition_ != null ? other.fallbackPosition_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleEnt Clone() {
        return new UpdateParticleEnt(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "entity_handle" field.</summary>
      public const int EntityHandleFieldNumber = 2;
      private readonly static uint EntityHandleDefaultValue = 16777215;

      private uint entityHandle_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public uint EntityHandle {
        get { if ((_hasBits0 & 2) != 0) { return entityHandle_; } else { return EntityHandleDefaultValue; } }
        set {
          _hasBits0 |= 2;
          entityHandle_ = value;
        }
      }
      /// <summary>Gets whether the "entity_handle" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasEntityHandle {
        get { return (_hasBits0 & 2) != 0; }
      }
      /// <summary>Clears the value of the "entity_handle" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearEntityHandle() {
        _hasBits0 &= ~2;
      }

      /// <summary>Field number for the "attach_type" field.</summary>
      public const int AttachTypeFieldNumber = 3;
      private readonly static int AttachTypeDefaultValue = 0;

      private int attachType_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int AttachType {
        get { if ((_hasBits0 & 4) != 0) { return attachType_; } else { return AttachTypeDefaultValue; } }
        set {
          _hasBits0 |= 4;
          attachType_ = value;
        }
      }
      /// <summary>Gets whether the "attach_type" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAttachType {
        get { return (_hasBits0 & 4) != 0; }
      }
      /// <summary>Clears the value of the "attach_type" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAttachType() {
        _hasBits0 &= ~4;
      }

      /// <summary>Field number for the "attachment" field.</summary>
      public const int AttachmentFieldNumber = 4;
      private readonly static int AttachmentDefaultValue = 0;

      private int attachment_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int Attachment {
        get { if ((_hasBits0 & 8) != 0) { return attachment_; } else { return AttachmentDefaultValue; } }
        set {
          _hasBits0 |= 8;
          attachment_ = value;
        }
      }
      /// <summary>Gets whether the "attachment" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasAttachment {
        get { return (_hasBits0 & 8) != 0; }
      }
      /// <summary>Clears the value of the "attachment" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearAttachment() {
        _hasBits0 &= ~8;
      }

      /// <summary>Field number for the "fallback_position" field.</summary>
      public const int FallbackPositionFieldNumber = 5;
      private global::CMsgVector fallbackPosition_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector FallbackPosition {
        get { return fallbackPosition_; }
        set {
          fallbackPosition_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleEnt);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleEnt other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (EntityHandle != other.EntityHandle) return false;
        if (AttachType != other.AttachType) return false;
        if (Attachment != other.Attachment) return false;
        if (!object.Equals(FallbackPosition, other.FallbackPosition)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (HasEntityHandle) hash ^= EntityHandle.GetHashCode();
        if (HasAttachType) hash ^= AttachType.GetHashCode();
        if (HasAttachment) hash ^= Attachment.GetHashCode();
        if (fallbackPosition_ != null) hash ^= FallbackPosition.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(16);
          output.WriteUInt32(EntityHandle);
        }
        if (HasAttachType) {
          output.WriteRawTag(24);
          output.WriteInt32(AttachType);
        }
        if (HasAttachment) {
          output.WriteRawTag(32);
          output.WriteInt32(Attachment);
        }
        if (fallbackPosition_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(FallbackPosition);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (HasEntityHandle) {
          output.WriteRawTag(16);
          output.WriteUInt32(EntityHandle);
        }
        if (HasAttachType) {
          output.WriteRawTag(24);
          output.WriteInt32(AttachType);
        }
        if (HasAttachment) {
          output.WriteRawTag(32);
          output.WriteInt32(Attachment);
        }
        if (fallbackPosition_ != null) {
          output.WriteRawTag(42);
          output.WriteMessage(FallbackPosition);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (HasEntityHandle) {
          size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityHandle);
        }
        if (HasAttachType) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttachType);
        }
        if (HasAttachment) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attachment);
        }
        if (fallbackPosition_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(FallbackPosition);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleEnt other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.HasEntityHandle) {
          EntityHandle = other.EntityHandle;
        }
        if (other.HasAttachType) {
          AttachType = other.AttachType;
        }
        if (other.HasAttachment) {
          Attachment = other.Attachment;
        }
        if (other.fallbackPosition_ != null) {
          if (fallbackPosition_ == null) {
            FallbackPosition = new global::CMsgVector();
          }
          FallbackPosition.MergeFrom(other.FallbackPosition);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 16: {
              EntityHandle = input.ReadUInt32();
              break;
            }
            case 24: {
              AttachType = input.ReadInt32();
              break;
            }
            case 32: {
              Attachment = input.ReadInt32();
              break;
            }
            case 42: {
              if (fallbackPosition_ == null) {
                FallbackPosition = new global::CMsgVector();
              }
              input.ReadMessage(FallbackPosition);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 16: {
              EntityHandle = input.ReadUInt32();
              break;
            }
            case 24: {
              AttachType = input.ReadInt32();
              break;
            }
            case 32: {
              Attachment = input.ReadInt32();
              break;
            }
            case 42: {
              if (fallbackPosition_ == null) {
                FallbackPosition = new global::CMsgVector();
              }
              input.ReadMessage(FallbackPosition);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleOffset : pb::IMessage<UpdateParticleOffset>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleOffset> _parser = new pb::MessageParser<UpdateParticleOffset>(() => new UpdateParticleOffset());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleOffset> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[9]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOffset() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOffset(UpdateParticleOffset other) : this() {
        _hasBits0 = other._hasBits0;
        controlPoint_ = other.controlPoint_;
        originOffset_ = other.originOffset_ != null ? other.originOffset_.Clone() : null;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleOffset Clone() {
        return new UpdateParticleOffset(this);
      }

      /// <summary>Field number for the "control_point" field.</summary>
      public const int ControlPointFieldNumber = 1;
      private readonly static int ControlPointDefaultValue = 0;

      private int controlPoint_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int ControlPoint {
        get { if ((_hasBits0 & 1) != 0) { return controlPoint_; } else { return ControlPointDefaultValue; } }
        set {
          _hasBits0 |= 1;
          controlPoint_ = value;
        }
      }
      /// <summary>Gets whether the "control_point" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasControlPoint {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "control_point" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearControlPoint() {
        _hasBits0 &= ~1;
      }

      /// <summary>Field number for the "origin_offset" field.</summary>
      public const int OriginOffsetFieldNumber = 2;
      private global::CMsgVector originOffset_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public global::CMsgVector OriginOffset {
        get { return originOffset_; }
        set {
          originOffset_ = value;
        }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleOffset);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleOffset other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ControlPoint != other.ControlPoint) return false;
        if (!object.Equals(OriginOffset, other.OriginOffset)) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasControlPoint) hash ^= ControlPoint.GetHashCode();
        if (originOffset_ != null) hash ^= OriginOffset.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (originOffset_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(OriginOffset);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasControlPoint) {
          output.WriteRawTag(8);
          output.WriteInt32(ControlPoint);
        }
        if (originOffset_ != null) {
          output.WriteRawTag(18);
          output.WriteMessage(OriginOffset);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasControlPoint) {
          size += 1 + pb::CodedOutputStream.ComputeInt32Size(ControlPoint);
        }
        if (originOffset_ != null) {
          size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginOffset);
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleOffset other) {
        if (other == null) {
          return;
        }
        if (other.HasControlPoint) {
          ControlPoint = other.ControlPoint;
        }
        if (other.originOffset_ != null) {
          if (originOffset_ == null) {
            OriginOffset = new global::CMsgVector();
          }
          OriginOffset.MergeFrom(other.OriginOffset);
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (originOffset_ == null) {
                OriginOffset = new global::CMsgVector();
              }
              input.ReadMessage(OriginOffset);
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ControlPoint = input.ReadInt32();
              break;
            }
            case 18: {
              if (originOffset_ == null) {
                OriginOffset = new global::CMsgVector();
              }
              input.ReadMessage(OriginOffset);
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleFrozen : pb::IMessage<UpdateParticleFrozen>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleFrozen> _parser = new pb::MessageParser<UpdateParticleFrozen>(() => new UpdateParticleFrozen());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleFrozen> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[10]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFrozen() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFrozen(UpdateParticleFrozen other) : this() {
        _hasBits0 = other._hasBits0;
        setFrozen_ = other.setFrozen_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleFrozen Clone() {
        return new UpdateParticleFrozen(this);
      }

      /// <summary>Field number for the "set_frozen" field.</summary>
      public const int SetFrozenFieldNumber = 1;
      private readonly static bool SetFrozenDefaultValue = false;

      private bool setFrozen_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool SetFrozen {
        get { if ((_hasBits0 & 1) != 0) { return setFrozen_; } else { return SetFrozenDefaultValue; } }
        set {
          _hasBits0 |= 1;
          setFrozen_ = value;
        }
      }
      /// <summary>Gets whether the "set_frozen" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasSetFrozen {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "set_frozen" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearSetFrozen() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleFrozen);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleFrozen other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (SetFrozen != other.SetFrozen) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasSetFrozen) hash ^= SetFrozen.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasSetFrozen) {
          output.WriteRawTag(8);
          output.WriteBool(SetFrozen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasSetFrozen) {
          output.WriteRawTag(8);
          output.WriteBool(SetFrozen);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasSetFrozen) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleFrozen other) {
        if (other == null) {
          return;
        }
        if (other.HasSetFrozen) {
          SetFrozen = other.SetFrozen;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              SetFrozen = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              SetFrozen = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

    [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
    public sealed partial class UpdateParticleShouldDraw : pb::IMessage<UpdateParticleShouldDraw>
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        , pb::IBufferMessage
    #endif
    {
      private static readonly pb::MessageParser<UpdateParticleShouldDraw> _parser = new pb::MessageParser<UpdateParticleShouldDraw>(() => new UpdateParticleShouldDraw());
      private pb::UnknownFieldSet _unknownFields;
      private int _hasBits0;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pb::MessageParser<UpdateParticleShouldDraw> Parser { get { return _parser; } }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public static pbr::MessageDescriptor Descriptor {
        get { return global::CMsgParticleSystemManager.Descriptor.NestedTypes[11]; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      pbr::MessageDescriptor pb::IMessage.Descriptor {
        get { return Descriptor; }
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleShouldDraw() {
        OnConstruction();
      }

      partial void OnConstruction();

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleShouldDraw(UpdateParticleShouldDraw other) : this() {
        _hasBits0 = other._hasBits0;
        shouldDraw_ = other.shouldDraw_;
        _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public UpdateParticleShouldDraw Clone() {
        return new UpdateParticleShouldDraw(this);
      }

      /// <summary>Field number for the "should_draw" field.</summary>
      public const int ShouldDrawFieldNumber = 1;
      private readonly static bool ShouldDrawDefaultValue = false;

      private bool shouldDraw_;
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool ShouldDraw {
        get { if ((_hasBits0 & 1) != 0) { return shouldDraw_; } else { return ShouldDrawDefaultValue; } }
        set {
          _hasBits0 |= 1;
          shouldDraw_ = value;
        }
      }
      /// <summary>Gets whether the "should_draw" field is set</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool HasShouldDraw {
        get { return (_hasBits0 & 1) != 0; }
      }
      /// <summary>Clears the value of the "should_draw" field</summary>
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void ClearShouldDraw() {
        _hasBits0 &= ~1;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override bool Equals(object other) {
        return Equals(other as UpdateParticleShouldDraw);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public bool Equals(UpdateParticleShouldDraw other) {
        if (ReferenceEquals(other, null)) {
          return false;
        }
        if (ReferenceEquals(other, this)) {
          return true;
        }
        if (ShouldDraw != other.ShouldDraw) return false;
        return Equals(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override int GetHashCode() {
        int hash = 1;
        if (HasShouldDraw) hash ^= ShouldDraw.GetHashCode();
        if (_unknownFields != null) {
          hash ^= _unknownFields.GetHashCode();
        }
        return hash;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public override string ToString() {
        return pb::JsonFormatter.ToDiagnosticString(this);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void WriteTo(pb::CodedOutputStream output) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        output.WriteRawMessage(this);
      #else
        if (HasShouldDraw) {
          output.WriteRawTag(8);
          output.WriteBool(ShouldDraw);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(output);
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
        if (HasShouldDraw) {
          output.WriteRawTag(8);
          output.WriteBool(ShouldDraw);
        }
        if (_unknownFields != null) {
          _unknownFields.WriteTo(ref output);
        }
      }
      #endif

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public int CalculateSize() {
        int size = 0;
        if (HasShouldDraw) {
          size += 1 + 1;
        }
        if (_unknownFields != null) {
          size += _unknownFields.CalculateSize();
        }
        return size;
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(UpdateParticleShouldDraw other) {
        if (other == null) {
          return;
        }
        if (other.HasShouldDraw) {
          ShouldDraw = other.ShouldDraw;
        }
        _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      public void MergeFrom(pb::CodedInputStream input) {
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        input.ReadRawMessage(this);
      #else
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
              break;
            case 8: {
              ShouldDraw = input.ReadBool();
              break;
            }
          }
        }
      #endif
      }

      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
      void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
        uint tag;
        while ((tag = input.ReadTag()) != 0) {
          switch(tag) {
            default:
              _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
              break;
            case 8: {
              ShouldDraw = input.ReadBool();
              break;
            }
          }
        }
      }
      #endif

    }

  }
  #endregion

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgScreenTextPretty : pb::IMessage<CMsgScreenTextPretty>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgScreenTextPretty> _parser = new pb::MessageParser<CMsgScreenTextPretty>(() => new CMsgScreenTextPretty());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgScreenTextPretty> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgScreenTextPretty() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgScreenTextPretty(CMsgScreenTextPretty other) : this() {
    _hasBits0 = other._hasBits0;
    xPos_ = other.xPos_;
    yPos_ = other.yPos_;
    line_ = other.line_;
    text_ = other.text_;
    r_ = other.r_;
    g_ = other.g_;
    b_ = other.b_;
    a_ = other.a_;
    duration_ = other.duration_;
    fontName_ = other.fontName_;
    fontSize_ = other.fontSize_;
    boldFont_ = other.boldFont_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgScreenTextPretty Clone() {
    return new CMsgScreenTextPretty(this);
  }

  /// <summary>Field number for the "x_pos" field.</summary>
  public const int XPosFieldNumber = 1;
  private readonly static float XPosDefaultValue = 0F;

  private float xPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float XPos {
    get { if ((_hasBits0 & 1) != 0) { return xPos_; } else { return XPosDefaultValue; } }
    set {
      _hasBits0 |= 1;
      xPos_ = value;
    }
  }
  /// <summary>Gets whether the "x_pos" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasXPos {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "x_pos" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearXPos() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "y_pos" field.</summary>
  public const int YPosFieldNumber = 2;
  private readonly static float YPosDefaultValue = 0F;

  private float yPos_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float YPos {
    get { if ((_hasBits0 & 2) != 0) { return yPos_; } else { return YPosDefaultValue; } }
    set {
      _hasBits0 |= 2;
      yPos_ = value;
    }
  }
  /// <summary>Gets whether the "y_pos" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasYPos {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "y_pos" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearYPos() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "line" field.</summary>
  public const int LineFieldNumber = 3;
  private readonly static int LineDefaultValue = 0;

  private int line_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Line {
    get { if ((_hasBits0 & 4) != 0) { return line_; } else { return LineDefaultValue; } }
    set {
      _hasBits0 |= 4;
      line_ = value;
    }
  }
  /// <summary>Gets whether the "line" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasLine {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "line" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearLine() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "text" field.</summary>
  public const int TextFieldNumber = 4;
  private readonly static string TextDefaultValue = "";

  private string text_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Text {
    get { return text_ ?? TextDefaultValue; }
    set {
      text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "text" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasText {
    get { return text_ != null; }
  }
  /// <summary>Clears the value of the "text" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearText() {
    text_ = null;
  }

  /// <summary>Field number for the "r" field.</summary>
  public const int RFieldNumber = 5;
  private readonly static int RDefaultValue = 0;

  private int r_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int R {
    get { if ((_hasBits0 & 8) != 0) { return r_; } else { return RDefaultValue; } }
    set {
      _hasBits0 |= 8;
      r_ = value;
    }
  }
  /// <summary>Gets whether the "r" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasR {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "r" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearR() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "g" field.</summary>
  public const int GFieldNumber = 6;
  private readonly static int GDefaultValue = 0;

  private int g_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int G {
    get { if ((_hasBits0 & 16) != 0) { return g_; } else { return GDefaultValue; } }
    set {
      _hasBits0 |= 16;
      g_ = value;
    }
  }
  /// <summary>Gets whether the "g" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasG {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "g" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearG() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "b" field.</summary>
  public const int BFieldNumber = 7;
  private readonly static int BDefaultValue = 0;

  private int b_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int B {
    get { if ((_hasBits0 & 32) != 0) { return b_; } else { return BDefaultValue; } }
    set {
      _hasBits0 |= 32;
      b_ = value;
    }
  }
  /// <summary>Gets whether the "b" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasB {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "b" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearB() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "a" field.</summary>
  public const int AFieldNumber = 8;
  private readonly static int ADefaultValue = 0;

  private int a_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int A {
    get { if ((_hasBits0 & 64) != 0) { return a_; } else { return ADefaultValue; } }
    set {
      _hasBits0 |= 64;
      a_ = value;
    }
  }
  /// <summary>Gets whether the "a" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasA {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "a" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearA() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "duration" field.</summary>
  public const int DurationFieldNumber = 9;
  private readonly static float DurationDefaultValue = 0F;

  private float duration_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Duration {
    get { if ((_hasBits0 & 128) != 0) { return duration_; } else { return DurationDefaultValue; } }
    set {
      _hasBits0 |= 128;
      duration_ = value;
    }
  }
  /// <summary>Gets whether the "duration" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDuration {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "duration" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDuration() {
    _hasBits0 &= ~128;
  }

  /// <summary>Field number for the "font_name" field.</summary>
  public const int FontNameFieldNumber = 10;
  private readonly static string FontNameDefaultValue = "";

  private string fontName_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string FontName {
    get { return fontName_ ?? FontNameDefaultValue; }
    set {
      fontName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "font_name" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFontName {
    get { return fontName_ != null; }
  }
  /// <summary>Clears the value of the "font_name" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFontName() {
    fontName_ = null;
  }

  /// <summary>Field number for the "font_size" field.</summary>
  public const int FontSizeFieldNumber = 11;
  private readonly static int FontSizeDefaultValue = 0;

  private int fontSize_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int FontSize {
    get { if ((_hasBits0 & 256) != 0) { return fontSize_; } else { return FontSizeDefaultValue; } }
    set {
      _hasBits0 |= 256;
      fontSize_ = value;
    }
  }
  /// <summary>Gets whether the "font_size" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFontSize {
    get { return (_hasBits0 & 256) != 0; }
  }
  /// <summary>Clears the value of the "font_size" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFontSize() {
    _hasBits0 &= ~256;
  }

  /// <summary>Field number for the "bold_font" field.</summary>
  public const int BoldFontFieldNumber = 12;
  private readonly static bool BoldFontDefaultValue = false;

  private bool boldFont_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool BoldFont {
    get { if ((_hasBits0 & 512) != 0) { return boldFont_; } else { return BoldFontDefaultValue; } }
    set {
      _hasBits0 |= 512;
      boldFont_ = value;
    }
  }
  /// <summary>Gets whether the "bold_font" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasBoldFont {
    get { return (_hasBits0 & 512) != 0; }
  }
  /// <summary>Clears the value of the "bold_font" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBoldFont() {
    _hasBits0 &= ~512;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgScreenTextPretty);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgScreenTextPretty other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(XPos, other.XPos)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(YPos, other.YPos)) return false;
    if (Line != other.Line) return false;
    if (Text != other.Text) return false;
    if (R != other.R) return false;
    if (G != other.G) return false;
    if (B != other.B) return false;
    if (A != other.A) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Duration, other.Duration)) return false;
    if (FontName != other.FontName) return false;
    if (FontSize != other.FontSize) return false;
    if (BoldFont != other.BoldFont) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasXPos) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(XPos);
    if (HasYPos) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(YPos);
    if (HasLine) hash ^= Line.GetHashCode();
    if (HasText) hash ^= Text.GetHashCode();
    if (HasR) hash ^= R.GetHashCode();
    if (HasG) hash ^= G.GetHashCode();
    if (HasB) hash ^= B.GetHashCode();
    if (HasA) hash ^= A.GetHashCode();
    if (HasDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Duration);
    if (HasFontName) hash ^= FontName.GetHashCode();
    if (HasFontSize) hash ^= FontSize.GetHashCode();
    if (HasBoldFont) hash ^= BoldFont.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasXPos) {
      output.WriteRawTag(13);
      output.WriteFloat(XPos);
    }
    if (HasYPos) {
      output.WriteRawTag(21);
      output.WriteFloat(YPos);
    }
    if (HasLine) {
      output.WriteRawTag(24);
      output.WriteInt32(Line);
    }
    if (HasText) {
      output.WriteRawTag(34);
      output.WriteString(Text);
    }
    if (HasR) {
      output.WriteRawTag(40);
      output.WriteInt32(R);
    }
    if (HasG) {
      output.WriteRawTag(48);
      output.WriteInt32(G);
    }
    if (HasB) {
      output.WriteRawTag(56);
      output.WriteInt32(B);
    }
    if (HasA) {
      output.WriteRawTag(64);
      output.WriteInt32(A);
    }
    if (HasDuration) {
      output.WriteRawTag(77);
      output.WriteFloat(Duration);
    }
    if (HasFontName) {
      output.WriteRawTag(82);
      output.WriteString(FontName);
    }
    if (HasFontSize) {
      output.WriteRawTag(88);
      output.WriteInt32(FontSize);
    }
    if (HasBoldFont) {
      output.WriteRawTag(96);
      output.WriteBool(BoldFont);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasXPos) {
      output.WriteRawTag(13);
      output.WriteFloat(XPos);
    }
    if (HasYPos) {
      output.WriteRawTag(21);
      output.WriteFloat(YPos);
    }
    if (HasLine) {
      output.WriteRawTag(24);
      output.WriteInt32(Line);
    }
    if (HasText) {
      output.WriteRawTag(34);
      output.WriteString(Text);
    }
    if (HasR) {
      output.WriteRawTag(40);
      output.WriteInt32(R);
    }
    if (HasG) {
      output.WriteRawTag(48);
      output.WriteInt32(G);
    }
    if (HasB) {
      output.WriteRawTag(56);
      output.WriteInt32(B);
    }
    if (HasA) {
      output.WriteRawTag(64);
      output.WriteInt32(A);
    }
    if (HasDuration) {
      output.WriteRawTag(77);
      output.WriteFloat(Duration);
    }
    if (HasFontName) {
      output.WriteRawTag(82);
      output.WriteString(FontName);
    }
    if (HasFontSize) {
      output.WriteRawTag(88);
      output.WriteInt32(FontSize);
    }
    if (HasBoldFont) {
      output.WriteRawTag(96);
      output.WriteBool(BoldFont);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasXPos) {
      size += 1 + 4;
    }
    if (HasYPos) {
      size += 1 + 4;
    }
    if (HasLine) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
    }
    if (HasText) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
    }
    if (HasR) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(R);
    }
    if (HasG) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(G);
    }
    if (HasB) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(B);
    }
    if (HasA) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
    }
    if (HasDuration) {
      size += 1 + 4;
    }
    if (HasFontName) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(FontName);
    }
    if (HasFontSize) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(FontSize);
    }
    if (HasBoldFont) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgScreenTextPretty other) {
    if (other == null) {
      return;
    }
    if (other.HasXPos) {
      XPos = other.XPos;
    }
    if (other.HasYPos) {
      YPos = other.YPos;
    }
    if (other.HasLine) {
      Line = other.Line;
    }
    if (other.HasText) {
      Text = other.Text;
    }
    if (other.HasR) {
      R = other.R;
    }
    if (other.HasG) {
      G = other.G;
    }
    if (other.HasB) {
      B = other.B;
    }
    if (other.HasA) {
      A = other.A;
    }
    if (other.HasDuration) {
      Duration = other.Duration;
    }
    if (other.HasFontName) {
      FontName = other.FontName;
    }
    if (other.HasFontSize) {
      FontSize = other.FontSize;
    }
    if (other.HasBoldFont) {
      BoldFont = other.BoldFont;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          XPos = input.ReadFloat();
          break;
        }
        case 21: {
          YPos = input.ReadFloat();
          break;
        }
        case 24: {
          Line = input.ReadInt32();
          break;
        }
        case 34: {
          Text = input.ReadString();
          break;
        }
        case 40: {
          R = input.ReadInt32();
          break;
        }
        case 48: {
          G = input.ReadInt32();
          break;
        }
        case 56: {
          B = input.ReadInt32();
          break;
        }
        case 64: {
          A = input.ReadInt32();
          break;
        }
        case 77: {
          Duration = input.ReadFloat();
          break;
        }
        case 82: {
          FontName = input.ReadString();
          break;
        }
        case 88: {
          FontSize = input.ReadInt32();
          break;
        }
        case 96: {
          BoldFont = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 13: {
          XPos = input.ReadFloat();
          break;
        }
        case 21: {
          YPos = input.ReadFloat();
          break;
        }
        case 24: {
          Line = input.ReadInt32();
          break;
        }
        case 34: {
          Text = input.ReadString();
          break;
        }
        case 40: {
          R = input.ReadInt32();
          break;
        }
        case 48: {
          G = input.ReadInt32();
          break;
        }
        case 56: {
          B = input.ReadInt32();
          break;
        }
        case 64: {
          A = input.ReadInt32();
          break;
        }
        case 77: {
          Duration = input.ReadFloat();
          break;
        }
        case 82: {
          FontName = input.ReadString();
          break;
        }
        case 88: {
          FontSize = input.ReadInt32();
          break;
        }
        case 96: {
          BoldFont = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgServerRequestedTracer : pb::IMessage<CMsgServerRequestedTracer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgServerRequestedTracer> _parser = new pb::MessageParser<CMsgServerRequestedTracer>(() => new CMsgServerRequestedTracer());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgServerRequestedTracer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerRequestedTracer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerRequestedTracer(CMsgServerRequestedTracer other) : this() {
    _hasBits0 = other._hasBits0;
    origin_ = other.origin_ != null ? other.origin_.Clone() : null;
    end_ = other.end_ != null ? other.end_.Clone() : null;
    weaponid_ = other.weaponid_;
    entityHandle_ = other.entityHandle_;
    dps_ = other.dps_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgServerRequestedTracer Clone() {
    return new CMsgServerRequestedTracer(this);
  }

  /// <summary>Field number for the "origin" field.</summary>
  public const int OriginFieldNumber = 1;
  private global::CMsgVector origin_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Origin {
    get { return origin_; }
    set {
      origin_ = value;
    }
  }

  /// <summary>Field number for the "end" field.</summary>
  public const int EndFieldNumber = 2;
  private global::CMsgVector end_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector End {
    get { return end_; }
    set {
      end_ = value;
    }
  }

  /// <summary>Field number for the "weaponid" field.</summary>
  public const int WeaponidFieldNumber = 3;
  private readonly static int WeaponidDefaultValue = -1;

  private int weaponid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Weaponid {
    get { if ((_hasBits0 & 1) != 0) { return weaponid_; } else { return WeaponidDefaultValue; } }
    set {
      _hasBits0 |= 1;
      weaponid_ = value;
    }
  }
  /// <summary>Gets whether the "weaponid" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasWeaponid {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "weaponid" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearWeaponid() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "entity_handle" field.</summary>
  public const int EntityHandleFieldNumber = 4;
  private readonly static uint EntityHandleDefaultValue = 16777215;

  private uint entityHandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EntityHandle {
    get { if ((_hasBits0 & 2) != 0) { return entityHandle_; } else { return EntityHandleDefaultValue; } }
    set {
      _hasBits0 |= 2;
      entityHandle_ = value;
    }
  }
  /// <summary>Gets whether the "entity_handle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityHandle {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "entity_handle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityHandle() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "dps" field.</summary>
  public const int DpsFieldNumber = 5;
  private readonly static float DpsDefaultValue = 0F;

  private float dps_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Dps {
    get { if ((_hasBits0 & 4) != 0) { return dps_; } else { return DpsDefaultValue; } }
    set {
      _hasBits0 |= 4;
      dps_ = value;
    }
  }
  /// <summary>Gets whether the "dps" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDps {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "dps" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDps() {
    _hasBits0 &= ~4;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgServerRequestedTracer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgServerRequestedTracer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Origin, other.Origin)) return false;
    if (!object.Equals(End, other.End)) return false;
    if (Weaponid != other.Weaponid) return false;
    if (EntityHandle != other.EntityHandle) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Dps, other.Dps)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (origin_ != null) hash ^= Origin.GetHashCode();
    if (end_ != null) hash ^= End.GetHashCode();
    if (HasWeaponid) hash ^= Weaponid.GetHashCode();
    if (HasEntityHandle) hash ^= EntityHandle.GetHashCode();
    if (HasDps) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Dps);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (end_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(End);
    }
    if (HasWeaponid) {
      output.WriteRawTag(24);
      output.WriteInt32(Weaponid);
    }
    if (HasEntityHandle) {
      output.WriteRawTag(32);
      output.WriteUInt32(EntityHandle);
    }
    if (HasDps) {
      output.WriteRawTag(45);
      output.WriteFloat(Dps);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (origin_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Origin);
    }
    if (end_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(End);
    }
    if (HasWeaponid) {
      output.WriteRawTag(24);
      output.WriteInt32(Weaponid);
    }
    if (HasEntityHandle) {
      output.WriteRawTag(32);
      output.WriteUInt32(EntityHandle);
    }
    if (HasDps) {
      output.WriteRawTag(45);
      output.WriteFloat(Dps);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (origin_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Origin);
    }
    if (end_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(End);
    }
    if (HasWeaponid) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weaponid);
    }
    if (HasEntityHandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityHandle);
    }
    if (HasDps) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgServerRequestedTracer other) {
    if (other == null) {
      return;
    }
    if (other.origin_ != null) {
      if (origin_ == null) {
        Origin = new global::CMsgVector();
      }
      Origin.MergeFrom(other.Origin);
    }
    if (other.end_ != null) {
      if (end_ == null) {
        End = new global::CMsgVector();
      }
      End.MergeFrom(other.End);
    }
    if (other.HasWeaponid) {
      Weaponid = other.Weaponid;
    }
    if (other.HasEntityHandle) {
      EntityHandle = other.EntityHandle;
    }
    if (other.HasDps) {
      Dps = other.Dps;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
        case 24: {
          Weaponid = input.ReadInt32();
          break;
        }
        case 32: {
          EntityHandle = input.ReadUInt32();
          break;
        }
        case 45: {
          Dps = input.ReadFloat();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (origin_ == null) {
            Origin = new global::CMsgVector();
          }
          input.ReadMessage(Origin);
          break;
        }
        case 18: {
          if (end_ == null) {
            End = new global::CMsgVector();
          }
          input.ReadMessage(End);
          break;
        }
        case 24: {
          Weaponid = input.ReadInt32();
          break;
        }
        case 32: {
          EntityHandle = input.ReadUInt32();
          break;
        }
        case 45: {
          Dps = input.ReadFloat();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgEnableSatVolumesEvent : pb::IMessage<CMsgEnableSatVolumesEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgEnableSatVolumesEvent> _parser = new pb::MessageParser<CMsgEnableSatVolumesEvent>(() => new CMsgEnableSatVolumesEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgEnableSatVolumesEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEnableSatVolumesEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEnableSatVolumesEvent(CMsgEnableSatVolumesEvent other) : this() {
    _hasBits0 = other._hasBits0;
    mode_ = other.mode_;
    desatAmount_ = other.desatAmount_;
    satTint_ = other.satTint_;
    desatTint_ = other.desatTint_;
    outlineColor_ = other.outlineColor_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgEnableSatVolumesEvent Clone() {
    return new CMsgEnableSatVolumesEvent(this);
  }

  /// <summary>Field number for the "mode" field.</summary>
  public const int ModeFieldNumber = 1;
  private readonly static uint ModeDefaultValue = 0;

  private uint mode_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Mode {
    get { if ((_hasBits0 & 1) != 0) { return mode_; } else { return ModeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      mode_ = value;
    }
  }
  /// <summary>Gets whether the "mode" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasMode {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "mode" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearMode() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "desat_amount" field.</summary>
  public const int DesatAmountFieldNumber = 2;
  private readonly static float DesatAmountDefaultValue = 0F;

  private float desatAmount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float DesatAmount {
    get { if ((_hasBits0 & 2) != 0) { return desatAmount_; } else { return DesatAmountDefaultValue; } }
    set {
      _hasBits0 |= 2;
      desatAmount_ = value;
    }
  }
  /// <summary>Gets whether the "desat_amount" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDesatAmount {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "desat_amount" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDesatAmount() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "sat_tint" field.</summary>
  public const int SatTintFieldNumber = 3;
  private readonly static uint SatTintDefaultValue = 0;

  private uint satTint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint SatTint {
    get { if ((_hasBits0 & 4) != 0) { return satTint_; } else { return SatTintDefaultValue; } }
    set {
      _hasBits0 |= 4;
      satTint_ = value;
    }
  }
  /// <summary>Gets whether the "sat_tint" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSatTint {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "sat_tint" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSatTint() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "desat_tint" field.</summary>
  public const int DesatTintFieldNumber = 4;
  private readonly static uint DesatTintDefaultValue = 0;

  private uint desatTint_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint DesatTint {
    get { if ((_hasBits0 & 8) != 0) { return desatTint_; } else { return DesatTintDefaultValue; } }
    set {
      _hasBits0 |= 8;
      desatTint_ = value;
    }
  }
  /// <summary>Gets whether the "desat_tint" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDesatTint {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "desat_tint" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDesatTint() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "outline_color" field.</summary>
  public const int OutlineColorFieldNumber = 5;
  private readonly static uint OutlineColorDefaultValue = 0;

  private uint outlineColor_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint OutlineColor {
    get { if ((_hasBits0 & 16) != 0) { return outlineColor_; } else { return OutlineColorDefaultValue; } }
    set {
      _hasBits0 |= 16;
      outlineColor_ = value;
    }
  }
  /// <summary>Gets whether the "outline_color" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasOutlineColor {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "outline_color" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearOutlineColor() {
    _hasBits0 &= ~16;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgEnableSatVolumesEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgEnableSatVolumesEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Mode != other.Mode) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DesatAmount, other.DesatAmount)) return false;
    if (SatTint != other.SatTint) return false;
    if (DesatTint != other.DesatTint) return false;
    if (OutlineColor != other.OutlineColor) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasMode) hash ^= Mode.GetHashCode();
    if (HasDesatAmount) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DesatAmount);
    if (HasSatTint) hash ^= SatTint.GetHashCode();
    if (HasDesatTint) hash ^= DesatTint.GetHashCode();
    if (HasOutlineColor) hash ^= OutlineColor.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasMode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (HasDesatAmount) {
      output.WriteRawTag(21);
      output.WriteFloat(DesatAmount);
    }
    if (HasSatTint) {
      output.WriteRawTag(29);
      output.WriteFixed32(SatTint);
    }
    if (HasDesatTint) {
      output.WriteRawTag(37);
      output.WriteFixed32(DesatTint);
    }
    if (HasOutlineColor) {
      output.WriteRawTag(45);
      output.WriteFixed32(OutlineColor);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasMode) {
      output.WriteRawTag(8);
      output.WriteUInt32(Mode);
    }
    if (HasDesatAmount) {
      output.WriteRawTag(21);
      output.WriteFloat(DesatAmount);
    }
    if (HasSatTint) {
      output.WriteRawTag(29);
      output.WriteFixed32(SatTint);
    }
    if (HasDesatTint) {
      output.WriteRawTag(37);
      output.WriteFixed32(DesatTint);
    }
    if (HasOutlineColor) {
      output.WriteRawTag(45);
      output.WriteFixed32(OutlineColor);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasMode) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mode);
    }
    if (HasDesatAmount) {
      size += 1 + 4;
    }
    if (HasSatTint) {
      size += 1 + 4;
    }
    if (HasDesatTint) {
      size += 1 + 4;
    }
    if (HasOutlineColor) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgEnableSatVolumesEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasMode) {
      Mode = other.Mode;
    }
    if (other.HasDesatAmount) {
      DesatAmount = other.DesatAmount;
    }
    if (other.HasSatTint) {
      SatTint = other.SatTint;
    }
    if (other.HasDesatTint) {
      DesatTint = other.DesatTint;
    }
    if (other.HasOutlineColor) {
      OutlineColor = other.OutlineColor;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 21: {
          DesatAmount = input.ReadFloat();
          break;
        }
        case 29: {
          SatTint = input.ReadFixed32();
          break;
        }
        case 37: {
          DesatTint = input.ReadFixed32();
          break;
        }
        case 45: {
          OutlineColor = input.ReadFixed32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Mode = input.ReadUInt32();
          break;
        }
        case 21: {
          DesatAmount = input.ReadFloat();
          break;
        }
        case 29: {
          SatTint = input.ReadFixed32();
          break;
        }
        case 37: {
          DesatTint = input.ReadFixed32();
          break;
        }
        case 45: {
          OutlineColor = input.ReadFixed32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgPlaceSatVolumeEvent : pb::IMessage<CMsgPlaceSatVolumeEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgPlaceSatVolumeEvent> _parser = new pb::MessageParser<CMsgPlaceSatVolumeEvent>(() => new CMsgPlaceSatVolumeEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgPlaceSatVolumeEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlaceSatVolumeEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlaceSatVolumeEvent(CMsgPlaceSatVolumeEvent other) : this() {
    _hasBits0 = other._hasBits0;
    position_ = other.position_ != null ? other.position_.Clone() : null;
    direction_ = other.direction_ != null ? other.direction_.Clone() : null;
    radius_ = other.radius_;
    falloffDistance_ = other.falloffDistance_;
    thetaDot_ = other.thetaDot_;
    phiDot_ = other.phiDot_;
    entityHandle_ = other.entityHandle_;
    attachmentHandle_ = other.attachmentHandle_;
    type_ = other.type_;
    volumeId_ = other.volumeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgPlaceSatVolumeEvent Clone() {
    return new CMsgPlaceSatVolumeEvent(this);
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int PositionFieldNumber = 1;
  private global::CMsgVector position_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  /// <summary>Field number for the "direction" field.</summary>
  public const int DirectionFieldNumber = 2;
  private global::CMsgVector direction_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::CMsgVector Direction {
    get { return direction_; }
    set {
      direction_ = value;
    }
  }

  /// <summary>Field number for the "radius" field.</summary>
  public const int RadiusFieldNumber = 3;
  private readonly static float RadiusDefaultValue = 0F;

  private float radius_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float Radius {
    get { if ((_hasBits0 & 1) != 0) { return radius_; } else { return RadiusDefaultValue; } }
    set {
      _hasBits0 |= 1;
      radius_ = value;
    }
  }
  /// <summary>Gets whether the "radius" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasRadius {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "radius" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearRadius() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "falloff_distance" field.</summary>
  public const int FalloffDistanceFieldNumber = 4;
  private readonly static float FalloffDistanceDefaultValue = 0F;

  private float falloffDistance_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float FalloffDistance {
    get { if ((_hasBits0 & 2) != 0) { return falloffDistance_; } else { return FalloffDistanceDefaultValue; } }
    set {
      _hasBits0 |= 2;
      falloffDistance_ = value;
    }
  }
  /// <summary>Gets whether the "falloff_distance" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasFalloffDistance {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "falloff_distance" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearFalloffDistance() {
    _hasBits0 &= ~2;
  }

  /// <summary>Field number for the "theta_dot" field.</summary>
  public const int ThetaDotFieldNumber = 5;
  private readonly static float ThetaDotDefaultValue = 0F;

  private float thetaDot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float ThetaDot {
    get { if ((_hasBits0 & 4) != 0) { return thetaDot_; } else { return ThetaDotDefaultValue; } }
    set {
      _hasBits0 |= 4;
      thetaDot_ = value;
    }
  }
  /// <summary>Gets whether the "theta_dot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasThetaDot {
    get { return (_hasBits0 & 4) != 0; }
  }
  /// <summary>Clears the value of the "theta_dot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearThetaDot() {
    _hasBits0 &= ~4;
  }

  /// <summary>Field number for the "phi_dot" field.</summary>
  public const int PhiDotFieldNumber = 6;
  private readonly static float PhiDotDefaultValue = 0F;

  private float phiDot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public float PhiDot {
    get { if ((_hasBits0 & 8) != 0) { return phiDot_; } else { return PhiDotDefaultValue; } }
    set {
      _hasBits0 |= 8;
      phiDot_ = value;
    }
  }
  /// <summary>Gets whether the "phi_dot" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasPhiDot {
    get { return (_hasBits0 & 8) != 0; }
  }
  /// <summary>Clears the value of the "phi_dot" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearPhiDot() {
    _hasBits0 &= ~8;
  }

  /// <summary>Field number for the "entity_handle" field.</summary>
  public const int EntityHandleFieldNumber = 7;
  private readonly static uint EntityHandleDefaultValue = 16777215;

  private uint entityHandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint EntityHandle {
    get { if ((_hasBits0 & 16) != 0) { return entityHandle_; } else { return EntityHandleDefaultValue; } }
    set {
      _hasBits0 |= 16;
      entityHandle_ = value;
    }
  }
  /// <summary>Gets whether the "entity_handle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasEntityHandle {
    get { return (_hasBits0 & 16) != 0; }
  }
  /// <summary>Clears the value of the "entity_handle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearEntityHandle() {
    _hasBits0 &= ~16;
  }

  /// <summary>Field number for the "attachment_handle" field.</summary>
  public const int AttachmentHandleFieldNumber = 8;
  private readonly static uint AttachmentHandleDefaultValue = 0;

  private uint attachmentHandle_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint AttachmentHandle {
    get { if ((_hasBits0 & 32) != 0) { return attachmentHandle_; } else { return AttachmentHandleDefaultValue; } }
    set {
      _hasBits0 |= 32;
      attachmentHandle_ = value;
    }
  }
  /// <summary>Gets whether the "attachment_handle" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAttachmentHandle {
    get { return (_hasBits0 & 32) != 0; }
  }
  /// <summary>Clears the value of the "attachment_handle" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAttachmentHandle() {
    _hasBits0 &= ~32;
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 9;
  private readonly static uint TypeDefaultValue = 0;

  private uint type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public uint Type {
    get { if ((_hasBits0 & 64) != 0) { return type_; } else { return TypeDefaultValue; } }
    set {
      _hasBits0 |= 64;
      type_ = value;
    }
  }
  /// <summary>Gets whether the "type" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasType {
    get { return (_hasBits0 & 64) != 0; }
  }
  /// <summary>Clears the value of the "type" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearType() {
    _hasBits0 &= ~64;
  }

  /// <summary>Field number for the "volume_id" field.</summary>
  public const int VolumeIdFieldNumber = 10;
  private readonly static int VolumeIdDefaultValue = 0;

  private int volumeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VolumeId {
    get { if ((_hasBits0 & 128) != 0) { return volumeId_; } else { return VolumeIdDefaultValue; } }
    set {
      _hasBits0 |= 128;
      volumeId_ = value;
    }
  }
  /// <summary>Gets whether the "volume_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVolumeId {
    get { return (_hasBits0 & 128) != 0; }
  }
  /// <summary>Clears the value of the "volume_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVolumeId() {
    _hasBits0 &= ~128;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgPlaceSatVolumeEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgPlaceSatVolumeEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Position, other.Position)) return false;
    if (!object.Equals(Direction, other.Direction)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Radius, other.Radius)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FalloffDistance, other.FalloffDistance)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ThetaDot, other.ThetaDot)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PhiDot, other.PhiDot)) return false;
    if (EntityHandle != other.EntityHandle) return false;
    if (AttachmentHandle != other.AttachmentHandle) return false;
    if (Type != other.Type) return false;
    if (VolumeId != other.VolumeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (position_ != null) hash ^= Position.GetHashCode();
    if (direction_ != null) hash ^= Direction.GetHashCode();
    if (HasRadius) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Radius);
    if (HasFalloffDistance) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FalloffDistance);
    if (HasThetaDot) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ThetaDot);
    if (HasPhiDot) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PhiDot);
    if (HasEntityHandle) hash ^= EntityHandle.GetHashCode();
    if (HasAttachmentHandle) hash ^= AttachmentHandle.GetHashCode();
    if (HasType) hash ^= Type.GetHashCode();
    if (HasVolumeId) hash ^= VolumeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (direction_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Direction);
    }
    if (HasRadius) {
      output.WriteRawTag(29);
      output.WriteFloat(Radius);
    }
    if (HasFalloffDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(FalloffDistance);
    }
    if (HasThetaDot) {
      output.WriteRawTag(45);
      output.WriteFloat(ThetaDot);
    }
    if (HasPhiDot) {
      output.WriteRawTag(53);
      output.WriteFloat(PhiDot);
    }
    if (HasEntityHandle) {
      output.WriteRawTag(56);
      output.WriteUInt32(EntityHandle);
    }
    if (HasAttachmentHandle) {
      output.WriteRawTag(64);
      output.WriteUInt32(AttachmentHandle);
    }
    if (HasType) {
      output.WriteRawTag(72);
      output.WriteUInt32(Type);
    }
    if (HasVolumeId) {
      output.WriteRawTag(80);
      output.WriteInt32(VolumeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (position_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Position);
    }
    if (direction_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Direction);
    }
    if (HasRadius) {
      output.WriteRawTag(29);
      output.WriteFloat(Radius);
    }
    if (HasFalloffDistance) {
      output.WriteRawTag(37);
      output.WriteFloat(FalloffDistance);
    }
    if (HasThetaDot) {
      output.WriteRawTag(45);
      output.WriteFloat(ThetaDot);
    }
    if (HasPhiDot) {
      output.WriteRawTag(53);
      output.WriteFloat(PhiDot);
    }
    if (HasEntityHandle) {
      output.WriteRawTag(56);
      output.WriteUInt32(EntityHandle);
    }
    if (HasAttachmentHandle) {
      output.WriteRawTag(64);
      output.WriteUInt32(AttachmentHandle);
    }
    if (HasType) {
      output.WriteRawTag(72);
      output.WriteUInt32(Type);
    }
    if (HasVolumeId) {
      output.WriteRawTag(80);
      output.WriteInt32(VolumeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (position_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
    }
    if (direction_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
    }
    if (HasRadius) {
      size += 1 + 4;
    }
    if (HasFalloffDistance) {
      size += 1 + 4;
    }
    if (HasThetaDot) {
      size += 1 + 4;
    }
    if (HasPhiDot) {
      size += 1 + 4;
    }
    if (HasEntityHandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityHandle);
    }
    if (HasAttachmentHandle) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttachmentHandle);
    }
    if (HasType) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
    }
    if (HasVolumeId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VolumeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgPlaceSatVolumeEvent other) {
    if (other == null) {
      return;
    }
    if (other.position_ != null) {
      if (position_ == null) {
        Position = new global::CMsgVector();
      }
      Position.MergeFrom(other.Position);
    }
    if (other.direction_ != null) {
      if (direction_ == null) {
        Direction = new global::CMsgVector();
      }
      Direction.MergeFrom(other.Direction);
    }
    if (other.HasRadius) {
      Radius = other.Radius;
    }
    if (other.HasFalloffDistance) {
      FalloffDistance = other.FalloffDistance;
    }
    if (other.HasThetaDot) {
      ThetaDot = other.ThetaDot;
    }
    if (other.HasPhiDot) {
      PhiDot = other.PhiDot;
    }
    if (other.HasEntityHandle) {
      EntityHandle = other.EntityHandle;
    }
    if (other.HasAttachmentHandle) {
      AttachmentHandle = other.AttachmentHandle;
    }
    if (other.HasType) {
      Type = other.Type;
    }
    if (other.HasVolumeId) {
      VolumeId = other.VolumeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 29: {
          Radius = input.ReadFloat();
          break;
        }
        case 37: {
          FalloffDistance = input.ReadFloat();
          break;
        }
        case 45: {
          ThetaDot = input.ReadFloat();
          break;
        }
        case 53: {
          PhiDot = input.ReadFloat();
          break;
        }
        case 56: {
          EntityHandle = input.ReadUInt32();
          break;
        }
        case 64: {
          AttachmentHandle = input.ReadUInt32();
          break;
        }
        case 72: {
          Type = input.ReadUInt32();
          break;
        }
        case 80: {
          VolumeId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (position_ == null) {
            Position = new global::CMsgVector();
          }
          input.ReadMessage(Position);
          break;
        }
        case 18: {
          if (direction_ == null) {
            Direction = new global::CMsgVector();
          }
          input.ReadMessage(Direction);
          break;
        }
        case 29: {
          Radius = input.ReadFloat();
          break;
        }
        case 37: {
          FalloffDistance = input.ReadFloat();
          break;
        }
        case 45: {
          ThetaDot = input.ReadFloat();
          break;
        }
        case 53: {
          PhiDot = input.ReadFloat();
          break;
        }
        case 56: {
          EntityHandle = input.ReadUInt32();
          break;
        }
        case 64: {
          AttachmentHandle = input.ReadUInt32();
          break;
        }
        case 72: {
          Type = input.ReadUInt32();
          break;
        }
        case 80: {
          VolumeId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgRemoveSatVolumeEvent : pb::IMessage<CMsgRemoveSatVolumeEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgRemoveSatVolumeEvent> _parser = new pb::MessageParser<CMsgRemoveSatVolumeEvent>(() => new CMsgRemoveSatVolumeEvent());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgRemoveSatVolumeEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRemoveSatVolumeEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRemoveSatVolumeEvent(CMsgRemoveSatVolumeEvent other) : this() {
    _hasBits0 = other._hasBits0;
    volumeId_ = other.volumeId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgRemoveSatVolumeEvent Clone() {
    return new CMsgRemoveSatVolumeEvent(this);
  }

  /// <summary>Field number for the "volume_id" field.</summary>
  public const int VolumeIdFieldNumber = 1;
  private readonly static int VolumeIdDefaultValue = 0;

  private int volumeId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int VolumeId {
    get { if ((_hasBits0 & 1) != 0) { return volumeId_; } else { return VolumeIdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      volumeId_ = value;
    }
  }
  /// <summary>Gets whether the "volume_id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasVolumeId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "volume_id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearVolumeId() {
    _hasBits0 &= ~1;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgRemoveSatVolumeEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgRemoveSatVolumeEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (VolumeId != other.VolumeId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasVolumeId) hash ^= VolumeId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasVolumeId) {
      output.WriteRawTag(8);
      output.WriteInt32(VolumeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasVolumeId) {
      output.WriteRawTag(8);
      output.WriteInt32(VolumeId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasVolumeId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(VolumeId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgRemoveSatVolumeEvent other) {
    if (other == null) {
      return;
    }
    if (other.HasVolumeId) {
      VolumeId = other.VolumeId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          VolumeId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          VolumeId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class CMsgDisableSatVolumesEvent : pb::IMessage<CMsgDisableSatVolumesEvent>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<CMsgDisableSatVolumesEvent> _parser = new pb::MessageParser<CMsgDisableSatVolumesEvent>(() => new CMsgDisableSatVolumesEvent());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<CMsgDisableSatVolumesEvent> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::CitadelGameeventsReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgDisableSatVolumesEvent() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgDisableSatVolumesEvent(CMsgDisableSatVolumesEvent other) : this() {
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public CMsgDisableSatVolumesEvent Clone() {
    return new CMsgDisableSatVolumesEvent(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as CMsgDisableSatVolumesEvent);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(CMsgDisableSatVolumesEvent other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(CMsgDisableSatVolumesEvent other) {
    if (other == null) {
      return;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
